(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1210927,      23090]
NotebookOptionsPosition[   1199570,      22844]
NotebookOutlinePosition[   1199945,      22860]
CellTagsIndexPosition[   1199902,      22857]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Planar3D v2.1.1", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660668673644*^9, 3.7476606793673363`*^9}, {
   3.748934775835075*^9, 3.748934775947117*^9}, 
   3.748969785632721*^9},ExpressionUUID->"d1891a41-4acd-4207-932b-\
b3ca8b4be262"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0435\:0442\:043e\:0447\:043d\:044b\:0445 \:0433\:0440\:0430\:0444\:0438\
\:043a\:043e\:0432 \:0432 2D", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660650798229*^9, 3.7476606629055977`*^9}, 
   3.748969785633028*^9},ExpressionUUID->"041f7e79-40a6-4d5d-b380-\
a00f39134427"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:043f\:0443\
\:0442\:044c \:0434\:043e \:043f\:0430\:043f\:043a\:0438 \:0441 \:0432\:0445\
\:043e\:0434\:043d\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.747660720326604*^9}, 
   3.747661032741356*^9, 3.7489697348519917`*^9, 
   3.748969785633336*^9},ExpressionUUID->"41b28c78-ea15-46ab-b8df-\
8276fd1bf0ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\<G:\\\\actualplanar\\\\Planar3D\\\\build\\\\Results\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747656893552808*^9, 3.747656906633217*^9}, 
   3.747661032741767*^9, {3.747664018501865*^9, 3.747664019128312*^9}, {
   3.747664057817404*^9, 3.7476641073677397`*^9}, 3.747665488148735*^9, 
   3.748933628112026*^9, {3.748933678444969*^9, 3.748933682795598*^9}, {
   3.748967116456512*^9, 3.748967124377589*^9}, {3.748968117085099*^9, 
   3.748968118090468*^9}, 3.748968199603396*^9, {3.748969393672985*^9, 
   3.74896939903098*^9}, 3.74896973485242*^9, 3.748969785633741*^9, {
   3.749002313128289*^9, 3.749002345037242*^9}, {3.749002429317358*^9, 
   3.7490025155955677`*^9}, {3.7490032762745247`*^9, 
   3.7490033047957563`*^9}, {3.749195504804994*^9, 3.749195505707028*^9}, {
   3.7494641359426575`*^9, 3.749464138960359*^9}, {3.749468893701499*^9, 
   3.7494688992696266`*^9}},ExpressionUUID->"6920d484-4e63-47ae-8f14-\
b467575eadaa"],

Cell["\:0421\:0447\:0438\:0442\:044b\:0432\:0430\:0435\:043c \:043f\:0430\
\:0440\:0430\:043c\:0435\:0442\:0440\:044b \:0440\:0430\:0441\:0447\:0451\
\:0442\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, 3.7489697348525867`*^9, 
   3.7489697856339073`*^9},ExpressionUUID->"189c16f5-6a40-4634-b3c5-\
fe4173665c9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parameters", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<parameters.json\>\""}], ",", 
      "\"\<RawJSON\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"height", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"length", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<length\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"middleH", " ", "=", " ", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "height"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"middleL", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "length"}], "]"}], "+", "1"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middle", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"0.5", "*", "size"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellLength", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<cell\>\"", 
     "]"}], "[", "\"\<length\>\"", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747655287287675*^9, {3.747656648179721*^9, 3.74765664850766*^9}, {
   3.747656733330495*^9, 3.747656752436288*^9}, {3.747656912578596*^9, 
   3.7476569586085052`*^9}, {3.7476569957355824`*^9, 3.747657000350354*^9}, {
   3.747657434800095*^9, 3.747657435013611*^9}, {3.747657489717287*^9, 
   3.747657567951728*^9}, {3.7476576237958593`*^9, 3.747657744332275*^9}, 
   3.7476579502511377`*^9, 3.74765802117413*^9, 3.747659478052923*^9, 
   3.747659922966485*^9, {3.747659991785955*^9, 3.747660041283514*^9}, {
   3.7476600785009727`*^9, 3.747660104489366*^9}, {3.747660507830991*^9, 
   3.747660518100801*^9}, {3.747660570048667*^9, 3.747660584277534*^9}, {
   3.7476606203847427`*^9, 3.747660620713311*^9}, 3.747661032742475*^9, {
   3.7489336188607807`*^9, 3.748933619107676*^9}, {3.7489338681042213`*^9, 
   3.748933945735607*^9}, {3.7489340816532583`*^9, 3.7489340850716543`*^9}, {
   3.748934703289136*^9, 3.748934761141674*^9}, 3.748969734852895*^9, 
   3.74896978563422*^9},ExpressionUUID->"f589989b-e1f4-41f5-b99c-\
8c76d7a6995f"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:043f\:0430\:0440\:0430\:043c\
\:0435\:0442\:0440\:044b \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0435\
\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, {3.748934769874744*^9, 3.7489347748029413`*^9}, 
   3.74896973485305*^9, 
   3.7489697856343813`*^9},ExpressionUUID->"b4581657-088e-4810-bb99-\
ab8e676f0708"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0415\:0441\:043b\:0438", " ", "True"}], ",", " ", 
    RowBox[{
    "\:043d\:0430", " ", "\:0433\:0440\:0430\:0444\:0438\:043a\:0435", " ", 
     "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0432\:044b\:0432\:043e\:0434\:0438\:0442\:044c\:0441\:044f", " ", 
     "\:0433\:0440\:0430\:043d\:0438\:0446\:044b", " ", 
     "\:0441\:043b\:043e\:0451\:0432"}], ",", 
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:043d\:044b\
\:0445", " ", "\:0437\:0430", " ", 
     "\:043f\:0440\:0435\:0434\:0435\:043b\:0430\:043c\:0438", " ", 
     "\:0440\:0430\:0441\:0447\:0451\:0442\:043d\:043e\:0439", " ", 
     "\:043e\:0431\:043b\:0430\:0441\:0442\:0438"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"showAllBarriers", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textPadding", "=", "1"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748936129152269*^9, 3.748936131996414*^9}, {
   3.748936437491951*^9, 3.748936446079194*^9}, {3.748936835688491*^9, 
   3.748936836198721*^9}, {3.7489370016931553`*^9, 3.748937002355495*^9}, 
   3.7489687346210823`*^9, 3.7489697856346483`*^9, {3.748970588914028*^9, 
   3.748970589224121*^9}},ExpressionUUID->"f12cb6a7-b559-4b3c-ba87-\
b12762276c97"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:0440\:0438\
\:0441\:043a\:0438 \:043f\:043e \:043e\:0441\:044f\:043c \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, 
   3.747661032742928*^9, 3.748969734853208*^9, 
   3.748969785634802*^9},ExpressionUUID->"77748391-58ef-4692-85bf-\
c3d4ec17fbdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticksSetVertical", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"height", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"height", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ticksSetHorizontal", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"length", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"length", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ticksSet", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"size", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"size", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"size", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"size", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ticksSet", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ticksSet", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"ticks", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ticksSetHorizontal", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ticksSetVertical", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
    "*)"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74766059129346*^9, 3.74766061456117*^9}, 
   3.747661032743846*^9, {3.748933853433467*^9, 3.748933890369454*^9}, {
   3.7489339519881077`*^9, 3.748934022178279*^9}, {3.748934089035924*^9, 
   3.748934096639612*^9}, 3.74896973485367*^9, 
   3.748969785635269*^9},ExpressionUUID->"bf7b973c-44a0-48ca-b28b-\
334404f8a067"],

Cell["\:041f\:043e \:0440\:0438\:0441\:043a\:0430\:043c \:043d\:0430\:043c\
\:0435\:0447\:0430\:0435\:043c \:043b\:0438\:043d\:0438\:0438 \:0441\:0435\
\:0442\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660845455511*^9}, 3.747661032744216*^9, 
   3.748969734853849*^9, 
   3.7489697856354237`*^9},ExpressionUUID->"782a6820-0687-410c-958c-\
7b9f25185627"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"lines", ",", 
      RowBox[{"{", "}"}]}], "]"}], ";", 
    RowBox[{"leftTicks", "=", 
     RowBox[{
      RowBox[{"ticks", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"Length", "[", "leftTicks", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AppendTo", "[", 
    RowBox[{
     RowBox[{"lines", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"leftTicks", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"lines", ",", 
      RowBox[{"{", "}"}]}], "]"}], ";", 
    RowBox[{"rightTicks", "=", 
     RowBox[{
      RowBox[{"ticks", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"Length", "[", "rightTicks", "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AppendTo", "[", 
    RowBox[{
     RowBox[{"lines", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"rightTicks", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.747661032744575*^9, 3.748969734854225*^9, 
  3.7489697856357327`*^9},ExpressionUUID->"7efce0f0-005d-4e25-8f7c-\
721212f0d258"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c \:043c\:0430\:0441\:0441\
\:0438\:0432 \:043b\:0438\:043d\:0438\:0439\[Dash]\:0433\:0440\:0430\:043d\
\:0438\:0446 \:0441\:043b\:043e\:0451\:0432 \:043f\:043b\:0430\:0441\:0442\
\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660912488222*^9}, 3.747661032744845*^9, 
   3.7489697348543863`*^9, 
   3.748969785635898*^9},ExpressionUUID->"e08127b8-7023-477a-9e50-\
984a7799d631"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "-", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"layers", "[", 
          RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
         "]"}], "/", "cellLength"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "barrierCoordinate"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "barrierCoordinate"}], "}"}]}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"barrierCoordinate", "<", "middle"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"",
            "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", "\"\<stress\>\"", 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"signum", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"stress", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"signum", "=", "\"\<+\>\""}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"signum", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{"stress", "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], "]"}], "<>", 
            "\"\< \:041c\:041f\:0430\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "textPadding"}], ",", 
             RowBox[{"textPadding", "+", "barrierCoordinate"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barriers", "=", 
   RowBox[{"Graphics", "[", "lineBarriers", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032745192*^9, {3.748934559310659*^9, 3.7489346973352013`*^9}, {
   3.748936028834214*^9, 3.74893640178518*^9}, {3.748936537538189*^9, 
   3.74893659455238*^9}, {3.748936626625805*^9, 3.748936705526024*^9}, 
   3.748936851846299*^9, {3.7489369647365932`*^9, 3.748936969645989*^9}, 
   3.7489697348547573`*^9, 
   3.7489697856362667`*^9},ExpressionUUID->"f7fc24af-996a-4c53-9e1e-\
d2632d816c63"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0438 \:0446\:0432\:0435\:0442\:043e\:0432\:0443\:044e \
\:0433\:0430\:043c\:043c\:0443", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660953767308*^9}, 3.7476610327454557`*^9, 
   3.748969734854912*^9, 
   3.7489697856364202`*^9},ExpressionUUID->"e22474cc-b76e-4681-88b9-\
18dd26a3a6f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "LightBlue", ",", "Green", ",", "LightGreen", ",", "White", ",", 
           "Yellow", ",", "Orange", ",", "\[IndentingNewLine]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "White", ",", "White", ",", "White", ",", "White", ",", "White", 
           ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "0.6"}], "]"}], ",", "Yellow", 
           ",", "Orange", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"myRainbow", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0.5", ">", "x"}], ",", "White", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<Rainbow\>\"", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myRainbow3D", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<Rainbow\>\"", ",", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GlueMatrix", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "matrix", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TakeList", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", "matrix", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"matrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], "}"}]}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Transpose", "[", "matrix", "]"}]}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotMatrix", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
           RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "lines"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "barriers"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476531195786133`*^9, 3.747653120240994*^9}, {
   3.7476534505006332`*^9, 3.747653485458448*^9}, 3.7476535222351294`*^9, {
   3.7476535950633698`*^9, 3.7476536054617443`*^9}, {3.747653655142853*^9, 
   3.747653656807279*^9}, {3.747653688090948*^9, 3.747653739282906*^9}, {
   3.7476538118536386`*^9, 3.747653827707106*^9}, {3.747656704788455*^9, 
   3.747656729694378*^9}, 3.74765701664755*^9, {3.7476584586379547`*^9, 
   3.7476584675487127`*^9}, {3.747658699447795*^9, 3.7476587124774933`*^9}, {
   3.7476587568371267`*^9, 3.747658782431654*^9}, {3.747660465335277*^9, 
   3.747660479701996*^9}, 3.7476610327461433`*^9, {3.7489348068714037`*^9, 
   3.748934817133738*^9}, {3.74893485538281*^9, 3.7489349552592983`*^9}, {
   3.7489349950905046`*^9, 3.748935017743618*^9}, {3.748935079617112*^9, 
   3.748935148106749*^9}, {3.748935208873681*^9, 3.7489353309778967`*^9}, {
   3.74893543472754*^9, 3.7489354449637127`*^9}, {3.748935604513166*^9, 
   3.748935774112791*^9}, {3.7489358857234097`*^9, 3.748935920285569*^9}, {
   3.748937178914475*^9, 3.748937196849533*^9}, {3.748937233907132*^9, 
   3.74893723762293*^9}, {3.7489372857884893`*^9, 3.74893733649858*^9}, {
   3.74893736830401*^9, 3.748937501097311*^9}, {3.748937550591075*^9, 
   3.748937608682899*^9}, {3.748937665178151*^9, 3.748937688168676*^9}, 
   3.748969734855296*^9, 
   3.7489697856368*^9},ExpressionUUID->"4a8e89c6-bb3c-4bfc-8683-7b3f9de00ec6"],

Cell["\:0417\:0430\:0433\:0440\:0443\:0436\:0430\:0435\:043c \:0434\:0430\
\:043d\:043d\:044b\:0435 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\
\:043e\:0435\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 
   3.7489697856369534`*^9},ExpressionUUID->"0a7544c3-9148-424a-8c8f-\
276c5880df96"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"timeStep", "=", "59"}], ";", "\[IndentingNewLine]", 
   RowBox[{"rightFlow", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Flows/right_\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"leftFlow", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Flows/left_\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"upFlow", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Flows/up_\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"downFlow", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Flows/down_\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"opening", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Opening/\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476609656017237`*^9, 3.747660967119643*^9}, {
   3.747661148476931*^9, 3.7476611682072477`*^9}, {3.747664033808769*^9, 
   3.747664098047655*^9}, {3.747664136512883*^9, 3.747664166427652*^9}, {
   3.74766505356133*^9, 3.747665079854546*^9}, {3.747665111239793*^9, 
   3.747665126077849*^9}, {3.74893363765413*^9, 3.7489336546075163`*^9}, 
   3.7489697348557453`*^9, 
   3.748969785637251*^9},ExpressionUUID->"12ed346d-ee66-45ea-ac58-\
3a807ec86eaa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"opening", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<opening_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracture", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<fracture_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openingAtTime", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folder", "<>", "\"\<Opening/\>\"", "<>", 
        RowBox[{"ToString", "[", "t", "]"}], "<>", "\"\<_m.txt\>\""}], ",", 
       " ", "\"\<Table\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalTime", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*\>\"", ",", 
      RowBox[{"folder", "<>", "\"\<Opening/\>\""}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748933665070517*^9, 3.748933667635915*^9}, {
   3.748967897373295*^9, 3.748967952408773*^9}, 3.748968045615181*^9, 
   3.748969785637787*^9, {3.748969873450966*^9, 3.7489698881760197`*^9}, {
   3.748970008078432*^9, 3.748970029339315*^9}, {3.749002589036405*^9, 
   3.749002591800912*^9}, {3.749197428231081*^9, 
   3.74919743718463*^9}},ExpressionUUID->"97be4e71-d562-4fb4-a565-\
39e0e55f65d3"],

Cell["\:0412\:044b\:0432\:043e\:0434\:0438\:043c \:0432\:0440\:0435\:043c\
\:044f \:043f\:043e\:0441\:043b\:0435\:0434\:043d\:0435\:0433\:043e \:0437\
\:0430\:043f\:0443\:0441\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}},ExpressionUUID->"0a282b52-028d-4a88-9d92-\
b554b914a0d7"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\:0434\
\:043d\:0435\:0433\:043e \:0437\:0430\:043f\:0443\:0441\:043a\:0430:\>\"", 
     " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"DateString", "[", "]"}], ",", "Orange"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195512564392*^9, 3.749195545569838*^9}, {
  3.749195598370927*^9, 3.749195681354604*^9}, {3.749197676357965*^9, 
  3.749197687499799*^9}, {3.7491981127205763`*^9, 
  3.749198119614801*^9}},ExpressionUUID->"52b964d3-7af5-456c-a651-\
a6ac2df161a8"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\
\:0434\:043d\:0435\:0433\:043e \
\:0437\:0430\:043f\:0443\:0441\:043a\:0430:\"\>", " ", 
   StyleBox["\<\"Tue 30 Oct 2018 14:17:20\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellChangeTimes->{3.74980238769121*^9, 3.7498042983698835`*^9, 
  3.749806490550786*^9, 3.749808256898795*^9, 3.7498096546781435`*^9, 
  3.7498109127735476`*^9, 3.749811769699604*^9, 3.7498133773643312`*^9, 
  3.7498716109317827`*^9, 3.7498719581151023`*^9, 3.7498722971580877`*^9, 
  3.749874070788522*^9, 3.7498746954935226`*^9, 3.749875579590848*^9, 
  3.7498756870753517`*^9, 3.7498757717793612`*^9, 3.749875826832724*^9, 
  3.7498758819813843`*^9, 3.74987620645496*^9, 3.749876948160841*^9, 
  3.749884216736549*^9, 3.7498842784087896`*^9, 3.7498861683088336`*^9, 
  3.749886377299911*^9, 3.749886498383795*^9, 3.749886764569446*^9, 
  3.7498868940191593`*^9, 3.7498869523158717`*^9, 
  3.7498870403553033`*^9},ExpressionUUID->"90ccdd71-0137-4766-8fe7-\
c3fd8d453704"],

Cell[CellGroupData[{

Cell["\:0421\:0442\:0440\:043e\:0438\:043c \:0433\:0440\:0430\:0444\:0438\
\:043a\:0438", "Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660984637878*^9}, 3.7476611498754272`*^9, 
   3.747664166427878*^9, 
   3.7489697348559017`*^9},ExpressionUUID->"e4030f03-178c-4bb9-9bc1-\
1a30ee7dd6c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GridBox", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotMatrix", "[", 
          RowBox[{
          "upFlow", ",", " ", 
           "\"\<\:0421\:043a\:043e\:0440\:043e\:0441\:0442\:044c \:043e\:0431\
\:044a\:0451\:043c\:043d\:043e\:0433\:043e \:043f\:043e\:0434\:0432\:043e\
\:0434\:0430 \:043f\:043e \:0432\:0435\:0440\:0442\:0438\:043a\:0430\:043b\
\:0438 \:043e\:0442 \:0446\:0435\:043d\:0442\:0440\:0430\>\""}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotMatrix", "[", 
          RowBox[{
          "downFlow", ",", " ", 
           "\"\<\:0421\:043a\:043e\:0440\:043e\:0441\:0442\:044c \:043e\:0431\
\:044a\:0451\:043c\:043d\:043e\:0433\:043e \:043f\:043e\:0434\:0432\:043e\
\:0434\:0430 \:043f\:043e \:0432\:0435\:0440\:0442\:0438\:043a\:0430\:043b\
\:0438 \:043a \:0446\:0435\:043d\:0442\:0440\:0443\>\""}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotMatrix", "[", 
          RowBox[{
          "leftFlow", ",", " ", 
           "\"\<\:0421\:043a\:043e\:0440\:043e\:0441\:0442\:044c \:043e\:0431\
\:044a\:0451\:043c\:043d\:043e\:0433\:043e \:043f\:043e\:0434\:0432\:043e\
\:0434\:0430 \:043f\:043e \:0433\:043e\:0440\:0438\:0437\:043e\:043d\:0442\
\:0430\:043b\:0438 \:043e\:0442 \:0446\:0435\:043d\:0442\:0440\:0430\>\""}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotMatrix", "[", 
          RowBox[{
          "rightFlow", ",", " ", 
           "\"\<\:0421\:043a\:043e\:0440\:043e\:0441\:0442\:044c \:043e\:0431\
\:044a\:0451\:043c\:043d\:043e\:0433\:043e \:043f\:043e\:0434\:0432\:043e\
\:0434\:0430 \:043f\:043e \:0433\:043e\:0440\:0438\:0437\:043e\:043d\:0442\
\:0430\:043b\:0438 \:043a \:0446\:0435\:043d\:0442\:0440\:0443\>\""}], 
          "]"}]}], "}"}]}], "}"}], "\[IndentingNewLine]", "]"}], "//", 
    "DisplayForm"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotMatrix", "[", 
   RowBox[{
   "opening", ",", " ", 
    "\"\< Q = 0.16, mu = 0.4, n = 1;\n  E' = 3.2e+10, C = 0, Kic = 0;\n  time \
= 28, ts = 60;\n  mesh = 8, cell = 10.\nMesh: 41x81,\na=1034\n\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.747653460997998*^9, 3.747653495304405*^9}, {
   3.747653796100223*^9, 3.747653799875701*^9}, {3.747660987071597*^9, 
   3.7476610031592073`*^9}, {3.747661076612008*^9, 3.7476611426025333`*^9}, {
   3.747661174176361*^9, 3.7476612300712137`*^9}, {3.747661284923028*^9, 
   3.7476613898224154`*^9}, {3.7476641541370153`*^9, 3.747664166428453*^9}, {
   3.747665138222651*^9, 3.747665150908864*^9}, 3.7489337105144663`*^9, 
   3.7489679689599047`*^9, 3.7489697348561897`*^9, {3.7491976918927097`*^9, 
   3.749197692684002*^9}, {3.7496422971161222`*^9, 3.749642326224362*^9}, {
   3.749790005167671*^9, 3.749790014007488*^9}, {3.7497906600134125`*^9, 
   3.749790679063366*^9}, {3.7497909477150583`*^9, 3.749790952803091*^9}, {
   3.7497910818609962`*^9, 3.7497910819240103`*^9}, {3.749792207047981*^9, 
   3.7497922184335766`*^9}, {3.749792340778471*^9, 3.74979234564258*^9}, {
   3.749793557392832*^9, 3.7497935775719595`*^9}, {3.7497936375081034`*^9, 
   3.749793637715136*^9}, {3.7497936910109687`*^9, 3.7497936910819707`*^9}, {
   3.74979375909192*^9, 3.7497937591629343`*^9}, 3.7498007951649756`*^9, {
   3.7498009320688334`*^9, 3.749800937579988*^9}, {3.7498042554835844`*^9, 
   3.7498042722289352`*^9}, {3.749804321092074*^9, 3.7498043433821554`*^9}, {
   3.7498063241558905`*^9, 3.74980632684802*^9}, {3.7498082406888866`*^9, 
   3.749808243087455*^9}, {3.7498096440382996`*^9, 3.7498096457166643`*^9}, {
   3.749810890983674*^9, 3.749810891070694*^9}, {3.749811760200385*^9, 
   3.749811760271409*^9}, {3.7498133697705164`*^9, 3.7498133698335314`*^9}, {
   3.749874657863672*^9, 3.749874680658073*^9}, {3.749875546276264*^9, 
   3.749875552219695*^9}, {3.749875896257929*^9, 3.7498759337814302`*^9}, {
   3.749876909878627*^9, 3.7498769395766263`*^9}, {3.7498841925643053`*^9, 
   3.749884201260745*^9}, {3.749884288041639*^9, 3.74988429950531*^9}, {
   3.749886808270937*^9, 3.7498868360735188`*^9}, {3.749887064088771*^9, 
   3.749887070473139*^9}},ExpressionUUID->"b685990a-8067-4432-947b-\
16b0621cf452"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzt3QlUzfn7B/DIUqIiS5MiW5KlZA/ziTApa8ke2QqJKEtliYYMoZCIElGk
Ei0qWihtilJaSeu9t9u9LcpazP/Oz7/P9zc+nt/MOf8z/5lzfs89x3nNec6c
e+/38/087+d+u3XvgLXbTDZIS0lJLZT8M5H8++2/v94aCIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKPrfpdLlVn8vYT1jl7lO+W63WS0z
zCIdtrF2mfTWc7I6a1CyzSCZ3DpG21MtLbpHWf3ENzZHEdbPb0xEo2VZiw8I
dR/kiRm7VdwzHnmVldfO/vLq7azF6lZmo6azpth+OGXZkzVqhLZsYIGIMdd3
qWNmMGtQuKHtXhdW6fhMa88VrF2mG7cojGNVv6VVLlRgjTM8mW3zspbxXH5L
7ZBYVq3OOm4bL7BartKKXOTIavOT0FfBnHXX88lb06axjlHv9z5Kk3WqgnlK
7x6ssdlaqzW/CBnVD/eXMxL/eaH7gR4Xep7QcUHrAK0btM7QeYHOI3TeoX0C
7StoH0L7FtrnUF9AfQT1HdSnUF9DOQDlBpQzUC5BOQbmHpCTUK7+3Xn/367L
Q6vMoOo6Ro1Nz+MqrYWMr37gpw7rUsPo2LOdf8ZkAWN+ioq2ZyCfsThr7YMD
KqyiqS7T2t3iMabkpU/UGcwavu2yRwe/akaXS7OPjjJkLY71KxFlVzHa7hyt
8ciaNbPC09BQWMlolCBwdbjI6jN87IygmZye8XcuOPepJA6rIzL2hXCm2zbO
T3KqIGotRSnmPaqoZp1jzOyqyol/5tTe++yrqHJz/VfNWFhOpqov83WLqKJe
n+/YY2RjGVHsMsE+oXs1VWAbkmOxoYzkPlZ7GrelmnokNMAzJeY1scxL31IT
WU3NPHQ1xqC0lLwa7+u6VpVH3bxiyKbCoFdEI+3kTL01PKpboKn2wpcvSey0
Yl3XJB41V2+71ebIEnJk+ZO848086pYGn4MrB5aQMSNWXTs6iE+1dKruYelZ
TOJ6yn7QseBTMx5W9bF5XUSM3t2I0InlUwepdaywySkki5vMgq9W8KmtQ758
6rO0kGiZ1PhZKAuoLrIz1EqjCojdpdifbY0F1ACt7O2hagWk2xWvPA8nAbVY
ddIhoxP5pPfYQt698wJq3LrdxoXj8km+9vLzC+4KqPtsG8fL17wgTcombp3T
BFSNSNkVNYEvSOKAtx9XFgk4vdV71NjBdeh+oMeFnid0XNA6QOsGrTN0XqDz
CJ13aJ9A+wrah9C+hfY51BdQH0F9B/Up1NdQDkC5AeUMlEtQjkG5B+UklKtQ
DkO5DeU8NBegOQLNHWhOQXPt7563/1ctyzfPf3VAyBgnfrRXtp+A0Ts+UH7d
QR7jJZlmpdu9qxmXD7lcdqOlktHh0bVNc3dzzn55tFwuq4J8bFQWbVxQRZX1
LPZZ61pOfni8zSC4tYq6bGmh9+efy4ht5fIjW19XU8PM6rdErCklKkOu9lnt
w6OGu/8QUzH0pSSnosd1+IlPDdDKX9WkVUzOnDZd0Xe4gDrLsGNdyP4Cwtvq
vfyyZF+0OTdcp2FAWR4x3aYidTughtrpbtivb+RySbjaG+Mu/YVUXsAw1fKr
OSQ2Pj38nouQmpt0tarQPpvMlQ5Wle5ZS9UVvTcVu2YR6Z/flAz1qKWK+AsK
FS9kkHDZ4LeD5UTUzMfvpw6MSyX5hjufikxE1E9G+sPs5FPI8jtHJ9fni6i8
gife6989IhoH7WSNl4qpY994nnR6mUAslyWN7XReTB37rOBI5OsHRP/po/iJ
PeuoUmal8ku63SPFLZc23lxVR80efU1ZwT2cJDpqWZhH1VGl9ndo/ZEfSsIt
NEd5yNVTderHB68TBhDHwd3eNtrUU/WH/dLt6tqLxJJ3s2FQaD3V+cLsxMN3
TxKLXxdqOtfWU6UapA4nJWyl+/rD/ir/znFt1wNttwainKUrO2kPWzdU2XZT
OIGtL33j5e7QWsfeT2P8EtVitj72SuDdPufY+tGmS2eGOP/5OnQ/0ONCzxM6
Lmgdvl03aJ2h8wKdR+i8Q/sE2lfQPoT2LbTPob6A+gjqO6hPob6GcgDKDShn
oFyCcgzKPSgnoVyFchjKbSjnobkAzRFo7kBzCpprbfv8n+4njzMPMutqGQ2E
Sb4fPQSM7r1c9k4357EG+E/pZ1bFmL/RM1SUVkmNr+j/6ZJJBck10jEWj6mm
Jp2aoKCqW0Y0nvTY7BzKo7r5pj7c31xCjuWdsxK84VPXHZqcPmtoIUksOH5l
yOIazj0r+576nEtyH/yaYKotpB5Jl0rssCOH2DR3H9H4WkjdMfPs+6WJT4mi
5jUl2+haqp/C0GOrQ9JJcKxOavNmEfXN5ZJFBvsfk3Ml2U9ezhJTHYtVJuUu
TiRSzsfk1OrEnFKHdvrnR5NPSVb+Gn511AXZA5fo7A8jxYezPFeY11P1+btq
cvf70vMjkxCk1auKzc89h84p2fVi6zLTB2RdbBUz9Y05g5e83s7WG5qHryn5
ImJznjxsrzeSrev0D/qY8rCWqZcpm284rcvWH6S0S20IEDL19bxbxF2XrSdW
jnmoElrD1KckJ3boMo2tO7trZaonC5h6T2+v9I6r2bqifOd74u5sXd11/ot3
kXx2rn3xeu+zg62njY/U2z2ArTfoVw3p85nH1DucLM86msnWP8x8NetzxJ+v
Q/cDPS70PKHjgtYBWjdonaHzAp1H6LxD+wTaV9A+hPYttM+hvoD6COo7sE+/
6WsoB6DcgHIGyiUox6Dcg3ISylUoh6HchnIemgvQHIHmDjSnoLkGzcG28/VP
kedqmavVVMP4QC67+qdJfEa7fe1SC+5UMWb5Gl82qKjk9JD38B5RQY6N9crZ
mV5NXbdW77ivfylxKSh6rxTIp+5y2KGc3KWIjJzVb9rkwzVUh5HXp8yzzSXe
fUPuefgKqWNCPhQaDc4mBpvCn6q9qKVuOfpk6Nx26UStNvR5qVhEXbSPp5C6
5RHhdej3uaFETB372GtgRFgMySibcHdeWR1VXfzI6PKHIKKxRWvD7NZ6qpTy
7nZXfppF18+te4zGsiD2+iWxp7Sc6DTbv2lkqXzDTTYHFlgE6vUs+U6e7L/X
FCdkc0nq8GP540psXbHleeEPZmzuFfYNqGhvz+anwMKqaK3Xd/Lc5WXpG5fv
zBHVJy/svlQz9eZPntqzNrF126hhvQLCqph6V03FwVtWsXX9/j+rxoVUss+f
P3CZ7hS2/kE5zK7bswqmfimmw4WcH9m6zqbTWmnt2XrPQ3zTm/7lTF1Trv/2
OmO2fm2ikb3R+zJ23QqWRQ99xNarJqxuereLrS9YZjaw6+k/X4fuB3pc6HlC
xwWtA7Ru0DpD5wU6j9B5h/YJtK+gfQjtW2ifQ30B9RHUd1CfQn0N5QCUG1DO
fJtLUI5BuQflJJSrUA5DuQ3lPDQXoDkCzR1oTkFzDZqD9Dz+P6vlM7E57a2I
MUlqvN/x2wLGTvftk7WfVDOa+oS+7bipklG/g/LwsLnVVL+PKxJ2y5URx+hK
g0n7+NQz+YvGLjpaRJQ0D29XTqmhprja3ooKeU70Qx5Udp5RS3VuOHMz2yqT
7BqjIBfjLaLqPbkWd3N1Mpna58JuzS9iqmbN8/UqvaOJWMFlcuj0emr2wSjr
oIQrdD10Kjd8fGHCvu598JLvueQuu/+D5dzaPbJm++VasM4Xo8VsfyXH3G3c
M5vtxy0WdVs7qrF9rV/dbY33ezYfegYW7nT1YfOkq7DdvsMJbP6sn9lry2ce
m2MLCof+OmMoW19qq5QUspTNyfNhot3BJ9m81RwbsVQlnc1zmQEGOTvK2Lkw
1lFgbD2Iq/OKinbMO19PEv3U+ye3ltJ6iP4OhQET6knYFZ+A57JcXeVcbWqn
jDqi/z6zSfHjS+5+emysyt0mqWt3uO/Rh6tn5Tzbk61SR5zdOo+SNSih9Th5
9YWt98SkcHB2xjvjYlqf1WlFnNZWMQk7ta5o85kiWleSOWO+obuY6Jyt37Tv
ViGtOwZcnFvCFxEd9Y7Trxlw9UrLVweXXBKRiQdvJhcfKaD1qXnhV/o9FZHz
p6ednSPN/f/hJ7pUGE4XEf21KuOiruf/YR26H+hxoecJHRe0DtC6QesMnRfo
PELnHdonX2/svmqrQ/sQ2rfQPof6AuojqO+gPoX6GsoBKDegnIFyCcoxKPe+
zUkoV6EchnIbynloLkBzBJo70JyC5ho0B6G52bY+f5VN86fwdS8LGaUFr0ue
evIZm+7eVLCoqGLUCW7+RXsEZ/RnxTvRceUkbk7riTg3HjXjB7nFqctekgBr
ndxIUkPtFrf1SKl+HinLntVnYpOQmqiyxP72nKdk+dl2XtuOiai8w+92rn2Y
TLKf9Wx9NqmOqj+9k7a+USQ5Y+vltyOlnpqYNi5V2vMwPW7DDu1TZNS+8/6g
4tLG8SXsvt07cHIP4y3sPs9cV5wT+Zbtl+iZ65rNfNjX25dmhM/z0PtO330o
39q/jO1fmYiRE2eksf1ukbDd900GmxvRPZJ7G7V8J2fWh724VcHm0gKv1cNV
bnA59upeWEDQq3py40mMn1bQa1rfvNmpxNWwnsgci7hmOo7LycqQPha+XnUk
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
Xe46zlt6x6lyI8l5Gmzv/UzEzYuMUXaX1G9I9m/uAdVZHtFczpvluUx6L7l+
NDHWIDfu07q7dff9mY1VxG9MqKh1+x1at+uxaH6ig+RxV15ze2jB/Zw5163Y
yXaGZN79dnm59Dp3XeZ34g7vqGS+DEjefTCYu05U2jDinddRyf4491q89/Yx
WlcfPuCz9DUxya59/kFWpfgP69D9QI8LPU/ouKB1gNYNWmfovIDnETjv0D6B
9hW0D6F9C+1zqC+gPoL6DupTqK+hHPh6Y3OjrQ7lDJRLUI5BuQflJJSrUA5/
m9tQzkNzAZoj0NyB5hQ016A5CM1NaM62He+fFa+vf1/H62u8vv7thtfX//m4
8Pr66w2vr39fx+vrv/b6Gt+//n0d37/G96//dT/4/vV/PC58//rrDd+//n0d
37/+a9+/hsTfD/99HX8/HH8//Lcb/n74f14H/P3w/73h74f/ro6/H/71eP8q
8e+vf7+v8O+v8e+vf7vh31//53XAv7/+9xv+/XVbHf/++us6/FXi55vh55vh
55vh55vh55v9vo6fb/a1jp9v9s/6fDNI/Pxw/Pxw/Pxw/Pzwtjp+fvjXOn5+
OH5++N/5+eGQ+P1c+P1c+P1c+P1cbXX8fq6vdfx+Lvx+rn/i93NB4vdf4/df
4/df4/dft9Xx+6/x+6/x+6//ubo8tMoMqq5j1Nj0PK7SWsj46gd+6jDJ/vhW
x57t/DMmCxjzU1S0PQP5jMVZax8cUGEVTXWZ1u4WjzElL32izmDW8G2XPTr4
VTO6XJp9dJQha3GsX4kou4rRdudojUfWrJkVnoaGwkpGowSBq8NFVp/hY2cE
zeT0jL9zwbmPZL+ujsjYF8KZbts4P8mpgqi1FKWY96iimnWOMbOrKif+mVN7
77OvosrN9V81Y2E5maq+zNctoop6fb5jj5GNZUSxywT7hO7VVIFtSI7FhjKS
+1jtadyWauqR0ADPlJjXxDIvfUtNZDU189DVGIPSUvJqvK/rWlUedfOKIZsK
g14RjbSTM/XW8KhugabaC1++JLHTinVdk3jUXL3tVpsjS8iR5U/yjjfzqFsa
fA6uHFhCxoxYde3oID7V0qm6h6VnMYnrKftBx4JPzXhY1cfmdRExencjQieW
Tx2k1rHCJqeQLG4yC75awae2Dvnyqc/SQqJlUuNnoSygusjOUCuN+i2vYn+2
NRZQA7Syt4eqFZBuV7zyPJwE1GLVSYeMTuST3r997sN5ATVu3W7jwnH5JF97
+fkFdwXUfbaN4+VrXpAmZRO3zmkCqkak7IqawBckccDbjyuLBJze6j1q7OA6
dD/Q40LPEzouaB2gdYPWGTov0HmEzju0T6B9Be1DaN9C+xzqC6iPoL6D+hTq
aygHoNyAcgbKJSjHoNyDchLKVSiHodyGch6aC9AcgeYONKegufZ3z9v/dpUu
t/p7CesZu8x1yne7zWqZYRbpsI21y6S3npPVWYOSbQbJ5NYx2p5qadE9yuon
vrE5irB+fmMiGi3LWnxAqPsgT8zYreKe8cirrLx29pdXb2ctVrcyGzWdNcX2
wynLnqxRI7RlAwtEjLm+Sx0zg1mDwg1t97qwSsdnWnuuYO0y3bhFYRyr+i2t
cqECa5zhyWybl7WM5/JbaofEsmp11nHbeIHVcpVW5CJHVpufhL4K5qy7nk/e
mjaNdYx6v/dRmqxTFcxTevdgjc3WWq35Rciofri/nJH4zwvdD/S40POEjgta
B2jdoHWGzgt0HqHzDu0TaF9B+xDat9A+h/oC6iOo76A+hfoaygEoN6CcgXIJ
yjEw94CchHL17857FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVR9O/xfwDGZoFU
      "], {{0, 0}, {82, 81}}, {0, 1}], {
      LineBox[{{1, 50}, {81, 50}}], 
      InsetBox[
       FormBox["\"+5. \:041c\:041f\:0430\"", TraditionalForm], {2, 51}], 
      LineBox[{{1, 32}, {81, 32}}], 
      InsetBox[
       FormBox["\"+5. \:041c\:041f\:0430\"", TraditionalForm], {2, 33}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{80.5, 
          FormBox[
           RowBox[{"-", "233.678115`"}], TraditionalForm]}, {60.5, 
          FormBox[
           RowBox[{"-", "116.8390575`"}], TraditionalForm]}, {40.5, 
          FormBox["0", TraditionalForm]}, {20.5, 
          FormBox["116.8390575`", TraditionalForm]}, {0.5, 
          FormBox["233.678115`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "233.678115`"}], TraditionalForm]}, {20.5, 
          FormBox[
           RowBox[{"-", "116.8390575`"}], TraditionalForm]}, {40.5, 
          FormBox["0", TraditionalForm]}, {60.5, 
          FormBox["116.8390575`", TraditionalForm]}, {80.5, 
          FormBox["233.678115`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 20.5, 40.5, 60.5, 80.5}, {0.5, 20.5, 40.5, 60.5, 
      80.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\" Q = 0.16, mu = 0.4, n = 1;\\n  E' = 3.2e+10, C = 0, Kic = 0;\
\\n  time = 28, ts = 60;\\n  mesh = 8, cell = 10.\\nMesh: 81x161,\\na=1034\\n\
\"", TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -202.46095598674867`}, 
                    Offset[{4., 0}, {7.5, -202.46095598674867`}]}, {{
                    7.5, -74.90238996687174}, 
                    Offset[{4., 0}, {7.5, -74.90238996687174}]}, {{7.5, 
                    10.136654046379476`}, 
                    Offset[{4., 0}, {7.5, 10.136654046379476`}]}, {{7.5, 
                    95.1756980596308}, 
                    Offset[{4., 0}, {7.5, 95.1756980596308}]}, {{7.5, 
                    180.21474207288202`}, 
                    Offset[{4., 0}, {7.5, 180.21474207288202`}]}, {{7.5, 
                    265.25378608613346`}, 
                    Offset[{4., 0}, {7.5, 265.25378608613346`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -202.46095598674867`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -74.90238996687174}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["7", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 10.136654046379476`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["9", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 95.1756980596308}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["11", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 180.21474207288202`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["13", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 265.25378608613346`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.5739469947941316`", ",", "2.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.684867486985329`", ",", "5.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7588144817794604`", ",", "7.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.832761476573592`", ",", "9.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9067084713677236`", ",", "11.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9806554661618552`", ",", "13.`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7498868742051134`*^9, 3.7498868941074014`*^9}, 
   3.749886952420087*^9, 
   3.749887040445323*^9},ExpressionUUID->"c50429e5-1f33-4fa2-8a27-\
fc3f31920995"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\[IndentingNewLine]",FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -178.926467394896}, 
                    Offset[{4., 0}, {7.5, -178.926467394896}]}, {{
                    7.5, -70.35293478979224}, 
                    Offset[{4., 0}, {7.5, -70.35293478979224}]}, {{
                    7.5, -16.06616848724036}, 
                    Offset[{4., 0}, {7.5, -16.06616848724036}]}, {{7.5, 
                    92.50736411786363}, 
                    Offset[{4., 0}, {7.5, 92.50736411786363}]}, {{7.5, 
                    201.0808967229675}, 
                    Offset[{4., 0}, {7.5, 201.0808967229675}]}, {{7.5, 
                    255.3676630255195}, 
                    Offset[{4., 0}, {7.5, 255.3676630255195}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -178.926467394896}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -70.35293478979224}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -16.06616848724036}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["7", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 92.50736411786363}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["9", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 201.0808967229675}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 255.3676630255195}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.5944117674826991`", ",", "2.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.688823534965398`", ",", "4.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7360294187067475`", ",", "5.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8304411861894466`", ",", "7.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9248529536721457`", ",", "9.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9720588374134952`", ",", "10.`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.749886863477818*^9, 
  3.74988686350681*^9}},ExpressionUUID->"e71caf75-8900-4968-9f0e-\
a27da7ed4b07"],

Cell[BoxData[
 TemplateBox[{"Null",FormBox[
    TemplateBox[{
      FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          GraphicsBox[{{}, {}, 
            RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
             "], {{
               Rational[-15, 2], 
               Rational[-575, 2]}, {
               Rational[15, 2], 
               Rational[575, 2]}}], {Antialiasing -> False, 
             AbsoluteThickness[0.1], 
             Directive[
              Opacity[0.3], 
              GrayLevel[0]], 
             LineBox[
              NCache[{{
                 Rational[15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[-575, 2]}, {
                 Rational[-15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[575, 2]}, {
                 Rational[15, 2], 
                 Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
               287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
             CapForm[None], {}}, {Antialiasing -> False, 
             StyleBox[
              LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False], 
             StyleBox[
              StyleBox[{{
                 StyleBox[
                  LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -178.926467394896}, 
                    Offset[{4., 0}, {7.5, -178.926467394896}]}, {{
                    7.5, -70.35293478979224}, 
                    Offset[{4., 0}, {7.5, -70.35293478979224}]}, {{
                    7.5, -16.06616848724036}, 
                    Offset[{4., 0}, {7.5, -16.06616848724036}]}, {{7.5, 
                    92.50736411786363}, 
                    Offset[{4., 0}, {7.5, 92.50736411786363}]}, {{7.5, 
                    201.0808967229675}, 
                    Offset[{4., 0}, {7.5, 201.0808967229675}]}, {{7.5, 
                    255.3676630255195}, 
                    Offset[{4., 0}, {7.5, 255.3676630255195}]}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], StripOnInput -> False]}, 
                StyleBox[
                 StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -178.926467394896}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -70.35293478979224}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -16.06616848724036}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["7", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 92.50736411786363}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["9", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 201.0808967229675}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 255.3676630255195}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                   Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                 StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
               False], 
              Directive[
               AbsoluteThickness[0.2], 
               Opacity[0.3], 
               GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
           Scaled[0.02], PlotRange -> All, Frame -> True, 
           FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
           Opacity[0], FrameTicksStyle -> Opacity[0], 
           ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> Left,
           AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
          ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
         False], {FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False], TraditionalForm]}, "BarLegend", 
     DisplayFunction -> (#& ), 
     InterpretationFunction :> (RowBox[{"BarLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Function", "[", 
                RowBox[{"x", ",", 
                  RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
                RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"0.5944117674826991`", ",", "2.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.688823534965398`", ",", "4.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.7360294187067475`", ",", "5.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.8304411861894466`", ",", "7.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.9248529536721457`", ",", "9.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"0.9720588374134952`", ",", "10.`"}], "}"}]}], 
              "}"}]}], ",", 
          RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
          RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
          RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7498868941704206`*^9, 3.7498869524849343`*^9, 
  3.749887040512035*^9},ExpressionUUID->"7a0bf1b3-0f66-4c31-88aa-\
274f86c4318c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749791069507349*^9, 
  3.74979107120269*^9}},ExpressionUUID->"c852c6e4-ecac-4c55-9d9e-\
12c34d2d6319"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749198148660359*^9, 3.7491981613868237`*^9}, 
   3.749198553728691*^9},ExpressionUUID->"0928e295-e165-4904-b890-\
678feb978288"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cellLength", "*", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}], ",", "1"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "130"}], "}"}], ",", "All"}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cellLengthDouble", "*", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"openingDouble", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"openingDouble", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "]"}], ",", "1"}], "}"}]}], "]"}],
      ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "130"}], "}"}], ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.749196985608224*^9, 3.749197025912334*^9}, {
  3.749197061266089*^9, 3.749197061751774*^9}, {3.74919721845118*^9, 
  3.7491972432643757`*^9}, {3.749197285157329*^9, 
  3.7491973012521152`*^9}},ExpressionUUID->"7955e177-7067-45c7-a09f-\
4615e5a71d1a"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"openingDouble\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"16\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,187,91,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBGIH63vB3e9fO17ikGF5AKRn7/LU1Pjw2rGm6pEjiJ59
VKccRFu9m94Coic/lpkHon0S56wB0amiwiaaQPom+6sgEP2PMW4uiN7C238f
RM9a0/cWRK/Qu/8FRBtc8f8DohfdC7XQBdJ2u/54gujlIcsrQXSMeMZiEH0r
ivsKiL7p2GikB6TvLV2oqA+kq6LjjQ2AtA5To4AhkO52f7QPRF+KSokxAtKJ
FxyPg+iWOI8JxkDa5F3yf38gfcX8vFYAkN621iAURE+b8cQoEEgvO/63AURr
Tm54D6Jj8j78AdFGk9vYg4D0+sIMPhD9ytlXFEQ7XbhtC+YLT5oFog+GblUP
A9IFSjf1QPTaef3S4UBacq+JKYhWkgtyAdGTC4XSQPSmrOOlIPpLvGAtiP7a
IdQBogGQDNTK
  "],ExpressionUUID->"9059cf60-dbfa-4e84-9983-b97272aa8e4f"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"openingDouble\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"16\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,187,92,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBGIH63vB3e9fO17ikGF5AKRn7/LU1Pjw2rGm6pEjiJ59
VKccRFu9m94Coic/lpkHon0S56wB0amiwiaaQPom+6sgEP2PMW4uiN7C238f
RM9a0/cWRK/Qu/8FRBtc8f8DohfdC7XQBdJ2u/54gujlIcsrQXSMeMZiEH0r
ivsKiL7p2GikB6TvLV2oqA+kq6LjjQ2AtA5To4AhkO52f7QPRF+KSokxAtKJ
FxyPg+iWOI8JxkDa5F3yf38gfcX8vFYAkN621iAURE+b8cQoEEgvO/63AURr
Tm54D6Jj8j78AdFGk9vYg4D0+sIMPhD9ytlXFEQ7XbhtC+YLT5oFog+GblUP
A9IFSjf1QPTaef3S4UBacq+JKYhWkgtyAdGTC4XSQPSmrOOlIPpLvGAtiO6b
L9wBogGNe9R7
  "],ExpressionUUID->"22d3abd8-14df-4345-bd49-b539bf78c455"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.019444444444444445`], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQOR4tsvMtxTdTB8fTTAT0Tc4c/Kj5d8D2lB+eoO
UoG3pGseqjukFkzZY+Vv6PDSQ++/oixM3tzBvNMx4ekGDYe/qd+fJN60cXAv
+sn/cromVL2jg/a36XcnP9dwOK27tu2IoYtDwtMLSrclNaH63R3MpQ5EKxzU
cJi+4p7UjW+eDjfPfQ9+vBRmno+DUPOBUwtTNRySlQXWv97t7xBxyujIRj0N
qPmBDs9/Ax38Vt1B4vyChfUHghzUnjTPO7tKHWpfiMNSHWeZ10nqDnU9O7M5
F4c6XF9cYMslrg61P9zBc26D2qFjag5PPC+ZTm6NcHigO2HBj0I1qHsiHZLr
b9pWSqg5eLG//i+TEe3wLsrJ7sVOVaj7YhyAofH3W6iqw4YjzKeWecU5TL3C
maH0RgXq3ngHlZ1/2r9UqzhwO/J5zZiW4NB2MuTgChYVqPsTHbxXKxb2tyo7
7JsvpX+XPcmh7G/T3Q1/laD+SXKI/ef86222kkPhPzURpcpkhxKeE3HvzylC
/Zfi4NOpUiWpquigEmv8M+1VikNMFG9ndY4C1L+pEPNd5R2u77a/tzo6zUHt
T5B9fpcs1P/pDr318wsfLpB26JbyOfzhTLqDxb5vZyY1SELDI8NBvvV14A45
cQe7yogVpnaZDq/XNq4VyhGBhk+mg8yHn4ktAYIOH6+n9Fatz3J46rKbS9Oe
Gxpe2Q7qHbv4HV4xOiwxKyzar5DjsFMy78Dz9vv2kPDLcYClQwC0wSTy
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {}, {}, {}, {{}, {}}, \
{{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 130}, {0, 13.3795}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749196990364318*^9, 3.74919702626657*^9}, 
   3.7491970828775806`*^9, {3.749197218956336*^9, 3.749197243713479*^9}, 
   3.749197301774363*^9, 3.749198565405284*^9, 3.7494688313038144`*^9, 
   3.7496422729661055`*^9, 3.749790026392049*^9, 3.74979022318948*^9, 
   3.7497906494901557`*^9, 3.7497907568318634`*^9, 3.749790960981798*^9, 
   3.7497910769648952`*^9, 3.7497921607023993`*^9, 3.7497924074104805`*^9, 
   3.7497930030407667`*^9, 3.7497935325544415`*^9, 3.7497936445505915`*^9, 
   3.7497937030714674`*^9, 3.7497937625926876`*^9, 3.749800386790451*^9, 
   3.749800527991757*^9, 3.749800909333127*^9, 3.749801243357876*^9, 
   3.749801632446862*^9, 3.7498023881343107`*^9, 3.749804301221534*^9, 
   3.749806491091943*^9, 3.749808260200554*^9, 3.749809655153269*^9, 
   3.749810915324129*^9, 3.749811770147708*^9, 3.749813378379578*^9, 
   3.7498716112028613`*^9, 3.7498719585715876`*^9, 3.7498722976272287`*^9, 
   3.7498740712436485`*^9, 3.749874696102659*^9, 3.7498755801290197`*^9, 
   3.7498756876765184`*^9, 3.7498757725655413`*^9, 3.749875827438916*^9, 
   3.749875882525565*^9, 3.7498762069791946`*^9, 3.7498769486589613`*^9, 
   3.749884221839758*^9, 3.7498842788944798`*^9, 3.7498861726601744`*^9, 
   3.749886377741105*^9, 3.749886498651198*^9, 3.7498867687313986`*^9, 
   3.749886894317793*^9, 3.7498869526269965`*^9, 
   3.7498870406612377`*^9},ExpressionUUID->"87b5f6c5-33ea-40b8-aa6e-\
bbeb8888e5c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"fracture", "[", 
   RowBox[{"[", 
    RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "]"}]], "Input",Ex\
pressionUUID->"96305b8d-1e12-42db-a90b-6c28dad5c2e5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"39"},
      {"1.57885`"},
      {"225.129`"},
      {"63.4681`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuIu7aRPbO9fO+6b8Ta4G0hPElVieQCi2Xw1NT68dlxV
9MwRRK8TNCgH0ct+zGoB0SxH5eeBaB7v+WvA6t6ImWgCaZ3et0EgOmtD4lwQ
3aQx6T6IXvdj4lsQ/Wvzoy8gek1X8B8QvXltpIUukNbTZ/AC0e3SqytBtO29
7MUges5xvisguvftfiM9IJ36bp2iPpD2mZpubACk5d61CRgCaY2op/tA9IyD
WTFGQLpHxfU4iGbm9p1gDKSnKab/9wfSOYWXtQKAtEirSSiIrjN7YRQIpC9V
cDSCaI5vLe9BtNS7X39AtMyRGexBQDpfqZgPRG+LCRQF0e0/79uC6C/c02aB
aL7q3ephQLpa6q4eiA5cPVU6HEgzRFuYgmg7x1AXEB12SzwNRK/cdqoURJdM
FqkF0UcWi3aAaAAl59Yt
  
  "],ExpressionUUID->"f63d1f97-25c0-483c-97cb-c9f040be6f79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"fracture", "[", 
   RowBox[{"[", 
    RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7491974221179657`*^9, 
  3.749197458133196*^9}},ExpressionUUID->"585ea206-a7ac-4200-8f79-\
8ab3732bf7aa"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"39"},
      {"1.57885`"},
      {"225.129`"},
      {"63.4681`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.749197446862653*^9, 3.7491974583776913`*^9}, 
   3.749468831438899*^9, 3.749642273082124*^9, 3.749790026419055*^9, 
   3.7497902232124987`*^9, 3.749790649516148*^9, 3.7497907568538685`*^9, 
   3.7497909610038157`*^9, 3.7497910769899006`*^9, 3.7497921607313924`*^9, 
   3.749792407434499*^9, 3.749793003066772*^9, 3.749793532579465*^9, 
   3.749793644575616*^9, 3.7497937030974736`*^9, 3.749793762621681*^9, 
   3.7498003868174567`*^9, 3.749800528019763*^9, 3.749800909362114*^9, 
   3.7498012433828816`*^9, 3.7498016324768677`*^9, 3.7498023901697726`*^9, 
   3.749804301482603*^9, 3.7498064912539797`*^9, 3.749808260232561*^9, 
   3.749809655179271*^9, 3.7498109153511357`*^9, 3.7498117701787148`*^9, 
   3.7498133784225874`*^9, 3.7498716112408667`*^9, 3.749871958633601*^9, 
   3.7498722976572356`*^9, 3.7498740712736692`*^9, 3.7498746962927437`*^9, 
   3.749875580221352*^9, 3.7498756878665705`*^9, 3.749875772798162*^9, 
   3.749875827624971*^9, 3.749875882563572*^9, 3.7498762070202155`*^9, 
   3.7498769487129645`*^9, 3.7498842218844748`*^9, 3.749884278934499*^9, 
   3.74988617269518*^9, 3.749886377776362*^9, 3.7498864986822186`*^9, 
   3.7498867687614594`*^9, 3.749886894351802*^9, 3.7498869526600037`*^9, 
   3.7498870406942577`*^9},ExpressionUUID->"2c641437-8bfb-461b-a60b-\
4da3c64501f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "openingDouble", "]"}]], "Input",
 CellChangeTimes->{{3.7491971747444353`*^9, 
  3.749197181424363*^9}},ExpressionUUID->"2ce0f13e-c8b9-470a-b6a2-\
6412310867e2"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"openingDouble\\\"}]\\) at position \\!\\(\
\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,190,93,23143773159856924641,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBOI1094Fd79/7cjwW4nlAZCuUfXT1Pjw2vHawueOIHpd
omE5iGYxmNMColUOK8wD0f5NC9aAaAsdCRNNIK2+5V0QiJ4nkDwXRIvwTb4P
orcFTH4LoptknnwB0QWXQv6A6GV/oyx0gfS7MkYvEM3fsqYSREup5S4G0dMS
vK6A6BU2x4z0gLRN+gZFfSA9QSzT2ABIH4nrEDAE0qarn+0D0fNuZccYAekb
YW7HQfSGIL8JxkB6U1XGf38gzaFzVSsASCdNNg0F0RanXhoFgtwjxNUIohPK
et6D6B2r//wB0S3xs9iDgHTAkRI+EL2uPEQURK8JfGgLoh9dmz4LRP+5sUc9
DEhPn31PD0T7XJomHQ6k0zMtTUG0ZUaYC4jeJCiZBqIFjp4uBdHbTonWguhP
l8Q6QDQA7rTSrQ==
  "],ExpressionUUID->"2b85bec3-3076-4038-b0de-4970d9dcd260"],

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "openingDouble", "]"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuIGm6Pr2d6/dvyl+D64G0j/qVVmeQCky1b4aWp8eO34
QeWFI4i+8sawHEQ/uzynBUQruSnOA9HmfxesAdFB6yVMNIG0o/n7IBC9c3Ly
XBCdMHPyfRA9//TktyB6zvwnX0B0Z2joHxB9oCHaQhdIc/1i9ALR0fxrK0G0
xMrcxSBaQNL3CohWPX3CSA9Iv2LaqKgPpHnOZxsbAGkr6U4BQyA93fb5PhBt
kZ8TYwRy3yO34yD6k5D/BGMgrceW+d8fSCfuv6oVAKS59c1CQXRL6CujQCDN
z8DdCKItnHvfg+gzDX//gOhkndnsQUBacVcpH4jWMAkVBdEbtB7ZguhHv2fO
AtEq2/aqh4HMy7ivB6I9yqZLhwPpzV8sTUG0gUi4C4hmmCuZBqK7I86UgmiF
erFaEJ3QLt4BogH3ctNY
  
  "],ExpressionUUID->"076b41d4-88cc-48bb-8ef8-dd203708aee8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749195740626032*^9, 3.749195838422834*^9}, 
   3.749195875682662*^9, {3.749197001871498*^9, 3.749197045282043*^9}, {
   3.7491970763069763`*^9, 3.749197078351098*^9}, {3.749197140355348*^9, 
   3.7491971624982977`*^9}, {3.74919723567367*^9, 3.7491972371046257`*^9}, 
   3.7491972825243177`*^9},ExpressionUUID->"d42e1475-604a-4b84-90e5-\
ad0cb875c937"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotMatrix", "[", 
  RowBox[{
   RowBox[{"openingAtTime", "[", "120", "]"}], ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.749002583803192*^9, 
  3.749002626275002*^9}},ExpressionUUID->"9d1e9984-4958-46b0-b52e-\
c5940e57a468"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,192,94,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAmKGfHGOFe9eO3Ymfgjufv/a8ccSFZYHQNrOulNT48Nr
x1feLx1BtIuvcTmIrno1twVE+5cqzQPRE2MXrQHRi7ZKmmgC6TXX9INB9L07
c+eCaI0dU+6D6EPKU9+C6DfiCl9B9IJ3E/6A6KYTMRa6QLomitkLRH9RXVcJ
oh8ez1sMoo12Bl8B0WuMTxnpAWme6E2K+kB6k3musQGQnlXcJWAIpHt6X+wD
0Wl9uTFGQHqKn8dxEM2UHTDBGEhvy8v67w+kldmvawUAaZl681AQfa3ltVEg
kNb6w9MIonvF+t+DaBa//39AdFTVXPYgIH1qaTkfiFbwjBYF0W8+v7AF0fOF
5s8C0X8y9quHgezneqgHopmez5AOB9JCZdamILolJMIFRPuIS6eBaOuDZ0tB
tMll8VoQzbNfogNEAwAVb9Vz
  
  "],ExpressionUUID->"b6d50201-29f0-438b-8fc0-5e5f4891e2b8"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,192,95,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAmKGfHGOFe9eO3Ymfgjufv/a8ccSFZYHQNrOulNT48Nr
x1feLx1BtIuvcTmIrno1twVE+5cqzQPRE2MXrQHRi7ZKmmgC6TXX9INB9L07
c+eCaI0dU+6D6EPKU9+C6DfiCl9B9IJ3E/6A6KYTMRa6QLomitkLRH9RXVcJ
oh8ez1sMoo12Bl8B0WuMTxnpAWme6E2K+kB6k3musQGQnlXcJWAIpHt6X+wD
0Wl9uTFGQHqKn8dxEM2UHTDBGEhvy8v67w+kldmvawUAaZl681AQfa3ltVEg
kNb6w9MIonvF+t+DaBa//39AdFTVXPYgIH1qaTkfiFbwjBYF0W8+v7AF0fOF
5s8C0X8y9quHgezneqgHopmez5AOB9JCZdamILolJMIFRPuIS6eBaOuDZ0tB
tMll8VoQHe4l2QGiARSa1Uo=
  
  "],ExpressionUUID->"1c76aac4-ce84-4b89-82f4-6124c69d82b2"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\
\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\).\"",2,192,96,23143773159856924641,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAmKGfHGOFe9eO3Ymfgjufv/a8ccSFZYHQNrOulNT48Nr
x1feLx1BtIuvcTmIrno1twVE+5cqzQPRE2MXrQHRi7ZKmmgC6TXX9INB9L07
c+eCaI0dU+6D6EPKU9+C6DfiCl9B9IJ3E/6A6KYTMRa6QLomitkLRH9RXVcJ
oh8ez1sMoo12Bl8B0WuMTxnpAWme6E2K+kB6k3musQGQnlXcJWAIpHt6X+wD
0Wl9uTFGQHqKn8dxEM2UHTDBGEhvy8v67w+kldmvawUAaZl681AQfa3ltVEg
kNb6w9MIonvF+t+DaBa//39AdFTVXPYgIH1qaTkfiFbwjBYF0W8+v7AF0fOF
5s8C0X8y9quHgezneqgHopmez5AOB9JCZdamILolJMIFRPuIS6eBaOuDZ0tB
tMll8VoQbfFOsgNEAwAYHtXP
  
  "],ExpressionUUID->"a4d7019f-7ed4-46bf-baf3-8b07e81e6306"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,192,97,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAmKGfHGOFe9eO3Ymfgjufv/a8ccSFZYHQNrOulNT48Nr
x1feLx1BtIuvcTmIrno1twVE+5cqzQPRE2MXrQHRi7ZKmmgC6TXX9INB9L07
c+eCaI0dU+6D6EPKU9+C6DfiCl9B9IJ3E/6A6KYTMRa6QLomitkLRH9RXVcJ
oh8ez1sMoo12Bl8B0WuMTxnpAWme6E2K+kB6k3musQGQnlXcJWAIpHt6X+wD
0Wl9uTFGQHqKn8dxEM2UHTDBGEhvy8v67w+kldmvawUAaZl681AQfa3ltVEg
kNb6w9MIonvF+t+DaBa//39AdFTVXPYgIH1qaTkfiFbwjBYF0W8+v7AF0fOF
5s8C0X8y9quHgezneqgHopmez5AOB9JCZdamILolJMIFRPuIS6eBaOuDZ0tB
tMll8VoQHVQo1QGiARWJ1W0=
  
  "],ExpressionUUID->"4c2083f1-ec50-45ec-abc5-bfe4c846652d"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"MatrixPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotLabel\
\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\
\:0438\:0435\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\
\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"PlotLegends\\\", \
\\\"\[Rule]\\\", \\\"Automatic\\\"}], \\\",\\\", RowBox[{\\\"ImageSize\\\", \
\\\"\[Rule]\\\", \\\"Large\\\"}]}], \\\"]\\\"}], \\\",\\\", \
GraphicsBox[List[LineBox[List[List[1, 50], List[81, 50]]], \
InsetBox[FormBox[\\\"\\\\\\\"+5. \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", \
TraditionalForm], List[2, 51]], LineBox[List[List[1, 32], List[81, 32]]], \
InsetBox[FormBox[\\\"\\\\\\\"+5. \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", \
TraditionalForm], List[2, 33]]]]}], \\\"]\\\"}]\\).\"",2,192,98,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAmKGfHGOFe9eO3Ymfgjufv/a8ccSFZYHQNrOulNT48Nr
x1feLx1BtIuvcTmIrno1twVE+5cqzQPRE2MXrQHRi7ZKmmgC6TXX9INB9L07
c+eCaI0dU+6D6EPKU9+C6DfiCl9B9IJ3E/6A6KYTMRa6QLomitkLRH9RXVcJ
oh8ez1sMoo12Bl8B0WuMTxnpAWme6E2K+kB6k3musQGQnlXcJWAIpHt6X+wD
0Wl9uTFGQHqKn8dxEM2UHTDBGEhvy8v67w+kldmvawUAaZl681AQfa3ltVEg
kNb6w9MIonvF+t+DaBa//39AdFTVXPYgIH1qaTkfiFbwjBYF0W8+v7AF0fOF
5s8C0X8y9quHgezneqgHopmez5AOB9JCZdamILolJMIFRPuIS6eBaOuDZ0tB
tMll8VoQPe+PVAeIBgAbttZE
  
  "],ExpressionUUID->"ee9bbe29-6fe7-49ee-8ef4-58d247fdd7c1"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"\>"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"21", ",", 
              RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"41", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
          "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"21", ",", 
              RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"41", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
          "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", "80.5`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", "80.5`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "White", ",", "White", ",", "White", ",", "White", ",", "White", 
            ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                  {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                  {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.4, 0.4, 0.4],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0.6, 0.6, 0.6]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.6, 0.6, 0.6]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.6, 0.6, 0.6],
             Editable->False,
             Selectable->False], ",", "Yellow", ",", "Orange", ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                  {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                  {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.4, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0.6, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.6, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.6, 0, 0],
             Editable->False,
             Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
   GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
     InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
     LineBox[{{1, 32}, {81, 32}}], 
     InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], "]"}]], "Output",\

 CellChangeTimes->{{3.749002599905241*^9, 3.7490026267806168`*^9}, 
   3.749003290000227*^9, 3.74900332891006*^9, 3.749468831607942*^9, 
   3.749642273228157*^9, 3.749790028448535*^9, 3.7497902233725524`*^9, 
   3.7497906516376324`*^9, 3.7497907570159082`*^9, 3.749790961159852*^9, 
   3.7497910771689405`*^9, 3.7497921608874283`*^9, 3.749792409641002*^9, 
   3.7497930050772443`*^9, 3.7497935327365007`*^9, 3.7497936447406473`*^9, 
   3.7497937051509404`*^9, 3.749793764675163*^9, 3.7498003869895253`*^9, 
   3.7498005301132402`*^9, 3.7498009095271654`*^9, 3.749801243544932*^9, 
   3.749801634698388*^9, 3.749802390410842*^9, 3.7498043016986427`*^9, 
   3.7498064915240755`*^9, 3.749808260820753*^9, 3.7498096553843045`*^9, 
   3.7498109155196548`*^9, 3.7498117703476286`*^9, 3.7498133786400914`*^9, 
   3.749871611417049*^9, 3.7498719588046403`*^9, 3.7498722978232737`*^9, 
   3.749874071442998*^9, 3.74987469651623*^9, 3.7498755805915117`*^9, 
   3.749875688092298*^9, 3.7498757730392113`*^9, 3.749875827857012*^9, 
   3.7498758829637012`*^9, 3.749876207379799*^9, 3.749876949081049*^9, 
   3.7498842221005926`*^9, 3.7498842792045593`*^9, 3.7498861728712244`*^9, 
   3.749886377955185*^9, 3.7498864988503995`*^9, 3.7498867689396152`*^9, 
   3.749886894523859*^9, 3.749886952834553*^9, 
   3.7498870408643417`*^9},ExpressionUUID->"76105a91-c569-4f90-ad81-\
13d8dacaec51"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{".", 
      RowBox[{"/", 
       RowBox[{"run", ".", 
        RowBox[{"sh", " ", "--"}]}]}]}], "mesh"}], "-", "size"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"12", " ", "--"}], "barriers"}], "=."}], "/", 
       "InitialConditions"}], "/", 
      RowBox[{"barriers13", ".", 
       RowBox[{"txt", " ", "--"}]}]}], "E"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"25", " ", "--"}], "time"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"60", " ", "--"}], "save"}], "-", "steps"}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7489698394261713`*^9, 3.748969841467804*^9}, {
  3.748970164243572*^9, 
  3.748970177106476*^9}},ExpressionUUID->"c5137d15-df99-4dd7-a6c1-\
ca7e13c4008a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"upFlowAtTime", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folder", "<>", "\"\<Flows/up_\>\"", "<>", 
        RowBox[{"ToString", "[", "t", "]"}], "<>", "\"\<_m.txt\>\""}], ",", 
       " ", "\"\<Table\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"downFlowAtTime", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folder", "<>", "\"\<Flows/down_\>\"", "<>", 
        RowBox[{"ToString", "[", "t", "]"}], "<>", "\"\<_m.txt\>\""}], ",", 
       " ", "\"\<Table\>\""}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.748968215198414*^9, 
  3.74896826937144*^9}},ExpressionUUID->"1fd12a60-8603-46f9-9754-\
ccfa0a4da2a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"PlotMatrix", "[", 
      RowBox[{
       RowBox[{"openingAtTime", "[", "t", "]"}], ",", " ", 
       RowBox[{
       "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\
\:0430\:0434\:0440 \:2116\>\"", " ", "<>", 
        RowBox[{"ToString", "[", "t", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "587", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7489679795272503`*^9, 3.7489679806537457`*^9}, {
  3.748968055125259*^9, 3.748968100490901*^9}, {3.748968223926509*^9, 
  3.7489683358575497`*^9}, {3.748968379016979*^9, 3.748968427455415*^9}, {
  3.748968462519226*^9, 3.7489684794002657`*^9}, {3.74896851628974*^9, 
  3.7489685341061907`*^9}},ExpressionUUID->"1610b4d9-237d-4925-9c97-\
c0c6c3d1cf0e"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,196,99,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0Y+rZTtANADyu9Ym
  
  "],ExpressionUUID->"c7cfff94-a03a-4eb0-a83d-c2f3100ca4d7"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,196,100,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0frsch0gGgDp9dT/
  
  "],ExpressionUUID->"1d80e8ed-9e43-4058-b18d-914f232a1809"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\
\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\).\"",2,196,101,23143773159856924641,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0atmyXWAaADx0tYN
  
  "],ExpressionUUID->"0d1e708b-3449-4ec8-ada2-109f8440db09"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,196,102,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0Udk5TtANADvPdWr
  
  "],ExpressionUUID->"73f6f589-dcb2-4d9a-835b-54d6e979903f"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"MatrixPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotLabel\
\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\
\:0438\:0435, \:043a\:0430\:0434\:0440 \:21161\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"PlotLegends\\\", \\\"\[Rule]\\\", \\\"Automatic\\\"}], \
\\\",\\\", RowBox[{\\\"ImageSize\\\", \\\"\[Rule]\\\", \\\"Large\\\"}]}], \
\\\"]\\\"}], \\\",\\\", GraphicsBox[List[LineBox[List[List[1, 50], List[81, \
50]]], InsetBox[FormBox[\\\"\\\\\\\"+5. \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\
\", TraditionalForm], List[2, 51]], LineBox[List[List[1, 32], List[81, 32]]], \
InsetBox[FormBox[\\\"\\\\\\\"+5. \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", \
TraditionalForm], List[2, 33]]]]}], \\\"]\\\"}]\\).\"",2,196,103,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0QIr5TtANADtcdWD
  
  "],ExpressionUUID->"f28fa6a6-36fd-4aaf-8162-1cddb02937a6"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,196,
   104,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0TEmCh0gGgDspNVb
  
  "],ExpressionUUID->"175e953b-1c48-4143-9839-64908ac8a9a1"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,196,105,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0Sv2K3SAaADy0dYy
  
  "],ExpressionUUID->"d434bcdc-db84-4313-bdcf-91b8588e50c3"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\
\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\).\"",2,196,106,23143773159856924641,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0V+8FDtANADyBNYK
  
  "],ExpressionUUID->"be2d8f4f-8b45-4153-8018-6cb6436eefdd"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,196,107,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0fbXFDtANADwMNXh
  
  "],ExpressionUUID->"5332cf0a-21bc-4eb0-87f9-2b8523966981"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"MatrixPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotLabel\
\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\
\:0438\:0435, \:043a\:0430\:0434\:0440 \:211611\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"PlotLegends\\\", \\\"\[Rule]\\\", \\\"Automatic\\\"}], \
\\\",\\\", RowBox[{\\\"ImageSize\\\", \\\"\[Rule]\\\", \\\"Large\\\"}]}], \
\\\"]\\\"}], \\\",\\\", GraphicsBox[List[LineBox[List[List[1, 50], List[81, \
50]]], InsetBox[FormBox[\\\"\\\\\\\"+5. \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\
\", TraditionalForm], List[2, 51]], LineBox[List[List[1, 32], List[81, 32]]], \
InsetBox[FormBox[\\\"\\\\\\\"+5. \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", \
TraditionalForm], List[2, 33]]]]}], \\\"]\\\"}]\\).\"",2,196,108,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0VGRSh0gGgDto9WA
  
  "],ExpressionUUID->"c244f022-a52e-4673-8230-cf732e411d90"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,196,
   109,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0dfeKHWAaAD1iNaP
  
  "],ExpressionUUID->"11cbaed3-bfa8-4fe4-b209-536550879446"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Import\\\", \\\"::\\\", \
\\\"nffil\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,196,110,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0R/zlTtANADy+9Yu
  
  "],ExpressionUUID->"daa6e740-5106-4d1b-9867-b0f6855c05ec"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,196,111,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0TNNVDpANADupNWc
  
  "],ExpressionUUID->"9a503535-6617-464c-905d-f9394189da6f"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,196,112,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF01qqHSAaAOzs1WQ=
  
  "],ExpressionUUID->"3140bd8f-5694-4c11-84fb-0bb02d58ddee"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\
\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\).\"",2,196,113,23143773159856924641,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0c/2qnaAaAD00dZz
  
  "],ExpressionUUID->"2aa61a29-057f-45f3-93d1-5ad4d2150848"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"list\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,196,114,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJwVxU0og3EAB+CXtpYdUIuEZKnZhpm9Wykmr7gMM9tsl0VkK1ptTWuJKSaU
GoehmS2ZfESKkxzcpBwWslZzsCSX2cdlF2P8f4enhz9h05qLKIqSETdyq2sn
nWSU9pxuPZNknnxCVoJs+faJhNkkk7amGByTzrlwX/PBMl4KCUKYwz0+xx9l
dXIR+TOv0GG95zSIp2j/G+YN+lM4Nt+UwxvivR+cCI63t5ADin4VPhq7msXi
6pkwNr8bXzDXG5FJyA2Ca34rOXrioKVkqhAobyOvRlO3uKBymGRk4eXAPb5Q
GzZpco/T9jdE7jp7FWvIj5OdI7hElJUNk6tYvEUc6tjK4H2a/YsjC2GOlpx/
cJfiytHxCqx2ppV423O4i4tX7hoNZHv8S4L1qWCNkWzVdStwPGvqxUJ2vQVr
vM9OPG2rdWOKEazhf+pD1RI=
  
  "],ExpressionUUID->"032774e1-e7f0-40b4-a242-afd92bbbaf80"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,196,115,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0VJH1DpANADuqNWv
  
  "],ExpressionUUID->"b99c08b4-d023-4f0c-9642-8bbf9f2ba63c"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"MatrixPlot\\\", \
\\\"::\\\", \\\"mat0\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,196,116,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0Wbu6h0gGgDsI9VP
  
  "],ExpressionUUID->"b4c9a491-4638-4d14-981e-142943a6a618"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"MatrixPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotLabel\
\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\
\:0438\:0435, \:043a\:0430\:0434\:0440 \:211621\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"PlotLegends\\\", \\\"\[Rule]\\\", \\\"Automatic\\\"}], \
\\\",\\\", RowBox[{\\\"ImageSize\\\", \\\"\[Rule]\\\", \\\"Large\\\"}]}], \
\\\"]\\\"}], \\\",\\\", GraphicsBox[List[LineBox[List[List[1, 50], List[81, \
50]]], InsetBox[FormBox[\\\"\\\\\\\"+5. \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\
\", TraditionalForm], List[2, 51]], LineBox[List[List[1, 32], List[81, 32]]], \
InsetBox[FormBox[\\\"\\\\\\\"+5. \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", \
TraditionalForm], List[2, 33]]]]}], \\\"]\\\"}]\\).\"",2,196,117,
   23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuJdJjnl09+9drQt+Brc/f6148UpGiwPgHTarymaGh9e
O77LeesIoq8bVJeDaFedRS0gumme2jwQzc61fA2IfsIvZ6IJpJ/9Ng0G0SHN
K+eC6EzjmfdBtLDvzLcg+nqN9lcQ3a815w+IfjA30UIXSM829fYC0cviN1WC
aC2p4sUgOvVR+BUQzdV3zkgPSCur7VDUB9JXVxQZGwBphn+zBQyBdPvVt/tA
9D+vohgjIK2x0ec4iF7nFzbBGEg7leb/9wfSdqtvawUA6QspNqEgmlPzg1Eg
kJZgEW4E0fOsp74H0QuMWf+C6HN1i9mDgPTvU7V8IFosLlEURPuVvrMF0dOa
l8wC0UxtR9XDgHTBrTd6IDrk7VzpcCCdE+xgCqJvfYhxAdEarAppIDqg71Ip
iM7Kl6kF0U2X1DtANADyUNYm
  
  "],ExpressionUUID->"3d121879-4908-41ef-bea5-b6e541a27d76"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Show\\\", \\\"::\\\", \
\\\"gcomb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,196,118,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJwVxU0og3EAB+DR1rIDapGQLDXvhpl3Wykmr7gMM9tsl0VkK1ptTWuJKSaU
GoehmS2ZfESKkxzcpBwWslZzsCSX2cdlF2P8f4enRzBh05qLWCwWTdzIra6d
dJJR2nO69UySefJR7ATZ8u0TUdkkk7amGByTzrlwX/PBMl4KCUOYyzs+xx9l
dXIR+TOv0GG95zSIp2T+N8wf9KdwbL4phzfEez84ERxvbyEHFP0qfDR2NYvF
1TNhbH43vmCeN0JLyA3Ca0ErOXrikEnJrEKgvI28Gk3d4oLKYaLJ1OXAPb5Q
GzZl5B6n7W+I3HX2KtaQHyc7R3CJKEsPk6vY/EUc6tjK4H0Z5xdHFsJcLTn/
4C7FlaPjFVjtTCvxtudwFxev3DUayPb4lwTrU8EaI9mq61bgeNbUiylOvQVr
vM9OPG2rdeOCmVrD//M71jY=
  
  "],ExpressionUUID->"c4b23dea-bf31-4f1c-9b06-ee5fcc3d3636"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animation", "=", 
  RowBox[{"ListAnimate", "[", "plots", "]"}]}]], "Input",
 CellChangeTimes->{{3.748968678556229*^9, 3.7489687086265507`*^9}, {
  3.748969224052269*^9, 
  3.748969235718738*^9}},ExpressionUUID->"f6eb5ceb-7696-4d53-944b-\
db07a9270ab8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i13$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i13$$ = 1}, 
     "\"max\"" :> {$CellContext`i13$$ = 59}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i13$$], 1, ""}, 1, 59, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i13$8733$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i13$$], {1, 59, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->0.,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:21161\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 2->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211611\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 3->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211621\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 4->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211631\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 5->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211641\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 6->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211651\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 7->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211661\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 8->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211671\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 9->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211681\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 10->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211691\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 11->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116101\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 12->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116111\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 13->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116121\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 14->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116131\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 15->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116141\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 16->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116151\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 17->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116161\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 18->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116171\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 19->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116181\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 20->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116191\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 21->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116201\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 22->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116211\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 23->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116221\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 24->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116231\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 25->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116241\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 26->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116251\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 27->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116261\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 28->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116271\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 29->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116281\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 30->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116291\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 31->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116301\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 32->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116311\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 33->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116321\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 34->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116331\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 35->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116341\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 36->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116351\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 37->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116361\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 38->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116371\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 39->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116381\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 40->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116391\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 41->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116401\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 42->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116411\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 43->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116421\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 44->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116431\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 45->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116441\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 46->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116451\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 47->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116461\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 48->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116471\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 49->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116481\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 50->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116491\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 51->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116501\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 52->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116511\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 53->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116521\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 54->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116531\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 55->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116541\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 56->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116551\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 57->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116561\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 58->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116571\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}], 59->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116581\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "233.678115`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"21", ",", 
                    RowBox[{"-", "116.8390575`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"41", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"61", ",", "116.8390575`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"81", ",", "233.678115`"}], "}"}]}], "}"}], ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "20.5`", ",", "40.5`", ",", "60.5`", ",", 
                    "80.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 50}, {81, 50}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 51}], 
                    LineBox[{{1, 32}, {81, 32}}], 
                    InsetBox["\<\"+5. \:041c\:041f\:0430\"\>", {2, 33}]}]}], 
                 "]"}]}, Dynamic[$CellContext`i13$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i13$$, \
$CellContext`i13$8733$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 59, 1}, 59, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{4560., {186.25, 194.25}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBGK119oh3e9fO66bH8LyAEinCe/T1Pjw2jE+jdMJRN9Q
nlQOomc072gB0YV8tvNAdMT6/WtAtEuspYkmkBZQ8A0G0Y9NDswF0QbxG++D
6KzDW96C6HdfHL+C6IpZm/6AaCPrOgtdIP2VNdkLRKfJnq4E0ZeCehaD6CL1
/CsguiLjqZEekHbYe1lRH0izv+kzNgDSalk7BAyBtIcX134QzaTVHWMEpH88
zjgOomcxlE4wBtIfz/T+9wfSFmo/tQKA9JZV0aEg+koUj3EgSJ+xYSOIVtLe
9B5EX/FW+guiVzQcZg8C0mxXZ/KBaPYDdaIg+usGdjsQnZW1dxaIXnP9kXoY
kD7XyKEPol8UbZcOB9LbJGNNQbSyTakLiDZMtUoD0RZ+r0tB9KdTJrUgWuW4
aQeIBgBDfs/C
  "],ExpressionUUID->"5501fcbc-a961-4365-a5ec-ece38512e5e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<~/Desktop/anim.gif\>\"", ",", "animation"}], "]"}]], "Input",
 CellChangeTimes->{{3.7489692410799913`*^9, 
  3.74896925680652*^9}},ExpressionUUID->"54665f61-46e3-4818-8f2a-\
3b83e6e5e9de"],

Cell[BoxData[
 TemplateBox[{
  "Export","nodir",
   "\"Directory \
\\!\\(\\*RowBox[{\\\"\\\\\\\"C:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Nikita\\\\\
\\\\\\\\\\\\Documents\\\\\\\\\\\\\\\\~\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\\
\\\\\\\"\\\"}]\\) does not exist.\"",2,198,119,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBOJAUYeQ7vevHedti2V5AKQncR7X1Pjw2jGnXtAJRJ/Z
PqscREtGHmwB0Z/uu88Di4eeXgOiD5k4mmgC6cN/Q4NBdJH1ybkgWuf97vsg
Oox531sQfeeW11cQ3dO16w+IvuvYbqELpP1WZXuBaB+165Ug+nnH9MUgWvBO
+RUQLXTwnZEekGbNu6eoD6T3Zs80NgDSZeYHBQyB9PRZwvtB9I7USTFGQDoo
seA4iJ6WXTvBGEh3qU/77w+k1SUYtAOANMPnlFAQfaZU2DgQZB6XbSOI1kjc
8x5ExxTq/AXRTAvOsQcB6XOVy/hAdEBlpyiILl4qYAeiVeSPzQLRy969Vg8D
0rteCeqD6Jsc+6XDgbRSTqopiFZpqHEB0QyvHdNAtEjDp1IQfeybdS2I5uK2
7QDRACqW0Yw=
  "],ExpressionUUID->"18815f72-69c7-49e4-9090-4a369ecb041d"],

Cell[BoxData[
 TemplateBox[{
  "Export","noopen",
   "\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"~/Desktop/anim.gif\\\\\\\"\\\"}]\\).\"",2,198,
   120,23143773159856924641,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBOJAUYeQ7vevHedti2V5AKQncR7X1Pjw2jGnXtAJRJ/Z
PqscREtGHmwB0Z/uu88Di4eeXgOiD5k4mmgC6cN/Q4NBdJH1ybkgWuf97vsg
Oox531sQfeeW11cQ3dO16w+IvuvYbqELpP1WZXuBaB+165Ug+nnH9MUgWvBO
+RUQLXTwnZEekGbNu6eoD6T3Zs80NgDSZeYHBQyB9PRZwvtB9I7USTFGQDoo
seA4iJ6WXTvBGEh3qU/77w+k1SUYtAOANMPnlFAQfaZU2DgQZB6XbSOI1kjc
8x5ExxTq/AXRTAvOsQcB6XOVy/hAdEBlpyiILl4qYAeiVeSPzQLRy969Vg8D
0rteCeqD6Jsc+6XDgbRSTqopiFZpqHEB0QyvHdNAtEjDp1IQfeybdS2Intzh
0AGiATJb0pU=
  "],ExpressionUUID->"c6bd1921-ab19-4d69-bab7-1c7eeb69d42c"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBmKBt9Gl09+9dgwyntkDog1UPEO63792VHNJZHkApB9s
Pa2p8eG1Y5uymBOI5hOaXw6iV+w+2gKiv/7zmQeiU/rPrwHRW5a7mmgCaa/O
qGAQrfzj7FwQvWLxgfsg2uzEobcgeoqr/1cQffnOvj8gOtCt10IXSGvMKPAC
00J3K0H0hLw5i0E0i3/NFRD9L+qLkR7IHSmPFfWB9IPEecYGQPrH66MChkA6
7o74fhCd93NajBGQTggvPQ6ibSqaJxgDab8Js//7A+lVZ1i0A4C0xPOsUBC9
Q1DCOBBIfzF0agTR6isPvgfRidxGf0F0zvnL7EFAWubSaj4QrTihTxREu+8T
sQPRXQGnZoHooxYf1MOAtFCOuD6I/td8WDocSNccyTIF0fKnGlxAtIW1exqI
5j31rRREL3VwqAXRXSaOHSAaAKhl3EU=
  
  "],ExpressionUUID->"fe75069b-aa85-4b39-8242-accb4e3b5ee9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Create", " ", "gif"}]], "Input",
 CellChangeTimes->{{3.748968593828093*^9, 
  3.748968597348531*^9}},ExpressionUUID->"368854d8-4c64-491f-afab-\
7f0d408dd6d2"],

Cell[BoxData[
 RowBox[{"Create", " ", "gif"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVxUsowwEcB/C/IjePA/3jtBwY2Wb/WaK0P5uh1piZQonynqaV5JnFQXme
TJqtxUkrebUQ5jUlsYOr5y5qjdFMyvD7Hj59BC0mXWsMwzAcaXfnC62vAd6b
sTaNWUeFfuotwJfbm2MfaRl7JcwKBXhlT2oJlhgd/Zj5PZ/Ag50aO3733bjw
6rdKJqSN/voa/MxfL+OOoOcBF6adBvGMU/uJzRrPD65fmC3IpUUfvZX4peFu
AI95bCt473j4FusPwlIR3eL1C8S0/MzOSehkkzcpj9aK2COsKLU2SunN3b4L
7PWPz3N0mdv2p6V3nHE5VfS201iLHdMsV01vREosuKj25A03uqVRPDp0G6+j
52ddCfhePpeCDV0pxbg7fLmEn/ZDmQY6msiKsS9yml5HL6q787FOZVHimkN1
G87WfPXhpi3FCDav85P4Hy5s4TU=
  
  "],ExpressionUUID->"630da53a-d9db-4340-81d2-0275e69a118d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GlueMatrix", "[", "opening", "]"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "myRainbow3D"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "Top"}], ",", 
   RowBox[{"BoxStyle", "\[Rule]", "Dotted"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.7489371445756407`*^9, 3.748937162680566*^9}, {
  3.748937202034412*^9, 3.74893720244944*^9}, {3.7489373439997063`*^9, 
  3.7489373477085943`*^9}, {3.748937469695712*^9, 3.748937471087284*^9}, {
  3.748937524866889*^9, 3.748937525870183*^9}, {3.748937559964671*^9, 
  3.74893756110515*^9}, {3.748937616146224*^9, 3.748937658960663*^9}, {
  3.748937801261128*^9, 
  3.748937882722713*^9}},ExpressionUUID->"6a87c680-7cfa-41b8-8231-\
25f73f22afab"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx03XucbmP9//H5ShmnTNtgaGSMMaZpTHM+z32vPXvug71nz559KDl0UOrr
11EoOnxzJYX4ppIKUVRIlBxCSksoFb4SUSQicopKkk397pl9X+/L9VnrNf94
zLN3155932td733Nte61dn/r+9a9fbOGhoafdDc0vKTBfz1VjP+rryTfG8Gb
wJvBW8BbwdvA28E7wDvBu8C7wXvAe8H7wPvBB8AHwYfAh8FHwEfBx8DHwSfA
J8GnwKfBC+BF8CTfHXjDcsiDN8xAHrxhBeTBG2YhD95Qgjx4Qxny4A0VyIM3
VCEP3rAP5MEbVkIevGEV5MEb5iAP3rAa8uAN85AHb1gDefCGhXxPwB14Ct6w
FsYHd+ApeMM6GB/cgafgDethfHAHnoI3bIDxwR14+D6JXd8bbwRvAm8GbwFv
BW8DbwfvAO8E7wLvBu8B7wXvA+8HHwAfBB8CHwYfAR8FHwMfB58AnwSfAp8G
L4AXwZN8d+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw9bXNg6uvbR5cfW3z4Opr
mwdXX9s8uPra5sHV1zYPrr62eXD1tc2Dq69tHlx9bTwBd+ApuPrajg/uwFNw
9bUdH9yBp+Dqazs+uANPwdXXdnxwB66+bjTuc9YbwZvAm8FbwFvB28DbwTvA
O8G7wLvBe8B7wfvA+8EHwAfBh8CHwUfAR8HHwMfBJ8AnwafAp8EL4EXwJN8d
uPra5sHV1zYPrr62eXD1tc2Dq69tHlx9bfPg6mubB1df2zy4+trmwdXXNg+u
vrZ5cPW1zYOrr20eXH1t8+Dqa5sHV18bT8AdeAquvrbjgzvwFFx9bccHd+Ap
uPrajg/uwFNw9bUdH9yBq6+bjPu+tt4I3gTeDN4C3greBt4O3gHeCd4F3g3e
A94L3gfeDz4APgg+BD4MPgI+Cj4GPg4+AT4JPgU+DV4AL4In+e7A1dc2D66+
tnlw9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra5sHV1zYPrr62eXD1tc2Dq69t
Hlx9bfPg6mubB1df2zy4+tp4Au7AU3D1tR0f3IGn4OprOz64A0/B1dd2fHAH
noKrr+344A5cfd1s3Pe19UbwJvBm8BbwVvA28HbwDvBO8C7wbvAe8F7wPvB+
8AHwQfAh8GHwEfBR8DHwcfAJ8EnwKfBp8AJ4ETzJdweuvrZ5cPW1zYOrr20e
XH1t8+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw9bXNg6uvbR5cfW3z4OprmwdX
X9s8uPra5sHV18YTcAeegquv7fjgDjwFV1/b8cEdeAquvrbjgzvwFFx9bccH
d+Dq6xbjvq+tN4I3gTeDt4C3greBt4N3gHeCd4F3g/eA94L3gfeDD4APgg+B
D4OPgI+Cj4GPg0+AT4JPgU+DF8CL4Em+O3D1tc2Dq69tHlx9bfPg6mubB1df
2zy4+trmwdXXNg+uvrZ5cPW1zYOrr20eXH1t8+Dqa5sHV1/bPLj62ubB1dc2
D66+Np6AO/AUXH1txwd34Cm4+tqOD+7AU3D1tR0f3IGn4OprOz64A1dftxr3
fW29EbwJvBm8BbwVvA28HbwDvBO8C7wbvAe8F7wPvB98AHwQfAh8GHwEfBR8
DHwcfAJ8EnwKfBq8AF4ET/LdgauvbR5cfW3z4OprmwdXX9s8uPra5sHV1zYP
rr62eXD1tc2Dq69tHlx9bfPg6mubB1df2zy4+trmwdXXNg+uvrZ5cPW18QTc
gafg6ms7PrgDT8HV13Z8cAeegquv7fjgDjwFV1/b8cEduPq6zbjva+uN4E3g
zeAt4K3gbeDt4B3gneBd4N3gPeC94H3g/eAD4IPgQ+DD4CPgo+Bj4OPgE+CT
4FPg0+AF8CJ4ku8OXH1t8+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw9bXNg6uv
bR5cfW3z4OprmwdXX9s8uPra5sHV1zYPrr62eXD1tc2Dq6+NJ+AOPAVXX9vx
wR14Cq6+tuODO/AUXH1txwd34Cm4+tqOD+7A1dftxn1fW28EbwJvBm8BbwVv
A28H7wDvBO8C7wbvAe8F7wPvBx8AHwQfAh8GHwEfBR8DHwefAJ8EnwKfBi+A
F8GTfHfg6mubB1df2zy4+trmwdXXNg+uvrZ5cPW1zYOrr20eXH1t8+Dqa5sH
V1/bPLj62ubB1dc2D66+tnlw9bXNg6uvbR5cfW08AXfgKbj62o4P7sBTcPW1
HR/cgafg6ms7PrgDT8HV13Z8cAeuvu4w7vvaeiN4E3gzeAt4K3gbeDt4B3gn
eBd4N3gPeC94H3g/+AD4IPgQ+DD4CPgo+Bj4OPgE+CT4FPg0eAG8CJ7kuwNX
X9s8uPra5sHV1zYPrr62eXD1tc2Dq69tHlx9bfPg6mubB1df2zy4+trmwdXX
Ng+uvrZ5cPW1zYOrr20eXH1t8+Dqa+MJuANPwdXXdnxwB56Cq6/t+OAOPAVX
X9vxwR14Cq6+tuODO3D1dadx39fWG8GbwJvBW8BbwdvA28E7wDvBu8C7wXvA
e8H7wPvBB8AHwYfAh8FHwEfBx8DHwSfAJ8GnwKfBC+BF8CTfHbj62ubB1dc2
D66+tnlw9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra5sHV1zYPrr62eXD1tc2D
q69tHlx9bfPg6mubB1dfG0/AHXgKrr6244M78BRcfW3HB3fgKbj62o4P7sBT
cPW1HR/cgauvu4z7vrbeCN4E3gzeAt4K3gbeDt4B3gneBd4N3gPeC94H3g8+
AD4IPgQ+DD4CPgo+Bj4OPgE+CT4FPg1eAC+CJ/nuwNXXNg+uvrZ5cPW1zYOr
r20eXH1t8+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw9bXNg6uvbR5cfW3z4Opr
mwdXX9s8uPraeALuwFNw9bUdH9yBp+Dqazs+uANPwdXXdnxwB56Cq6/t+OAO
XH3dbdz3tfVG8CbwZvAW8FbwNvB28A7wTvAu8G7wHvBe8D7wfvAB8EHwIfBh
8BHwUfAx8HHwCfBJ8CnwafACeBE8yXcHrr62eXD1tc2Dq69tHlx9bfPg6mub
B1df2zy4+trmwdXXNg+uvrZ5cPW1zYOrr20eXH1t8+Dqa5sHV1/bPLj62ubB
1dfGE3AHnoKrr+344A48BVdf2/HBHXgKrr6244M78BRcfW3HB3fg6use476v
rTeCN4E3g7eAt4K3gbeDd4B3gneBd4P3gPeC94H3gw+AD4IPgQ+Dj4CPgo+B
j4NPgE+CT4FPgxfAi+BJvjtw9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra5sHV
1zYPrr62eXD1tc2Dq69tHlx9bfPg6mubB1df2zy4+trmwdXXNg+uvjaegDvw
FFx9bccHd+ApuPrajg/uwFNw9bUdH9yBp+Dqazs+uANXX/ca931tvRG8CbwZ
vAW8FbwNvB28A7wTvAu8G7wHvBe8D7wffAB8EHwIfBh8BHwUfAx8HHwCfBJ8
CnwavABeBE/y3YGrr20eXH1t8+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw9bXN
g6uvbR5cfW3z4OprmwdXX9s8uPra5sHV1zYPrr62eXD1tfEE3IGn4OprOz64
A0/B1dd2fHAHnoKrr+344A48BVdf2/HBHbj6us+472vrjeBN4M3gLeCt4G3g
7eAd4J3gXeDd4D3gveB94P3gA+CD4EPgw+Aj4KPgY+Dj4BPgk+BT4NPgBfAi
eJLvDlx9bfPg6mubB1df2zy4+trmwdXXNg+uvrZ5cPW1zYOrr20eXH1t8+Dq
a5sHV1/bPLj62ubB1dc2D66+tnlw9bXNg6uvjSfgDjwFV1/b8cEdeAquvrbj
gzvwFFx9bccHd+ApuPrajg/uwNXX/cZ9X1tvBG8CbwZvAW8FbwNvB+8A7wTv
Au8G7wHvBe8D7wcfAB8EHwIfBh8BHwUfAx8HnwCfBJ8CnwYvgBfBk3x34Opr
mwdXX9s8uPra5sHV1zYPrr62eXD1tc2Dq69tHlx9bfPg6mubB1df2zy4+trm
wdXXNg+uvrZ5cPW1zYOrr20eXH1tPAF34Cm4+tqOD+7AU3D1tR0f3IGn4Opr
Oz64A0/B1dd2fHAHrr4eMO772nojeBN4M3gLeCt4G3g7eAd4J3gXeDd4D3gv
eB94P/gA+CD4EPgw+Aj4KPgY+Dj4BPgk+BT4NHgBvAie5LsDV1/bPLj62ubB
1dc2D66+tnlw9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra5sHV1zYPrr62eXD1
tc2Dq69tHlx9bfPg6mvjCbgDT8HV13Z8cAeegquv7fjgDjwFV1/b8cEdeAqu
vrbjgztw9fWgcd/X1hvBm8CbwVvAW8HbwNvBO8A7wbvAu8F7wHvB+8D7wQfA
B8GHwIfBR8BHwcfAx8EnwCfBp8CnwQvgRfAk3x24+trmwdXXNg+uvrZ5cPW1
zYOrr20eXH1t8+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw9bXNg6uvbR5cfW3z
4OprmwdXXxtPwB14Cq6+tuODO/AUXH1txwd34Cm4+tqOD+7AU3D1tR0f3IGr
r4eM+7623gjeBN4M3gLeCt4G3g7eAd4J3gXeDd4D3gveB94PPgA+CD4EPgw+
Aj4KPgY+Dj4BPgk+BT4NXgAvgif57sDV1zYPrr62eXD1tc2Dq69tHlx9bfPg
6mubB1df2zy4+trmwdXXNg+uvrZ5cPW1zYOrr20eXH1t8+Dqa5sHV1/bPLj6
2ngC7sBTcPW1HR/cgafg6ms7PrgDT8HV13Z8cAeegquv7fjgDlx9PWzc97X1
RvAm8GbwFvBW8DbwdvAO8E7wLvBu8B7wXvA+8H7wAfBB8CHwYfAR8FHwMfBx
8AnwSfAp8GnwAngRPMl3B66+tnlw9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra
5sHV1zYPrr62eXD1tc2Dq69tHlx9bfPg6mubB1df2zy4+trmwdXXxhNwB56C
q6/t+OAOPAVXX9vxwR14Cq6+tuODO/AUXH1txwd34OrrEeO+r603gjeBN4O3
gLeCt4G3g3eAd4J3gXeD94D3gveB94MPgA+CD4EPg4+Aj4KPgY+DT4BPgk+B
T4MXwIvgSb47cPW1zYOrr20eXH1t8+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw
9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra5sHV1zYPrr42noA78BRcfW3HB3fg
Kbj62o4P7sBTcPW1HR/cgafg6ms7PrgDV1+PGvd9bb0RvAm8GbwFvBW8Dbwd
vAO8E7wLvBu8B7wXvA+8H3wAfBB8CHwYfAR8FHwMfBx8AnwSfAp8GrwAXgRP
8t2Bq69tHlx9bfPg6mubB1df2zy4+trmwdXXNg+uvrZ5cPW1zYOrr20eXH1t
8+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw9bXxBNyBp+Dqazs+uANPwdXXdnxw
B56Cq6/t+OAOPAVXX9vxwR24+nrMuO9r643gTeDN4C3greBt4O3gHeCd4F3g
3eA94L3gfeD94APgg+BD4MPgI+Cj4GPg4+AT4JPgU+DT4AXwIniS7w5cfW3z
4OprmwdXX9s8uPra5sHV1zYPrr62eXD1tc2Dq69tHlx9bfPg6mubB1df2zy4
+trmwdXXNg+uvrZ5cPW1zYOrr40n4A48BVdf2/HBHXgKrr6244M78BRcfW3H
B3fgKbj62o4P7sDV1+PGfV9bbwRvAm8GbwFvBW8DbwfvAO8E7wLvBu8B7wXv
A+8HHwAfBB8CHwYfAR8FHwMfB58AnwSfAp8GL4AXwZN8d+Dqa5sHV1/bPLj6
2ubB1dc2D66+tnlw9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra5sHV1zYPrr62
eXD1tc2Dq69tHlx9bTwBd+ApuPrajg/uwFNw9bUdH9yBp+Dqazs+uANPwdXX
dnxwB66+njDu+9p6I3gTeDN4C3greBt4O3gHeCd4F3g3eA94L3gfeD/4APgg
+BD4MPgI+Cj4GPg4+AT4JPgU+DR4AbwInuS7A1df2zy4+trmwdXXNg+uvrZ5
cPW1zYOrr20eXH1t8+Dqa5sHV1/bPLj62ubB1dc2D66+tnlw9bXNg6uvbR5c
fW3z4Opr4wm4A0/B1dd2fHAHnoKrr+344A48BVdf2/HBHXgKrr6244M7cPX1
pHHf19YbwZvAm8FbwFvB28DbwTvAO8G7wLvBe8B7wfvA+8EHwAfBh8CHwUfA
R8HHwMfBJ8AnwafAp8EL4EXwJN8duPra5sHV1zYPrr62eXD1tc2Dq69tHlx9
bfPg6mubB1df2zy4+trmwdXXNg+uvrZ5cPW1zYOrr20eXH1t8+Dqa5sHV18b
T8AdeAquvrbjgzvwFFx9bccHd+ApuPrajg/uwFNw9bUdH9yBq6+njPu+tt4I
3gTeDN4C3greBt4O3gHeCd4F3g3eA94L3gfeDz4APgg+BD4MPgI+Cj4GPg4+
AT4JPgU+DV4AL4In+e7A1dc2D66+tnlw9bXNg6uvbR5cfW3z4OprmwdXX9s8
uPra5sHV1zYPrr62eXD1tc2Dq69tHlx9bfPg6mubB1df2zy4+tp4Au7AU3D1
tR0f3IGn4OprOz64A0/B1dd2fHAHnoKrr+344A5cfT1t3Pe19UbwJvBm8Bbw
VvA28HbwDvBO8C7wbvAe8F7wPvB+8AHwQfAh8GHwEfBR8DHwcfAJ8EnwKfBp
8AJ4ETzJdweuvrZ5cPW1zYOrr20eXH1t8+Dqa5sHV1/bPLj62ubB1dc2D66+
tnlw9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra5sHV18YTcAeegquv7fjgDjwF
V1/b8cEdeAquvrbjgzvwFFx9bccHd+Dq64Jx39fWG8GbwJvBW8BbwdvA28E7
wDvBu8C7wXvAe8H7wPvBB8AHwYfAh8FHwEfBx8DHwSfAJ8GnwKfBC+BF8CTf
Hbj62ubB1dc2D66+tnlw9bXNg6uvbR5cfW3z4OprmwdXX9s8uPra5sHV1zYP
rr62eXD1tc2Dq69tHlx9bfPg6mubB1dfG0/AHXgKrr6244M78BRcfW3HB3fg
Kbj62o4P7sBTcPW1HR/cgauvi8Z9X1tvBG8CbwZvAW8FbwNvB+8A7wTvAu+W
/+2L397tjAePq79ePfJ7ruq77cTfXWWeI15MNqzb62snXPxz87zSYrLsmz+6
dqfOX5vnohWTD124884P9v7WPH+lmHz9yO77znr4XnOf92Lyxj8c94lju/5o
7idbTO7u2+qYn13xoLlvXTHpecX5/17e8bC5P04x+fOxty7/0qGPmM/hF5Pn
D3vH1TNffcx83q+Y3Ljl9uVLL3nCfK6gmFw1/Mj3Z7/zpLl+sZj84t2f3ad8
i71Oopgc71acv+7Sv5r9mGLSePLIZ95w4t/M732KSXXh+ZbD9/27+fdl7X15
0+UD9+/0tDmOi8lRR/9w34tu8p7If7Tui7t/5gP/2OQu+HVPvaJ/z2XP1PPL
5SeecPPPLj+77i74c088lo7v8c96fiaM3/KLEz54at1d8Kfv+8uFv3/G51fI
z77m7fNfKj1bzwc/7J5X73rh0XVXXxeThfW//M1z5/h88KN+te9n33Ghz5fy
3ZXyx1Ffmz/XBY9+TvW1+Xu54NHroL42r5sLHr3O6mvzvrjg0fuovjbvuwse
Hyer5NFx5YLHx+GcPDpuXfD4OF8tj84LFzw+j+bl0Xnngsfn6Rp5dF674PE8
sCCP5o0keDTPuODRvJQGj+extfJo3kuCR/OkCx7Nq2nwhuhrXb4n4A48BVdf
2/HBHXgKrr6244M7cPV1Ytz3tfVG8CbwZvmOz49cf9TNd9X/vBb5pxdP07du
rHur/K+HPHD85c/+V/37Nnnp4Dfc8MrTNq9/3y7vXTxhPvWy+vcd8nPv+OyV
P1vmf+5OefOHPn/EzQdvWf++S/7O7ff65+QXtqp/3y0/uu+pez5y5db173vk
V2x98wd2eWSb+ve98if/fdR399/55fXv++S7vuSSO68ublf/vl9+4ENH7DfX
Y59zliS7vDd9+Ljv2eepJMnJF3Qe/4PXvqL+/ZD8rNuufa54nvdh+bbnHvTs
8S3L6t+PyN91zPkbG471PipfccPY0ds/6n1MfuuVh7Z1rNq+/v24/Dd/XN9w
0nneJ+SHn/PGT37hP94n5Sd8edk+T6+z1zckyQvHPX33nWfbfZRkU+88bn9f
U3t/z7i+7eKBHerfF+Wrj912zXeP2EHf+/8OPzlWqlxSdxf8wzvfcNiqx3x+
uXziZQd/98jddqzng1/02mW/O2y+7urrJLnqJ1cfeP2RPh/8Szdc/9ADp/v8
CvnHN7/h5P4rfD74FnvedNkLv/T5WfkZr/z19l+8y+eD3/LNKy94/G6fL+W7
K+WPo742f64LHv2c6mvz93LBo9dBfW1eNxc8ep3V1+Z9ccGj91F9bd53Fzw+
TlbJo+PKBY+Pwzl5dNy64PFxvloenRcueHwezcuj884Fj8/TNfLovHbB43lg
QR7NG0nwaJ5xwaN5KQ0ez2Nr5dG8lwSP5kkXPJpX0+DxPLxOHs3bSfBonnfB
o15Ig8c9sl4e9U4SPOopFzzqtTR4Q/S1Id8TcAfu+9pBX2e8EbwJvFl+0Xv/
8ZWnCxvjvq75PXd+/PDy7f51a5Wv67nisl1u833aJt/uK4PnXHbktnVvl7+6
/brue7t8r3XI//Gb9PVbvt4ft53yK/7y0Ldevp8//rvkDzbv+vM/Ff151C2/
+18fe+cPm/352yPf7cwf/G2/e733yt/wn4f73nyWnx/64nE2+HmpX37S3Yc0
vO+/dqr7gPxTL9l9v/Qb3gfl+26543GDRfPclJqPfLuw7wG/Mvdnr/kXt/zx
7f93wM51H5G/6j2t39vxD95H5W98zw3/vuSAXeo+Jt+5tmza4Tbv4/KN+77+
9C/MvLLuE/LdP3jurR+6yPuk/D2LE/cyc31hzReXO3ceZq5jqPnm/zng55+5
2eyX1Pyb79juss322LXuRflzt770H3sf7j2RT/fcfvpDP9pV3/v/Dp1z2eiz
m72qnl8uH37TD/bZZqbuLviX19YO0A/7/Iz80VMv2eb9F/p88KtvPfC8z/3G
51fI33b0b6c/9KzPB1/ffsKbyq/YrZ6flY+tfNOZb2uruwt+3Hn7/mKgw+dL
+e5K+eP4vrZ/rgse/Zy+r+3fywWPXgff1/Z1c8Gj19n3tX1fXPDoffR9bd93
Fzw+TlbJo+PKBY+Pwzl5dNy64PFxvloenRcueHwezcuj884Fj8/TNfLovHbB
43lgQR7NG0nwaJ5xwaN5KQ0ez2Nr5dG8lwSP5km3Nh7Hz6tp8HgeXieP5u0k
eDTPu+BRL6TB4x5ZL496Jwke9ZQLHvVaGrwh+tqQ7wm4A9f6erlxv7623gje
JP/T33a77X1v9r+napbf+Kbav7ze95L69y3yv7664aeDXf7fUa3yi8e+8q87
DvT/fmuTj3cddO4TP/b92y5fPL2WHebf3w75+S0Pv2/mfv9zdMpfue19e3+2
zR9vXfL2bx8wvde078du+Wf2qP1LOfE/d4/8/Sd/c7s39vnzqFc+uuYDN97c
5M/HPvm1hz95/+cf8N4vv3yHjb/8y7f8+T4gb770Tdv86WD7nNHlydl7P7zu
wB38/DMk32PvU6/Y44feh+WXD9z/pef28/PhiHzp135Peh+V31T66F7v+B8/
n4/Jn9940tZbbGbvX7M8Oe+Xb33r35fbz8kvTz73t1Pe+dWP2c/jLU/edtln
Lui80l73vzw5Yvn//PIrf7HXFy5Prvt+6bRt23evf1+QL05vH1nnvShv+Nbq
r9xztPdEvld/44WtF9TdBT+pqTYj/mr38P+v//fHL6+d2E/7fPB7atPYx5vb
69/PyH92yK6vW91Xdxf85XtfcuaTFZ9fIX/z4huzv88HL795+enfO8TnZ+Wv
azmg8bBDfT74N3Y+8dxLD/f5Ur67Uv44Wl+bP9cFj35Ora/N38sFj14Hra/N
6+aCR6+z1tfmfXHBo/dR62vzvrvg8XGySh4dVy54fBzOyaPj1gWPj/PV8ui8
cMHj82heHp13Lnh8nq6RR+e1Cx7PAwvyaN5IgkfzjAsezUtp8HgeWyuP5r0k
eDRPuuDRvJoGj+fhdfJo3k6CR/O8Cx71Qho87pH18qh3kuBRT7ngUa+lweMe
3CBvePFXAu7Atb6Gvs54I3iTfOvbTir9+rf/jvu65s9ttfg/bFH//7XI33LK
8KO77+9/b9wqv+fMy+/uvd2/nm3ypV9jbOH7t12+tI540K9nO+T/9c53/nb/
o/373ik/euPEobf82fdvl/zAxQ28Hn8cdstrs94p1671fdoj//ZRe/z9xjf7
Pu2VX77Lsn++YX9/vvTJ7/nBGedNzPrzrl++9P7u5vtxQL707/YnvA/K3f8c
8egv9jXPGV18nQ869qlDLjXPM6v5bQ33brblVn6+GpEn3/jDNS8/0PuofHan
26+46Vvex+S/36Lt8hP+7n1cvs0WM5e48fa6T8g7ln7h5X1SftlutX/5/sD7
lPwT6S/OLj3jfVo+dfyZrz6id4+6F+T3fvDsq+bf5r0oX33Nbx/66Re8J/KN
f7791P/7Sd1d8P2fOue7bU/4/HL57y8/9qO3bh+OJ//fr51w8f2PDPt/F87I
n/3JwRe8ZYPPB//CMy9785ff7fMr5PddUyuqY3w++MMbv/XX2/7X52fli7u2
7z/D54P/7pUfPWjgVJ8v5bsr5Y+j9bX5c13w6OfU+tr8vVzw6HXQ+tq8bi54
9DprfW3eFxc8eh+1vjbvuwseHyer5NFx5YLHx+GcPDpuXfD4OF8tj84LFzw+
j+bl0Xnngsfn6Rp5dF674PE8sCCP5o0keDTPuODRvJQGj+extfJo3kuCR/Ok
Cx7Nq2nweB5eJ4/m7SR4NM+74FEvpMHjHlkvj3onCR71lAse9VoaPO7BDfKG
F38l4A5c6+sZ4359bb1R/uwFp2754w3+/98kP+foY07cYdivo5vl/d9vevBr
s37/t0XedUdh15N/6///rfLqj/9n17Hj/Hq5Tf6BU1o2f/0tvpfb5av2+9TY
b27wvRzm0Yfar9n+0o/59W9nyJ+y7tYnXur7t0v+o+GLX3fM2/3P0S2/+/qf
v/Dyb/r+7ZGvOPzM8v6/8Mdtr7xru60vP/e3vmf75I+/9uq9tnuX//v0y0/6
++jZTfd7H5AftuMzl123xp+ng/LKYf/a7pErvA/Jl9Ydu/jXZVi+94rWx/74
Qe8j8s0Wf8F0i/dR+XlHXPzv/9vdz29j8j8++LHjzjnU+7j88edeevVBV3uf
kL93yF2RbGbvXzOTzI2esPwtJfs5+Znkmq/u8trfH2s/jzeTbHjgm2dcn9rr
/meSj5101bu2/Je9vnAmWToc9t6z/n0if8P4ZTd+8E11d8GT7Q+67tcn+vxy
+bW1afv7l/p88K07uj520m/31Pf+v6tu3GL6jH/4fPC+2tu+9Q7++FshX/yt
3zd28/+ODH7T0bUzYNrnZ+W19n1dX7fPBz/t6i9+drv9fb6U766UP47W1+bP
dcGjn1Pra/P3csGj10Hra/O6ueDR66z1tXlfXPDofdT62rzvLnh8nKySR8eV
Cx4fh3Py6Lh1wePjfLU8Oi9c8Pg8mpdH550LHp+na+TRee2Cx/PAgjyaN5Lg
0TzjgkfzUho8nsfWyqN5LwkezZMueDSvpsHjeXidPJq3k+DRPO9elH9xL6TB
4x5ZL496Jwke9ZQLHvVaGjzuwQ3yqDeT4A0v/nLgWl9b9+tr643yxV+fzF79
XNzXNf/5jfvd9evP+Ou+muXDl7/7otcu8+voFvl3T/vopTfv7feRW+WLl58c
fY/v+zb5Zl/drdz4Wt/L7fLXHLfjb28Z9b0c1jdL1yds7nu5U/6tdx5z/sav
+eOhS75p/vH92y0/+GXdD/zhv33/9shff/oXjnnvGn/c9sr/tFftDf6D9z75
0vt7sO/Zfvku6QFty+/3PiBfdfOrDnnp6+t/T62vZ5KBk5+/Nr3O+5B85i1/
urX9NX4eGJZ/YfVVP7n6JO8j8rfefc5NL3vE+6j8/ReeePchiXluSs0HF79O
Mfdnr/nSZaH3m/vA1vxDj3T2N/b4eXVS/oc1//ul9x7mfUq+9Ppf7n1avmZx
4v6794L8iMVf2PWa6/5rvmxxgfT2cH2h99rs/5q3nxauY/D+ibX7nOl+GvZL
vC+tE58Ov5fxvnZx4bpsr3p+Rv6q8/5c7S3upe/9f9+3+AMt9/kV8v+59dL9
/vEhnw/+m9fXZsSKz8/Kf/Kp2oLhEp8Pvrj9u9nWPl/Kd1fKH0fra/PnuuDR
z6n1tfl7ueDR66D1tXndXPDoddb62rwvLnj0Pmp9bd53Fzw+TlbJo+PKBY+P
wzl5dNy64PFxvloenRcueHwezcuj884Fj8/TNfLovHbB43lgQR7NG0nwaJ5x
waN5KQ0ez2Nr5dG8lwSP5kkXPJpX0+DxPLxOHs3bSfBonnfBo15Ig8c9sl4e
9U4SPOopFzzqtTR43IMb5FFvJsEbXvzlwLW+XmG83tcZb5Qv/Z7nhP+Y9fWK
pPTUj099/C6fa5Z/8pZ3Pb5sB59rkV84nvRVXuvX0a3yD2x2euMr7/X//mmT
/2B+j71PHfX//3b5/33t7KOPWeV/fxJ+7/iPq3736Rf29OOG9c0ru3/6rzNu
9evlLvkJ23z7qD3W+17ulp928IM9j+/nf44e+RdXnPjuhzeavq75+xYvqP2c
P5775C/7+KkrTmz1P3e//Dsfv2hZz1neB+Rnus6ffGonf94Nyg964avXffQE
70Pyf/7sI3f84mnT14s//9I6yz4XfEUyu/gBm6vs80dXbLq+otnPP2Pyt3xw
zat2fKf3cfmHFy9wudr7hHzxMqU3NNr7wK7YNA+stfebW5GsenTzoVd80d7X
ZkXy9p3/+Iad7rSfn1+RLK4Sv7W974Wi/KU3nNx/5Grvifxnr574/C+P9n0R
fO7crcp7Xu7zy2O/w+eDv39xI60p/F7G+x1HLU7c4d9/3u//cPN3KgeF48z/
d/Fy5i+81OeDty4ugC/2+Vn5R/928cK7Tjd97V+3kVfXvy/luyvlj6P1tflz
XfDo59T62vy9XPDoddD62rxuLnj0Omt9bd4XFzx6H7W+Nu+7Cx4fJ6vk0XHl
gsfH4Zw8Om5d8Pg4Xy2PzgsXPD6P5uXReeeCx+fpGnl0Xrvg8TywII/mjSR4
NM+44NG8lAaP57G18mjeS4JH86QLHs2rafB4Hl4nj+btJHg0z7vgUS+kweMe
WS+PeicJHvWUCx71Who87sEN8qg3k+ANL/5y4FpfQ1/X/I7LTvx/537k5nov
N8qX9lke8b3eJF+6/mHcXz/WLP/K9W0XH3aj6euaX3/kW39z4v2mr2t+31X/
PPTnn/PXg7XJl64nedL0dc0v26/2jm3l19FhP/A72+7wwPNPmL6u+dL1qOf4
f7+F+fLO9PVb7riT799u+aO/+O8Pveom09c1f8/iL7YO873cK9/iqR2rC9vU
fz6tr1ckMyv+s/lOZ3jvl7/uuHu2GW3z59eAfPHyxhu/Yvq65ovTzBWv8Ofv
kHzx14TXHO19WP6aZ770+1MeNn1d84MWPzC5j583RuX/uLs2cZxr+nrx9bzr
zR9c82/T1zW/f+tTvnWM+ndC/sBIbYb7munrxdfh/95xx8OPmr6u+frFjdV+
P69Oyxe3775yuPeCfOlzOpeYvq75Rz7x2rlzHzV9XfND2t991If3DJ8H8P7E
ttf0nbYyXHfo/SVbfnq3t30mXN/g/VM/33Dt+ceavl70/X/9wweeNn1d84ue
O/A9N3zM9HXNv1drzSMPfLW+j16frUxf13yfxYn1IZ8PvnRd8dXm9+HWXSl/
HK2vzZ/rgkc/p9bX5u/lgkevg9bX5nVzwaPXWetr87644NH7qPW1ed9d8Pg4
WSWPjisXPD4O5+TRceuCx8f5anl0Xrjg8Xk0L4/OOxc8Pk/XyKPz2gWP54EF
eTRvJMGjecYFj+alNHg8j62VR/NeEjyaJ13waF5Ng8fz8Dp5NG8nwaN53gWP
eiENHvfIennUO0nwqKdc8KjX0uBxD26QR72ZBI961gVviL78+nrWuO/h2eSQ
mVOu//xhv4/7uubF93WvO+hC//noJvln37XihrH/mL6u+eFv+/BPlunzwi3y
pZ9/H59rlV/itrznBxtNX9f8gO/9+PGzDvS/926Xf/jB7V521kdMX9d8x+MG
f3z62/w6OuwHHrlyi8f+0+r//Rbmxeq/9rl8zb6mr2v+qoWRP221ne/lHvlX
frzlJxuvNH1d86XrMTb4n69Pfsjnnvho8U/e++UHTu/1o/e92/R1zW/d628d
jzxq19ezycjUj9Z98SDT1zVf+vf/r0xf17xz/Uu//vkJf76PyB8+qeuJbc8y
fV3zpWXZ83Z9PZv882Vv/vLc6+xzSWeTJ39+3cxF37LPP5tNTj+t9vUvu76e
Tc7+zdCTYyU/H07Jj1ra4DR9XfOlddmtpq9r/vkD/73iuW3t/W5mkz1WLs7c
4XP13pfWIx82fe1fh2tMX9f8un90HXjyT0xf1/x/F+N9vr9m5EvX0/7crq9n
kzfWfswnvu3zK+S9n/3as/3vsOvr2WSL2su8Q084/vx/X/ver//XD/e06+vZ
5Jbjb7v3vq1fU/++lO+ulD+O1tfmz3XBo59T62vz93LBo9dB62vzurng0eus
9bV5X1zw6H3U+tq87y54fJyskkfHlQseH4dz8ui4dcHj43y1PDovXPD4PJqX
R+edCx6fp2vk0XntgsfzwII8mjeS4NE844JH81IaPJ7H1sqjeS8JHs2TLng0
r6bB43l4nTyat5Pg0Tzvgke9kAaPe2S9POqdJHjUUy541Gtp8LgHN8ij3kyC
Rz3rgjdEX359DX1d86t2Xvwg/R/M+no22ev4H2yXPGr6uuZ/mr16q1cX/XVl
zfLWp/510LELpq9r/thFH79o2btNX9d8t08+tvbKV/n9hTb52DXP3PR5Z/q6
5v979Ffff//X7Pq6djw/v674vk+bvq75qm/v/v6TS6ava37g/tue8JF32/X1
bDJ3QseHd97T9HXNj9jmxjc9eYtdX9fnsXfVfz6tr2eTD75wzO8vfsF7v3zp
5/mkXV/PblqPbO7Pu0F5x1XPH/f0R+z6ejY59fYtD2l/3K6va/Ptf3Z/4ZnX
mb6u+V/2nyn8+Sq7vp7d9HnbFj+fjMnv27s2cb/f9HXNl9ZrP7Xr69nkzq8f
Or3VTn7em5R/s2dF62NvNX29+H49+Imzbr7Arq9nN123/IRdX88mb/jFwPXf
6zV9XfNN+5imr2v+21v+uf6Bb9r19WwyujjBXWvX17PJ4jbg3Tv7fgm+aV1j
19ezm67n+ZLPB1+8TOlP+v32Cvkj1do7s2v4PY73XRY3eu+3+9ezyfO1l2H1
T8Jx6f+7305X/KrhXv8+lvLdlfLH0fra/LkuePRzan1t/l4uePQ6aH1tXjcX
PHqdtb4274sLHr2PWl+b990Fj4+TVfLouHLB4+NwTh4dty54fJyvlkfnhQse
n0fz8ui8c8Hj83SNPDqvXfB4HliQR/NGEjyaZ1zwaF5Kg8fz2Fp5NO8lwaN5
0gWP5tU0eDwPr5NH83YSPJrnXfCoF9LgcY+sl0e9kwSPesoFj3otDR734AZ5
1JtJ8KhnXfCG6Muvr0vG/fq6BOvrEqyvS7C+LsH6ugTr6xKsr0uwvi7B+roE
6+sSrK9LsL4uwfq6BOvrEqyvS7C+LsH6ugTr6xKsr0uwvi7B+roE6+sSrK9L
sL4uwfq6BOvrEqyvS7C+LsH6ugTr6xKsr0uwvi7B+roE6+sSrK9LsL4uwfq6
BOvrEqyvS7C+LsH6ugTr6xKsr0uwvi7B+roE6+sSrK9LsL4uwfq6BOvrEqyv
S7C+tsfJKnn++toeh3Py/PW1Pc5Xy/PX1/Y8mpfnr6/tebpGnr++tvPAgjx/
fV2C9XUJ1td2Hlsrz19fl2B9XYL1tZ2H18nz19clWF+XYH1te2S9PH99XYL1
dQnW17YHN8jz19clWF/bXvbra+jrmufvX5dg/7oE+9cl2L8uwf51CfavS7B/
XYL96xLsX5dg/7oE+9cl2L8uwf51CfavS7B/XYL96xLsX5dg/7oE+9cl2L8u
wf51CfavS7B/XYL96xLsX5dg/7oE+9cl2L8uwf51CfavS7B/XYL96xLsX5dg
/7oE+9cl2L8uwf51CfavS7B/XYL96xLsX5dg/7oE+9cl2L8uwf51CfavS7B/
XYL96xLsX5dg/7oE+9f2OFklz9+/tsfhnDx//9oe56vl+fvX9jyal+fvX9vz
dI08f//azgML8vz96xLsX5dg/9rOY2vl+fvXJdi/LsH+tZ2H18nz969LsH9d
gv1r2yPr5fn71yXYvy7B/rXtwQ3y/P3rEuxfQ1/r39f6SvK9UZ5/fXgZrg8v
w/XhZbg+vAzXh5fh+vAyXB9ehuvDy3B9eBmuDy/D9eFluD68DNeHl+H68DJc
H16G68PLcH14Ga4PL8P14WW4PrwM14eX4frwMlwfXobrw8twfXgZrg8vw/Xh
Zbg+vAzXh5fh+vAyXB9ehuvDy3B9eBmuDy/D9eFluD68DNeHl+H68DJcH16G
68PLcH14Ga4PL8P14WW4PrwM14eX4frwMlwfXobrw8twfXgZrg+3x8kqef71
4fY4nJPnXx9uj/PV8vzrw+15NC/Pvz7cnqdr5PnXh9t5YEGef314Ga4PL8P1
4XYeWyvPvz68DNeHl+H6cDsPr5PnXx9ehuvDy3B9uO2R9fL868PLcH14Ga4P
tz24QZ5/fbjpWQeu9TX0dcYb5fmfvy7D56/L8PnrMnz+ugyfvy7D56/L8Pnr
Mnz+ugyfvy7D56/L8PnrMnz+ugyfvy7D56/L8PnrMnz+ugyfvy4n+Z+/LsPn
r8vw+esyfP66DJ+/LsPnr8vw+esyfP66DJ+/LsPnr8vw+esyfP66DJ+/LsPn
r8vw+esyfP66DJ+/LsPnr8vw+esyfP66DJ+/LsPnr8vw+esyfP66DJ+/LsPn
r8vw+esyfP66DJ+/LsPnr8vw+esyfP66DJ+/tsfJKnn+56/tcTgnz//8tT3O
V8vzP39tz6N5ef7nr+15ukae//lrOw8syPM/f12Gz1+X4fPXdh5bK8///HUZ
Pn9dhs9f23l4nTz/89dl+Px1GT5/bXtkvTz/89dl+Px1GT5/bXtwgzz/89fQ
15n+9evrinG/vrbeKM+/v1kF7m9WgfubVeD+ZhW4v1kF7m9WgfubVeD+ZhW4
v1kF7m9WgfubVeD+ZhW4v1kF7m9WgfubVeD+ZhW4v1kF7m9WgfubVeD+ZhW4
v1kF7m9WgfubVeD+ZhW4v1kF7m9WgfubVeD+ZhW4v1kF7m9WgfubVeD+ZhW4
v1kF7m9WgfubVeD+ZhW4v1kF7m9WgfubVeD+ZhW4v1kF7m9WgfubVeD+ZhW4
v1kF7m9WgfubVeD+ZhW4v1kF7m9mj5NV8vz7m9njcE6ef38ze5yvluff38ye
R/Py/Pub2fN0jTz//mZ2HliQ59/frAL3N6vA/c3sPLZWnn9/swrc36wC9zez
8/A6ef79zSpwf7MK3N/M9sh6ef79zSpwf7MK3N/M9uAGef79zUzPOnCtr6Gv
M94I3iTPv394Be4fXoH7h1fg/uEVuH94Be4fXoH7h1fg/uEVuH94Be4fXoH7
h1fg/uEVuH94Be4fXoH7h1fg/uEVuH94Be4fXoH7h1fg/uEVuH94Be4fXoH7
h1fg/uEVuH94Be4fXoH7h1fg/uEVuH94Be4fXoH7h1fg/uEVuH94Be4fXoH7
h1fg/uEVuH94Be4fXoH7h1fg/uEVuH94Be4fXoH7h1fg/uEVuH94Be4fXoH7
h1fg/uEVuH+4PU5WyfPvH26Pwzl5/v3D7XG+Wp5//3B7Hs3L8+8fbs/TNfL8
+4fbeWBBnn//8ArcP7wC9w+389haef79wytw//AK3D/czsPr5Pn3D6/A/cNN
L6TB8+8fXoH7h1fg/uEVuH+47cEN8oYXfyXgDlzr66pxv7623gjeJM9/PlcV
ns9VhedzVeH5XFV4PlcVns9VhedzVeH5XFV4PlcVns9VhedzVeH5XFV4PlcV
ns9VhedzVeH5XFV4PlcVns9VhedzVeH5XFV4PlcVns9VhedzVeH5XFV4PlcV
ns9VhedzVeH5XFV4PlcVns9VhedzVeH5XFV4PlcVns9VhedzVeH5XFV4PlcV
ns9VhedzVeH5XFV4PlcVns9VhedzVeH5XFV4PlcVns9VhedzVeH5XFV4Ppc9
TlbJ85/PZY/DOXn+87nscb5anv98Lnsezcvzn89lz9M18vznc9l5YEGe/3yu
KjyfqwrP57Lz2Fp5/vO5qvB8rio8n8vOw+vk+c/nqsLzuarwfC7bI+vl+c/n
qsLzuarwfC7bgxvkDS/+SsAduNbX0NcZbwRvAm+W5z//ugrPv67C86+r8Pzr
Kjz/ugrPv67C86+r8PzrKjz/ugrPv67C86+r8PzrKjz/ugrPv67C86+r8Pzr
Kjz/ugrPv67C86+r8PzrKjz/ugrPv67C86+r8PzrKjz/ugrPv67C86+r8Pzr
Kjz/ugrPv67C86+r8PzrKjz/ugrPv67C86+r8PzrKjz/2rgr5Y+j9XUVnn9d
hedfV+H511V4/nUVnn9dhedfV+H511V4/nUVnn9tj5NV8vznX9vjcE6e//xr
e5yvluc//9qeR/Py/Odf2/N0jTz/+dd2HliQ5z//ugrPv67C86/tPLZWnv/8
6yo8/7oKz7+28/A6ef7zr6vw/OsqPP/a9sh6ef7zr6vw/OsqPP/a9uCGfE/A
HbjW1/sY9+tr643gTeDN8h2fH7n+qJvvivu65p+++WeXn/1W3+Ot8r8e8sDx
lz/rP9/dJi8t/SLD93u7vPcX7/7sPp/y+/vh92rn3vHZK3+2zP/c4XqWpesT
Dvb/HgifI3nn9nv9c/ILfr3fLV/6ddeVfv+9R37F1jd/YJdHtql/3yuv/avr
u/vv7H/P3yff9SWX3Hl10f/eoF9+4ENH7DfX41/HAfkuix+j/573QfnJF3Qe
/wN9nn1IftZt1z5XPM/7sHzbcw969vgW/++TEfm7jjl/Y8Ox3kflK24YO3r7
R72PyW+98tC2jlX+PBqX1/6V3HDSed4n5Ief88ZPfuE/3iflJ3x52T5Pr/PH
x5T8heOevvvOs71Py4/61b6ffcfj3gvypc/pDPh/FxXlqxcvaD7CeyIffnKs
VLmk7i74h3e+4bBVj/n8cvnE4gUou9XnJRd8cdo+bN7PVzPyq35y9YHXH+nz
wb90w/UPPXC6z6+QL15O23+FzwffYs+bLnvhlz4/Kz/jlb/e/ot3+XzwW755
5QWP3+3zpXx3pfxxtL42f64LHv2cWl+bv5cLHr0OWieY180Fj15nzSPmfXHB
o/dR62vzvrvg8XGySh4dVy54fBzOyaPj1gWPj/PV8ui8cMHj82heHp13Lnh8
nq6RR+e1Cx7PAwvyaN5IgkfzjAsezUtp8HgeWyuP5r0keDRPuuDRvJoGj+fh
dfJo3k6CR/O8Cx71Qho87pH18qh3kuBRT7ngUa+lwRuirw35noA7cK2voa8z
3gjeBN4M3gLeCt4G3g7eAd4Jbu/H4L+65X/74rd3O+PB4+r/ruiR33NV320n
/u6quvfKNyxdGPrzuvfJl33zR9fu1PnruvfLP3Thzjs/2Pvbug/Iv35k931n
PXxv3Qflb/zDcZ84tuuPdR+S39231TE/u+LBug/Le15x/r+Xdzxc9xH5n4+9
dfmXDn2k7qPy5w97x9UzX32s7mPyG7fcvnzpJU/UfVx+1fAj35/9zpN1n5Av
ni7lW/y/Cyflx7sV56+79K91n5I3Lv3i7291n5ZXFxc8+/697gX53950+cD9
Oz1d96L8qKN/uO9FN3lP5D9at7hzW/89lQt+3VOv6N9z2TP1/HL5iScsnqjP
xM+Jr/nix2vG9/hn/DzaxfFbagunU/8ZP/eu5k/f95cLf/+Mz6+Qn33N2+e/
VHo2vo9/zRe37y48+tn4fsE1X1j/y988d47PB1/qnQt9vpTvrpQ/jtbX5s91
waOfU+tr8/dywaPXQetr87q54NHr7Ocp+7644NH7qPW1ed9d8Pg4WSWPjisX
PD4O5+TRceuCx8f5anl0Xrjg8Xk0L4/OOxc8Pk/XyKPz2gWP54EFeTRvJMGj
ecYFj+alNHg8j62VR/NeEjyaJ13waF5NgzdEX+vyPQF34Cm41td2fHAHnoJr
fQ19nRkfXOvrlcb9+tp6I3gTeDN4C3greBt4O3gHeCe4vU+S/+oG7wHvBe8D
7wcfAB8EHwIfBh8BHwUfAx8HnwCfBJ8CnwYvgBfBk3x34Fpf2zy41tc2D671
tc2Da31t8+BaX9s8uNbXNg+u9bXNg2t9bfPgWlfYPLi+t3lwra9tHlzra5sH
1/ra5sG1vrZ5cK2vbR5c62vjCbgDT8G1vrbjgzvwFFzrazs+uANPwbW+tuOD
O/AUXOtrOz64A9f6Gvo6443gTeDN4C3greBt4O3gHeCd4Pb+hf6rG7wHvBe8
D7wffAB8EHwIfBh8BHwUfAx8HHwCfBJ8CnwavABeBE/y3YFrfQ19ncnPQB5c
62vo60x+Nt8duNbX0NeZfDnfHbjW19DXmXw13x241tfQ15n8SsiDa30NfZ3J
z+W7A9f6Gvo6k5/Pdweu9TX0dSa/kO8JuANPwbW+hr7OjA+egmt9DX2dGR88
Bdf6Gvo6Mz54Cq71NfR1Znxwra9XGffra+uN4E3gzeAt4K3gbeDt4PZzlv6r
E9zeV9h/dYP3gPeC94H3gw+AD4IPgQ+Dj4CPgo+Bj4NPgE+CT4FPgxfAi+BJ
vjtwra9tHlzra5sH1/ra5sG1vrZ5cK2vbR5c62ubB9f62ubBtb62eXCtr20e
XOsQmwfX9zYPrvW1zYNrfW3z4Fpf2zy41tc2D671tfEE3IGn4Fpf2/HBHXgK
rvW1HR/cgafgWl/b8cEdeAqu9bUdH9yBa30NfZ3xRvAmcHsdh/9qAW8FbwNv
B7f3P/Bf9r6D/qsLvBu8B7wXvA+8H3wAfBB8CHwYfAR8FHwMfBx8AnwSfAp8
GrwAXgRP8t2Ba30NfZ3Jz0AeXOtr6OtMfjbfHbjW19DXmXw53x241tfQ15l8
Nd8duNbX0NeZ/Mp8d+B+HszkwbW+hr7O5FfnuwPX+hr6OpNfk+8OXOtr6OvM
OOApuNbX0NeZ8cFTcK2voa8z44On4FpfQ19nxgdPwbW+hr7OjA+u9fWccb++
tt4I3gRur6/0Xy3greD2c5D+qx3c3pfIf9n7AfuvLvBu8B7wXvA+8H7wAfBB
8CHwYfAR8FHwMfBx8AnwSfAp8GnwAngRPMl3B671tc2Da31t8+BaX9s8uNbX
Ng+u9bXNg2t9bfPgWl/bPLjW1zYPrvW1zYNrfW3z4Fq32Dy4vrd5cK2vbR5c
62ubB9f62ubBtb42noA78BRc62s7PrgDT8G1vrbjgzvwFFzrazs+uANPwbW+
tuODO3Ctr6GvM94I3gRuP/fgv1rAW8Ht/Qn8Vzu4vV+g/7L36fdfXeDd4D3g
veB94P3gA+CD4EPgw+Aj4KPgY+Dj4BPgk+BT4NPgBfAieJLvDlzra+jrTH4G
8uBaX0NfZ/Kz+e7Atb6Gvs7ky/nuwLW+hr7O5Kv57sC1voa+zuRX5rsD1/oa
+jqTn4M8uNbX0NeZ/Hy+O3Ctr6GvM/mFfE/AHXgKrvU19HVmfPAUXOtr6OvM
+OApuNbX0NeZ8cFTcK2voa8z44M3mM8fvGikfG8EbwJvBm8BbwW39w3yX+3g
9j6+/ss+P8d/dYF3g/eA94L3gfeDD4APgg+BD4OPgI+Cj4GPg0+AT4JPgU+D
F8CL4Em+O3Ctr20eXOtrmwfX+trmwbW+tnlwra9tHlzra5sH1/ra5sG1vrZ5
cK2vbR5c62ubB9f62ubBtc6xeXB9b/PgWl/bPLjW1zYPrvW18QTcgafgWl/b
8cEdeAqu9bUdH9yBp+BaX9vxwR14Cq71tR0f3IFrfQ19nfFG8CbwZvAW8FZw
ez8//9UO3gFunxvvv7rAu8F7wHvB+8D7wQfAB8GHwIfBR8BHwcfAx8EnwCfB
p8CnwQvgRfAk3x241tfQ15n8DOTBtb6Gvs7kZ/PdgWt9DX2dyZfz3YFrfQ19
nclX892Ba30NfZ3Jr8x3B671NfR1Jj+X7w7cz7OZPLjW19DXmfyafHfgWl9D
X2fGAU/Btb6Gvs6MD56Ca30NfZ0ZHzwF1/oa+jozPngKrvU19HVmfHCtr+eN
+/W19UbwJvBm8BbwVnB7n13/1Q7eAd4J3gXeDd4D3gveB94PPgA+CD4EPgw+
Aj4KPgY+Dj4BPgk+BT4NXgAvgif57sC1vrZ5cK2vbR5c62ubB9f62ubBtb62
eXCtr20eXOtrmwfX+trmwbW+tnlwra9tHlzra5sH1/ra5sG1LrJ5cH1v8+Ba
X9s8uNbXxhNwB56Ca31txwd34Cm41td2fHAHnoJrfW3HB3fgKbjW13Z8cAeu
9TX0dcYbwZvAm8FbwFvB28DbwTvAO8G7wLvBe8B7wfvA+8EHwAfBh8CHwUfA
R8HHwMfBJ8AnwafAp8EL4EXwJN8duNbX0NeZ/AzkwbW+hr7O5Gfz3YFrfQ19
ncmX892Ba30NfZ3JV/PdgWt9DX2dya/Mdweu9TX0dSY/l+8OXOtr6OtMfh7y
4FpfQ19n8gv5noA78BRc62vo68z44Cm41tfQ15nxwVNwra+hrzPjg6fgWl9D
X2fGB9f6eo1xv7623gjeBN4M3gLeCt4G3g7eAd4J3gXeDd4D3gveB94PPgA+
CD4EPgw+Aj4KPgY+Dj4BPgk+BT4NXgAvgif57sC1vrZ5cK2vbR5c62ubB9f6
2ubBtb62eXCtr20eXOtrmwfX+trmwbW+tnlwra9tHlzra5sH1/ra5sG1vrZ5
cK2jbB5c39s8uNbXxhNwB56Ca31txwd34Cm41td2fHAHnoJrfW3HB3fgKbjW
13Z8cAeu9TX0dcYbwZvAm8FbwFvB28DbwTvAO8G7wLvBe8B7wfvA+8EHwAfB
h8CHwUfAR8HHwMfBJ8AnwafAp8EL4EXwJN8duNbX0NeZ/AzkwbW+hr7O5Gfz
3YFrfQ19ncmX892Ba30NfZ3JV/PdgWt9DX2dya/Mdweu9TX0dSY/l+8OXOtr
6OtMfj7fHbifxzN5cK2voa8z44Cn4FpfQ19nxgdPwbW+hr7OjA+egmt9DX2d
GR88Bdf6Gvo6Mz641tcLxv362nojeBN4M3gLeCt4G3g7eAd4J3gXeDd4D3gv
eB94P/gA+CD4EPgw+Aj4KPgY+Dj4BPgk+BT4NHgBvAie5LsD1/ra5sG1vrZ5
cK2vbR5c62ubB9f62ubBtb62eXCtr20eXOtrmwfX+trmwbW+tnlwra9tHlzr
a5sH1/ra5sG1vrZ5cK27bB5c3xtPwB14Cq71tR0f3IGn4Fpf2/HBHXgKrvW1
HR/cgafgWl/b8cEduO/rxHq9rzPeCN4E3gzeAt4K3gbeDt4B3gneBd4N3gPe
C94H3g8+AD4IPgQ+DD4CPgo+Bj4OPgE+CT4FPg1eAC+CJ/nuwH1fZ/Lgvq8z
eXDf15k8uO/rTB7c93UmD+77OpMH932dyYP7vs7kwX1fZ/Lgvq8zeXDf15k8
uO/rTB7c93UmD+77OpMH932dyYP7ed96Au7AU3Df15nxwR14Cu77OjM+uANP
wX1fZ8YHd+ApuO/rzPjgDly/D4e+zngjeBN4M3gLeCt4G3g7eAd4J3gXeDd4
D3gveB94P/gA+CD4EPgw+Aj4KPgY+Dj4BPgk+BT4NHgBvAie5LsD1+/Doa8z
+RnIg+v34dDXmfxsvjtw/T4c+jqTL+e7A9fvw6GvM/lqvjtw/T4c+jqTX5nv
Dly/D4e+zuTn8t2B6/fh0NeZ/Hy+O3D9Phz6OpNfyPcE3IGn4Pp9OPR1Znzw
FFy/D4e+zowPnoLr9+HQ15nxwVNw/T4c+jozPrjv69R6va8z3gjeBN4M3gLe
Ct4G3g7eAd4J3gXeDd4D3gveB94PPgA+CD4EPgw+Aj4KPgY+Dj4BPgk+BT4N
XgAvgif57sB9X2fy4L6vM3lw39eZPLjv60we3Pd1Jg/u+zqTB/d9ncmD+77O
5MF9X2fy4L6vM3lw39eZPLjv60we3Pd1Jg/u+zqTB/d9ncmD+762noA78BTc
93VmfHAHnoL7vs6MD+7AU3Df15nxwR14Cu77OjM+uAPX/vVa437/2nojeBN4
M3gLeCt4G3g7eAd4J3gXeDd4D3gveB94P/gA+CD4EPgw+Aj4KPgY+Dj4BPgk
+BT4NHgBvAie5LsD1/61zYNr/9rmwbV/bfPg2r+2eXDtX9s8uPavbR5c+9c2
D679a5sH1/61zYNr/9rmwbV/bfPg2r+2eXDtX9s8uPavbR5c+9c2D+772noC
7sBTcH1vxwd34Cm49q/t+OAOPAXX/rUdH9yBp+Dav7bjgztw7V9DX2e8EbwJ
vBm8BbwVvA28HbwDvBO8C7wbvAe8F7wPvB98AHwQfAh8GHwEfBR8DHwcfAJ8
EnwKfBq8AF4ET/LdgWv/Gvo6k5+BPLj2r6GvM/nZfHfg2r+Gvs7ky/nuwLV/
DX2dyVfz3YFr/xr6OpNfme8OXPvX0NeZ/Fy+O3DtX0NfZ/Lz+e7AtX8NfZ3J
L+R7Au7AU3DfK5nxwR14Cq79a+jrzPjgKbj2r6GvM+ODp+Dav4a+zowPrv1r
6OuMN4I3gTeDt4C3greBt4N3gHeCd4F3g/eA94L3gfeDD4APgg+BD4OPgI+C
j4GPg0+AT4JPgU+DF8CL4Em+O3DtX0NfZ/IzkAfX/jX0dSY/m+8OXPvX0NeZ
fDnfHbj2r6GvM/lqvjtw7V9DX2fyK/PdgWv/Gvo6k5/Ldweu/Wvo60x+Pt8d
uPavoa8z+YV8T8AdeAru+zozPrgDT8G1fw19nRkfPAXX/jX0dWZ88BRc+9fQ
15nxwbV/DX2d8UbwJvBm8BbwVvA28HbwDvBO8C7wbvAe8F7wPvB+8AHwQfAh
8GHwEfBR8DHwcfAJ8EnwKfBp8AJ4ETzJdweu/Wvo60x+BvLg2r+Gvs7kZ/Pd
gWv/Gvo6ky/nuwPX/jX0dSZfzXcHrv1r6OtMfmW+O3DtX0NfZ/Jz+e7AtX8N
fZ3Jz+e7A9f+NfR1Jr+Q7wm4A0/BfV9nxgd34Cm49q+hrzPjg6fg2r+Gvs6M
D56Ca/8a+jozPrj2r9cZ9/vX1hvBm8CbwVvAW8HbwNvBO8A7wbvAu8F7wHvB
+8D7wQfAB8GHwIfBR8BHwcfAx8EnwCfBp8CnwQvgRfAk3x249q9tHlz71zYP
rv1rmwfX/rXNg2v/2ubBtX9t8+Dav7Z5cO1f2zy49q9tHlz71zYPrv1rmwfX
/rXNg2v/2ubBtX9t8+Dav7Z5cO1fG0/AHXgK7vs6Mz64A0/B9b0dH9yBp+Da
v7bjgzvwFFz713Z8cAeu/Wvo64w3gjeBN4O3gLeCt4G3g3eAd4J3gXeD94D3
gveB94MPgA+CD4EPg4+Aj4KPgY+DT4BPgk+BT4MXwIvgSb47cO1fQ19n8jOQ
B9f+NfR1Jj+b7w5c+9fQ15l8Od8duPavoa8z+Wq+O3DtX0NfZ/Ir892Ba/8a
+jqTn8t3B679a+jrTH4+3x249q+hrzP5hXxPwB14Cu77OjM+uANPwX1vZcYH
d+ApuPavoa8z44On4Nq/hr7OjA+u/Wvo64w3gjeBN4O3gLeCt4G3g3eAd4J3
gXeD94D3gveB94MPgA+CD4EPg4+Aj4KPgY+DT4BPgk+BT4MXwIvgSb47cO1f
Q19n8jOQB9f+NfR1Jj+b7w5c+9fQ15l8Od8duPavoa8z+Wq+O3DtX0NfZ/Ir
892Ba/8a+jqTn8t3B679a+jrTH4+3x249q+hrzP5hXxPwB14Cq79a+jrzPjg
Kbjv68z44A48Bdf+NfR1ZnzwFFz719DXmfHBtX8NfZ3xRvAm8GbwFvBW8Dbw
dvAO8E7wLvBu8B7wXvA+8H7wAfBB8CHwYfAR8FHwMfBx8AnwSfAp8GnwAngR
PMl3B679a+jrTH4G8uDav4a+zuRn892Ba/8a+jqTL+e7A9f+NfR1Jl/Ndweu
/Wvo60x+Zb47cO1fQ19n8nP57sC1fw19ncnP57sD1/419HUmv5DvCbgDT8G1
fw19nRkfPAX3fZ0ZH9yBp+Dav4a+zowPnoJr/xr6OjM+uPav1xv3+9fWG8Gb
wJvBW8BbwdvA28E7wDvBu8C7wXvAe8H7wPvBB8AHwYfAh8FHwEfBx8DHwSfA
J8GnwKfBC+BF8CTfHbj2r20eXPvXNg+u/WubB9f+tc2Da//a5sG1f23z4Nq/
tnlw7V/bPLj2r20eXPvXNg+u/WubB9f+tc2Da//a5sG1f23z4Nq/tnlw7V8b
T8AdeAqu/Ws7PrgDT8F9X2fGB3fgKbi+t+ODO/AUXPvXdnxwB679a+jrjDeC
N4E3g7eAt4K3gbeDd4B3gneBd4P3gPeC94H3gw+AD4IPgQ+Dj4CPgo+Bj4NP
gE+CT4FPgxfAi+BJvjtw7V9DX2fyM5AH1/419HUmP5vvDlz719DXmXw53x24
9q+hrzP5ar47cO1fQ19n8ivz3YFr/xr6OpOfy3cHrv1r6OtMfj7fHbj2r6Gv
M/mFfE/AHXgKrv1r6OvM+OApuO/rzPjgDjwF972YGR/cgafg2r+Gvs6MD679
a+jrjDeCN4E3g7eAt4K3gbeDd4B3gneBd4P3gPeC94H3gw+AD4IPgQ+Dj4CP
go+Bj4NPgE+CT4FPgxfAi+BJvjtw7V9DX2fyM5AH1/419HUmP5vvDlz719DX
mXw53x249q+hrzP5ar47cO1fQ19n8ivz3YFr/xr6OpOfy3cHrv1r6OtMfj7f
Hbj2r6GvM/mFfE/AHXgKrv1r6OvM+OApuPavoa8z44On4L6vM+ODO/AUXPvX
0NeZ8cG1fw19nfFG8CbwZvAW8FbwNvB28A7wTvAu8G7wHvBe8D7wfvAB8EHw
IfBh8BHwUfAx8HHwCfBJ8CnwafACeBE8yXcHrv1r6OtMfgby4Nq/hr7O5Gfz
3YFr/xr6OpMv57sD1/419HUmX813B679a+jrTH5lvjtw7V9DX2fyc/nuwLV/
DX2dyc/nuwPX/jX0dSa/kO8JuANPwbV/DX2dGR88Bdf+NfR1ZnzwFNz3dWZ8
cAeegmv/Gvo6Mz649q83GPf719YbwZvAm8FbwFvB28DbwTvAO8G7wLvBe8B7
wfvA+8EHwAfBh8CHwUfAR8HHwMfBJ8AnwafAp8EL4EXwJN8duPavbR5c+9c2
D679a5sH1/61zYNr/9rmwbV/bfPg2r+2eXDtX9s8uPavbR5c+9c2D679a5sH
1/61zYNr/9rmwbV/bfPg2r+2eXDtXxtPwB14Cq79azs+uANPwbV/bccHd+Ap
uO/rzPjgDjwF1/d2fHAHrv1r6OuMN4I3gTeDt4C3greBt4N3gHeCd4F3g/eA
94L3gfeDD4APgg+BD4OPgI+Cj4GPg0+AT4JPgU+DF8CL4Em+O3DtX0NfZ/Iz
kAfX/jX0dSY/m+8OXPvX0NeZfDnfHbj2r6GvM/lqvjtw7V9DX2fyK/PdgWv/
Gvo6k5/Ldweu/Wvo60x+Pt8duPavoa8z+YV8T8AdeAqu/Wvo68z44Cm49q+h
rzPjg6fgvq8z44M78BTc925mfHAH7ufnjYXkR4f96D2dOzy2qb+v8euvYnL6
L7f91MR2da/P2+6RQvKeN77z2I/t6L0+b99dSJ5xH7qxeRfvm+bt/9xcSJ6+
+86P37m1903zdnpdIWmaXP/nH77Ce33evro2zmXXvfmUnbzX5+1LC0nprqee
XrmN9/q8fVEhWdd+wpvKXd7r8/Z5hWTNX47s2moP75vmZ3d2ITn4grdsWLd9
3f28fWYhWfivvrOWL/P5+vx8WiE55Du/rq7a1uc3eXpqIXls86FXfF8//8ym
/Cm1fEuh/Vz/evp5+3OF5PbTH9r1vD19vj4/n1xI/nXBqVv+eFef3+TufwvJ
JeXp2T38OH7ervlP/3XGwvH+7+WC//iHDRv/vLfPl/LdlfLHqc/bmT/Xz9v2
5/Tztv17+Xnbvg71eTvzuvl5277Oft6270t93s68j37etu+7n7czx0l9frbH
lZ+3M8fhpvk5c9zW5+3scV6fn+15UZ+3s+dRfX625+Pufp1lz8f6v3uPLiZP
Th942D2vif2554vJ4YP3uDu227jJD96hPk6S7HHPwRtO231T/g1P7SRfvfqY
K77v8/7fzwcVk5d/+6g9/j712Iv92K+nxaTnG8+f9NJtfH7Tv6vdhmLy1ss+
c0HnwGMvdjd9fjFZdscBL/ndsij/35+v/ZzHXn3pXz+2bvNNf97xu+nn+dV3
Zn6xZmXd6/8+v2+umPzuwucOXP1yP/6SH3jtacXkmIuWnf7pl298kVdvn3q4
mExctsvxn3qDH2fTv+efqhSTjpsue+GVej0X3R1968nF5I8XHPbVfv29au7W
7brbXcWkefKmE2/wP2f93/9utph8+YbrH3pA592SuzOPLyb3NV2wYb9dNr7I
33L7qTcVk4VPfOgDfav8OJvWC255Mbn3hb++6fJBP86Sp185pva6/e6w9+68
28YXebJw7XXF5MMPvu+6jfp5Nq0v7puuvT4//er5G3TeLfldX/1oMdn8DQ/e
dfcOG1/kL/v1LlcXk2/s8vm9W/Z50TjHts83P1dMztrl3lWPNG+9yW/3v4dM
kiP2m3t3Ydu619cvbqSYzP7s5d3fe7X/c5f8kLsOLybFi865/6d6PRe95Y+X
f6+YnPz+zSeeWdg8jNP0vTd+9MliMnB1368229mPv2kd5HqLySVPn731o7v5
8Zc8PfJdtddth2v/s7Z944s8OedttePtE8seestL99s8jFPteu0XHiwmF88s
f36Lbfz4m9ZT93UWk+Ezz9zm5eqvJf/y/W8tJj9415bf2qJ544t85Ok/nFVM
WmeuvrNz9eYax131ocOv+l0x+fTJH+hq1/ib1mXpbrXj8IDkkDM1Xy35Uy0H
FJN3/L/zln1k+40v8nsPrHyxmHzusPsO/YHel5qfvObAT/+qmJx28YMva9L4
m9Z3budi0vLBllMKo378Jb/vpvXF5OOXvLq4m86LRT90v/M/U0xmNn/mu9fq
9a/5e9/4lq1/Xnu/LvjAd07W+JvWiW77YnLjqf+fruuOr2H54kEQokQQ0a9E
r9GjZc+9yW2JGr084vF0XvQaVu9E70Qnguidy1Oi96c+72pPJ+pP95vdKXt3
duKf+/E1ZnZnz5zzPefMnBkWME6i/as41GsgQeL8Ac3+YfOj4HlCS02UIDrg
Za8qbP0ivHNQTM2jEoy82LNv9xxa/z49jz2a902Cuwfji95/Rfz/PjTODJCn
XdKGo09oHB/7p3J2CYJ6DRm2ltlrFXf7onVdqtTtvIfZ8yh46tbhsgQXr58M
P1XfW+snNOeDDPsl6Dz+f/ly+Psy3O/g8u293ktwrM7tI5ef0XGx/yv7SLC7
1+ZK/hXpuCqeUB+t39irK+JKsPWl4CG1ncMkWFa83tGmjby1fuK7ZwvdIUGf
8KEH+rJxq4OpZtX+1V4ifV5gbJP5L+i4mI/JGSRouyg16gezvyruqlFXgoRe
Z5p/KfHNA3dn7j0AyWfZFsl52bgITw15fzsJyec8n5q3cvkyvJW1w8xqjyUY
8XfS8wD2vpgfutG6TloS3b5/Ltq/isdm+1OCM1/P7z7TxNujfXJCgfUSxNQZ
06VaPl8Nb7zyfvp/kf68l3mE90vaP+GTVSRIF/Dl41/Faf8qbkruLkHqX2b/
ikx+FNx0fPBK9L0yzjzdk+olBXeU/PgX0s+BhyvAZSYnmJe6KkjQYvhN3+rM
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
YIagvjPX5qT59Ena/us+TbqMrU/yg+My5GR4eUfV+aWy6fN0XvlR/2vWvvtE
84PN/Fl7R8VfxeLYOSySdytohvmrT715RfchfM/L2q/pWfLf8mx/I+HVTjNU
L/562wfKe5cWYO0Dz0welPepnienlkPP0+D9jF8O8nx2zU62WzWsZzLHh73s
ZmgZt2X3KrqOwoqz9ss3bb5ZlPFDwm9zm2FnyqDDK5h/TfJZA80QuUwuaaHr
aGIZ1s/uyOTQdozvkbooUWYo0OKtrSTjhyT/VdIMyjaTl2x9YR77OaMZosvv
2fmIxSUIH+5iVs8pZ6b6p0oIG/fC9GdZfJleIrwXzecn30F/BTA+hvmtq5IZ
Dt3672RnZr8Ivw00Q/oG47JfZP2QfFN6M5TscihwWB8d7n43yAw7zk+3NqD2
YnE19jyTombUGc/sAjn/1dEMy6L6Nt/I7BHht0g+b/fOt9iX4eRcVR0zjGkR
kxLJ+BLhq2XNEIMUUwmGE75awAxJbeuVys76wTzT7WuGm/b1Wx490eHJSwab
YXG9SzkyLQrC/78/rVuO5LbcwbP1FgaR9oTfdjOr+x47MZzw1bZmkOMGPH/O
cJKvaWiGiAnND7ZmOMnLhJuhzqRlZR4xHPNGd6gZ/n7So9x8ilM+ib7X4g7n
041ZRNuT8/tIflogefanOOGHqUXMkLJ/7/RmrH8L7gd932y5Yn2qL9Ljc+LM
cC7TojU/nHg9uC+aWX/dvP4c/dJB1wlu7/I3w9xA7xYN2XOquNxkCNJjxzqX
3RRF6wMSPpnDDANW/TY+DxsX5yOK9zfDhi0jAs5G0v5Je/S9Wp0ouCjz4iBP
XPaPNUO/KTOKj3TS/um+fTNkejDwxyrWv4rLGXuj55eiO5ei7QlfdfmYIWpO
9KUf7PlVPLliHzNUWX92Qjjr3ypuj3Fje7avnnsejBufh/Je/n1JHsHwvpQP
8/OJceN8etF4Pve9SF7A8L0of+blhOC8nFBezcubKZnWgeflh9RP4OWW8mpe
zgl/NqwLGm/n1xGNqxvWHeG9/Dql/Nawrkl826A3VNygNxiP5fQP2Gh9eF6f
EH7L6zG6X9Sg9wiP5fUk3Z9p0KskzmzQ23gfo0FvU17K6/+qtJ48r88JL+Xt
COWrvN2hvJS3X4R/8vZO3kHjzLxdI/yQt5u0rg5vZ2ldHd5e07o6nH03zaTx
Xt6OE17H8QcIjWbtdfyB8Eyen5j2aO31/ITwN57/0Pgqx6MgoCnrR8eLaFyU
42kQo7XX8S5an4fjh67FWntPXud6qOEevNH98JSG63kjro/365kZkPuYpyDh
pakrMpH3tuhwr6fa+bygzCXOVSus55/u/6F+vp28sYXGw6dp5/YC3y5bWB3v
+5XfPszN8ORtUXcDaPvAQIavaQi5V7L9t0Su55ih9A5zyfw0LtqqMGs/49jH
0oVYvDQI/34xw+yzoxyj6Hf/rxhrDyfv7tLygET/TTXDf0t696nP88wdZqh2
JXroNyqf2UqyfvKf6BdVLgfHJ1+Zwa9VrZ2T6PpqX461zzN09oDpjNcRnrnH
DNuz9U2aytYR4Y2TkT9SoPvGEf30vFG+hfHvdL3npHV0LbAgX0zR6UwPkPp7
u8xwd8qPPxYwfVWNzef+d62Xr2d6ifBA9Pz1Jxcflp/qz99p/NMC466OyRfH
9CThh5dRP13ena/B7EUoe68dZVoOOcXaE364As0P9Mg9mOGEH6L3Xdj9W8u/
OV6nzOfi46bk7dSu5aTxSQv0ODhgTiCzd5jvudH8VP5vS4lUatdoHafTZqiK
/uxg9pfUcdpnht/f9+39lOEkrrgRfZcjL5fnYfad8L2lZjDZfGYOYuOSuF+8
GWYO7Fuwt1PzW9TnGY/seKYOC8s7OZ6G1su45ecTt34pgfFcFvZeMzKlBqRQ
nPK0D4jPDK5QbNRXghM+lvoC2anMF/JfZ+0xj/J6a4afxX58GviNtse4+5EZ
oGXbbfloP4RHGXBax4nvh/Aiw7iU//DPSXkO/75/0nq5/Ps60pg3h3ieKT/h
vwuN7/HfkdZx4r87reNkkBPCQ3i5onWcOPmUP9N4GieflIcY5JzwCn5dUL5h
WEeEV/DrjvINfv1epPEubv3S+nsGPUDsO6836HkETv/ACBqP4vQPrb9n0GNN
2Hvp9B7lCZz+hGZNWP86/Ul5Aqef5Z9ae51+pvX3eD1P6+/x9oLGlzi7A2Oj
Wf+edkR+ruGe9kgOa8pwnV0jfIC3m7BHa+9hN5+6Rmu4zm6Sen28HXe5tfYe
9lr28m3GcJ19z6Gdj/+ZpWKLa4H6OJVcxgJt6vcKq0j3Y5f2Ye23rcp0NSQf
5gN5MuVgOFp37cfSfdqd/RkeELh9f3P2/CQeldECi0fsOF+B8qVuAaz9jKXj
61Wg52JYPMoCdXO+vnCb8rTS2j6+Vpvrf15L+cAILd9St+ee30qzfCW24+50
FrUe3Xsaz8mm6elDCoFj9p3El2pZwHfV6wyXqBxOKM3a/9tszbG9vfV23C1Z
IOmfQSsXkXXhLlqRtc81/bWpN7PXJI6UwQIKzczF1iPJe/a0QHzOYTXu0PW7
pArrZ3uuSTcGMv1A4kV1LJAtfbmJzA+i+dCcFoi1h1aYxNoTe93BAo17Lh7c
i+qrgvS+OQtsaHmmSnGmP8k+4XponttuO9KO4SQ+U9QCtrmfMnVg+pPUmUHz
vMq6+32ck7PL6L0Ozo/P+ZXalwL12Lg15D1wjNkFkh9saoFqCL/CcGKX0Txf
uef23cHsF8a9KqD53Pd94gBmj0gcpqAFNt/sMGgHs1/Ejme3QMTN1A9TWHsL
e/4W6H0LfdXbWTnOAj71ljQvuqmU+vfPH+k9cRZoguazSyLGIVMEwx39vuRc
RHAWl+D6cQ21Ctv7TLEK+2f7Aw3P6RC/F7GnhnmgdRH5eaP77vh5pnkx/rtQ
e8p/3/f03jf++9Znz6+TE1q31iBXJN/EyyG1m5w8y+/ovjJenol/za8L6ncb
1hGxg9x6hPzUL+bWI/Wv+XVNz8Fx+sH7u9aPTj9Qf5nTP7C1CWuv1z/k3BOn
3+SwaNbeU7/JyRqu15PU/+X0LfV/Ob0tZ2/K+vHUw3JrDdfpc+Ln8vbFtUhr
72kvXD813MPuxFy8qOGedie+aDOG6+0asV+TLaDQpRP0fO6fGch7h8O0Ct61
HOSc6YNHmRh+e8oPa48KpP13rY5LbNnojvVp/qVaLoYr89aGnrvMmZfhvVxP
Jq6l8YQN+Rl+qcv1J2z/G/F/XQcsMOnGR98JJL/mylmUtVfqiw5K1Puz8lgL
3O5X8cQuEidxXQxi7R/2vFg+C4ufYPvlWm1R9kW7HxD5cV0sydqPcHba2Y/J
FfFz31rA1dZk3kbkUz5SjrX/GXdy/Chm17C9+zwe8RDkRvzJ2bvUb4gnbzxY
uAJdL59CWD8bZs0/U5CtO2zv3JsskOHt/pFa/JDYtY8WmD1rR3JNuq7/rsb6
SWj0yNmPrXdSfxjN5/LhORfUZTjxZ9FzIprWcSxn1+T/IbltOqD4HqKv5Iv0
/pdwWJpr7aGjTI8Re3feAll3rRt6iuGkvtl6CyC1+mE4058kT4G+l/T0VtLX
L5z9QvPzPbD/jSvELnh1BTbut1cvXPuo/qd5hycW2L93eqZ4ZhdIvgA9z8hv
tWNz0H6IXfM6YYHygfOuTaY48U+9tlrg9KDDK9qw9sSubbZAaqdzv/my9sQ/
RfJT4dri/w6x9tje+SVZ4POjjiupnZI/h7P+pkU+997JnpP4p2ss0OvJt43P
CP7ZO4K1f+5dLRezd9Rv5dpTe8qP6zPcmkY/NuHzyxO19vrntInngdYr5ueN
1ivm55nWmee/C43D89+R2mVeHvLTe2F4eSBxdYNcEdwgh8T+8nJL/VZO/mEh
rdvAyz/xQ/l1ROvDG9YdsbP8+s1L73Ph1i/xQw16gNhZXp/IYxqzfvT6BNtN
g16ifiin3/wcTVg/Ov1G/FBef/r8p7XX6U/ih/L62adLNGuv08/ED+X1v/dF
rb2n/pdLNGW4px3x+VPDPe2OK0nDPe0UqwPP2UeTW2vvae8mFW/GcA+7mXrT
R8N1dnN5eowj/TFj8dbZM0kd7EE1MjE8bOSfV13Er/R6mpXhdW+H/v6K+qED
tLplYwrNDblK9zOU1uqlLW2+YhPbr7s0kOF/V3sT+gfdf3K3MMN9kgq1GUfj
AN5BDC+0yP4zgfmDxH/sEA7Fmm28NZx+3+NafO7Ez+3D39E4cIuyDL97vmlh
f+bfkX22ceEwqEpo5HJmByux9qv2NQxuwPt3DcIhfdsSrVj+bkxV1v5C4sXr
89n6wv7d9+HhkH/etSwb6Tp9X5O1V8qT32Lrl8Rpq4cDmobOBZl+wP6aPDQc
/PNIJ5dSPfNvPdaPsr9lBtM/xF+LCod6DS/PGsFwYr+KhcN93zkbxyTq7Ytr
VDjEH/tY+lxbvG9D/mVh/bexhD1dRHF2T3c4hNRfl7UkwZlfliEcSiVMTh6d
qLNH7n0dw6FOw8tDl9B+bmv9vM5+OKQ17Yfun2wUDjuGv0v2SyJ+XJsI1t4L
KY7HuP8EnwAN35LhyaPi7Hmswn6Y38c/J8YNz+kqYWX9e4wb87/uGu45rrxW
w/XvZRPP8ygba+85n7Ks4Z7zz+43MXxH4g/y3534g7z8yPGRrH+9/BA/jpdD
4t/x8ixPaMD60ckz9eP49XKkEWuvWy903x23HuFoY9becz3CwCYM169r4n9x
+kHOHM3ae+oHeZSGe+oZeKDhnnoJajRluKcek+M03FPvufZquKeedD3VcE+9
6leuGcM99HPj+jk0XKefU9KR946Azpnn7Z1RCevzlDUZGZ7vnU+f1bTuR1hW
hv9va1K11qyeA9HH69H3yr134B6qtzP7sfap92c/LELs1PiduRk+wBw3diLL
GxI9/yscMlbLVeM73Yf2Szsve8PVIksmFj8szPBjZe+lHGR5wCA8r6PDAX3G
DBWoXV5QjLX/+bb9LgvFa2jxoY6HD3rdYfl9ov93Iflv6Nv+GuUPczW9dW5g
ge5OIj/uNxUZ3vhY/TvlmP4nev5WOBzbsKYhULk9W4W1/x5iGeLN+TVeP8LV
+yOq0nX0tQZrXwARnXScP+I+Gw4LfsWPHE7XY7+6rP3ca1m6rWLr2qL+uv4J
B3eF+IRWVD80tbD2s9v9DB/Wjr4n8ReQ/KSOP91sNG2/Qmu/pfu9vll/o3oG
t/98IRwevyt6RaJ6yRrO2scVDu26ph2n/5+EQ9Xj2ypuSdLpf1fEonBlv4Ft
LunH77nWz6fS7Wb2w+8V0mmVho+8VW9y9nZ6u+BagvhVxM3UPIy3q/jBW+fD
oezEgDsR9DlzRbB+lLhZ1S1qe9ckh4Yj+l+kLWcvDP1j3NA/syP8+2Lc8L5y
H+rX6J4HBtfUcP3z2ITznzpPa+8xb5eW/qPh+nkjfhb33eXaNtZe/x1JPJOX
q/tae52cVLAzXC9vJH/Hy7M9irXXyTO9J4VfLxkasvb69ULsArceIXtj1t5z
PXo/0HDduqbxPU4/yNObsPae+gHyRzNcp2foeUNOX5mma+099ZX8SsN1eo/W
BeL1J93HwulnP1ZHSK9X449ouIfeTt4zTsM99bbfaw33tAuuys0Y7mFfXLf8
NVxnX5YTeyTj7zXaD9ujiSMzMvzusl3lZuXWn0+U8yM8qsDqj/ScYLasrH2/
0PebhpJ94I67ORm+ZO6Y1yPzkvYzczN8SvL9Z/VoPuumVl9BjplR5Betr/iy
EMOdBe1JVjr/A4oxPLnNolRfal8ya/n8QuufOnIw/0LTT3v+zpflPLUvSysy
PDBkdNuWVN7mVNH6Ce0aUYbaiy01GL4r77ezFZmcE/0/Cn2v4mgl0fXyqw5r
32d1uoPj2Tqy4N+2ETD+RZO97cl6TL1q1rWvzvQYaV8mAm4iPjOe4sUsrH2I
QoB4O2KPgA77ndl+J+3dB7T2D04tPGBrq7cjcoUIyIMUazzBoVw4a6/ok6+8
H+GP9OTBh3l+08e1EmwNIyDrjdVewZSfH9X6sVzscv1/nB8BcRF4v9bXEp64
qWfTCKVO7NuzOjvS+ccRNA/xI+f80YP0Y4qLYP9evPTIacVwPyGPGmv41B9/
VMV+gW3MtuIa3rnP7LhGnH0xPA+p12F4HhU3Pg+zO/z8YNwwP+701B/RPf+l
gpU0XHv+/XEN22q4/vlt4u94WGuvn3/SnpMTVzMba6//7sSOcHJoOq6118sV
ac/JuVcHO2vvKbd+SRqul39ij7j1JVOcX19lGjLcc51CwcYM91zX8ksN99QD
MK8Jwz31hqlotNaPh56RZ2m4p16CtxruqcdkS1OG6/Qezftw+tZvotbeU38m
vNFwDz3sKnxUwz31sF/VZgz30P8pvnk0XKf/mf9iTcN/sertC7UX/3H2gvk1
Vr1fw/wXaxr+i1XvvzA/xZqGn2LV22vmj1jT8Eesep4wV9MHYr/DqucnzL+w
6v0L5kdYOV5E7MVozl4wP8LK8S4L/l3LrSNqF25wdoH5F1axf7FXv941/8Iq
9C/kK3p9ovkXVrF/8UpoF2L2bdPrPc2/sKbhX1jF/sUYob1wz00S2Yul6eFv
vX7W/A5rGn6HVex38ONi3DiuihvHZXaBnx9yfwE/P5o/Yk3DH+Gf0yb8Xpo/
Yk3DH+HnmfTDyYnmj/DfnehtXg7va+31ckXa8/LM/BRObqme59cL81O49cL8
Ef260/wOaxp+h35da/6FNQ3/Qq83ND/CmoYfoddLml/A6TGq/zn9qfkL1jT8
BWsa/oI1DX/Bmoa/wOlzlo+wppGPsKaRj7Dq8xE0ftXaqo9fsTyFVZ+noHGq
dFa9n8XyF9Y08hfWNPIXVn3+gsavRlr18SuW17Dq8xosf2HV5y9o/CrKqo9f
sbyGVR//ZPkLK5e/IPGrUlZ9/IrlL6xc/oLErzJY9f44y19YufwFjl+Zqln1
/j7LU1j1cWZiXyDIqo8zUDsyyqqPV7B8hJWLh+P2PpWt+jgVy1NYxXmKQKso
TgUHulj1cZvbWj+iPAV0toriURElq1h18SItf2FNI39hFeYvDP1j3NA/0//8
e2Hc8F5aXsOaRl6Dfx6beJ7Xau1F+Q7Dd2T5Dv67YP3My4OWB+G+O4kv8fKm
5TU4eaPxJU6etfwFL89Eb/PrheUv9OtFy1Nw647Gl7j1q+Uv9OtXy1NweoDG
lzh9ouUvrGnkLzi9RO0Cp/e0vAan32jcidOrWr7Dmka+w5pGvsOaRr7Dmka+
g9P/bJ+YLY19YrY09onZ0tgnZktjn5gtjX1iNl1+X9sPZtPtB9D2fdm4fV84
f21KsOryU9q+L5tu34K2v8vG7e8i+esxVi5/HcLa6/ddkPz1dqs+H8f2a9m4
/Vo4f+09zqrPX9M89RmrLj+o7cuycftSSP56glWfvyZ5athpFeep/7Xq85ts
/5WN22+D9TMgOfHMqzI9/90qykebbMut+nw02x9lE+6PkpOtujyytj/KJtwf
xbdn+pl/HowbnkfbN6XvX9sfxT+nTTwPNF/Mzyfbv8TPJ9afhu9C88iG70jy
xZw8aPuUOHkgeWSDXNF8MS+fbD8SJ580X8zJv7bvSC//2j4ifh1hPcmvR20f
kX49avuF9Ota2xdkS2NfkC2NfUG2NPYF6fWStv/Hlsb+H1sa+384fUj33w62
6fffsnMoNv1+XXbexJbGeRNbGudNbPrzJuxciU2/D5mdH7Hpz4+Q/bcQYdPt
v9LOldi4/dIk3jbCptvfpZ0rsXHnSvD+W2hn0+0f086V2Lh93WT/bU6bbn8a
3WfrM8ym28+mnTexCc+b+Hnb9PtvyT5bUzObfn8dO29i486bkP23WW36/Xt0
n63VJt5ni55Ttz+QnTexcfvzyf5bH5tu/yHdZwtVbOJ9tq1s4n226Lvo9kOy
8yY2/XkEuv82o02/35Lss4VAm3ifbVWbeJ9tHZt4n20Tm3ifbVObeJ8tkhPR
PttU1N5zv6t2DsXGnRPB7U1tbbp9s9r5FJv+fAqxI3x7akf4cbVzK3w/NuHz
a+dZ+Oe0ieeBxmH4eaPxFn6e6T5b/ruQfbaG70j32Rq+O9k3y8sPO8/Cyw9p
b5BDbI8Mckv32RrknOyn5daLdp6FWy90n61h3RG7xq9Tsp+WX+/aeRab8DyL
UW9gO8XrH+08C6d/6D5bXo+R/bS8PtTOuXD6kO6n5fStds6F07dkPy2vz7Xz
L3p9rp1nsaVxnkVvR7RzK5zdoftpOXunnWexpXGexZbGeRa9fdTqNtj15zpp
nuJvm/78JqvnYNfXc2B1G+xp1G2wc+dPyfnNrzb9+U16TnOPTX9uiNV5sOvP
w7J6DnZ9PQdWt8HO1W0g/stPG3d+syRrr6/PQOJUp2z685usPoOdq8+A/ReT
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
OVqPXtJD/3z0falf8BzpqznVn99ndlzF5UQkV4e/PYwbmV3XvnlPpP9fuvZF
3u6v9xcUPZnYY8yG4WzeVDxh6l4HTFrfMms/9l0UPMF6FMlbwLQphS8zvof7
kZGcZ+6wsD7jCSSufm6/A06GjprTgfEfFT/xeTzSM41azao7gD4POa/0Fj1P
TLPoPUw+VRyWIPl/a7446C777gouL882yQG1gnv0nEvfi/ovSL8dzr2jvXav
Co7DlzvsUPbxJjxh/E3BXfevIzu48WBcx3nMbyX+znvEH4Zkyn6IzY+KV8tx
xAEVwjLWLcbmR8EnNWuF1lHYlj/2+Q2kz0P8I9TP1/IXx35j84PrJ9hQP51+
f29m607FUy//Qv2MqbXq8C/mR1jF/ZB6CIZ+VFzQD/W/+PfCuPG9VFzwXtRf
4+eZxP8N86zignmm57P4745x43dXccF3p/4gL4ckX2CQQ4wb5ZDuq+TXBcaN
60LFBeuC+pv8OsW4cZ1i3LhO6f4QXj9g3KgfiB9q0D8YN+ofup+T128YN+o3
mtcw6E8VN+pPmu/g9TPGBfoZ+5VG/a/iRv1P/FCDfcG4wL4Qf9Ng1zBusGvE
PzXYU4wb7amKC+xpTnruj7ePxJ812H0VF9h9BRfYfeIXG/gGxgV8g/izBj6D
/VkDnyH+r4EvYVzAl0h+x8DHVNzIx6hfzPM9jAv4HvFPDTwT+7MGnkn8aAOP
xbiBx8rFaX6H46XEjzbwZ4wb+TP1o3l+jnEBPyd+roH/q7iR/1O/m/cvMG70
L4g/bvBfqH/N+0EYN/hBMstD8f4O8bsN/peKG/0v4qcb/DuMG/07et6f9xOJ
n27wN4mfzvun8imaz+L8UJrP4v1i4ncb/GuMG/xrV/emrH8PP1r+Chqu96OJ
Pw5OeFOvXb+75V7o8LHpnNC/6l35Oud3y42ckGPTkOD3dV944mFbijqh/Jrv
0zKy/VHYH3c1d8LvO2cklqzywhOH++Wc4H+9bYbb/p7t5XO70bjjDux4OzJa
76fHt3bC7aSv7RrkoP2oeHTRqk4Ys9l/8ZQc3zzwu/M6ZnNC7Z0FJk1oRfvB
fr1POycUP7fzR8GctB8FB1e+UCc8SOy3ojJ7foS7WvRNzY3WY51zU0+w58H+
vus3Jyw8cfy/hxVoPyoO2+o4we2X2Kw1q5Om4Jfy7srvhMZjhw4MYfk7cu61
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
G/OPNK/K5zcJbsxvkvNQY5xwqN+h3iXz6uPYMNUJvX/rMW5kAMXJ+abZyI7L
Q1PysLySGh+WvRY51fr2N3wpTuK9yxGfqdP06cFcFCf1Wlehfnb+1WFOPorj
eKm8zqnWMY5k5wpJHe+NSO8FTW5vK01xss8wyQmNXg8unTWY4iQutxXpYWXD
E9M/ZJ/hNiQ/6UKWm1n+hez32+GEbluuOqKy0/bkPNEuJ7zwrpZrN3t+C26/
G7UPDAtax9YXwfc41fOt60vQ9vR+Iid8SZyX5Qizs2Q/3j6nWk8smM0/2c+G
8JNfljSeRN9L1vAjB72+PWXrxSrGZau4H+KPG8Zl9+Nwz0n3ffHvRc8B8fNA
6/Pw80b3WfHzTM/18N+Fnt/hvyPdH8V/d1on3CAn5NwNL1e0XqtBDgkf5uUW
81KBnJNzNPy6oOdoDOuInIvh1903klf6FqbD5WdknT4L0/dzh5wrvBOmG/fX
ebxOf50P0z2n6y+c33H9FaZ/rwOkTsWBMP087CD1snaE6edtM16nXpvD9PO8
ntTLQr+e30VeSdbpyjDdd0T0ELdfFqb77vI5gi8K08mJOxKvR9e8MJ1cyafJ
eb05YTo5lB0WjM8K08mtfIrgM8N0cu6ykXU6PUy3LuSTpK4ywj3XkWyLYLjn
upNPpoHbrMJ+XCet4nHtNuFzyik28Xs57cJ5cJ+xi+etvkM4z/IFh/C7uBo7
xd/xqlP83VuQulicnMi3CM7JlfwbqZ/AyaH7PvGL9XIr/+qC1ykv5/Irsg+Q
WxeuAWSdcutI/kHOr3HrjtUVHCXp7OnT93i/29fvkt6ejsH3dMgxEtR91GVv
uvy4faS3un9Q9j8qQYHNqxMX0zhGdGHcvpmk4wmfEtR9qXK9DZInT1jqfKee
6+k6G43ryRNci8i51fqSJ2/ZO6aqWke33dFFkgdvid8w9IKCO67VfSLpeIt7
ZpD6m2qXPHnUr4Siyvl3edSlmZIHj1pbOywZ4XJ04aI3JT2Pmoz3HckRko7X
1cml1m+Tl02SPHida0O5RQoec23eOUnP68bifUeyWfLkmXKtjPheu6VjJA+e
KSeMmajg0PjoX5KeZ8aR80dhErSbeexjaSzPEPhVxU3Z4iQoVG9kpdOqvzDp
w6lBSj3GiK+dDkjw+fbFF/MUPys5Q6XqHxB+c/SCAl8lKNG9ZoGs9P7fweRc
fx0J9v9zNs6/rNp/7NrXKr43ejDqJ/OZ/U/VeYvv3rCrUn84pdr6HRJ0eVN2
yy+Fz8dETDnzL8JDgqyP30hw6FbyRW/K57vj/UhyNTSfn1dv6G9R+zf1v6fi
8bX+lODw03dtBqrxAfeT6s0rIDz1/eJECapFRDXM1gz1b5qxKuoswv3sl9c+
lqDRg+GjBpPnl1uT/UjlJbg5t9zBqJJ4fm6fx/uRXnWR4NH1Wl1qq8/vV9Zl
Ue758skbg/T6y5sDJhxS5uf3ok8H7kH4tpwf9t+RoEnfC3fn0HttSpDzUyUk
WFc+vNAL7E/FNO2g4uhXgrXvBhVPF6j0/7Lpj4UKrvxKIGf5lFhBkYcaHZse
uBJCfiXoU+FFmR20TmmRyuRXgobX622/VUTtv/zDliqOfiXYF1T5yndV/gdl
aj1LwZVfCVJrLFqStYk3uD6ZI1ufqUx+JahSbncW2r8cSOpkBkpQ8ULgf8fx
PsOEsCYqjn4lyJbpxrUeah3vD0MvT1Zw5VeC5z/C8h5T/Knjba8tOlaF/Epw
6f693JWQn57S//WlLd+qkF8JRqfY/P8lfrrsT855+UswYsnPl3asn013I1Uc
/SK5mn3SsV3VD37HC41VcOVXgq/Xm233V+ISKYudAw9UJb+onwHFfybm8oXU
i7Vyb31flfxKUM866WYKiUvI2cm5sOwStLg12BqL5Q2eR6g4+kXrse71dA3V
+XRLV0YouPIrQfN783e9UsZN2Lw/aWc18ovW6emUoFxoXPjLNGnuy2rkV4Iy
ba/9043EYX5lrk5+JUjwv1F5tarP5Vo7JAVXfpFeylz+yZ0iaFxXXMSzQQhX
fyWIrbah3zQ0rvtp/Y/Nt1QnvxIkDzgzsIWfL2RzTt+x5XF18ovwOVkW3aT7
bDOQ+mMZJPV8RCnsj7tH1FZx9CtB8M7HIzrkV9439te6vgqu/ErQZsSVaWuV
9ZW8vseODTXIrwTXfh5b8iHQFxrXnjt38b81yC+az9+frW1J4m9ydcLrqksw
eNTBltOzq3reNbSXiqNfCU4tu9J6hNK/l2tW6Oqa5BfpjSKzvJ8UQPIZs8qn
662a5BfJT4a1JfeT+OHnkFDyi+T8S8dxPthPXDqjq4qjX7SuGz77NEnVk9Oe
H14WSn4lKJwh5mIjJX71qN1fd6+Gkl8JVkVYsjym98WUr8X0xu99Q99/w8/v
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
ivBp5VamovV7vMC8jqvQ+z74celertc2+OvbykPBSG/YCzlC/yHj/syI40Lf
kd54eabr0L143D/7mlT83gNA4zZ0ddyo6En31SETaiPctf5ttoFIT8ZerrkR
6UnTQt/xt5rZAULyZd2xUYLIrZ/fX0TrNzT7gc45/7RDvwKDThdBenJhhSXP
JpNx3RNIPArpSaUuZdZC6rixQStV3B1hQc+T/bDrsCpXe5usPKDgsastyI/e
VGxfsc9KHupm4Te5/kZ4cp17wUkShDdIkiOQXRj0uWRY3VQ7vExtMGIIsgv1
V37slYXKVWYSf84pwex7NQ/XCMT6OTJIxWEu8mv29sxSZo76fZu0XlVXwVdt
j0D26H9trLsaKHbQN0/9Gi0RHlB6YS/kX4z6OPvwajTP9/2iHy3v64Bjxdak
1EN2ME/04f8toONOIuPmQvr5fqYRP9W8pyul/moFl2ctsiHefmbvrtfKPhZ3
oXrPDyHcVWvYNWR/f3bvP6oAGjd2R9csq246wN3lon/ENgmKXGr3+Bsat8KK
bJPrvndA27D8/kOR3d/ufLm+MrH77iw4LudCdt8c8/iSxU9933tLiqv4wZpO
1d9pW03RG66+p1pICJcfztiM+MYV093hWdC4Sws7LwS2cUJondlLKyM/7vuS
M+OvI3meGbSynO9AJxSxWloGIJ5T0vdhp2OE5yjxbvV9EYH52q73icNYT/r5
rlNxUwDiV+U/LcjbWV2/e4++dCl47NhbiF9VKtap/yLFLzh3Z8STOwhfuOfL
hT3Ib/pjbvHsiOcsTAzZsu2TE0Kad2zX6ZUE0ZEF5Kpknkdlw3HFn4jXlZx+
ufYP1e5/XjG9lIKnSgURn/wuXR3XT5GrAT22J1kQ/vRa59bjUT/ZKr9Ij+zg
uUEbBx/+LRIWvop+MwL5y+u+lcyZgOY5x5F6FU4OiYQiI4e3mYZ47H9tsx8a
QfTGr+lkXMRj3X//U7cK5jn1ft+o4sOPRyN9NfhLu/8p9vdmT1Of4whPvgF3
EX/eWebk3WJonh0zFp9d/28kxBeqvqDREcSj3nTNpfDYse93+T74GgneT3rm
O/5RglL3LDup3XflJPmLomh+VmzafBPPc0KpcioOjZC/cC99lqwzVHlObTPK
puDuXT+nIV69Z1bncIW3t4t13uyI8L3u2cl/IX8BFjcLQuv36fpG87vFRcGl
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
/xlEuKuqFSrUm/yxIffD1GL4ylsY+QXfbtnP+18UpfsjmXE/tMv+MISNV/rH
s/sjVQZaYV1UvZehXI8nJ796Uito1wQvsvMOF07rfE+Hdlb4Pnrkuidc7v3D
cJda1wpFbtWXRvL+d+PJf263wsojN2wxXK52oLqs5azwqWSfvVx/mcLI713I
ClVRYbzk71Oa8FI2K9yuL31bw8YrT+KZH7s3vn/uB9vjkvC+z1nIX53aqvXv
drRg8ygnr+l8tQ2u88Xpzb5c5uMPEI5qYYWbhdbuujc3P61/Nd/6zy1dWq1E
fO2ep/7/JCu0Pds8zJ/6gCcMYfjnZzUrHGs5868QGq/5zRm1Am63y3uJr6wn
PFPCCsnVgSnCaR6loNVHTz+psaIGf89FxMd95Zmw+UElxldH/GJ4ZsQwK4wu
XbOUhfp9K9lsvnWLk9/lbMnGK9UH2oha4Uj5tHlf8fEzaHwmK1im9uvVlL1P
kYIfbYz2scKcfFNPvZDY+N/p7ETxu3smxJdkv+tup552olZoNm1U62o0v3ci
5Qnjd4ktWKDDSDbeW+2NndFuVsj+u3qybzS/korn2eL6T0qIKMHePyqsu4Oo
FSZ/rDgolOZXo8lP62819n/fXOqtg1Ecb+z/rvgTXsLxxcJDrQ3ZeOVOVydR
K8Q4Sts/8PeZwPNgrRDycV0lD40/+46NP9vDCrthVNJwPn8awl0oDzU/7U8a
f663i6gVCpac3TCW+r97yf/pTY/nIu+lHqXZeM/8ry5GUS6tSu1CxEG/N4Bw
WoAVSu8rnOE2Gx8Fw9xErVqdqOO5+fh5ND67FR4naVe3O+3DBItE1Aq91k+6
XY7vzzWE34patbptf/n45Qin4fldhnqwKd+fB4lfHeXkaPX0Fs4PJRwVaoVL
PVqmrE589Tr5CRtadbs+ls/fnnBUeyvMqBE4MJHzvxC/P8q3FnvlhZyfjvAS
7sMTx54+Os3l0mLi57FC726rAwuTPPEGU94X6oV2UwZHj+LjjxNeclrh7Jxs
UXm5ndI0gqgVtGvZ82h84ifGT+xrhYMbW8b35PMkI/yD9scG94PB9Ti+WlzL
9z6oX54XIjkP3A+G8vzp3w3so7j92IP4La2w+cGL2ZlIzsMx4uO+va42SNWf
8BXkJBxSwQr3+i/d0537bweQPwr358I77yJ5fDAqjvj43cuevz9mBulH3k88
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
9RRfviYZ64ErZ4uzOnJPZ0tCPXDTAbo/e08y1hs3Ha7O+rNELZGEeuOmc4Qn
n0rGeuamB5EMT/ZcLQn1zM13GJ70fysZ66WbC7TS+dHTN0tCvXTTC8KTnyRj
PXbTxx46X/mG62asx276TH453FeGOvAwfbjO90iHJEMdeOX9qxQaX03oN1oS
6sCbJhEuPS4Z68+rt7Lo/Kg3EyWh/rxpDvn3zkjG+vamc/l1vtJ+uiTWt19G
cSg8R4b6+cqC0qxP/bk5klg/f30133c01OdXllRmOLbWIkmozw87GY613JaM
9f8hvVPnW8Yvk4T6/8pBwrH3JWN/AYBaDMd6/pGE/gLQhvIBHknG/gVwoTgw
uk4S+hcoT8G3Twz9EeICNwNRSeiPYO5M+VcvJWP/hdhZ5ayMbpPE/guvCd++
loS+D+sZ7kUqGfs+NO6mWIlKQt8HSw8bo+8kYx8K85hKNkb3SIY+FObjF5PZ
GMX9Y+xD4Ud+Tr/3krEvRq55+2xEJUNfjBuT042zEZWEvhjQm/LEPkjGPh1Q
kOWPQcEDkrFPR1wefzuj0ZLQp8Py0U5UMvYNiRp10E5UMvQNCfY8mmAnKgl9
Q5Q+hNtxHkMfk2fFajgYxfP1p4/J01TNUzsYxfNi7GOifPwzj6Gvitd1yEFU
MvRVib/4e6KDqCT0VYE+zC4AnMfQ5yWuQA0nozjPnz4vq/d80+9fIMV5hD4v
H8i+wHU29J2JXH/QSVQy9J2xOKWJTqKS0HcGejG7A/C7G/rgqMOqsb4qw/B7
/emD4227N5WLUVxnoQ/OO7JrcB8a+/KsY/l+SCVjX56Tr8e7iEpCXx4t3qzT
N5LQJ+hgJea/PYj72dAnqPFd1s+68d2xktAnyPLKTVQy9i0y92Z2E1LJ0LfI
PHPjaDdRSehbBB3JnnouGfsoQXR5Zh9Fb5eMfZTMnUwSo3hOjX2ULE8kHzX0
bzKX2iL5qLF/k9KK7KYHktAfqk5JZjfVQfvM2B9KuUvj70qG/lNK8+VrZKKS
2H+qMdlZNyVjfyu1CssXUquslIT+VnCV7KyrkrF/FoSz+tVIJaF/FkSSnRUn
Gftzqc6cYYwukIT+XEB2FqA+MvT/UtP8HUZUEvp/wRCKRyM+MfQdgwtO5q++
gHrwT98x9WhWc01GYySx79hnstc+S8Y+aMrZQzWJSoY+aJZnKSfWJCoJfdDM
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
r90+ndDMRHIDhjh8z6355I1/4SD9uZbhrXQ+UhkG152+trm+r3p6O7gdRBE/
dE7VZYVm/0Y+KzCgpIMo4rRgd/NMqJf9G/1+vSTAQRTx/87xlX77fu+f52r3
+1by5z7481xzgTEpP2tyw5JomnfSwSg+98XlOjViET9HnV/a5e8NDkbxuVs/
lKxcCH/vrIb9um2Y6WAUnzv85IrMZt/vdfqeWy+42JqZTE5GtmzF/L0t8blf
6j662rGW9nvXFpvqdhKV4Xe2HWu+abi9erGx00o6icoQVWXy5/L43KP7vvde
G+Akinrtm9/9rPRc8w+nb19deT93ZDGGf9pWeqDz21bC5y7efKwWy387GP3X
SSej+Nz8E/wP1s6Kz/1uztpwg5NRfO6mjuUmybjOL+qmyDZjppNRfK63xK3U
2bi/ZbDLd46y2StdfMueO+tilM5HKsOyObVjaunf9+mIFy4XUbSbkn6edEfD
FSM2VUxW0kUU92GmT6sT8PwG7NnRoliAiyjKpUKHpx6m55q/s+ea8bnzm+y8
5mZ4Zm6AV+fPDcDnZir8NW86He+9rec64WLUpeHexgMLoh7c/e76/EHrXYzi
OfIb0CqpFmcva919+e8ZLkbxHLXouL55B76vBtG9UZSTuXqXu6Oyc+Tt0VLn
I5VBTvmqdF79HG02jXe6icoQGLPjy2Xt9zZ6W2BOcTdRGfJdWv+lJH7fBhda
1VQzuonKsM3v0AXS+4qSwPzqCuqF1Z1HrU7Q9T6siLqn8ZGifN46pKyjhSYn
/bskW3zMzSjK533bPs3vjXIyYVDegovXuhlFXD0vvy3xIK5zq6alsuyLcTOK
crJZskLW0fR7Rw2QiMqaP+f6MV1OKj2HNNf950hluGhaPGqC9nthVv+Wdomo
DJX8+xyx4b6CV7sn1S4qEUV7JOLzwzWoF/q4Yp9HZ5CIymCaVXRSab7OlO8E
qPcvTXZebpyPrXPQHZ3vDUL921IZNiu/bl/f6ec+IjGK+rdvqVMBSzQ9WL6Z
I99qiVHUg8nvbYraj+tcf2TjvYWmSoyiHkyf7MkqHh+39JN99G5s1Q8ns+i/
d3s6ve8ko/u2ffE4tf0MJZ0vEGdweiRt4f6N8Lmevjs+rw2SfbTJxWxN0ms4
58qabhNQ33Ma+OrY8oq8LvdH6l+JuO6G2iBVAyY3ei6/qfN7Lkd81ehZYOA6
/Rx1KNL+kMwo4qtil1qlzYH4ytu+V2zJlTKjiHMWNUm6YRnu5/0n46scmigz
ijjHWqTSlm0c5/SmeAHi2Oxb917tU1h/blzKRjofKeLkw7/759PlVaPBe6qF
EkU51qH0gRBNL0TDyF4FQonKsPHut7cajo1uffHib/9Qovi+41e34H2N1Xiq
s4q4/cmHvJc2Mb9ccI9rOj+4B+LnZc6dPypo9oIpNtvbfaGMIn4+0HdJgbca
bt8t/R60NJTRfCjnL3ayFtXWucHNfRnGhzKKODZTv382zOPyuQfFL3rI8Ll1
kcKUh2wZx/LNkMpQVd7bPre+r46dCKocRhTPy8773+3avur6Ot3MvGFE0V64
N7Peffy9WZ9tO5roF0ZUhlm12xTfRPsq+g17bnQ3xKsrIuAVy0+uefqSzq95
ug7K4byf0k/Qf++oHLn0OtJIQ2RQ03fwK41yQ1n/dH/XRWGM5kb9mPHRUDPa
X5cvVWk0flQYo2innE15ao+Xvq+nS02iiH/GPShgY/7G55cidT5SXOeLudVJ
2r7y2Asm/lWTKNqzP9tbnqA+intfLmOOnDWJynB8wYlXaVFuPO6Qv3wFU02i
aJfhvuB2mecFPbeTDK17hXz8wX5vzDx2Dz1mHtqzkWuHJe7Xf+/jrqu31WS0
HJ7H2E3jC2n2woPfJdfNrclooAyOMdu6h5G9OaZDOFG0N7+1GuPP8NvWEHav
AakMjyNefInWcdTeiZYy4URlyJ0s6kItbf9Mrb04Y9ZworgODluqJzyP6Anl
77WTYcCI/Q2nsPe3HD2l8y1HZRlOLrrUeKhuj1t2tdkYzmgpGdrnme73TPPv
xW0cUnNmOKOov0YmWxm0l88/nPL3huv2S53C7J5dzOHWOh+pDAW2PxnaMrvu
91ZKuDW+RlGeDL00Wc/XKrI+dJUWP9Ip6v3EIws+BaaBGw937ChrjiCKdlbr
FysbMj+GYvrJ4kemoSifMl0vszyN9lxoE+TV+EhRbxZMWeLZbS2/y3K4+aRj
yNco6pGe5Vf3nozfK2ZS4+RXV0cwinJ1c9/T/RqgHBjctNKqIlMiGE2H/Jmp
5t3g/oFBFJ9Cvdng5gBnTxvL55/YXOcjRTxT9WqSCN2Pbfb+bdX4GpWh/r2/
d7zR9knwmmVrCtUiiuf6VGz+jKjHoxa/27cjVS2iMhRteuVuR/I7qV+ofwTq
kaELEl+7mf8zfvotnR8/vYkMCTNOSFv1c5GwqJeeD4m0Otq5V+ttzaQ9d2HZ
ps5ltRhFe3lo34KJa/G5/oFt+hcZV4vRFDJUc0bfiCU/m7cSi0Np8rzU+cCn
x/Lpz220mfW33RzVUIa0Ka5f6azX9xu9dJJ+HzaFPRvKt5e/qmc5op3HDC8m
Ns6A/DyXsmzLg3rjwb0ATQ6kb3MsLHOSSMh1InpOETzvI2Ndme6TXzGS8jA9
KFcjrlbbejOP/ty/UnbW+Z3To3zbk7/MpZ/aOiutD65pqvGPD61bEc9RhXkL
Utf2g8hRPTZ0Co8Ej9/9JpdzyFC2+M5U28hf6tlJ8TWUY6u0Ajp59fmLFF+t
8yMboDxZ+aF/wSS63Zp8nTpP46duMBLPtZLqy9qSiBOUrYWL156E/Ha1GizD
c9e95KuifP64T5E+uXFjVvH9YUH6/LsdrJ5kzwnaub5aqX1l/bwf/P7PdY0/
9HOt0mg/3ug7Tqsjqgb8tGU8FQlK4YSx+RG/1e51/g6vr+stS/2P8FzPTVi+
ug/bhwvLsP6/IW0kGQ4+/9Ckn64X/OyNs2h8/3FbES+Vd4RFpNXOXdWNk/5O
gfyBzbKVxH1e6+GQEQOykD+5F8UH8fzuvXtmWKZi+vx1irfW+Ssa4DlKSHl6
73P9/c+XzVpX4y9sVwJxQvt3xTb+1uIafXdtTOFA/vPuzdOh3jxwc/MFv+x0
P3czvT+e02bafX/mv03Y79H58YPwvOSqNrz0KR2H90hSeLrGv5c0Avdtwq0L
r2Zr+H9i3iaDRiI/c43tH3D/FOpUMUdqen8P1TEDxLH3fr1vsaOcPn9co/s6
37MFz0WmW727Z8+rzR+/LsMFje9tmBf35+DHPY7+oDiRtxSLD/4rTuS5kZvF
GcU40fOJt9Jq/P+PE/l1pzxYIW5l8aZppvH/FbeKWheSINf5z7hV7Ho2z7/i
aGumzdP5/4qjvT0dPE7j/38czfuSfpcY1/PEs7ru/4rrQfvbqsb//7ietzDd
sxbjiVH7MrA823/HEyGK8nXFeKVymOr9/l+8MjndrxmF+6f3gW5BWVicTsnK
/NgwSYZuzTuPGZ6V8nULUX7jDMR1yqDYzDkYP0lZ3T+smObJ8On29ZHX0zA+
VKV7NIvRjq5S9/l+qo9tctI9mmU4z/ajLWdmI3443ZdZJYPzRvynUJ4nXJfu
xayRoY52gbAI8RvTveP1eL7eDiiSmuoJQ2nyy22Soa2mOKluqtYnm1HcP0mC
F1up/45SjvL3tsnQUbuYzeS/ybKD/F07ZHjlVz7jTnp/pYKNjd+J4wOr51/F
120X8Xehnp3/NPc/hYgfQvdTdsvwbe3sVIdy03vuIX/LHrTLXNUcBfg8lSg/
Dfknvi2IjKbfpez5wz+03/TjeUk+3vnf/D3O/5wHKrn++7m7Xf/5nkpF93//
rp3u/1wHy1/Sf6/bNuk/11kpI//ndwHqx/d/37FE6H9+d2VN6H/uEyWI7n38
a18py4j/r31oyUP3O8R9i/ub5RH9e58rmSjP51/nAiYRPvzXOVKSUt6O4dz9
D/Pl0OU=
   "], {{{
      {RGBColor[0.409582, 0.542008, 0.909424], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxMnXe8zvX//8+5znWucx3O4VxUhHOOeYyKSjsq0VCplJFVVlJEA2U2NIyM
kISsQgvtrb2TVDQkRGQn7f173L/Px7l9fn88bs/Ha+/xfq13nd6DLxqUyMrK
urF5VlaOZAchW0Dv6rysrBpCTWGAUF04VLhCOEg4WLheqC3UEa4VSoRS4TpL
zK4Rim02M5mV1VpoIwy0f4QxS+ozhDOFQQ6zljDYEvf9HeYhwlVCNcfpSuuh
HiMcJhwu3Co0E44URgtNbHaDUF9oIIwSGttsfTor605hnDDW7o4SbrJ/RwhD
nNa6wi1CU4cx1Hr1hJttF7Nh1iO8F5Sx/YQrhFeFgcLVwivCAKsfEToLlwgr
hO5CD+FR63URlgldhW7CY9ZDvdx6uHnc7i4VnhF6C32Ep4SeQi/hCZtfJjxp
idmztttXeNp2cX+j86xMeM7mlwvPW5K215ymQcLrloOFl4T+wpXCSuEqp/ll
66F+Xxgm3CC8YXfXCO8KQ4ShwovOP/x6R7jeZm8J1wrXCW9bYvam/cDsPftB
GMOdjobCSKGR68HTQi+ht/Cs0EfoKzxjPdRPCpcJPYWnLHFzp3CMcKxwu3C0
0Fy4RMgVUuSb/btc6GK9PKG1sD+VlfWjcLF4lpAtPC70EC4VlgvdhO7CI0Jn
+/2m2xjt7y1L2t/blrTRdyypv+9aDrUfScfvxbxo27Sz5x3HfsIKh0k8XrAe
9h51+KTjMcuuwjJL4tpJyHEYHYWE1V2d7rRwgfC30v2PcGFeyH+Fc8V/l/xD
aCv+q+Rvwjl5ITFrkxd5dkA4X/yvVPjVTvzPVKiJb9W86LPOywv/MCN9VWxG
uRYJGZdPxmYjXEeoH2fkRTg/CWeJ/yz5SyrqRWW7py4UCpVcJyrZrJvTmu+8
RFYQzswL//Crh/UqCh1c/uTX2XkRDum/1OYFQvu8yKf/hIvyQlJvbsuLfov6
90Ze9KHUjw/ctm4UvhbGCeOFe4U2whnCIuEC4UJhoXC+1TOF1rZ3j3C61ROE
44UThImWJwp3WZ4kPGD/2jvMY4XjHPZxdj/Jdk8WFgsXCRcLD9od6gVCO8fp
DqG5cIxwpyX+3i4cbTP6j1pCsXCbcJTNJjucFsL9wjnCucJs4SzhbGG+cJ7D
myu0tb15tovZfcKZdjPL+Yd6htDKeTRNOFU4TZhuiVk7DbB/Sv5FPorvl/wR
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
cL0gjIXp6JfpsxdZkv4Fzg/MPrUf+Esdoky4P78mHW9bEMYq5wd31j9w+sij
j6zHWxcfp+MdB9ysth5q7pzzntdLHl8XOT2MAdxPXuoxjPfvRnsMQI7xeM89
3js9fo+0PfqIEVbTZwy3+hO7u8nzg9vtnrvuvBf2oucHt9nsU9u92f0Rkrf0
1jtM2uQGt8sJHr+5I839acZG7glzt/gbm0/0eIked5qZC3AnmbvOm62HmnnK
WMdji825n81cgfvb3MneZkl4W22O2fcOn7vLOyy5J73Tkjv0a50O3h1cZ0l4
u2zOHWvGbO7Yc5/+R0vurzNOc6+bO9+0V9534321v62HmjcGeIeOd+kY/+fa
L+Ycc6xmnF/sMmZuwd117mr/6TInjAMOE7OfbU79YK7xoN3ztgFv4REebxPw
HhxlyfsOvAfHu3TUV96kQ83cZ7bjsdtp5W2APZaY8T4CcecNPOo778Th/l+n
lTfkeAsBc8L7z3rY4z0L3tojTrw38URevMPHOxRIzE5i/p6M8f5EvquSoT6B
vZZkqA8Rf1PyLeFg8TeSoS4SXyn5ilAtN8zfFmqKvyf5vlArN+QHQg3xd5Nh
xtj2ouRLQiY3/Hg1GfODl5Phb/Xc8O8d4dDckLivkht2XxOq5oZ8XTgoN+Qb
Tg9nvmd6HoO8l7VK4W5hGmuVwhRhqrDV8m7PDx4VHnNezLBf5MV0qxmziTtx
3Wb/MCuR/oeSqzwXeUh42HOUR+wvY/sLyUg/85vHJZ9IxvxmRTLU2O0sXJIM
ve6M4XaPXhdhmdBV6Oa4drF6ufW62y/cXSo8I/QW+ghPMf8QejlszC8TnrTE
7Fnb7Ss8bbu4Z243QZjo9HUUOiVjjjtOGJ+MeeET9o+56pMO8z/HlbgzR1nu
9DH/WOa4M1++034x13vK4TN3eT4ZebfB4RAP5jXPJcOM+dEzjjtzIiRmzKGe
dh487PiSvxudjruSMfedJExOxh1yzpBxlop775yjYm/7Wuuh5t45Z8s4dzbY
stjzR86HcS6MPfsiqzkHwNkazqFwT76G3bOfz3kUzqGwz1/ZbjrbLmbcjT/U
brgDX93qyx1OVe/FsSfKGSj29dmT50wN+3bsrWLGnh7f6OzBs2+HXb7bOXPA
2RHOjHBGAHecFeKMBWeDEp7bEg7nzjhDkGWzK6zHWTzu6Fdz/Ppbj/N6He0H
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
Ld5Y/ETxaeKtxY8Tv0v8dPFX5U9b8Rcl60j/GvFjpf8na/Xij0h/HWvT4hXo
z2VnsHhz8U3SLxU/RPx31ufFl0hvkfXnS16nstis+JepLK4W3yBeR3yg+Nfi
tZnzlMV+SbHsfyp5k/dP1gijvWfyhXCbcDv7CmUhG8j+1+Jj2TMQ/0L8FvaM
xA8WholfIllNGC7eTfL9gtBnn+Er2b+VPR3prykLvUPEqwsjxLtLflIW/FDi
Jj6S/STxX4vVJsSPEf+tOPZ4jiuJPbl2BbHfy97ducJ5BbFfd57NVhbEnvSA
gthrxC57ws95j4o9vbUKaxR7UuSnzdm/LSyJsx0XSj5vu/3Yz7K8gj0r74dd
JPlyQZyDIbzXCmI/jP2uURVVL4Qmwre1NLZKHq903CjZgP0l4Qvp15NsJv0N
4g3Fm4v/qu/l3/W9fJ/0xlQMt4ezT81+luQO6V8uWUWoKtyKHxXDbIhQR6gr
bKsV+ifLz63iR4ifWBz7u2cWxF79AYX1M+v7Ms+V/3nsp4t/LD5E5gcpjW9L
XlcQe3SvO32DhZcKIq9I/6sFkSek/2/5+a/8XCh/3rE7/FpdFu4yJbEv+qLC
eol0lIT/HSUrFYTey+x/F8R+JHuV7BOit1J4S/4eRH4Ux1436eDsAHu857hO
/FgWdbGr/Nwv/p54F/F94m+JdxKvoTb0bkGYVS+MdBLfH8pCdpadyoVRxtSp
HPHHJZ+gHhdG/PCroDDqx4vC7rKQ7eX2POExvq9pL7LzRkG4KSoM/14R9pSF
vFh2tvn7m32/7Zbs+20pC9lMdnZI3iPMFHZasnedkJ8rCiJ+bTzWMOawf3+G
y7tKYZQT9fQcmT0qOVmyamHoUbaVCqNcSfPestDrIDvZ0l9eEGHw8PiyglC3
Kwk+TfKZgtjT5fzXs5Z9nV/si19m9+yX93Bce9gsR+4vIZ6SFUrCn/Mln5Ls
KfQS/lR5d5A8UfpP2j/MvlE875BsKP2E0Fm8teTfst9RvAX9UlmcKTnAvrTU
XcTbOu7sl7PHXqEw+gjafcXCkJRrqjDi8bSQLIz0EH5uYUjMUiXhz7mS+YWR
fvxKF0a+POv86ub0X+D8ukdyPWUljBM2COMLYo1sY1noNZKdQarvNYVanE1R
/S+mf+H8g9rafrW1ybXi/MgAYaDwquXVnJURThVOExoVh19DJZsWR38xgn1n
yeuE6yvGmZRrrX5CuFS4jD5I8TlF8g+FtUKyu9BDaCP9rpIHs48s2c1mTaXf
SvJv+j/xluK/iTcWbyH+i/hiyYuEi4UW0m8vWSB/5kueJ7Sj35T+uZIp6TcX
P0s8IV5aHP3g1ZL3Eg/hDPpW2TmJ8ybyfxxnaITj6B85XyH5r/Qn4K9wAvv+
nJ2Q/JH+uCz09os/I9lb6CM8a9lXeFroZbNjNM4+qnH2T43RR4k/LP67+LHi
y8T/Fm8mvoS1BfEjxZeK/yreRHyh+H7x5uKPiP8hfpX4V+IlGrsHiK8XLxXv
I75W/FDmYuKfi9cU7y/+pXgx8zTxL8Rrid9J/Jz+w6T/gPQPyP+m4ovFf24Y
d3Y/95rhKdJ/Rvq5clupmvqBQ9QPCE+6/HtWjHu2rCOynniE7D8o+z8xfxN/
Wjwpt63EnxfPFz9efLn4P7JzsvhT4gnpnyC+Qvxf6bcRf1G8QPonij8hzuP1
nJkaJtxAXSyLutKzOM58LRUewlzltIH9ao9v68W/FvpKvUZyrcdA7HwjDJR6
HXYkhwsb2d+WvE74SnyzZB3OY8jNHvHunGUSP1fh7qoV+qeK95D+ZOqn+N5a
kc+nF8c5p/EVo351k527JNtKf0St2Kf/XvI7tdkd4mNrRb3c6v12yol9fdQP
yc4yySNlZ4/4PvbexbsKH4ivktwu/Z3it7MnLv6t+Bjxkag5M8GevvR3id8p
PrpW2NktuVP6e9j/rxX1fZv3+bc0iHMAN2O3LNaGj6C/FJ8oe2cpLb3Kok+5
UPxKzpuJdy6Oc3BzhLnCKVKPlbyzOM7KwW8TWhbHfOUO+mbmmeKt8ac4+ppn
JAcIT4k/L/mH5BKXd3+pH5d8qjjODy4QFtLPFUebfJHzSGXRd3QTv4z4i58v
flpxhDWhOM733CTcXDHOctFO6CeO9vxsjGTnsijDM8T7lUX/0kG8D2MxfRZz
0rLwo4V4J8Yg+iCfD2L+N7pinA8a4/BOKA4+1mcMh9P30jcVh/1biuMcInoj
hYoZ5UGRxiChQibW7FEXZELvxaJ4t4u3uHifije9eHOLt7eusB5vV/HOVzWb
DbR5Db85VOq3i3hXqNjvDJW/NcabXLxTdojdX213Nf0WUYndD7Zd3Je/d3bI
//cuUvk7Sci6freo0f/3jlFjv3U0zO8f1fc7RrxnVOb3jOpb3drvEPGe0Gi7
4904/ovGO2C8DzbU4eAXbwo2tRnvAvJmWPn7gkfYbIz9ONxvHvEu0g9+0+sx
v9dV/mbcSr8fxjtij/t9L975WuF3ztDjnbPyt+Re8ptn6D2Z+N9bS/v8Btgy
vxPGe1m8KcZbZbzXxHt2vDfGG1y4w4y3pHhv7kW/Z4bdZ/wmGXYxK38vjPfD
yt+2I96UG++18U4bb8Txhh3v2/EGHe/WoaYeoccbb5Qhb5/x9hv1CD3UvE1H
HuCGMsact+ioW7wZV/72G5LwqDeYY0a9Ifzy996Q5e+pI3mrkffESBNvsI1w
OqgrvGdHXIk7b4jxDibvjPK2GO+KdvA7Xu381tdim2PG24EX2s1Cm5e/I3iB
zcrfR6M85/ktMN4S4421R10PeAeM99rK33h7xGa8O8abZbxDNt/uiMcc67V1
enhHsm/if2+qlr+x2ttm1B3eOS1/uxTJe668o0b9yHNdQK+n48J7qbyxyptl
5zjeT9mcMOY6fMx4X66j3ZS/u4qaezu5DoN7PEmree8tx2re5eJ9rvK3u5C8
DcZbXbzzhRlvePH+F2968dYXbRQ173uhx9tjvKP2t/OP99T+cr7y3mGRy7j8
PTvynjcQK9uMd8gIs/xtMyTuy989pP7yHhnh8D4Z79/hB+2Y+0i8T0fb4g22
QrcP7iqlbcbbdgmnuavzGzPeL8M/0tnL7ohTD/tH++NNNPoM+ibedytwGLy1
R/jUrUttF7MOrmvlfUl3lz3xoK7Q/ulbeR+V91JZF9/G2lphrMdvlfyuMNbX
kZi18Boya8msc7Hedb7XLPlRVLbX3Vh/u1T6U1m7FO/COrqwT/Zvlbxb+lWl
31V8hvjB4t1Z3xI/SLwba3XsN4hfIX6614pZMz5T+FH8ztJYE2dtfFppzHPP
Z23T66fE6d7SmAt3YH21UuyHnCGcKVwlVBOqC8OEeuxlCENY3xLqVgq//1RY
f7GWXRp2nvM6/R+FYXaW189ZR2e/gX2Hc1jDYx4t1CAeDUP2ZN9PKGVdtzTO
S70i/mql2Od8U/ItobBR6P3MPobwBmuwrLmKv84aLOu1pWG/HevB4m+zlsu6
svfR2E9Ler+si/c2sfOO58HMhw+wTlka+3Hsy3GGa2WliBP7auyvPVAa58Ze
En9ZeFf6/dgfKY29D9bJ+5TGGitrrZeIzxKvKd5L/LpKkV7Ksq/UJay7ej9n
o/JqU2Gs27J+27k09ipzhVSl2ONkr3NJaey1sOfSvjTWXlmD7VAa6++sw19c
Guu2rN92Ko25A/099Zvvhl5C70qxR8he4cLS//2PhLeGGb9567P8fVAkb4Iy
J8Cct2QZ73nTGDeMG7wxy9uzzAV45xgzxnjeweUN0fJ3RXlntPz9UMJg/MQ/
3DP24Afv2PLmI+/J8gYk74byfihq3oNEjzdi+ccI73bzXjfvkfPmNm9w8w8S
9HinlzkRbbr8HyNI4sd8hHgRj/J3zHHP++a4411f3lnkvUXmELyNStyxx9uL
hI8Zb6Jjt/w/GEjiWv6vFNLPnIs0lf//BInZ0NLY12N/j73WpkIz4drS2B9k
n3CA0ED8hdLYz2wsNKkU+7rol1WKPdsj7J49yTZu23zzdRd6COO8l8eeHvvf
1K05pbHvzv770tLYn2afeh5tq2HUkcWlsadKOA0rxV4g/kwojf3b5sIxwojS
6CvZw+ytOXNl/6uGczq8WXVnOs7ZjEvH2fFBpbHvyf4n+70thJaVYi+3lXB6
pdg3xu9jK8W+I/uPt5fG/u0pwqnC2NLQZ39yqv3A7BGP1eXvmiPL3y9H8n55
3WT8U5n/G9dLhuT/xvWTIfkHcp1k/FMZe2XJ+E8w/wdumAzJP4QbJUPyL+XG
yZD8u7hBMvzAzeHiX+XEP5aPSIbkv8dNkyH5l3JpMv7TzH+buXvNv4T5dy53
r5H85I/764RHOKMsm/geMmmo77vNhF3mu871rcYe8eLf0dxZPywZ8eL+9pHC
Ub7jTTjZvtvdzGbcZSfexPcWS8xush+Y1U5G3MmvkmT8Z5r0cKec/xCTHu6y
829j/nvMexb8Fxk199vR43/XxIN/RfPv6KOTIflfNPHgP9CY8R4G/0vGPXfi
cce/07nTzr+ZCY//wvKvZexx353/N2PGXXns8n917swj+X/4cOdZQ6eNMiG8
6sn4lzn/Oa+SjP+L8z/zTDL+4Y26ajL0+P95cTL+6U76D0qGHv9LPzQZfvD/
+aJk/Bcc94ck45/o/F+9RjLM+T/8wclwh1mtZPw/Hn+rJcMucaqZDLuYcYef
f4eTzhFORyPfIa/r+sHddOJX4nvnxIkwubte3eprbU595L56Lbu52nYJc5Al
ZrwhVEmonIx78NXs1/WuE7Qh3iQgv8i/3rZLHlxuPfKvnyV5doUlecA/pJlH
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
kwlz6mkyE5L6lZsJib2sTLRV3JdmIs8YG2tlYnylTlTLxBhJnP4tijZMm/7P
Evf/FEVdx2y700r6/xYetlnNTMQdfw/KxFyBOQL/52ZOwDzikEzMFQiPf3ij
h72DM2EXM/7hzVwEN6yTkmeoa2ci7ozz52WizCjPczNRh1DXyYQ5Y1pZJsZ7
xuq6mdBjfKififkE84h6mdBD3SATerhpmAl3jP+HZ2J8ZTxpkon5AXOHRpkw
Z17QOBMSsyMyYZdx6bBM2MX9qZmor7Sbppkw3yA0y4Sk3RyfiTZGnTohE5L8
PjoTbZI2ekwm2i1tq3km9FCflgm/qdcnZsId9fSUTLR5wj4qE+0Zv1pmoo/A
7ORMtB/qeItMSMxOyoQfmLXUmDVcff9ujRWtMhEO7eziTNQz6ukZmWirtLk2
mWjPqM/MhB5tq30m6hn166xM6NHOTs+Ef7T71pmQuG+bif6C/uN88b9c787O
hDvMLsxEHcXfczJhlzpxQSbs/uO8Zo5A33RRJsIn3pdm4owL51k6ZaJd0Z46
ZqIdou5sPdpWl0y0Q96ruMR6qDs4D3DT1ea8Y9E9E/ddOTvTw5Lwutkcs8sc
Pn1GT0v6kl6W9B/b/d3Fd1sL7vAwPqssTuTuDXuvJXG/gnsWa3mLS/Ii4WLh
QaG91WtkdoFkJY31n5aEfe5nzJI8QzjTY35roQ1nSwlD8teSuEPCXZKPPAdB
/yTOovLOl+TPJTE/ON3uPygJ+9xBeU78LPZDJV8QzmbPVLKoYZyBniueYU9Q
/P6SuH9QqzDutVdpGHKe9A8SLxFfUBJzlOOFE4RSzj5KPl4S93U6CB2Fl3z3
4Z+SmLc1Z34lvCL1OZL/lcT8po3T/1ZJ3IvhfgzzoOMcBnOlY62e5HSfLFwn
+3s4f8v7ZoXB9xaE+fcFcVaa+G3zeepEw5DXlERcNhfEu2UtC+O9M94/a1EY
56pR/1cW53GvLonwdvjMda/COCfN2fCshvEO2iDZOVLqbwrivTTuiBxaGPlL
mgmH+9akYWtB3LdmTtfKZcYckDScVhj3XU6z2WSntYXnmkjim90w/BtcEnNM
9E4R+gqZwjjrTd4RDul/2nn0e0mUFXEk3gUN4zz6rJK4y0KaUP+htH8m836c
gW8Y5+PniF9uvzkzvkzldLW+bX8qjfuz8BWlsb/Nnv0N3qseUCn229mfvtJ7
+x/Ifn/Jx2R/lfgg8cfFny8Nt/9Jvlgae4rZvpPK3v/QSrHfzp2+a4SPGoZ8
ujTOvd7Gfhz76N4LrCy3r5fGfiR3Sbm7yx3eR0vjXjT3o+vVjjOvnH3dLf2U
+LPie0vjPCv70zvFn/F++Z+S1Xzvhvs3lXzm9grv548QRgpp35PlvuxK75Xm
1o6zwpwZ3loa5mOEm4RnS+NOMXeLORPMmYn1pXFWmHMSm0rjO+kIoWlh9D31
hPpCiewcLrm8JL5/qIuU8wqpm0n+WBLfRs1sVp3zG/RPJXG/iPtE3CsqbBhl
e19JfG8d7XZ7hXBQYdxjqNQw7j/MLol7UeihvkqoVhh1ZYxwWGHEqVj2G0s+
JvsnlMb30jDvM/OtxTmD1d5z5a4td2I5C/JpaeTxJGGysKwk/NwneWlJvOvF
HSi+/xoVRhiHNoz8WCz9IZJ1hLpCzYZxf+oh7j2UhP1dkrWkXyb+MPeMyuJ+
VJ+S8OOTglDj/uOCuC/VXfZfx0/Fra/4h6SzNO6Ucre0png38dfEa4t35Q4Y
5VMa5y9eKQx1F+mvJG9K4z4jd+Uac/5EfBX5Jt5T/C3xMvEe4m9Q3uKXir9J
uZfGWZjVhfEty/4838l8Q3OvF7me+lIadvpxrqM07pxy95T7l52EzoVxB5ex
irGrk/x/gb5LdvqIfyDexHv+fLfzvc5ZmzXkkXBsaXzTcpf0yNKwc5Vk89L4
hueuatPSsN/fe+x8q38u9JL/70k2LI2zPm+Lv1MY53HeLQyzZUJXoRt1iLyz
ern1uhfGnVHGEsbS59wP0lc1aRjyq5K4n8k9zc9L4r4i9xa/KIn7yj0Lo19f
Yf96CE8Kl9mMO370j1/K/rOSfRwGd5ofcN4dJzvXSm6hnotfJ/5dSeRlP7ch
7g0yNmwoifusxPe+wrj3yP3Hf7m3UhKcO5HcFeTO4LfSO6JhtLGvS+IuIm1v
fUnk0dDC6A+og1e6LZKP1xdGOziS/lnym5K4W8gYv7EkzkNR5ksK477yIqeH
+73c882URh5zj4V7LRUbxn2ne0viviL3FmeWxHjPHSTuSDH+Z1vdyXpJ52Nh
YYyd3e0fd26ml8RdS+5cUibcvSEM7l6iP6MkyqOCzZhXZTmMITL7WXaeKYl6
TDjcy2EOxLufvPFJv/B5Qdxx/Lcs7tsMlP2/eKdR/ErxX8VXc3+pJO5mrhXv
XxL1Bf+4A0Sf+7Xv6PxdFv5dVRLjN++ZEh793VcFEQbjN++TYvYP78dKDiiJ
sZ15CmYnN4w7s99Lf5jwC3eFJEfQHxXEvVHOTz1TGPWOe6uPuh1wV/vpwjDj
zjn1vnppnL16vjDqHffwqd/VSuOuNW2+amnczeaOdqF45dIoa+52cz7rRfGX
yN/SuNPN3e6KpWGfu93J0rjTzd1u5m28l8rbrpz/esLthrvutKWDORujNPwr
808kJ1G/xVdJjqb+ia8siTkgZYVfN1Ie3MMqiTOMpJU+YIrU/0j/Y8lbhD/E
XyuJ+7uPF0bY3N3lDu/4krj7+4jza4nrDXWTu+YdXTevr6s2UVnpaxJ7MCd4
b/tb7/GwD9O4qupPFZW3cJj4l5JfCUeIr5f8WmhSNcwxGybUE+oLQ4Q6Ql1h
ycGKg9BBWKnviquEAcLhVcM//HrFegOFF4R+whV8x1vvaqFp1Qhzg9BIfF2V
iF+Z+GeSa4UW4jsldwlHiW+U3CScLL6jSpidKr5Hcq/QsmrY3S28rDCudPyO
lP43VcJ9ffFPJD8lPeIfS64RmlWNuGCvYdUInzg1qBp2iVO9qmEX9y/J3/4O
4zWn6f/RdN7xPpfvHz+Hz+eck5F85jmJlhTt0tDQLopS2ZSMosiqZCSyZ/aW
RGW090QIRUQ7DUVIQ9Lev9fze71+f7we131f173nda/3uzv7FqY9hOeFjkIn
4Vmvx7jD9Zwpsie9rmMd+ZQp67knvPZD9rR5rO3eEO4Q+rCOF+4VJgjPWE4c
nwijhNHCeuFOoS/reGGmMEuon45youyWeo3KevRRr1FZg64Regu3CauFnkIv
YZ1wu9OxynlFttZukT3i8AjrdfsjrBeFG90mHnM8rGVfdhuhTB83j/y/6byS
hxdclvj/Qhjv/J+lvOxORZs4Q+avRHcKF8i8V/QH4cJ00H3CRemgPwpVZH5V
dJmQlXmV6GohI/PKVNjTMr+WCnte5tdF1wg9ZD5EqC7k0uEPWUrmFanwU1Xm
5amwd5e5mv30tL8aQm/hUOEw4ZZ0xFEq3Oxwsd9m+eHC7aa03xvTEV/afkjX
WqFLOvKD/5ssJ0+9HCfxdTYPd7cKBzt9XR1WmdDN9GCn+02FvT4VaYduSIWf
N1IhI2x4b6UiDuhG4QCZnxd9QaiQDvqiUCLzc6mQVZL5JdGXU5FX/G0STpd5
Ryrq9ZR0jAFfpKIMkNOHT00H70vhNJm3p8JP3XTwsJ+ZjnaxS6iYjviJr0jm
Z0SfFQ6U+ZVUtInz0zGu0IYOSkcboS4pD8p4XSrKBUr+i9MRBvmpnI58EFZ5
mZ8UfUpIyvx0KuJLpIOHvUDmx0QfF8rJ/EQq/BSmg4e9TzrGIMawbWr349wH
PhPGCGPd59nTP8N29gHrWX6G7fhhb+5sjxOn2c84uz3L/Qo5+3mTqsY+IHuQ
06rGXht7bFOqxr4h+3lTTZFNtltk0+2W/bwZpuzzLaga+2tNPB6xx3eZx6dL
bJ9tHnt1c6vGXh77c3PMa+ixjzSyH3mf5ezpzhcaV409vwdMiW+e5ewBL3T8
7Ck+aMre3kOm7E1OdNjk/xvngTR+53STxtNpa6JfUZa0taphPy8V7r6nLFJB
9xK2zP+JFjAuMT7JvE+om4oxHf+npKKOGefOTUXcjN+npoKHu3q0ZdHd1G0q
4t9JHaeCIhtZNfZ8qePG4v8p+hflkQr6N2Us88+iv1DuMv9UNewNUsH7VbiN
PpkKPeCCVOSDdDeS+Y+qEe4lMu+vGv4bpsLfb5SxzP+I/kv9M+5WDXdXpSJ+
ZJenwu3v1E8qKOF+XjXaMW1zRNXYsyY/w6rGfjR72+8Ig4TBwhbhbtvfEvoJ
/YV3Lb9H+ND+hwsfmRL2B8JQyxZXjT1c9nQ3OowBwhLzmC/fc3hDhPdN8b/J
bu8S3jYdKGw2JX1fV42+RP/YYzrDbYj+NtntgPY90e1pomWLqsZ+cTPX/VSH
RX1Psf1j52mk28RkyzZUDV2Acvm0aowXjA1b7ZbxgHmdM48jnQ/OKmq7DI62
nfmbMxjOatD1OJfiPKqzeZzJoBtxZsMZURfzsN9iHn662R/nV+gInM9x1oRO
wTkTZ4+3Ws4ZUXdTZL3tlrOdnnZbw/VJu6Ct3GY5Zzu3mx7hOiFPdVwnUM5b
0DM44znKZVTLee5rHvaHq8bY0NR1ib/jXPecrdIu+7j8CIt2caJltEHOeDjD
uccU2SCHgWxwOvRydORB6dCtsd9j3onWT+8RhqRCbx4qDEuF7j5cGJEK/XWI
ZczJfYV+nqfR7+9Mhb4+UhiVivntFqFrKtYBwxzWcvO6eZ67w/5XmHdrKvTj
wU4T+vIg29GV77Z9idYMzYUWwmKhme2DS5U/4QThHtMThUHCcZYxH9/s9C3y
+gP/6OMDHcdbzl//VOgmdzrPG80bkApd4S772WTeXZ6nuziO15yn7qnQ+aA9
GC+FxeSDMU94mLQwppoi+0VYICxk/DN9kPFVeMCy38x7KBW6xRxhbir0lHuF
CYx/lhMHevpMYVYq9HXo7FSsV0YLY6hjldFJwsmloecS3n2p0HHnCfenQjfs
nYqxHF21p9ArFfrL7a7XVc4rsrV2i2yfwyOs1+2PsD5x2yEd+x3P/FSsBWmD
tK2fzCP//whLhUdSoVvNdv7R3cY7/0Nc/+TnbuFYt4NpwoXCRUInoaqQEm4S
0kJG6CgcZFlroVgoEVoKSaFIaCEkbG8rHCBUEHoK1YUaQhv7Q9ZcKG8/zYRy
tvcQDrGfXvZ3qHCbcJhwuNBVKBXKhFuEvO03Ou2ke4ZwsXCJMN35w36d01VR
uFnI2X9n5zUr9HacxNfFPNx1F6o5fd0c/8HCrabI2gsHClWEDqaU3Q1CZctG
CnWF04QRwqm2TxLqC+cJk03PFyYK51o2VbjAdTZcOMX+BwjHCLWFu0zrCP2F
oy3rKxwl1BL6mSIbaLe0iWGl0d4Jd4rjJ757hbOFc4Q7hCOEI4U+pjWF210/
yK53GVcS2pmS/wkOg/zcaX+kaaxwplBPGC+c5fjGmYd9lMvsdGGMcIb9jDYP
O+uYcW737E2Mtf0z92nszdOxfmCt0MKUNURLU9YuzdKxZsBd63SsQ1hXtTFl
7dXWlLXXdaasgVo5DPy0S8cajLXLDaash9qbsla+Nh1rFdYljBfsCbFP9K/7
9KMeI9DhGrnfo3de6b6OrtnAfR7a0GNGI7u73ukiHYx91wpNPRZeY/vfHoOX
ehy92jLGVnTKJh53m1j2gONH1tRpp7yuEf5LRX46pmONx3q9fzr2gNiX6peO
PSnsA8yrbX/klTXbHelYi7M26+QwWJP3Tcf+Ef7vsj/22IamY0+KPa07vZ7D
3RDP7cgG2i17dXebogcwBl/u8u3gOiHdjdIxJzEXXZqOMZc555J0jMvYL0sH
jznq6nTUGflokA4e81XjdITBXHdxOuYP/F+ejnmLeenKdMiph4bp8IesSTrG
d8K9Ih1uSdNV6XCLbK7rnDwsct02S8XcCW2eivnvnFSse6akYu10geeGsy1j
zmGtdbr7z1mWjTaP9dBU+2ONNdHh1U/F3kMn4UZhcirWacSBrsO6izXWJLtF
xhxW1/GhE51sd2McD+st+m09p4N9yenCjFTsR0KZv79yuMS53fkkXTtMkY11
eITFftY0h7XLZUGeRjiNpGmnw0P2ovN0Uyr2HjqnQqd5ybzOzhPrSNal6D7H
CLVToTfVEo5OxV5DW+G6VOxBQK9PRX9rIbRMRdtvJbRORb9vaftj5rVJxd4G
/tqlYn+no8t9ieuZsNgr6WAZeyI3CO1TsY/S3rKnHQay/k4j6X7c8bR1+bL+
ZP2KbldHODYVeiH0uFToebUtQy88ynlGT6xp+yyHwTiF7nyicFIq9NoTbKc+
L3Z8Qy0/2fV0kWWDHOfxqdCDj7f/mZ7nLy2Ndszaj7U9bZc1IfYTpNd+kpF+
Jxwv89ZM2GvL/IHoh8JxMn+cCVmdbPA+Eo7NBkV2vszfi+4VWsqcFIqEY4T3
MxHWRTLvE/1RuCAbbn8QLswGRXa0zO9lws/hMm8SfVs4Iht0s3C2zF+L7hHO
yQb9Rjg3G/RboX426HfCedmgpI/1QMLpO0XYJt4XQnuZDxSqCEdmI54twkky
fyb6uVAzG7x3hBOzUWbIasn8bibSzRqjvONgzVDOdtYQhbZfKfwlt38LV2WD
/iM0yQb9V2gg8y+ivwqXy/yb6O/Cxdkov/1CY5n/zERYjWT+IxP2TzQGjhJG
C1dkwx+y6dQBYQgzhUuES4UZ5mE/S+53Z6J8G2YjfuK+TOafM5GmdjJXEioL
N5hSdm2EEuEAoZXrv1hobYrskmyk/SfhepkrOqzrhAq2X5oNOfG1dXjIrs5G
2fyXiXOhApfpNdngYd+uPE8QJgr1ZN+Vifycmo16/lIYkQ17XWGYcLLbQneh
mnCIcJiwMRPtb0Y2yp2035eN+qBc52ajjLDPM496uFU42GHNcn4ovznZqFf8
zDYPew/HWV3oJdQQDhV6moe9t3mk62YhJ+SF4U47+bkjG/2E9nub3dKH7ne6
aC9dhKz93ySkhYzQTShzujubh7uuQqllNwop+7nF8SOb77Bp1w+6nqiTh0yp
q0nZ6JP0xU5CVYc1MRv9FtnUbIwLjAeT7ZZxZYopso7CQfZPvdEv6cPUJXW7
XeiQjX6Mu9OywdshnCHzV6I7hdOzwcN+ZjZ4tJUJ2RhTSNP4bPQHxpuZrn/q
cno2xjLaxIJs9GH67kJT8v+AywPZvQ6DcEdmI62ka1w22ihxjDKPdE1zGRDH
aPNI+9hspBU/Y8zDPjgbYzdj+Zdq9/e6D2wTxgnjDc6uOM+cno5zKXSuN9Kh
U/ax23p2NyYd51tnehw53XbGldNsn5qOcy/Ou2Y4vEvc9zgfre+0EOc5TtM5
ls1Kh+6InrgwHfoceuKCdOhw2OemQ+dDH5yTDt0R+33moffNdJyENc889NNp
Thf5nO148D8/HXoneuWDjhPd/H77Q/ZwOtYe6O8P2C1peshukU1Jx5kN+Z/k
vHI+PNkU2YvpODPjTOyxdKyXWCe9ZB5nYq+n45yMc7mXzeM8bXU6zu2QPW5/
rKueTMeairXLC+lYAxDHo+lYXxHHU5azxnokHes3ZE84DPy/6TpnTbDG8XPu
t9aUc7+l6VgH4n9FOs7nOLtbko61IrJFLifWhYtNka1zGLSt5ek458P/q+k4
a+TscVU6zjXJ5zLzcLcyHeeXyF5xeeDnNceP7It0tGna13rngzXQ764n6nBL
OtYz7Gu+lY71Feutjaassd6xnH3Qd03Z+/xQGCYMFz4yHSF8m442R/vd5DBY
b72fjjUV660PTPH/nsND9rbdst7abEr6PnbYI4Wd6WhDtK896eir9K2v0tHO
kH0ujE1Hf92Rjv6G7Pt0tHX6yjf2R1p3OTz663dOO+6+Tkc/IY6tjp/+vdtu
kX2ajv7PeDANXc06xL/paFu0u0Qm2tzTwr509E/64g/p6MPYfzSPfvZTOvoh
fWu/edj/Tkfbot39bDnjwa/pGCPor7+ZUse/WI7sD9c57fFPU9rjX6aEuyEd
bYR2sNflRPr+cz7oowWZoPS5ZCby9IxQmAkefah8JvoheS6XCR72f5x2yqUo
E/6eFSpmYiyg3x8g8/Pp6LvFmZA/J5RkgiKrlAm3jAcVMuEW/4OyoYsz1t/j
8R49dGg29FTmQ3R/zle4l8Ga4GOft7CG4dyIcyfWKB/53IY1CjzOqVirQJFx
/sZZFOdLmVTcNeH+BeshzqIIK52K+yjIDk3FGRh+aqTi7Ac7ax7Ow/DDeR7h
cU7FXg6UcyrO4jgT5Sz0d1POPf4w5QzqT1POyv4y5XwslYq7PqSjcirudnBf
pkoq7uVwb4g9I+LhvO7AVMiRsQ6Dx5neQalwy30i1mbwSHcuFfdRuFdSNRVy
4sumojyQoVs/LCyy/g1dbF15gbDQ+u584QHrtQ9YxhpojjDX+v1DDgud+0Hb
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
xjXGhVfysedFWC/ZLftho/LRj0n3MsfDXteKfOydsac1NR/jOGUzOR/zAWU5
xRTZvc4rc9QEU8b75Q6PsCaaxxj/cD7aHW3iNcdD/idZThwvO42ke7HbTnO3
G+qHPvl6abzBY4+etQT1wNqevRP2HNmD5N3bOpc97+HWuk54CwfvzXy8O/xU
9LN8vC37XHSbcI3M/4kW+D3bD8Sdj7v8+0V/ysc7QPYuN+Tjfj+8n2lTMv8i
+ivtrzR42HmbR5z44U3gGtctb/xed93ytu8t0Y35eA9JukgTb9c2ib6dj/dw
H4p+lI93cdCP8/GG8Md8pI+3iaSLsHg7uNLti7eCq91eeDu4yu2R95PLXf+8
UXzNbZM3iytcVw1LI0+/CZeXBv1duKI06B/5eDv3jei3+Xgj97Xonny8F/xO
9Pt8vJfbnQ8Z7wZxi4y3dLvyIeMdHv4Ii3eKr7qdfuk2R1vj7eIyt7Xt5tHW
eMdIu8cPdUv/ZLzhTSnltDUfb/N25iM+3jd+6TAalUY+/hQalwb9S7iyNOjf
wlWlQf8RmpQG/Tcfbx2/cBp500l7oT54r0ibQsYbQeLZkY+3i3vz0bZ4Iwjv
q3y8a6SckPFuEN5O+x/v/PNm+hPnj/eUH+SjTYwqUxzC6cJIoa7tI4RTbb9P
uFy4QpgrNLR9jtDA9tnCZbbPFxoLVwrDhVMc1v1CI8tmCZfazzyHjaynUF2o
IfQQDrG9l3mHCrcIeaFUuFnI2d7VvDJhkdBUaCbcLhwuHCE8JFwjXCt0EbL2
383+DhZuEw6zn85Cxu56O35kt9ptNaG7KWl92GET94PC1Y5vgXCV0KQs+hg6
DfoL73Lpu/TVT/wulDegk+SuvnCe8JnfiPKudKLs51rGm9d35e+9fLw93SL6
Tj7ex76fjzrmPSo83PE+FrfIeOe6OR9+eOPKOIGdt/S0d9rKZMd/vjDF9AJh
unCRcLEwVjhTqCfMMO8SYaHzSv5nmkd9T3UYFwrj7O8s4V7hbOEcYZrlxDFG
OMNxTLCc/I8uizaLbLzDwP8drucjy6IPjXMf2OG+zrwxuzTGWcbdOaaMVXNN
Gatm+Q0W7uaVxphFX7/flL4+35S+/oApff0+h4GfhaXR568WHjRlrnjI9Frh
YdOmwkul8V6dN9yLzONN+ZOl8d6bt8hPmfIWeWlpvFfn/fpjpfGmnbfpjwqt
bF/gdJGOp+2PN9wvlMY7ed6aLymNd+yE9XxpvJNH9mxpvAPn/fdzpsiecRjI
XnQYpPtlp72L015YGu/hV5TGO3Pely8vjXfv2F8zj/for9gfb9nfLI332Lyr
Xm/Km+9lpfFOHv8r7Y939m+Uxltu/LzqMHC3rjTO4ZGtslve8a82RSd43GXG
W/+3SuM9OW/N3y+Nbw3w7YS3S+MtOu/LN5XGG3Xsm83jOwQbnEb8bzGPb1R8
4DB4j77RYeP/3dL4tgXftPjQct7Bv2N/yD4ujXf1vLN/z25J00d2i4z5fqzb
+hPOB21lq/0xptDvWecM8Vgw2HbGhkG2oxewxmM997HpSM8Twyx732EM9dyM
/o1evNHj2QDPzbMs+8Bu8c+8PdOyTXbLWu1t04Eeg6Cs25jLZ9gPcz/rAdYT
e0xneP6jT0/2nAed4rmQdKGb7zIP/RT9aIzLa4vjIf+7LSeOrc73KI+DUHQC
3vyja6Ir8H0H1tWsuWnfrKWx095ZU2FHh2MtxLoKXQDdFF0bvY91FGusn01x
94PTy7phnylrHfQL9GDWRuhND9nOmFHgPvan5cTBGIN+gT76q+NnrfabKf4X
l8a4Qp9H/7vfafrbaWSfgO9fsP5nTc93MaCs+/nOBflGRvysJx93fKwzsf/o
tBMu305g7cF6gu9VsL+A/R/Hw9qabyogp3z/NY+w+MbGc/nYz+BbG1D836nx
vaZwlHCPcIJwojBYON72dkIlobJwvVDR9hvMO9D6QTmhvOftAqHQc88+xfdj
aczf/5WGjHlsv8w/CR1kriIc5LkN3s+loQP9Ivpraeg38LC3d5z4uU6o4DS1
FQ6wnXnvh9KIu5PMVYWU597vxdsr1CmL8YIx4NiyoIwTzL2kl/Q1dT7IWyuh
SCgW2ggljq+1edibuwwSQkshaT8tzMOOnkeefisN/Q/6e2nobtA/DOazRXbH
nMdc91dptLklLpeFlv1pt4tdRgss+93+COu70piPmbe/LI3vd0xwWTB/M29v
N4/vi6AnMhYzln9bGm+q8X9cWZTTVtfTA46PsmbOZp5HB/3D6UJP/dNpR5eF
/l0aes0/9LHS0G+gtI8fnBbCQndknmDeQGckLRvdnogHPQI9Et4m1xk8dIrv
ndc5bmfzndYvSuN7IuSf9o2++KlQuyzmGNoEZ+rcm+EuDGfw3OXi/lRHU+5V
tbScOzKc45a3H854uWvCHRPOeMtZxvk8d0e4c9HJYXCfi3P6Ax1HK4eH/zYO
g3sxnO1wz4x7Z5wjVbO9p3ncL+Psi7tfOe+zZGy/2TzupnF/gTU694aampK+
G5yuA71Pk7b/W+yPe3acr3B3jfP+G5123PVy/Mi62i139LqZcreOOxEVnf+2
zhN3jq4zRYY+u9f1zxhEnaCzn1QW9PPS0Fv3iH5TGuuhba5PdNavS0NWqyx0
AuZ5xjZ0CHSBY8pCF6GOGe/g4e7osnCLDH0XXQQ/6L+0O+yMhbR32gp68zfu
E6wfvnXfOrks0kia0Ke/Et0p1Dky/j20sk7sQ7AXxb4s+wTs1bKGYX3wndss
+viO0vDPuvFL90t0892lkU/WlvBwh+6/qzRkrA+/cP9G1yf+XU7TOLd70jjW
9h3u63xn6POyWIewnthmyprgC1PWFjvKYu3EuuorU9Y3O01Z3+wpi7UN65jd
ZbFWYS3ypcNg/bHLbpF9Y7esb762W/xvt1vi+7Qs1iqsY24S0mWxnnyqLOYk
5qinTZmXnvTcgOxRj92M0494XMb+mcMjz88LHctirniuLOYk7BuEvkI/4QXL
bxTeFPqUxfz5jONkXnrWFP+flMW+AOl+y2H0px2VxR7BKNtpf8dYXsv2AebV
djy0S9ryXeYxdy0ui3m3udN4lP3fXRbzGeP0kLLoS/ShgfaHbFhZtFf60CC7
pY0PtVtkj7nMmOuWOB7msQ/sjjA2Oa2ka6Pzg/1t84hzi9NEPJvNw77U4VEf
71iO3vFeWegipP19U+J713JkHzp+9kU+MmWv5WNTyvdxpx294AlT2sSLrkPa
EXsNrJFYG7E/AmXOY/+Du8jcQWZfg3UOe5/sj0CRoVOwBmNNxr4FayfCYj+D
9RJ2dAHWnKw12RchPGToL6zTWGOh97AeIyx0GnjY0Rfwx1oT3YV4WOfR7lmz
rfI4yHfNZnpc4Ntt0z0OTrfsK/fvyR6PoHzHiz5EeCs9RsDjW2LMzegXrInZ
ryGe1R5fpjoOdDjWyaz5mLcfKY218n+myLg/xx0o9oXRn1hTURboU/jDvros
9qrYl1pXFntM7D2sKot9K2SvlsX+FPtVK8tinwjZMvPYr3rD/ugrrzs89pnW
l0UfpX+sLYs9KeJ4yfXPvtQau0X2SlnsZxEfehvrc9buyx0P+1uvlcW+FelA
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
az/KjjaO2/MS0dah9V2vndy+qcP+Qj+naYDtjK9NRK9KxNh0dSLsjE3XJMLO
+IucsqBvNxWuTUTfbmY7fbu57fTtFrYX2C1h/W9OFVomYm5obTtzRRvbmZPb
2k776y7cmoj+cJ1llOONzhvleJPt9LkbhHaJ6Ff06faJ6JftLUs6/hZuf53t
n37STeiaiL5IGIwRpebdkoi2e7PQJRFt+Rbbs+YR1sFOL2HRT3o4D+g1FZw/
+sbtwm2J6DPQ3onoN3dYRj/raf+0iUHC3YloI4NtP9T+eiWiL/ax/2PtdmAi
+nQvh0V7vMt1z7hyp/0wpvS1nX7ez3b6xBDhHuFMYawwJhF9Y7gwLBH9Cjo0
Ef1mhGUn2B9prSuMtKyeMM5hnWR/xHG6MFoYlYg+PN7uTjMP/4wNnH3dK5zh
tODnbPPww1yFPrKjfOidOzzuo0czFjA2nK5mOVoYJZxmOlKoazpCOEsYL4wT
zhbutb2eeWNZFwhjHNZxwiDhbuFEYYhwj3C8MNiyM+0PPydYjuwkYaj9nCwM
s/0UYbjtBxTEeWGbWFL/75ySc7wS87CX93lhs+h2/zu3w364cLtwm5D0OR+y
akJ34VbhVOeb+IocNu5qCL2EnsIhQg/7qW4e9iOEOxzHYY6nt1BTuFPoI3xR
EPd4uLPzZUHcN8K+rSB43P35pCDuFnCPYGtBUO4dfFoQdwiQ7SyI+0/ch/qq
ICh3nT4siHsPnP/vKoi7U7j7uCDC4I7A9oK4z0TcOwrCH/ZyLjPOQj8riPtP
xPdRQfgj3GNdtwOF2sJdwgDhKKGv83mo8015Hel8Uy6fF0T+CLeOw8B/LaGf
/VfwPg77Pcc47P5uBx8I7wtHm9fPbec94V3h64K4T8Y9sh+8d8ib1x/L4m0q
71aJc7PwtuOGbnKetlhGva0V1jgPrwurhQ7Cc8KzrnN4q4ROwgvC8wXRjknL
O8KNwouWdRZeFl4SbjJFNshutzivpGWj8wd9S2jvODnLH+IyIM/tCuJsn3Pu
BsKcgthDaVgQ63XsHZ2u51wna5wf6mm98KbLkXg2uA42WEY7Xuey6GO3b7gu
37Csi/CK83az8KrttwjLbOe6ZlfzcnaHv4MLos91K/jf537/x6OcyszDT8Y8
yizvMPBfsSDO+LkvsN91y3vlygVx74GyUTP4X1vmzP8cYUJBjF8V7I9xZJ/b
CO0j7Xiotyqu7/ZOx3Lnh3StsJ20v2Y7Y8FK2xkLVtl+oMMgTecVxN2HScK5
wkSn6SDXE/HVtxwZn7LvZFkl54k8p5xGZPQJ+jr3g2gv3PfiLhj1CeWu0CKZ
/xT+KIj7DdDfC+IOBPQ31xN3gLhzRP1BuVtBvUK5I0mbhXLPgjxzH4h7QAtl
/lX4xeUCj3tDtG/c0qcpO3jEQR0w9n1REHMJdJvLYrtlzEWMg4x/I00Zw5hj
PrWMtsz9Le5zUa6MiYyF9Evue3Fva4T9MYYx33xm/5PslvFvuOUfutx3OB3M
UZ/bzzinETv9hziJg3omHu5tUffctaJcqntfoUe52J9ircIa4hDzupeLuynl
GXcL495Pd9+H4O4LvMLC2GNDL0dPZ38N/Rj9eqzncHT5UZYjG2MeftiT+qh8
6ObDTNHHuYOzy+XF2JEojHQwliQLw854USJaXBh3Xv4R/i6IseSAwpDRvsk3
eWaMo56RMU4VFUZY3KP51/65T0Sn/K8gxjPCxt0Sh/1XQdwBIt+4W2webZd7
Ov85LO4YMdbvLoj7TPuFHwtizxK6z/Fxh/Iqly/nDZwb4J/7l00cB+cE1zhN
0Ktd7k0to1ya2z955hyltdPNuUJLl1cLu0ua18Jl0dZ+iu0PP+SVdHHPjvxB
uTu8pyDuPTOHMQ9wR5P+zBzF3U3sjMHc4ePuHuM0/Zs7oYzXUGTD3JYZG5jP
uCeKf+YNxgnuDFJ2zJPoB8wl8Lg7yVzEfUrubDKPwcPO/ASPsBq53Oe5bkg7
d5wZV6Dcj+b+17fCNwVxDwxK/tjf/86yqa5D2iLz1veWMd9wF5O+Pd3+qG/m
tB+EvQVxd+0n1/0c8/C/oCDGoZ8LYt96n/08YN5PTgv3pylr5jDuehIfcu5t
cweZdHD3mnvZpBWKH+LgviYywuXeJ3d7iR+KjLmR+iFc4ucOKO5IK3eCuftJ
OogHO20WHu5Ie4PCSAfjMnfEuWPOOE25YucslzMJzqY40z3GZxfcM6jpM5DG
RXFGzvl2I1POyRv4TJrz3ivM45y8oc/FkV1uHvYaRXEvgfPnfVKaL+J8gvME
h8F58jfinyt6jlDdbjm7PsSUM+1L7ZZz6QuK4qx9isOaZntr4THhUaGN8Ljt
bYUnbL9OeNL264WnbP8hGWER9tVFcaeBuxXnOx7u75D26Y7vqqK4K8C9gIuL
4mwe2ZXmUXaXOL3I9iYjbML7Phn0POG7ZND6wnaZTxOtK+ySuZ7omcKXyeCd
Knwi8wmixwtfJIN3ivCpzCcWhWy3zGcVhf8dMp9eFOH+lYz0Ubc7kxH2GcKf
yeBRz18lg4efP5LBo55buVwfET4T/6SiiG9bMuI/WfgtGXVPW/g9Gf6w/5SM
+qM8fkxGeVGW+5PBw/55MsIg3F+TEQZt7ZdkUNrL1zKfXRR5+zkZPMKt5jbC
PYhvk1GWtKc9yWhT+Pk7GXVG/ls6H0uFa4riLgv1/bHcHCd6rPChzHVEawsD
Zd4svC00ERYKC1wP3K0Z7DrjzscI1xN0uMt9lGV3OYxNLj/uVQxx/eF2mMtx
mGV3y90Wxz1YeFd4RxhkimyI8L7wnnCnsF54UxgqfGDZvcloQ7SXYcnI2wdu
F6Odvr6yb7D//sJG4S3hHodN3H0c9hvCAOcDd3eYt07oZ38b3I7GOA7qgPtt
3I+jTibYfkxR3Cvq7zqbaNnR5vVzfXBHaqDr4y77qWPeXe5L9FHu3DUpir5L
/7y2KO4kUcdbk9FvqOOmwiLLmgtLhMVCM1NkLdxGkNVyWrijVLMo7h71cR8Y
4nZwvNsC97boe9xdG+v2Ot72M82jXI5yeIRV32kn/0c6bO46HVoU9716Od2D
XBaHFcXdKWRH2C13xA43RTbedU4frVoUd8K4e1VF6CC0Fx5JSKcR/hGeFYrl
tkh4WOY/hN+FpZb/LSwx/UtYbPqnsMgUP08LSYWREJ6TuSQZ4T4ucyEbJ8Kj
Mv/nuB9LBA/7C0IFmQ8QVsqcEU0LryWCpoSXZa4sWkl4KRG0ovCKzAcmQ/Z8
IsIg7ldlrpIM2TOJyB/pezER/ohvucxVRQ8SVsmcTUbcyxLBw//rMudFc8KK
RKQFP6sTwcPPU4nId3nhCZnLJSPPTyaCh539vPeEdxOxF/yAMD8Re8MLbGff
9nGXDXvHDwoLE7G3C4/yY897pjAjEXvb04Vpidjfny3MSsSe+AzLLjUPPxfa
7dRE7INDufO0VihTGkuTsUf8hNPBnvGTtjdxWkhrc7cJ2gL7j+87b+xlfih8
kIi9yQ8sYy/4KYfVzP5oO+xt0+YeSsReNvmjbTa1HFlL82iP19gt5dLCPNJx
kNs47fsht9/fErGv+aXwBW3Q/Z+x4Z9kjBfMDeXc/5GV97iA/YCi0CHQKYqL
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
9jzEnMP4Sp+/0n21aUmME4xTTTweMDZd4zGAMQvaxP38Ws8b5T1eMJaUlITe
0NrjbyvPmQnPN83d51vafkBJ6Cv4KbY//FQrifmbebtCSegouKvofow9XRJz
MP0547kT+4EloTOhgxzk/s2cWcUU2TmeA+8VsiWhW+D/YMfJnF/ZYTB2lJmH
XpAvCb0EPaXUPOw58wiLb11sL4455pCS0DPIT42SmKfRF2qWhD6EHnRoSeiF
yA4riTkb++EloStgP6Ik9CTsx5WEbsH8f6TDQHasecz/tVzP6HRHmRLfMSWh
o9AOapeEboG9jv1hr+40ku7jS0IXIb4zhbHCGOEkYagwRDjR9B7hZGGYZacK
I4ThwimmyE6wW8KtK4y0u9OF0cIo4QzHg/0083BXTxjndJwljLf9bNcndt5i
cUefu/x8qwU9ZUdxfEeE+f9zoZHXCawJGiRjrcKa5jJT1mGNvX7A3RV2y1qk
odcz+LncPOznJuNsgHODSx0G65sTk3GfgDP/85Ox18Nav34yzhXwc0Ey9nSQ
XZiMPR3sF3m9hJ0zUvaA2BPiTJS9JPaiOFdkD4U9lYx57FeVmoefusnY42D/
I+cw8H+C08U9iIu9BiO+45JxH4K7Epc4H8jeUJlWEz1YOM/5IA+nOmz2S04x
5U7Eyabcm+CsqK7dclZ0mtPF+dKp9sf504lOF+dU0OOTceZ0ksuSM596omcm
4+wHekYyzr6OFa2TjLOls5LhjrOu450nzqVOT0bcnFPhD3vaZcYeHmdcpJv4
OD/D37GOgz0g9qLOTsb9j/H2D2+U/Qx1fZ9mHuXO+dkpLo9z3EbudR7GOlzO
y9nTYe/nLIfNHhVn6ddbVs88/HA+386yA+yPfa+U88EeJGfz7FGyz8R7m83C
24l4Y7NJ2JiItzhbLOO9zppEnMn3MuUcvqcpZ/i8ZeKMnzsFvN3iTgD3EXhL
w9n7O4l4b8S9Ae4U8H7pJfvpZH/4GWS3xN3faXkrEe97oBsS8SaKuwXcfeCN
1LO2tzOPM++GPv9jP+Vyr92xd3b8xN3BacQ/b4reTERb7ut41ififdF6y3jz
tNZlcYfdrkvE26d1lvG26lXns4fLhrsVvK/iXgV3GY5Oxr0f7u8ck4z7Pdhr
J+Pe0gC314G2H+s+h72W/XGHqHoy9jp7uD8Mdv/k/kQH1zH9kr1j9m65W9HR
soPNY4yo6naBrLLbBW3oKMfDXacaydhLJT7elnGHY5nLgjHlf+OQeeS/u/NN
nrs53/ip6fC430SZkQ7GqkOcD9J6qNDb8V2ZjH0cxtzDk7H/y17vkQ6D+1BH
mCLjnLuOy5K2c5jDo+0c6nywXmF/hP0S1gnneK5gzccaiPUSawvk7K+wxoCy
H8AaAsqeAWsJKGto1h7s6bDH81FxzLvMn6zN2NNhL4T1G3slxM36DR521qK1
PQ/zrS50F3QZvukFZY3Cd7PQP1i78P0sKLoP3wxDv0GGPof+gT7CN8XQb5Cx
NmL9R/r4nhf+0KH45hdrHnQidFP0HuLmu2Dw8I++SHjoMnwnjLTgB30WHn5Y
j5Fv9sNYf7IXRp5Zf8LDzrfH0AXR6fg2GHlmfc63zdD5kDEfn+65nW+ckUZk
6E2nWS/gG2OfoucWxzfFtqJ3F8e3wJjDPyuO7419YtkY8/Azwm6pn+GmHxp1
rPugF5xhvYP9izOtd7BncZZ1DeI52foO4aF7Ud+sM2kLtCfWwGdbH2HvA3+E
RVpOsn5EGtF70KfQC+taPyKtJ1onYj/iVOtK5Ae3xIfOAo90oMujj1L37DGg
K6O3skeCnodeyT2yq9yfuCPF+QHnA9w1454lMu6EcZbA/RruikGRFdgtMu5U
NbN/7plxzsHZAne8OEvgbIG7V83tLmEe9hLPRfgpsj/8cK+NdKFbcY8DHQi9
iXsezIvMq8xPR3gMYE460v2ecfkQj3OM2TU8LjJmV/e4wr0QwiOsLR6D8M89
KcYJxmDumhAPcyx3p+AxTjN31fJY+J7HbuzMUfAIa6J1Sdop9/LIB7ok907Q
4dDv2BtCh0b3f9NrAOqJfSPWAMjYu0LXR/dnbwmKjD0j6pM6Zq+LNQDu2HdD
12cdwF4Y9Yyd/Tl4uGPfCr2fdvCe13vY6XuMN9i5R0h60Wfbe7+D/YB23rNg
7c5dG3Q76ob7Meig6KTcl0FHxM4dGnjkmfs65Bs/Nzg8wuIODbojfrj3g96M
rs09G/RsdGTukZEW9Gju3cDDD3eF4OGHuzn4w0/fI9Qnq2jMqhNrjvfJK/2n
hnTkSuoftaS/H646lptTamtMk32S+MdLfohoD6G7cLBwq9BNmCn3u+X+JLmf
LvMumU+QearMO2U+TuaJMu+Q+WiZlyvMkfJ3tMJ8TebRMh8j801y877c/HuM
+oXsLXgcJjpA/E/FT8nvZJm/krmOzMvkd4TcHCU3hwkny/yyeOPlZrvc1JSb
u2X+TOaszIVy01xu/q2u+MX/Qvwa4v9bUf1X/CbCPxWDXiW0lZvNcvOz0tNa
5rdl3i/zb/J/jeS/iC6sFeZfZT5DdEylyM/fFSOMK4UH5aap6J9ys1jmVjIn
lZYS0TZCa/wp/C8V/uFKzz2HRx2VyjxM5m0yV5P5n+oRzh+iRTUinITozXLz
AQ/75Ga1wr9X/GPF7yT+e+L/rTQ/Jf4A8cvEf0bmgTJXk7mm2sNhB2kOkd9u
cv+h3JeX+Wm5uYt6lpvHZe4rc07m3nLzsdwcIDc9ZP5I5iKZn5CbfnKTl5sn
Ze4vc6nMm6pHu9koukFlUkPm6sL7ivdixdtF7XCLZIeKt1l0q/iXiH+r+H9V
jPJrLKyrGG2uTDiAunHZ1RTuFPpUirB7CT2FG5S2d5S235X3lUrPWPHqKD0v
yDxE5kNlvl5utsjNr3LTQeZ3Zf5T5nMkn1ApyvEsYbwwTnisVsSTld/jRQcL
gyhr4e5KUaZ3KJytCqeSyuRRue8tXkruq9aIvnMQbVX0tkohO1y43fZMjTCn
RfsqnE8UThWFU819jv5WQbjO+a8ktBOuF046QLqCMEQ4TRgljBQuUThrFc42
5etk2YfZ3Vzx94hfV+GfKvsIYbhwofhrxP9c7ufJ/I3Mp8vNZTKvk/lL8evL
vFrmrTKfJT/jhXHCOeKvEv8j8c+X+XWZP6U8JZsg3CvUdbqI7yy5WSk3H8jN
6bKPdrobiv+G+DvEP8XpIt3nChMd1qXCLGEmeTSdIfwpv3m1n4lK8/myTxEm
C3vFz4g/TPwLZJ9q2TbxDxK/j/i/ypyTeRz5lWy242gszBfuF+oLk5yO8xw2
9kaWzxP2K5yswhmlcBrIPsdhXWH5feSROrBss9r8RXLfUW3+bJcTZXqGMMbl
Uqo67ircQvsQbhJupP0rridUVutVVinzOtEPxX9I/FfFz8n8oMyvyFwq88My
L5O5msyLZF4hc5UaEf6BoqeIv0z8zfgV72ahi3Cc+C+Jv1H8k2R+Vea3Za4s
P51pj6J5pxE/deVmudy8IzcnyvyKzJtkruf2MlY4RPzF4q8U/3CZH5V5rczT
D1E6K6i8jlK5if+m+DvFbyzzepl3y3yNzG/J/K3MLWXeJPM+mZvJvFHmvTKf
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
lzxbkz0NfR5j653fxljZHU0db00df5E6PhzcErwk08ZZ3WOsf1W9Vx+rdnAS
Ou3QeRmdseA24OXgCeC24JXgkeBW4KXgKeD24DXg6eCO4E3gR8H3g18BDwO3
AC8GzwB3Am8FzwJ3Bu8APwLuAF4HngPuAt4FfhrcFfxqpt3hUN+sflv3PNTH
y61z3Gp/NabIQr88+m3RTweXA7fItDsNGgeon9fdAo0V1DbrXoXaPLnXub/i
0l0RPUfjF90P0ZhG444Icd5KnE2Iswm4Bnh0pt0FUfuutn+Np0Xtuu6HSKa0
6q6J4lNcuptyw9Okew5Ki8JP9294SmWSudI2+B+lyUueVYdnPZpp/ckGxeHf
bJPijrF5Yl2fMz6IfmP0Z2baN94CbfbvvNnDPIDOPeg8hU4v8L3gWZnWF270
Z7xHGbtBGeuZZ2vcX3g5exP5v8g7IX8X/B/4AfDb4GvgbuD3wTIw2SvPxvE9
vMy9g/w6Oj2Qt+O5tXnuIzz3IXAT8JxM6yPX65vE2PhsNfQy1AydmuiMy7Qx
pWSrYmystsb19Iyt/s5t0L8N/SmZNqZb63odPf/0jJbo1EJnIjqDwc3Bz4IH
gpuBF4IHgJuC52fa2FPPVL/YD/l9yJ9G3h3cCPwkuAv4bvDjmTYOWOfPfhf5
MOS/Ir+YbWt+i7XnVdzWGrW2eJg8iwYoa1AtdF6K5ZukkJXplIt4xmI5tCfg
z8EnwYngs+AvwMXAx8DHwLHgT8GfgouDj4OPg+PAJ8AnwEPAlfgWZXJpj8CV
wWXBSeAv0TmDTh1wIeQFkN8GvgV8A3lh8EfoHAU3JY0vQi9AYeRnkJ9GHgSf
Bp8Ch8BfgD8Hj/V1qzHw4fC3oUPQzei8j85H6FxPQw7+EJyM/Bvwl+AI+Dz4
K3Bp8DnwWfAwcBXtKZPO24l3qtZo4JXJw0XgtuAi6HyM/ifoV0O+BHkH5OXB
87WvDL4FnSPofIxOReQLkbdG3hD+LPQMtIW0DUHnL/hw9Kvy3CyeOxhcUXvE
4EHgCuB0cENwcXAxcE3CPwU9qfU27XvC7yb+B9HJQqckOtWRPQFNh9LRmaY1
QXR6oZODTml0KiN7NNb8muBXF56ndTvtL4Pv0x44fBW0EupJ2GztWRP2T9K9
n/Tfg6wRerXxzybc7bgLo3MzOneBi4GLgO8AF9G+M7gS+B/C/kn+jAfXRF4e
+VhwDfCt4N7gXHAyeAC4nPbxwSPB1XTGANwffCs4BfwQOE976OCB4PLgNHBf
cD44Cs4gfY+RzjtJ72jk1ZHnIa+HbB70NFRG5w20ZorORHRqoVMRnang2uCq
+hYpplMfPg15HeTVkZfLtjiaI5+M/DbklZFXBP/N+/7B+1YAXwH/Di4P/gt8
GfwreCb6C9C/BJ4NfgZ8CjwRPBn8MnH/A/0NxdAGPo98A/KdPO9m6v82lT3k
i5CvRl4YvAS8HnyaeCaBp4JPgMeDJ4LPgCeDp4GPgceCx4M/A08ATwL3ybY1
5ZeI/yPko5GPRn4cPA48AXwUPAY8FvwbeBZ4IbgQaXgOvA68nfAFSOdW+B/o
PI18MfLfwXPBi8BXwPPAS8D/gOeDl4KvgheAXwTfAD8DXgFeTbr+9XwpyLMW
I1+LvAD4WfAq8Ks8ryDP3QWPRb4U+SbkJcAvgbeDLxPnHPCz4ATky8A7wHHg
F8BbwK8RvhDx7IbHI38R+TbkXQlbBhxWmcy2Nf0V6PyIfDryOchTwd/zrb/h
W6eBfwCfB+eBL4N/AaeAvwOfA0fB34K/BqeDL4C/BWeAfwR/Bx6cbWu+q3lW
PvLfkf+qdgl8HfwP+Fbwn+BL4Mrgq+ArOdYn/A5dhqoiv4b8b+S1wAVI83Vw
dfAN5FfBNcEyLH0N/BP4CfBc3isXfAmdi8hzwL+BfwZ/D34UnZno/AB+DDwL
/DV4Kng6+AL4cfBs8C/gGeD54J/BT4KfBl8EPwWeB84G/0r8P+VYu/sLdBH6
Fvk0dGagkwX+BZ0f0SkD/hn8A/gb8CPoPIlOJvgi8gvIp4NvR34b8i/BU8CP
gR8D1wXXBA/PtnMqr5DPXZBnIA8h7wHOBCeBTyaR1yX5DtAB5tEHtDaidVfk
5ZGVg86Da8JrQN8kGa8OHQZH4RHosySLIw/6EJwBT4c+SDKeBq0g/k3Ev574
P0ZeFlkZ6FtwrZL2jI+STKbw74NT4SnQkSSLQ+73kkymZ38Prg2/Dfouybji
OpdkaawGvQ0uDS8FrSEN20nDZtLwbpKlPRlajXybxvDIV4G3gDeAV4I3azwP
fhm8FbwRfJSwmSXtHS6A68LrQF+Cq8ArQ18n2fOrQl8lGZffqSTLV+X7aXCF
kpbXZ8CV4BWhs0kWh9xfJJlMesfBufAc6ESS5bfcUY2TtLek/UBwJjgKHplk
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
VOtL1Kfox9NzPD/Uzt6JbD40D2oUZ/EsgupDC6EFcfY9p3obFCD8MpVB+F3u
r/D/6N3gf8Mbwp+FnoEaOFdcd3vc8tMPqlUWNqfaN1TYuf4txed4Ps6CZsZZ
OZoBPeXfVf6zoSupJv8r1e5BdoO6xtkZpa5e1mNzrI3/TOU51d7lUqp9q9n+
DJXrJ6En4qwMToce97Io/piX46dcr4rLHvXvNA16ROUz1cL+AU/LMf/fU21t
o62X0XeR79FeucZZCdZOFA7Yuuki6FmoofNn4m1ddiG0ALrL+XxfZ9R64ye+
/rdM409fI9Na2edpNm/R/GVJuq2VbtJaXLytW8+Dno63OYPmDvPTbe6hOcja
dFtb1Brjl2m25qi1x2/SbE1Ta5vf+bryao1d421Orrn5+nSbq2vOvind5sya
O28AL1KfpXSk2T1z3TfP0p1s8EZw2Qwbc1VBp7LWlH3dUuuX3XQ+AtoMnY0z
/0rxtjY/F5qjNWL0GmhNWONlX5/XOv12aKjWHuEp8YZ1LkrzPc37lpG2zWmW
Nq3NPuHr4VoXfwy6E/xIms1LNT99Od3WTcdpHVL9k4+3X/fxyERoQryNgTXu
1fj3Uz+7ojMs53xcp/24haVpO3xPSzYZdefmRFFbQ50KTdH39v0u7ZdoXXa6
0hZv+yzaz9XeivZl8mJtz+Vf8J3aywPfAN+tsXeWjX01BtbezU2M9RuBL4Gv
Rm3NWWvPlzWO1LgefD1qazVas9Fdet2pLyM7ED7fOeRrw094mjL0raDh0HM5
xneiU0bf0v124B4G36ZyBY0GvwrP9rwcA2XGm3yU+n1fS9Gayu40i2eXxhc+
l9GcJg7/HlqfKWHn18RVXu7wMq7y8aGPETXf0pqR1o62pFv5esTzuneuhdua
bnfydTc/LcPG1LfhXyvextHiNePtrKHOHNZNt3M8Os8TRP9BnevRmZ8SdgZR
ZxFra23D9zS1t3kA+Q7iuJBm5wdLIy8FfednSHSWRGdidDamBriC20yQ7YSm
uENa99AaBhTWOkm6nbnR2Zsq6XYeTufi6qfbeTidi6sHzif8LnAOvFcJwzuh
Fvglwpul23kpnZv6S+ttvj+rfdptCdZWFQpY3n8CHVWbg7wgslugrQnmL/d/
/m46I3kNOgj+F1403c436pxjv3Q7U/cQfJPWIAM2XiyYbucbdc5RZ8t0xqwo
aX7A92S7pVud+1DfFNqcYM9X+JvwexfZDS8vwu94mXoPOhxvZVDp0Ri0Ffol
tRak9SEoWMLOHM4jP/vgv4Z4SsfbWFlj0qc1L1Dbh/xZjcnBG9Js7VJrmOvA
C3NsLPuKxqvw/vHm1j6W9rOWIZ8L7q32M832ObTfsQo8zuuV9l7Ox1lZqxFv
e1faw1rh89qm4Pvibe9HfcC8NLPHIbscyRk2x20Wb3p6V71jktePrd6eat7c
Bmodb+PsBO3Xl7CxdnwJq1uFiTNGa0fpdjZUdezudBubB0pYmLhcy7fGyIuC
Y7W+pL7A68E26FSczdtujbc9Nu21/aD66GVQdaam2/qQzQ+963a1FfG2f6n+
5tk027PU3uUSXz+4H+oQb3uB6udeSLN9i3be72p/or27Z/qc9SzUJ8HG/Rrj
P+Rcc4LezjVO7+VcY/mezjXGH+pzAI39H3SZ+nPZpTjofrpn/DZ0KMHuQH8I
fZBg954/gY5CfRNsvqF06K7zMffTHeiPPIzukX/s7kkeTu5+PsdT+P4JNs+R
WzYnNH/QfCLB0600lnD+QILdY+7lfvEu65Fgtm36eH4kevrkDrlMeTPO3+NI
gt2V6e1x/Q410lgmYLYu3vR0DPK0aO6lO0DdoW7QgASbpynd7ybYWfJkzVXB
9wQsroEeTnpj/ZnvJ9j973c8f0d6eLk7Jdh8VXPczgk2/5S7S4K1L3LLpojW
HZb7O6tdU7slewwvQS8mmB2RZe6WfalnoWc83Wrv1N509OdoXtg2webPmn+3
ca55eVfX1bNbu0zrBB0SbL6q+ev9Hofcrdxf6dN9oIGeTw38+QsTzFbEAmi+
f7ft/g66734c+tTzeKunVXf6VQZVLnXH/b0EO78/yrnyboznq/zq+3P0DNmT
eB5akmB2O5a6W3mtb1U6YHa2FnkeNXbd5xLMpsJi95Mtlhc8fFPPY7nvcV3p
6T7TIH/nUv7eKteypaSyrrKocl+WZ5YJ2B19vesx5znIsgNm/+CE58VJ6FZk
+QGr85XhlQJWlxRHBnQmwWQVAxYmN2BxqZ5lBux56pPaQm0CttbQHN4sYM/W
M7MCZnvgM3/291BtZLcFrD7LX3FdANeF1/E1EcXXGvoiwZ5fAfocXB5eDvoh
wXQVl+LNC1j69By9k9yqi+nwtIB9w1R4SsC+pbjuaajeyF9+pxPsOXrGqQR7
jvJI88Lq8GoBayOrBCy/tB5XNWBuzV1rBExPc0jpyu+7BHvXWgGb49YMmN63
CSaTux14TYLVE60l6b1bBWw9pSW8hfI5weqS6tDNCRZG7ktQQ/wbaJwBbu9+
MQlWt1XXiyRY/Ve9LOoyuQslWB1TnbucYO2T4tJ6WRP4vQGz9dXfy5nuQfbw
OqS1PPk3DthdRtV/1elizvXsmzy9qt9ax5Su2i+tFen99G6FPV1Kx0/QHchu
93WiTlBHXw/SmbLOPsa6H+rg60edXU9jnPbKSx/rtPNyWdB15fdbguVT/YCN
1zp6XFrXawq/D/oZXC9g6bgIvjNgbq2d6TuofP8CvitgflpPVDjl148JlnaV
418T7DnSk20ktalqN9Uuq20oFbB2RPVBZWS55smaI0MvaX4MXY6z9uYH12vk
6/ANfC+iCH164XjbV9D+Qhvtw0OX8GsIbwVfCa2IszZRz1G503q61tXvTDO/
v/zZaguVLq3H1fe1d63Ba/3jZ+gnX6f4EbrgaxjiP/gaxk/utwMqGm/pe4Bn
ReA9tLaJPB2cBh2Ls7lNlnTSTEfnsgak2TynP/wddJLjbYx5CFwq3saM6nt+
9zL7gtcBfds+aRb/Q2nWjl52v8FpNi/VuZ7eOfb83uBe4FRwL/AJ4s8D50I9
c2w+3FPrrj5P6ws/GmdpKwt9FGdyze2016I9l/Zplt9XPE+133sL8pvjzX5W
Q1/72e7rO9tSzaaY1pvqxZm9MPlrnekt32vTnttrUGPw7lSzxaU1I8WlfTjp
7Es1u2MKp/Wn/al2jqVgjtm60rpmpzjbm9EezYlUs1kmXT1bZ1A6+FjwA/ya
aT1GZzR8j0Z7NTqrcr/rad9I4+wmvO+rOusD3gnflWrrZTtSbc9JY+jmaWaD
R22r2u9X8L8B/Rdn+1sap7ZCZ4vSEW/5Nc/LqdpL2eP5wsPLjpri1/tP9/jU
Tstu0EnvY0qkWf3R3pNsAqlvUz/2uOtK7ymXKd71npbrcXZ2QPwatAr627+l
xvKaE2o8rn22ONJYHNoNjoUXi7d1r5PQZ74edgb6wtfJTrmf1uTOup/W876B
zsXZOt95dy/ydlBtyRz3/zrO1s8+97ie9LhP+3fdEGf5qu+80d3V00y/Grya
9hTAZcE1c6wuZaXZXtTbceauoX1Nle80Wx/c5HHV8v0+7ftV9XpSBV7J60PF
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
RmzMcCXT9pgVn+xCfep92bVMs7Oo58tevuwtisve/3wfx8lm00KvoxrbNSd/
ChB2CvnTFnyzyn5Zs00nWz155FVS1GzUVAR3ROcW8FPovMVzh4B/zLT7FaXi
7GyXbD7qmfoXgWxJypaW8mI/+oM1Fsk0G5TKG+WL7E7KJpf0ZIdSdrvkls1K
xSF3IS9jNQj7ScTGP/+C34nYeOk39cUR65cvg2+4XTvZt8shzVeIoxNprgT+
F9wT/K/bVoryXmEfW96ncpJsY86m4L/d1mUyOiEf4zXRGDVqNvFkG68a8qvI
+yCvHjWbjc3Q/97tRMXpXjXy2ao72sNH/2/0u6J/c9Ts6cmuXnnk/yDvgfwn
t3GaQNiAj3UbIy+ZbGOG5uCkZBsnNwNfdLupsp96MtnG6jEqY+AouCC4ZtRs
S7YgzjpRs8fYBvy46jN4os47RM3GYytkQR/33qvxrdtflR3WKPI/kLdGXirZ
+u4W4LLgv8AdNGZ2W6BJxJOO/E/kbZH/5vZvw1lmP059fUuNbdy2bVDtatTS
MwGe4GP4e9CJ9z7ubnABn1/U0rfwedDtyk+fg9wGLuJj9TvAxX081gAc5/1m
Q3BRH6vX03jMx2/1wbf4PKg2uJDPj+qCj0RsTPiHbEkhLwxehLygz63qgD+M
2FjxL9nJjNh48m+VydI2b6qhe8/oXwMPAJfwOUsjcIzPKe4E3+RzuprK/9LW
d1cAXy1t86Yq4L9KWz9eHnyttM1fqqrclrY+vSL4n9I2BqikMl/a5oOVwcV8
7HoX+M/SNn4rV9ZsVstWuWxT/1fa5pLVkX3rts5is8x2tOxvy6719dI2d6uG
LL+s2Rh/M99sXMv2+AHw76VtPCZ7Yy+mmK0Y2Yx5UHcnwPWy7a677rPrXntD
vxfQWf2mn//vovvyfi+gq+6XRe3e9zBw56jdBx+qc+B+F6ATuCJ4I7hRlvXF
OgfeEFwlavYxGoMfitq9+7E62x41GxRN1NZF7S7/EHC+ztCD7wTfCl4Prg8u
5+fGG4BzwWvBd2TZfE/zvsHqy6J2b/1hcI+o3XMfAW4bNRsC/XX/Mmq2BfqC
m0ftDnUvcMuo2Qp4KMvsG/SINTsMpf1uv2wgbI+aPYQ9WWaDXvuL78kueNTu
Vj+oe1p+D6I7uGfU7vuPBveOmj2BMeB7onb/oluWzcE0FxsFvjdqtkp6gJtE
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
nQXrHLE17emZdpftCPF3TzVb/LLJvyPDbJHIJsn3mif6u+tOVuNUs8Ei2ymy
Xy879gcy7J6J4lbeyRa/bPKvyLA1Y62XNoB+0/g1jvqZavcDZddKdsG0B6K1
ReWj9ki0tij3r9l2d3RJqq1H31nM/LTGrPi03tnJbWjLlrbWnSXT+qXGD2k+
TtCZYJ1b1Jm/EW4vUHbudM5sBbQc2up2R5vl2XkuyZb5ebuVrjcB+gj6MGD2
rvVPwwfRn4j7Y/dbkmF2UKsjX+r2TmuCX3QbsLXBCzPMhmrFPEvXCGg4ND/D
7KyWz7OzliPdb3GG2d2qmme2uHXPQna2dVZxKDQkYGcuR3mYSdBRT9Mh/5di
9zyz6a07KbL7Lb139R4e7rC7R0PvuXsM9L67t7v91RaE3eX2WFqBp+L3KXQM
etX/jdgmz/Ja7/Swv4Oe8zY0Fjry//Giv0H77OhP8Tg+UbqR70beH/lkl+l9
xnvefwC95f+v7IrOkQy7D9UXPM799YzX/P+b7ZA/m2G2aiuDP/G7IQPz7B5q
X6hPwO6Pij8UsLN4A6EBAbtTKlnvgN2JfRB6IGB3ZHu6O95lPQJ2zneQhy/l
cfSH/suwf7wuyrOzq48ELP8qOFcelHeu9y7nfJKfvVMc/QJ2F7eXPzvJZXqH
omXsX7HLif+WMvb/2aV5dj+2t4fRmfHBnj6dh53o5Xqz285tgv5Gt6/bGPyK
2+ZtlGfndsd6ubjV06XwmV5uVI6y3F/uNP/+w6B1bhu5YZ6dFR7ncencpOrZ
SwE7dzvE07fc7Qbfjv4at5lcP8/O4w7zcp/naVe5eNltGt+ZZ+d9x/szdG71
WegZaL//d7VznpVNlcdD/m1fhXYHzLa+bOz3jFieSbbLy8Ue12ueSJqhl6Bo
kDRDg4P2/bdD2zyvFW6nfyfxHf6dXvO4VD7egPZ5GRHf699mv/spP96EDni+
HHA//b9B/3EYF7Hv/7rH29/jkDuVNA2DhkKfQFkhvhV0NGi8LPQZOB+eB50E
3xoy9ylwuZC5vwHXgFeHzgWNV4OOgNPgqSH7N4HWovWvAdn6l83/PhGrGzs8
Xz5APz1kYT4Cl4FnQMfA2SFL33FwLjwH+jRoXH4ngpZG+X0ctLQr/PtBe34K
9F7QeBT6MGhx63n7/N+7HfOsfur7bA2YbUXxLdBT0BnoC+gx6CT0GTQDOut+
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
q+pZdX+O6pnSp7y8uazdAX8u3+qh/OV3iTT8jfxJ5BfBV8CP5Vv9V9lSXB+E
bZ1VY1O1O/mJtm57Af2/0J+ab31Xl0Rb11YbdGui6RXkuTfQeT7f6rnSqHjV
DpWHl0u0NqJCornDslclW+/51n4o7+QXkT1H5NvybQzXHermeTETmuF5McPL
VhT9Kuhvz7dxoXS7Jtr67Bwvo7W9nCp8Bvo10X8V/SRwOfBGcEnZi9Sd73xr
Z1WvlCa1myq7cifLhh06W9EpDa4I3pJvbVwVL+PF/PnKI7W/em/lUSnZQkV/
c76tg+r7L0q0tfkFXu73k88XycP7820uonGkxp5nythd7JH5NifRGFTjWc3j
Nb7U+FfrCDu9TenrMo2F+zjX2Plr4vmDeMbm2/zmgMc10OPTeFzr6yOhEYk2
VxkCDU60MyKPeNv6DnrJiTZ2ORS28YvGvv9bs/B0aE1hr6dvgMct96ek4RJp
GJhv6whKl8b4vZ0r/Efo/IZOn3xb53vf20fNVzVm0jM1f33H3VpfedfdWvs7
4mFGeZsqv2TifF/jB/qOU+DL4GH5tl74gYfRvPeTsO0/aF74ln8DzVkPuvth
f77cWrPUnoT2KMY7V1yTPA7taUx0Lr3DPPdXnvtgvu1hKI+HJ1qdE3/Y6574
MGgV+t+jf3u+zSf6Qn08r/tD/fwbDIQGQOvQ/wH9+vk2D+nnYcIe7qFE+1YD
PPwm9C+gf0++ldPJ0KREyy/N3fWNtYex0Muo9jSecffrhP2ZsG3zbV3+Wffb
jvxH5E3zrT6rLZySaOv0atfVRt/tZV9h9J00D9bcOORp7J1oc7geXv/VBk2A
xntdUhonersz0f20VzMWGpNoezbioxNtb2mc+6V6vg5NtL2lUV7Wg/7MXtBB
0v8L6e+ab2ka6nVA87cHPE2azz3obs1Ze7o74HH09Lwb5N8m19OudES8Psmv
vOeN8l1nH98qZedideZF5/x0FklnXV+D9ujcZjbtmOzGpJjNk5Zut0Tt2pfQ
2USzZ9IKed1ssxvT1m3FqK08A32RaG3nWXePdvtIssGiPvAb6Jx/p/Pulu0e
2fCpl2L99GfQiUSznSQbSs1SrJ39Gvoq0drdc+6WvSTZTWqcYm3wV55W2YcZ
4jZhRoIHu60Y9a8n/Rk93V6TbM70cvtX9d1+Tl+3mfOg24+6023jyH5UPbdp
09Ft3cjuTSdwQ7e308/t3jzsdpxkM0f1723okL4T8hFuf0m2mEa6/SX15ac8
ferbP3e3xlmn3T3N8+a4yilhx7iNpic976X3iPt/6mX0Peiwl9n33V0libyA
HoWqQo+7u7LLpkHVoOnu1x3aCm1JsjSVg98KVYCmQlN0f8HDPQJVh57w8DWg
J91d0f0V5jZoJjQDquX8Kag2NMv96kJzoNlJ9s3y4XlQTddVvHXcX2Ee9jw+
6HX3Y+ijRLPl0oC8quS2uW4H35pt9eZD6INEa0uUZ8e8Ph/x/Brn/ke8Pr8L
vZNo7es7/l1l8+c+4qyZbXaBmrj9H9W9T6CjidauHPU0yT7MXehUyDa7Q/eA
q2ZbfT3mYdq77TXZF5rg76G0dnH7bLXd7lBzt1M0xG2jye7TIHBvt9Eke00P
uW2o3YSPJZ+KQa+CiyeZe6/aGngJaA84Lsn8Xk80Wby+cSpj1eK0HcTzWqLJ
pLdPbVOShZ+Gzt+ybQ5/A3kwyfzOkoZ85Kdltwl5GFkI2p9oXHpvghOTzE/f
ryQ8Kcm+Z6kkc8tm13PEc540vJVo/gqjPuMH6HtoV6K9X0ySlfsoPJJk5T4l
ydz6rqlJ5la+loFnJNk3TksyP+W1ZOlJ9p2T4aWTrCxIJj19y7JJFl7fNjPJ
3J+TvuOks2+q2fGRTRvZttG3zcY/K8m+sbjCnEDnGDq9Uq0M5iSZnsqWnqn3
V53OTTI/tQGqB3KX9/o3Ocn6UeXBd4k25hP/NtHOH6xKtPP6Oo/wsrt19mId
tDbRzlysdr/2LluTaH3kVmhLop0ZWeN6Orux3sPrzMgr7tb4dDO0KdH6Q31L
fauhzvWdNb7fCG1ItHMrGzx8Fw8nv3medvUT3fz5ijccpa4Vow3Kou6TX6vI
txqp1ndu87SqX1T5U9lUf7kT2pFo/ecud2vsonKs8q7+ebf79XGZ6of64O0e
70Muk57GPq97eNmtupc0HM62cc9e9xvgz5dbNo9k+6hLqvXN+z19Qzw/VCcq
4NcAnXeyrb/f4c+WTap6yA9lW99+wMPfwfd+GpqbZO2xvv8kL3+joJFJ1idU
9HZa/XElb4PVT1TwsqO+urK336pDdbwN/r+azjvequLe4mC/56p5id5dzIWo
V64xaizRWKLP3rGjRqxYUOyiKBbEAvaK0kGKoICiktg19t6w994FRAEboPLW
962VP9ZnzuzZM3va/s1v5pyzFu/MCcLxhddU1gzuY41lzSDOGsw6QZw1GbtP
fIE+76qwqzC/xeEuhcdyo6wJrP2E5GGcN45d/7rFdp96MH83yfrAvKZexBfq
826FnzEzfbG58L0+76Bwe2FGi69tlnf+xLTnO13fRuHWef9PStrOwmhhlLBT
wpGxBSfnvm9bnG8rYXaLwy2Fb1ocbiH82OL8Owo/t7jdlP1Ti0PS5rW4jtsJ
c1scbiv80OJ8tGFWi8ujbXNanL5N+vH61PUXXd+9cF9gfw8XDhOWFP4p7Ccs
kXBf2lHqfRQeE5ZSfP/ct7TQPXHs5oHCAcIyCUnrrTxPJP8pwpOJv8V/imrZ
d+Ej/qujcH3hw8rhesI7/OdH4VrCu/zHpnb8Pf5jUzu+eOq4D3Oycr51hfcr
h9zHWnJE2tlR6CbsLSyWfMRZP44SehZeWwiPLGxDjxWOKbzeHJmyWMd6CIcW
XusOS3y5XMP3wQYfl/xlyuhVeO05Os/7TWOxp8I9hA6p117CohaHpLEuHZT+
Zd09OPFfW5yPsSxSNuUum+dzH34hPhc+0F/gBZYNXAE+2lZz4KzZxWXcIIwv
rItxa7P1SujXycKkwpoaU5utl3GnPk9rtl4J/iX2AFtyW7gc/6u7Abckmhq3
hssRDZF9Ut5NwnRdf77ZuirMp5uFKZl3U/Js+mCiMCF9c2PizPFBhW0ZWiQP
NVsHpFvKvjHz8paUi3bJ3c3WE0FL5a5m65iwlvYVTi+8phJiB1lHz0gaa3bv
wu8zazscbacUXr/7JL5yrvVOX/cTzi7c9+ckDhfl9uGKvE+f72i2/gtaMHc2
W9sF/Rt0cC7tZDuEncaXZc0+SzizsDYKXJpomqyR55C2etKpNzZurDBGeF73
P9NsLRvmze2MVWG9FXgm0WHBrgwXhhXWZJmo673b/d9Q/iv5QGVu1et0/fB2
awnBC3pqOFqHhIsVbZcJzdZzQRdmjD4f325dmOubrRHTNfXCHmG3sJcjCmuv
jNA9vdrNCQ+vJjosOySd+mE7rxOuLawpA2fmseGDHarPPdutC/Nws7WNugsf
6POgTuaNhT/2mk7W7oE7FL2eA9Mftxa2WVMzbx7TPQ82W+MGXaQnmq0l9LQ+
P95sjSTesWnp0wNSxtS8txPyXsG/erXuP6TdtniIMLiwbR6a+Hbpe+LY5XEZ
vy3TVub61slH++HIHaQye7T7/R+fPB/zX8fa9hTuyk3kAzzabm2m2bp/pD5v
Kvt7hXB5ae5l+L3nh1Mdbvwp4WqGJxxOZji04Rj/Ed9Jea5M/s2EqxLfSLhU
uETYWLgscXjgj2yY7x3ecv7HDQ88nPy9Gubz3yR1IQ+c50c1zHMOV3zPhvnP
4ZA/omE+ebjQj26Yz//veebFwoYJLxLWFS4Qzhd2FkYLo4SdEo4UthSuFQYJ
uwjX575dhbHCGKFrQtLgrIYj/Rfqo/g1wtWlua/hS18Yvmt41+HBXk9pA1KP
9YWBif9NuDDxDVJf4punPPp0N2Fc6gGfNhzycJjvrvj4pO0h3JD4zMJ1oowe
wh3Cv4VVWs3DhubUPopPEm4SuiW8UdhXmJy0PYUJKffQlPEv4ZCE04S9k28i
9YeXn/9kwa0u7K7P6+va/kq7Rbi5tO5Vt4b1sOpW/6dvPf53lvQpwn4Jqcfh
wl3CncJfdd8Y/relfHvlmdQPHuzFwst9vOIPCw8JJwiPJN5TuFe4p7ROBDo+
aBkcmWt3l9aSOLZh/YijFL8veY4W7k8c7YljGtabOCL5qF8v4YHcd4zwn8TR
RIB/AJ0FtBLQxEEfAc0F9G7QTUBbAS0h9BdOKu1bPSocl3Y8KBybkHJPTDpt
2zHzd4SwQ8LhtDHhsNL28hthVuEzmreEN2NDucZ8GZBrbxTmckfjAK51zlpe
F14rfDbzRuLDkm9GYd5ydBDgfh+aa1/HDv0gfB97RDivsN/5nfBtYR+ZcHZh
rvUlwn/OnuFh1rfYRMr7KuvD7LRnbMqbW9ivelD4T2GueDQjlmz3Ov049ltY
o5M1COBax9+6T7g3dvnH1BVe9Dp86azfTyQ/POorhTsdznb0C+B775ky7ins
DxLeXdjX55mPFt4bED5S2O+jjg8U9tEI7y/sq92fOp2Qe2n/ESnvrsI+K+Gd
hfm+4f1ub/XaOSd9Ojj99GVh/vwO4YpH4wDdB3j4Scd2Y/s7dLJuxVxdXxQ+
5DldfB72sfCR8CkaFSpnTqvHFruCvYeLvmP45+HGRy8DnvytlHZdaXu6tTA4
8W2EIYlvKwxNfLvMU+JX5JkfFvah7xD+LWxR2jZjZ8dkzGnz3PAqf6E6fM6a
pDp8j2ZFNDu+07WF4YKe3cXnfe8J7xY+TyR8R1ige2brnlldvKbSf18UXm8J
Py98Fsm9bxc+a/xAeL+wdgNc0DO72Af9jD4rrOWApsP8VvtuXPuk8Pr9ee67
PG2lrKuSTr9fmOfwrl6a51Dvg9T+24XbhINjg4kfmGu3ClXsBXZopdI2EVsC
v/f68gEegKs417gPLu7lw93dEnuH/ftjbCj5i9g40sqUTRz+7Q2V96F2n92w
h2EvwtkQe1f2rPCMwze+amf/1wW+BzggDs3Yci68Qmw09viwzHHGHi5yOMlX
6+xzIspmz7p86bWNdWnF1Jf8fxH6CWdTN+EMoa+wpnBO0jbRXF272doNvTQ2
5zesd7Ca0k4XThO6JB/xNVLeWcLqwpkp98+5Rvx31Dt1alZdVwyf+R/SJtaK
3ydkTWuNHad/l9b9y4ULvXPpPTbrQKeE3Pen0vtn0ianDzjDmJRwQfqU/T9n
GOMSck4ADzt87It19u8SOL/gHILfIHAGwdkD341xbsL5zaikk7aQ9zoc7GNT
HucN/F5hTspCa2B+s3nC0QP9udm6A5w9cS7AOQG6pfN0/fp2/95hbvLzHduM
PBu+8QW6Z3y79UznNlvn9C7hPNWhc2d/LzczefiOelbinNlxZsFZBWd/7O3Z
Q3PuxvNJW8Q6BTd4u88KF2W+3pT+45yJc0TykYbO6eeqw5B2nx1SNmcMnC9y
XsAzRqT/ZmVe/5gxuFJ51tGzPurkczjOQeiLCXknuA9d1xkqf3i7zyUpm3Jv
TF14fzhn5DyF/Cdqrl7YsE7HKpoHp5Y+R4EvHt74i9A+ii04gHkldC/tf8FN
D0f9wFbzzKOBeBX+fGl/C79vmeQjD5pHYxvmxoezHht7Qas588c1rHM0ItoT
6AGhA4Qe0Dj0kfJMfDr0g9DDmhj9IDSw0CGCP3+kPl/D/iL3Ug+0itDSQm/o
l8I+Lv7v4qkjfivc/XD4X9lqvS04ENDYQm+re8MaXn/VfecJ55bW92Ivs26r
24eNnJp2EuKbrlN6f0CetZOvv7Cw8PPZB3Qs7Svj8y6WuhBHX2B0w1oD++nz
6Q3rgv1a2C+nDb8V9qeJo0GAH4ueVIeUhz+7qHDIfStnbHnnFxR+PvsP9Jsm
NKwh1UefL21YuwrfBV8QH7BRep1gHuBzcQ1/EI0BtAbOQyeq8D6H/RC+D3sh
8jeXXlfIv2xpX5/4cqVtLXH0EdD7OzcaMQMa1kpAO+aChvViVtV9fTJH0Ze5
qGH9oJ8KP5PntcXWch8aQxc3rL2Fbhf7CDSq0HGDEwB9NDTX+jas44avgz+B
fzG/cN/QHnxJruGDoPuF/te1rdbfQodreKt1uCY2rJO1VsaZtQG/knzsBfEv
CfE7euj+fg1rouFv0pf4LPgghPgy+CKE1GlW/BX2YGio9W9YPw4dujMa1qRD
Z+2chrXV0JhDnxGtrs/hBtJ+faPaWrfohqCB+1nla38X9iZNmCjslXCC0E24
KWn7CJMS/555ofzbC/sqPjlpPzIOurajsJ/iU5J2sDBNuF34mX5V+s7CQbl2
m/BP4ebk2V+4JfEfSpfH82aW5uSCh+zr0hxGcBq9W5ojCQ6n90pzJBH/qDRP
E7xNn5TmV4Kr6ePSIWnvl+ZpIs8HpfmeiJ+sZz8uPFZbexJe6M4ryV8r/Ry4
rw5R2r/Stq9K1wXupQ9LP5OyDkz7bhUORZcweboLU9POeaX7crvKezB4vuDr
Yt8GHxkcYOzPCEl7szR/FlxZF3GWLbwtXMxZduKcg8PFBgcb+1XKg/eLPSf8
YnC2cW5OOs9gX8o1+N7YI3IvXGLsEQnhGHu7dLvXDP/Ua8KrwozSY8J4zGKO
Vx6nk9J/jwoHpA9o89zSbd1WmFM63EboTb3T79+U5lyjrOXSd/T3d6Xv3Vr4
tnS4lTC7dEieSzjHT19cILwhvC78VHreMUcPQ8sSHUrhi9JcWnBoHaf4Q2hn
Mk6KL6lwidrnLG8Ir5c+O4CfDu6uOwiVvlRte0/6a6wJut5R1zow5pXTKYvz
F+Yic5C9x2fCp8K0ys9ZvPa+5POkXZl7mctX517y36L7Fwm/VfYdnxeeE25S
fIEwv7Iv+aLwQmmf8oXcd6fSlqldb9alV4VXSvuk05MHG/q08FRs6jOJ478+
m/jUyu2jHpOEhXn2zanXr5V93ueSZ7Liv+S+K9Im3pXLE/L+3aa0xWr33WW5
xjt6DNqgaH8KJwiPCA8LvXLt/trnJvADMjaco8AbSPzEzEHyHJ98jDHnNMx3
7js2Y84zviz9HjMnGAfmBXxs9D18atgRxoZrxDl3ezPzg/MauA55x45Ove6r
fV5JO7BPjdq2D9uwbOY1NpKzOuwL79ntlecCfXFhrr1V+gzy3dx3asaH7716
ZC5jX44Q7qY/hCNpZ+I9hXsTvyR1oayjUkfSDk8+3o276L/ac4WzJzgHaRvP
g2MR+7Ji7fyU3VK7zcRXyDWe/7va7xt1XD4h7/P/5HmkbSpcIVwu1LXfQ8aE
9emS2LbNeH+EK4UiY8/zVsq4kqdKPubL79MXPOMPqQvxP2YOkaddOEPoW/v7
wn7C2UKXXDtd+FNt28SasFqunVb7O8ZzkmeN5DtLWF04M+XuKowVxgitteci
z/5H2kGbO6ds7OWfUwb5y7SDdq4snJJ68J1l/zyb7ynPE84V/le4Rrha2Dwh
/bWFMChpOwojhRHCTsKoxNF3vqDJWs/oU5/XZE1qzvovFAYKG2YcWHPWz7UB
tbWqz22ynjU6zv2brFu9XtKxwesmPL+25vX5TdaS3lnx0anH1sJg4Tphq4TX
CtsIQ5K2TsqgzdsKQ5O2Ze6lndsJw5K2vTA88Q1Sd9qDtvWAJmtJd834XC/s
kpA67ZB+Iv/a6WP6fRXh1IzHJrXn7GXCqkKfpGFr4buEDxJ7Cg8mcewv1+CA
xCbCCwnXJjaSa8TRjz6jyZrR2Fy4SuEovVTlvl97bWMsPxM+rc0H+XrW46tz
7ZPU6YPkoY4fJo629VlN1oBGn/rMJutcY/vhxKSurAlwfcLlydpACMcndp/6
UifsEb4Avgh2iDpiF1j/4NwkP32Nb/JWbfuIzwIH50ulOTp53sCkvym8XPo5
pKH3PbDJmt2sq+Sj3KvSvo9r82u+kfaj392vydrlvFcfpc28l9OFF2u/qy8l
zvvzcuLocfdtsmY3GtlnN1kHfM/avvANwh4Jxwu7JxwntNW2B4w9PjXjhM3a
OGNAvFPt95v3H431c5qsdc6celV4pfZZPH4WdrZ/rlE/+EbfTDuZ+/gyr2X+
PVnbZxqQ/sPX+aLyvOT5V6afPso781qeh217Tni2tj0jfKa23XlBeL62/Xo+
9zGnn8rzaOfTiZ+WfMTPSh+T/7z4QcyjgVm7WCPxOfB98fGfr2xbsX/4ZKOE
kZX3B9cLo+M3cS/7A/yG3WrbVPwb3lve1xmV7R3rw+zKtgN7sGTysRf5trJ9
IY3vvfC58UN/rlwGduibyvmwl3wnh2+Kv9k//hFzEw30w5usjT5f8a6pL+s0
eyT2TKzb+yY+Js+hrCVSF9KeqbwesBaxxuIL4CM/V7k/mC/PVg65b1d9HiuM
ie92QPqR7+fYI7En2zl9Rj+OyzXayXeS+Mr4yD3is+KTPlV57WS95byc/RW+
/JOVr7GW8v0Pvjh+PbrwRzRZ553vyfCn2fM9XbkdlIX+e88ma75fp+tfVp6P
w1MGzxia57CH+76yncVOz6scYr+/q2z3GbMb8hzaObPyOsd4z6o8VsQPTZvw
2V+sbKNZM+dUXicoa27lson/UHkt5NmjM8700U+V5wJr44+Vw/9fM9N/9MXL
lf0A3vsFpcema/xdbAS2Ab3709HkazOn87iMH/ueYcLQynsb+KSvST/hA/He
sm7NEL6uzQk9PvnhvGZfgd+9bcoYInxdee7jU8CfPUG4oTJP9m3Js1+bNapW
W8nrJWV/xdxT/DRd36rNe6nBlcftB6Udputr6/o8fe6hz2u1eW2cw/jUXjPn
Jj46176tvZYTzhaWUfl90C9s875tSJ7xSmUfi35cWvecivZhm30R8n1Tm/P7
9rShubaPjN/MHgMbwPs/IvfOqs3/zR6Dvcg+CW/KuohPhq/3UuVxY63eI/1E
/7L/Hp6x6Zr3DBvULWXcKCwsPZaMN+cRI5Jnx9gt4nvn3omV90CsH8wJ9kic
rRCHJ31a2tY948l+7pDMX9I6xpZwNtMhIfmnV64783v/5GO/hX8zM/OGtRA/
kjbD5T0l/TI8/cR97NvpD8Zgr9SXecN379g1zmkmJuQ95zshONbhUOf3Ovj0
+PJ8rw7HOvzln1b21/ET+Q8H6ezdO2h8j9f4btxmnm/eH8aB/3iQzh7o3soh
4zwktoEzFb7D/y3PgBd8et7vfiljevqb9QBbPjl1Yaw4h12U/Gcl3wuVz2jh
oCeNMcPuz0ofUAY2oH/mKHXltwwL0i9wcL+atEl5DmkTkg+b8XZlH539wT2Z
u+z5+K0Tex76bnDax15zoeJHq3/+1mb+DPZU7J/g0SBk73JU+ot+6pmQso9M
eHdlPndC9m18L4WPhU/HNZ7POvOL0EvP2qDNPPeMJWPF/3DYv/Hsc7LWkf/x
yvsQ9luLhOOUd6M2f/9K3Tk7gfOevRZtW0Bddc/6beZ6Zy15ojLfPe3gvt65
RtnXpgz22ZyjoyvA2PDfIJ5JnT6pPKfw309Ovsfy7tLf2HL8I/Zv7MPgO+d3
nO/mPcbuz8n7TMjagi2elzTs0VeVbfBimqsnqv6btpnvn7WLM9RBCTk3hZ/9
nYzzxXkOcX7DAof+Emkf6yd9h99GvXgnx6e+rHujUxd8E75r5d2i/YurDiep
Dv9os31hbrLuDUuIvzMuZdCGobnGOoAdmp05PSplE+d7Xeq1eN4B1kZ8r/+u
H7T/wrSJ389ylsY6QB/AEc9vv/gtLVoIvOeMCfz++Cj4MnDr48/hv/RNSBrc
+k9lHvB7n6Uq99FpyYfv0FHtPUHt3aTNfPpvZTyvynN4Nlz2/H6X3+EenjnO
OdYSynuy8m7W5jawBrKOnpl2Uic48d/PnFhK95+C5m6b+fI/SNoVaR/POCxl
4yctqft76/7N27xOf5b290ndadv/AVAp3+k=
           "]], 
          Polygon3DBox[CompressedData["
1:eJxMnXOYdMfTht84642TneXM7A5i27ZtO29s+xfbtm3btm3b+O47z8mV74+6
pqqrdXr69OnTp+qpoQ1Gr7DNmKNGjRrsGjVqbH7XHh416q7WUaPuhBbuHTXq
dOSf4H+EjkM+Hvkb+K+hw5B3HBk16o+2UaN+hy7vGzVqe+Rf4H+GLkM+mvxf
kPdz6GDy74L+b3R/QVejPwX9D+i+h45Bvxv6MdrpCHQt+t2Rx4YfC7oR+eTh
5P0OOpr8xyJ/Bf8ldCjyriMpaxvXkH8d9He35poWQb838kvwL0JbIu8LfQx/
InQIupOGU/e30JHolqmQv4X80KQ9o0ZtRv1fUPfn0NnUvxT6F9A9D02Mfh7k
h+AfhMZFXrqSsuaZBHlZ5JdbUudkyHPQ3sW0dRFUpr0F0T+O7jGoDf2C6K9A
dzk0JfrZh5P3QmgIeYFK8j4KtVo//bufvt0H7UL/5q9E9wjUgn4h5Cda0kY7
8qzkP4u8Z0Krk39h9E+2JE8H+inRH4PuaGgp9POif7gl1zge+mnQn4DueGhZ
9PMhXwp/CbSBciVtW2Z88s87Et3F0ProF0H/VEva7ES/E/o/2zKnrkQ/J/r7
0d0HjYV+MfS3orsF2sbxR74T/g5oe+RFR6K7GdoaecmR6G6HtkNeYiT8bdC2
yEsj3wt/D7QTcp3xPZ2xPQ3qYnynRz4X/hxoCuTFR1LWPowm/wzoz2tNnh70
y9HfV1ryH09Of6dCfxa6M6GJ0c9dydx4ABoH/aLUcTh1zQ5VqXvK4eQ9A5qQ
/HOQdh66c6G1yLsQ+itbMyemQj8n+vPbkmdt9MuM5L/3mnZGngv5grbkWcfr
p/3naPtZaELan2Uk//0Z0GqOVyVz2TwToZ+C9g7x3oV+Ko0aNS36m9HdBP08
BWNI+Z8o+6P/OeWnqUR3I/QT+hmRb4e/DfodeUvyf0Per+0z+WdGfye6O6A/
0c9UCW+ZP5CnQ76lJW3+gjw98q0tSfsVeYZK6jbtN+T96e9r9PVVaDvG5wDk
11uTtgPyPsgvt2YN2Nr7ifL3UvYeaAyud3P692Vb7vFz6d+B5H+TvG9AO7le
IL/Smjq2QZ6K8jdQ9nroe9rfhPKfUfZT6CzKz1HJ3LWNMal/tkrauhsa5fgj
39WSMfiL8vNT/rK23EMbUn5B5CtcW6GNHa+R/FenQ6sgz4h8Gvyp0MrIC4wk
r3VshDzPSO61i6B1kRejvWdo62mom/YXr2QumDaB87ESnfdkF/J2I1nL/Y8v
df4hX9mWPm3i/B9J26dAKyJPXcl/75j8yPWMHsnc+ME+oJ+1kmv3mv/2/0V/
EroToeXRDzK+RzK2R0BjML5bof+2LXPmAvQD6A/32QP9xXzcGv13bclzofO9
knvLNWNs+r8u+e9pzTNgUeq7g/wH8Xw4EKr0swahvw/dvdDi6B9vcB92o4Nm
LI8a9TZyHb4GLYr8AXKjO2lLIb/WiG4EWgD5GeTh7tQxG/JDjdRVhqZB3pA2
n6PtfaEX6cuLjZS1zNzoTyVtbnRzQZ9xPfc2UnYIaqC/Grkfvg+aDHnzOsSz
ezPolkHmHOUXoezC0DeUfwP9A+juh+YZ4nqQH4J/EFoA+Y5G6h60z9R3eSN1
90ITIV+PPNCdNkvINzeS17QB5IsbyVuCOpHPQu6BnwIa2/FzTaAvb/D/HEnf
FkX/LW1/A11J+w/7/6M/EZqGsdkN/QSU7YbeRr8c8o/k/QG6CXmZRvjvoeuR
F0f+rit1Xo28J/KE3anjPeQVkH/qSh23IG+J3I6uDXoWeWvkju6kPY+8LXJn
d9JeQl6bObaQ+w3m00FVrgFaHHkxaAN0hyEv6t4CWhf5zJGM/ULQV1z7o96v
8KdD03F9pzYyNpNDf1P/SehnQzcr9DH5d0Df1Z0+vIp+50bGwrQ3kBduZOy+
hi5H3oL/c0v4LaDb+f/3pr5W6mqB7qK+sZBXY+xXhSZAHgd5DZ/10ETI+yFP
QN5u6H7k/ZEnbE/aA8jjIa9F3jWhiZF3pL0daWsH6FHa2wV5F/idoSeRt0Pe
Hn475xjybsi7diXP08g7Ie/UlToeR965nrKmPYG8CPKi8ItAxyK30P46Ptug
yVy/0C/WlTwnoP+F+3dp9ybQOOj3JX87fW+D7kHeZyS8Y3I38tgjuXbHZELk
3yi/LPwy0Piu9+gnI++k0COWp729aGtP6GXa2w95766kvYp8OvnnJ+980Bfk
/4v6VqSuFaA25L+RV2pLWgfyr8Npyz6Ph7wn5cen7HjQHch/oF8e3XJQK/KW
tLdVV/7jO2lvr5H8t5a5E/3vw8nrNbQgj0K/clva7ETehvKjKbsNdC/lD0A/
UXv+4wdtH/3u6HaDnnf+1HOte0AvIW+FvHVX+nCX7dejs8yLyKORt+1KG/cj
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
4UXID1D2fuhX5sZv0JiNnP143rMl+jkaOV+zzHnIT/WkTdsaG9qjmrH+CFqm
lL48Do1RTZ/M47WUWlPWtu6DfqmkzcUauXbPF6+h/iUa4T1zvK44n3Wv6p71
4aHU/e++xzYehX8E+ou6/nYvAv8Q9Af8n9AWjezl3dM/N5Q89qWnNWXN+2Cx
r7KMdVmHZa1zs0r2GpdBs7j+VHOtH0PLc70HIH8C/ym0KvI6yG/CvwVN5/6p
mnvRtCmRt6W+y+GvgOahvg2qyescnsnnN3IbfWuHjkO+Bbm1NWnHIN+F3AHf
6fMR+Z5q+C7oFOQ7qilrnhOQD6e9a1vyjFuD9g5GvqYlaSsj74d8dUvSlkPe
E/mqlqQtgXxuYX+kvdBo5B0r6fuV0AKuLZWMjdc0B/KZhb2KZbZEvon+tLTm
Go6iPxcV9k7aG+2E/vLCHkl7o92Rd62kbvuwCPKJldgCaf+yIfKphX2QbWyK
fE1hv+Seah/3O15jS/ZIPeq9b2h7fNdw2r/QeemzF9oL+UnkieAnds+B/Aby
5PBTQDciv10N73y5BfmZavJO4p4E+b1qdM6p25Gfr0Y3KXQF8qvIk7WmzuuQ
z6hmLXGN2dH1qJq9tHvip5AfRp4AfkL3BMgvVVOXdVyNvF81c885txLyV8j9
6Aagh5E/L9YP0x5Avhx5HPhxfUYiX+o92Zq0/ZAvrmYsTNsH+cpq8jpmByF/
U03d7vkfQ76vmrnWDZ2G/EA1vH0+A/nDasbCe/4u5E+K+98+3Yv8WDXX5pif
j3y+93Fr/pM9kMfyfBG+Ab2FPAq51pq015H/IP8w/Aj0EvLxpdwnzvs7oRNL
mffeJ3dDZ2lDAj3iWlHkWZey67Sm7I3Ia8KvAR2OfAh0MHQt6ddBh5Uyb66H
v6FIM+/qrf/ldZycZ5axrTOK/9E2n6hmv+Ye8LxS6Fzo8UInf04xLqY9WMr/
5v/6NfRtNfsJ9yiPlGKvt4lzvyX2eV7jeq25Jq/da7DP9tVrO7WUdcH/7X7o
5NJ/68a9xZjYtw1bM1anl/77Xx8s8qzfmjYsax0btCbNum9GXqs1Y3gk8u3V
jO3a0LGl0DHFuqbufvsCfQH/ZTX8vcW8Ne2zavY/7onuKSXPtsX+yLJ3+l9D
H3kf+B+X/ptnn0I3lf67b9+BXqxmv+d+/XLHxf8SetN1171BNXtT94c3l9Km
dX5a9EX7uq181rfEvtC2by/muX34oJr9nHXcRvqt1Vy7Y3J0KWNyRCnroGNl
2lHFum7ep6vZyztHLiylD17DO0XfLijlPnGdegp6rpprscwltlfKuuQ69H61
6EMp/AfFGDmW9tGxsw3rfKpo+7JS1jHXrReqsZ/csiXX/HdhP7q5e5uW2JP6
TuG7hfaEYxb21bui260l9s++0/huc5RrDnxrb2zBF4SGuJfb/SYGvzBURe70
naw19l7DyN+65pSyz53Es7xS3oN8j+mDJij2+74zfFGK/eVetL13y3/2lnu2
JE17TO2h92hJmvaX2mPv3pI07aO1N98Pfv+W2JNrXy5/QEvs08emf3P5X7om
9sZ+Xd2BLbE3n6R4X/H9w75rr3xQS55BPou0/923JW1oz669uGNlHzoKe1H7
vk9L7Ie1J5a3jPbC2rfblnVq//y1awM0Ie1ONBx79V1a8h9o3659+E7wO7fE
Pl17723ht2uJ/ab2nPLbt8ReWntf15LNWmJPrD21uh1aYm+vvfDGLVlztA/W
Xn3HlrSh/bn2uKNb0ob25NonW5dzRntj7XO9d7ZpiT2w9sHyltF+V/t+27JO
7d+1X3auOQf/sd+t5Fq8Ru3xS8X7mO9nv5ZiL7w+ug1aYh87UfF+6BxxrHyn
993ePNoTa0+9IfxGLbG31v5a3mvUHlp7W+syj/bWkw3nXdT/+PtS5qDvgvbB
uWkffinlvd2+mcf3Ms8BLOsc/RzqLuau9+zF0LPFvfxKNe+PrlFXFTr3Ie4z
zLNhJe8WvmNMzfVP1ZNzLs+1NoBWg18VOhL+qErs55elruXck/TG3n6Z1qRp
Tz/jcHTL+4zujf/DivArtcZfYubh6FZwT9GbMy7PONYtzr5saxXoiEraXL0n
fbDto30f7sk+8xj4Y6ETKtlruL9Yx/dmaAXoUNL/55laT8qY9zhoae9J6ADn
fSV5l4cOqaSM9v9LUtdS7sF6o1uu2NeaZ5me1GHZgyrpq/tc98FHFH20L+55
7PtKRZ/sy2EFjVXsR9RNPZy2lnZP1xt/Bm1VtVmdoDf+BUu0pk/6I3QgTw0/
DfRpKWuea582ry29WeNc67Rx7UBuQ56qNWU+Jv/Cw3mW+vyYpjf3+XSteed3
XWxBnrI1ZT50bazmrMY90QvI4wxn79SE3kUebzi8Zd4v5uG0ranTdWTtnvwH
jv3xlfhDrFE8z6em/XmRV4VfzT0Z8tzIq7QmreZaj7xya9KqvfG/cS6ZVkFe
djh7B/cLs/fG/2b1Yr+lv8XSw9m7mGfW4nv3hsV+ye/fiw5nLHymTo+8+HB4
9xgzIi85HN46ZnY+DKct9yhz+mypZD/rHNyA69wc2gw6i/SzK+E3Ld5bTNul
kr25e/T5SZ+3J+9pvvfsBM1XpMnvDC3Yk/cg31t2q6SMeXYu6lqoJ3nU7Q4t
Dr+Y75Gu89DcrsnQ9q6D0KI9ee/xPWyvSvKaJm+ZhXtSp3XtAc3Zk/cu3yu3
K9I8u/AazHtYP3MbOlDbrv7sfXwP8T3HPdCVpbyn+J7xcjV7JPcELxR7p2vd
20Kvwb9eTV9t07bss3so906ef7m3cg2zzpeLte3Hnpy5eNYyJTR9sX93zv7e
kzot6xr4b1u+5/jeZJvjNHIWoQ3KNry/L9mT91LfW/eHpoOfFtrYfXEl//H6
0MmV/PdnVPIu4xzYhPSNev57jzytkrzrQSdVUsY1ynvi+GLtUrdu8R5qHuvY
GDq9qHuLYk45l86p5Kxty+K9+bwizXdP+7BFUdY+2PbpxX/uXPOMybmwTU/O
7Dyru6BYw1yLfEdybduykrMnz6Bm6vnvmeCzwGeFY+F3Dr+TOCYz9OQ7iecY
m1eytjqGjp1r7Iw9yaNuC2h2+Nnsh8/1guybbaqzTcuY177M2pNzEc8Btq6k
rGny1tHWiH2R9kI78v+N38h/adp22ssW9gXaHGyMfH4f61JbfHK20JeqL/Y8
+rNshHy6Ywc9Q93POr598Q/SX2ZTfXOQv2/LN8BtzN8X+w/96TZAPh75Lfgj
oDW1f0J+Bf5gaBXkYwsbEG0/VhtJW6dCT1fS5hk96YNtP+ea0ZPvgH73ewF6
uZJ3W99xz3XeQCdAj5H+uP11rkAvwr9USR7TXirKnlSUMe8TzkH68jZ9O1Ib
iJHU5Xcav1Na55OVvHv7Dn5yUbd9si+2Yd/9jul3S6/BPLbxRFHWa7Cv/7y/
e619sY851m+qtHci8jvwR0FrI5+M/G5b/BfXQT4E+QBteaD/6XvXF/5AaCV9
B5Gvb4s9yu19sYf4ppO9cmfsJ24m7Tr046C/VX+7vvhHzqP9iL5Rzdjial87
KX29phn7am3Kp0C+thlee/Qe5Kubscc1z+TIVzVT1rTJkN+o5PzG/+girvc6
2ruatsak/Rv83t0Xf8QO5PvgH+uLrdEUyI/Dv6ZPY3uu8TB9yfR5aIsP5g7I
D/XFV3Bi8jzstUPXtMXf9ib4J/tim9SH/JRzDxqBf4G0Qyn/HPLTfisn7Xn4
Zyzjt3DkZ+FfgJ7127r+To419Hxb6njZsWxmLLTPLnGtH1VyfuSZ1DVc75U9
+Y7td+/3oUcqmTue6RxH+pHQEdB9pN9fkDrPGP/VHQ7dW0mew3ryndHvmPdU
ojNN3jy2eTX0YdGXWys5m/SM8gDXcWhf6CbSb4YOhT8EuhP+rkr4g6E7Kknb
vyhj3lsqqcO0W4q6ryj8WbThGW8o9rCLFvY84wzFflZfGNO0j72qsPfRHqhV
+2KftdD11HWD/S/sh7QZakd/WjO239qAj1300bHxmuz7QT35rvvPd9hK+m6a
vNdwUWE/pM3SmNR3dSVnu56P7ka+HdwLQJeSflkl/HbQJZWkXQh/AfQa/OuV
zGHTXi/m9ruV/NfO8cuLvOdDr1ZSxv/4WOjh4r9Xp52CdgzmudS2oLfg367k
v7sK+qCS//CqYg45d0y7rCdlzPtOJWW1g9Buwjrsg3neKfpm28dAD1XSh6N7
8t3b79APQjv3/HcufAW0bU/OnT03vriSsTBN3jHZpSdlzHtlJXVbp3XZxq49
yaPuqkr+2z297yv//cfORf8D/3v/A8uY1/9mj56cS3vOfG0lZU2Tt44rmvEl
cI2axPFoxpdR/4OJ/H+a8V3UH7ELeXr2YKdxry6mPxT3+5z12I7N7TNSezL0
c0FPoHsSmhb+BPIuAD2EPLU20/Dz6E+GPCPyefDLQY8hz4s8DzQbNHtBK6G7
uD26GbSphL8Amhl+fmg+aCFoYWhlaHt9maBVLAvdCz/a9UpfI+SH4HfUvlHf
SOTV4C/XZh1+cWh1+Cu0KYNfEloD/kpoafjFoEWhBaAFoZmgFdBdqM9ekbYq
/GXtybsctJnPDmh564Iehd8FesZnNPLO7Ulb3bqgrfRNg1aEXwbaQFtnaNn+
2Mt93Zln0JGFvdxXnUk7orDf+7IzaYcjb0OZtyl7JPSOtljIT8LvAT2HPBr5
vfb8J+9qu9Ufn1R9UV/SthL+c3SnQu8jL1CjnQ7qg2YdoG/on0K3p88AbamQ
34A/DHpb2yjk19pjM/+WtlH98enSl+uVkZR5Xhuo/tTlf6l976Xt+U/3hPbQ
Bh86wP+Z9o+n7ROgOWl/l/7MhZ+h3eG3hT5qz5x7j3rX1IdU21VobfidoPPh
f4J29f+ivuM6Uucc1LdDMR9/hHa2bH/+21+gveA/GYkPiL4f+0AHQ5doi6xN
H/ynI8mjbl9oR2380J0LfUj6GzzjGj7reOYdjvwqcs1nofsPbc+K/YT2YIsg
39yMb5X+UoPcfzc1439k2oBrdDO+SfooVX2mNJNXf6Qh1+xmdPp/DfuMaUan
z1LZ9bgZf2Tv8U7k85rx59UHuM31tRlen+N25Aua4S3TgXxbM3XZhwryCn3B
f9BecFr6f2czbeuDNoJ+JfQnF/av04/Enk1/adecCV0jm1lr9IHudv1tZi1y
jZrYNbMZXa2wf7u3Gf8VfV6aronN7B308epFvrEZXy3HrN9nfDP+LJZp+Pxr
pm/6t9SQ726GN0/d9bWZuqyjr5Jnvd/ptIPymb9qX/zttWedietZDvm4ttjc
To28Z19sVR+F9tKfty+2gndBO8Lv2hd7yAe0YXQvCu3dlj3SgfDrQRe2xV90
buo7CPm5tth8r+g864vt4xOmwW/aF9vja7XJhN+iL/aFN2jjCL9ZsV/UJnlh
yu+nz2db9mz7w68Jnd0Wf9TZ0C/WF0wKsSiGoYX7Yls+m/aeyGc14++tj/h4
jMeC6A/SFtM9IPqDkfdvy/w+FP7MZnzDLTMu+Zfsy7uB9qR18p/dTF36l4+P
/pxmeP3LW5AXIP9M5D0EWgh+TmjatrQxN/w8RXvTuefUlrKZss7pVsqP05sz
cc/Cx++NP9FShf23/kHady5f2Htrj3pAI/a12vh+ibxPI7a2pn2qf18l30b9
vnmbe79G8mr/+y36wxvhtQn+Efm6Rvwz9QntL1NPI75h+ohNjXwjddwAfUa9
n0M7NWKfqz3yW5Q/upG69OH/FfnmnthZarf4JXRKI778+lOORX2XNeI7qj/o
pPpnNuMLqU/k/si7NeM/rz/8h8g7NeNLb9q7yN3N+ENaZi/k7xrxbdTHcd1y
7FP1lTTPrsjnNeLPqf9qB/JVjbTtNfcgX9SIzj5NgHxmI321zPj67zbjO2qd
2rt+2Yg/qG2ugfxzI23r87kR8hjN+IdaZhv9Ofn/BrqCX/RI4Y/c51h3xf94
a+SStrdd8X++1b039BVj93Ul/tHqLKP/8g711DXUFf92/esnh5+iK/7Xd1P2
LugHyv5YiX+2up6u+Eeb5vd354h5nSO2aVvOHdv2P/S/sw8fFf7v+scvNZS5
cD30aSVz4v1G/H31j12O6/2kEd4xWhn5j0bGxjHZHPmtRvwZLbOk+Qv/fH3w
l9GeupG5p7/hDOifbsT/UH/GuZBvb8R31TlaR361EX9H61wE+YVG8po2P/Jj
jdRlHbOWY5OjfYFjoK3OVs1gM4jR8Cr6vZqZe/qXfoo8dSO+bPq0nUj/Zm7E
X07/uDORZ22E16bnbOQpG/GV+6fMUGxz7oV+rsRGp6cRXzV91g5AX2nEP03/
siOQBxvxVTPtf9qTN5LXtIORZ2zEV88+nI48bSN901/wZOTpG+HNcyryZI34
u9nmvshfF/70+sivgvxr4T+hD8r6yL8X/iieIW2I/G3hT6/P/erII4309R+f
OP17C3988QbWRP65wB+wznX1b27Ev00fu92RRzfiO6B9/yvInY2cZZlnF+Qf
CzwD61gbeeJGynoNeyF/WQ8WgNewEvL2jdTlmvQ68gbN+OeKQfE0/9/azfjq
mvYo8mrN+Oua9gDyEc344uqP+jNytRlfev3Pjy3nv/vHzrqS//DEZnxb9XEd
hbxfM3NFn+QvyX9QM7w+y98iH9eMv+s/ZZCPbqatf3xg9Zdupq/OwReQG820
rQ/8ScgzNuPbqo/rOchzN+MPq8/sZcgLNMPrg3s18q6NrM36jLzLeCzajE6f
5hvQDzSDL+A1HoG8XDO+0/ov34G8UjO8Y3QPck8za7NlDtHftpm+2afTkWdr
pm/26cJybOyeg8avxvZO/JdJ0U0G3TYYfA7XrnJX8DXE25CvdAVf44N6sDZc
c5ag/+/Ug+UhHsciyG8W+A1ieMyP/F49Ossshvx6gfdgnnmRX60H+8G0ufXv
rQeLRLyKGS1PX9+FJqOvk3tmXw8WhWXmHIruHWjSavLo/yKWjZg20xb+LZvA
bwpNNRR/Cn3P9EHrQ56osPfRfuhNzxl64peg30K3tkXV2CtpD/Sx5wbQy1AH
6Z3Q8/X0VXyLmYeiewlqryaP/ItQWzVptvEGNGE1bcu/Dk1QTdrrRR9s2zT9
V/R10+dtkPpfqKctMTX03/Ha34YmqWYMHCP76jU5ducV/lL6ZP1V+OPODj9H
13/+vrN1Je2rwTw7roM+qeQZoj/urF3Joz/wBYV/l2c6o2j/lsKfTZ+9iYfi
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
4WdxTOA3r8YGSoyFKQvbqK2rwYMVH3TOUvLIix9i2XopY+JYrAU1ijT5taGZ
S8EhFFdz02raMk3eNsccDpax+K2vkT5ugS8tpvTbyG+UgtMmjtvYw8EsE5dO
HDmxzL6vBg9VTLPHSyFx5b4rdD9Xg3Uq5unTpP9YDW+ZJ0tJEyfvpyLvn9Xg
yWqj9CLpz5aCKy2O7a/V2CyJYytOirZM5hEn5Y+irHm0bbJNy65fDTaKGCnT
lNKmONfi9NmXl0vBnfsL/m9o/AJv2zF4r5QxELdOHBbHxjF6FRpjOGNnnn9x
WSxrHY6l12DdH5WC6yIuTHtB4tmKqfxRUdcrkLh41vlBKbgu4sK0FmRe+6RO
Gy6xcK1D266pSsGhFKdyXedqkSa/XjX49mItX9YavPtFqsGPEVNmQvLdO5L4
irO3B3+/hbTxobnJNw/UXQqOtzjiC0ELVFNW/L5O0icoJY+6haFJ4SeBFndv
VJBYNbapbsKijHnty8Sl4JIvCr9YNWVNk7cO45/ou9/Znngo7aXgZoszPl81
feiA5i/6tk0pOK7izJ5akHsjMZPUnVgN9o9r0palkDivJ1Sjsy7bsG7rvIv2
Z9K3tj3xjdxTi83sPelee7zSf7jec0FzwM9uvfBbVXPPmrZVcS/r46uv77zt
ic91TiPPYJ+945Yz9tZpXf4H1iUOrji51jk5/GSl4IYvVayJrk2OsWvlKOhv
1o+ZvdehKUopY96lvd9LwRUXl3y2auKziG0wCdTenzXLtcV7xrXMeAnOHeNr
G//AeAjyPhPP6s095ZxzrnmvuVbbpm0tU8wh54qYj86tsV1LHCPHqpq+/gXN
VE2fjWcjtoIxzf/qyzWIDSnGjNd2yUiwJ4yJMnZ/MGd+g6arBovGur1Gr802
1P0KTVtNHvlfoGmqSbPtP6EZq+mDvDjp4rCbZl5x0sVRt4zxeZyLXVBLf+Jj
b9OWdzjjSV/Kf3kJ1MV/2V2OT7i+4Yu3J76p8YOM56vPp/GPxUARC8U04wn9
g2nSFp9R4x2J2SF2hz6UxrvRHt0YUMZ+0r5cvANjeBm7S3yE6+qJ+WWsL/EN
xDswRpaxscRDEONDrA8xOYyXc089MSWMJaF9+W31xMgxNo727vpfGYPR2Iv6
Q+gvZQxGYy/qj2W8emMdG/PYePLGo9fXUp9dsUD0v+mGdh6Kf43x5817VVvi
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
HcU5mbxnbZ4heJZwfnGO5jldSzk2W3431kZMWzFtzBYoztnMc3ZxbvZWcW7l
WHkWpY2OtjraAGkLpM2Ttk9LNmLHo82VtlfaHM1anKN5lrVzcc42XvGdWrsu
7bi0KdK2aLVGYsNqE6dtnDZD2g5p46OtzxbFt/ajq4kRq02e9kHaXGp7aUxp
Y0trP6StnjZC2gppH6qtqDac2nJqT6itpTZ72u5pt6ftqTaj2jFq86ftnzaZ
2huaV1tNbVQto82ntp/afGr76fv+q+3BqNDfQbzmN9vjQ6A/hDZQ2kJp86Tt
0+v/79xu++Ic0LO7rYtzQG2kni7OJKYs8nrWt21xbug5obZ72hBqS/hKce5n
Wc8S/d7ltzJtsLTF0gZMWzBtuLTl0kZLWy1txLQVM+/V4iN1p4xtt8Lf3JU+
aNPoGDk22nqOVdjlabd3SnGuqu2BNnqnF+e8nuUeWpyL/lCc68p7VvpjcQ4s
71myNoDaAnoG7FmwdoWmyXt2rI3hL8U5smfL2vhp66cNobaE2g2aJq9dojaE
pslrq/hNcU7rmbbn2NrAaQunjZu2bmLwzTeUb4Z+O/Qbhd8qPEP0LFGffn37
xQz4uvDD13dejACxAvyG7bdsv3F/VOAKrDAUH3t97T0jtw+27Vm6mAPmUadv
v99U/bbqNxK/lfjN0m+XftP026bfRP026pmoZ6N+4/Rbp99M/XbqN3W/rfuN
1m+1m/fHd+gA6PWRXLtn1X5DcAw8k/Zs2jNmz5r1w9HXSR8N/TJ6Cjt2v/uJ
bSE/eXHOblp/4behDbu27Ppx6NshxoR28H2Fn4e8eZwb2oZqU+oc6S7ONV2L
PKefoLBzkPfs3jN8z/I9A/UsdJLiXF/ec/9Ji++Q8n4LsG9iW/gNwD763cZv
OZ7De24v77cez+RN80zfNcm1yLN/v2v4rcNvQH738ZzfMXJs/BbgNw/zqPPb
kN+EbMO6/TYwZmGXqg2r94T8qMIu1TR5bWm1UTXNtvyW4zco2zS+ivbEs4ix
PhKbTm07tXHXnl2bam2rtftcsZSYccbsMlaX8ey0B9M2TIwu7bl8t9b2ZIzC
jkV7L7G7jD32WSnx8IwhZuww4xMak87YdMam/7EUGzJtybTZ03ZP+zFtybRB
097M+IbGYjSmnbHtjFlp7Epjehrb05iWxrY0pqWxLbUh1JZQGx9tfbQr09ZM
G0ZtGbWx1I5Sm0NtD7Vp1LZRm0PtDLV5NE1e20NtNC1j3mYp9nLa3mkHp22d
dWmHqU2jdcprm6nNp2naGGlrpF2l9kny9sm+mGZftYXUBs4+y2srqo2cado3
2Sf7ov3kmIXdnWP1Zik2fNryaYOnvZ0xXd2DuPcw1qZxNo3daUw/Y/sZc9M0
eWMBGuPPWH/G4DTuljEBTZM3FpdxtIzNZUwsY2MZk8vYXMbYMtaWvLE7jeFl
mjG3LGNe42lp86jtozaP2j5q86jtozaM2htW6Ht5OD4O6xRkbE5jdKqbZjgx
8Ix9N1lvYhwa69CYnMY/1MZRW0dtGrVtnGU4MQSNHTjYGxtQbUG1idQ2cqbh
xCA09mBfb+IpGtvzD/vm/1NKfDxjghofVB8MfTHEHB+nIGOL6gOibozexCLV
h2SVUu4dfUG0mfYe0mdF3xV9YvRT0R5Pvxb9VhYs5dmvL4E+Gu4BzqvGT0Cf
Bv0N9D/Qt0GfCn0r9HHR10WfAX0HtGPU1lGbRO0QtUHUFlGbNm3btGc0TV57
O20YtWXUblH7RvNqy6jNnWX0WdB3QZ8FfRe0R9Q2UR8NfTX00dBXQx8N/Rf0
Z9BXQ58HfR/E8BPLz5jExibW/0PfEn1K9B85uZoY9to8at+ovbO+E2IAigWo
3Z+2gtooa6us/4m+KPpYaA9tjGNjHRsT2TjD+pjoa6IPi/4lxkc2jzpjERuD
2FjExsA1Fu7V1fTRvhk/2f/C/8j/xv9Em2hto7Wx1tZau0D7ZF+0pda+Wltr
7ba15ZbXrlo7bdPkrcOypmn/rN2yNpXaVspry6ydpGny2jprM2maNpfaXuoH
pb2mvHaU+kGZJq9tpT5R/6RVY3epHai2pfLaYmoT+q+dqbah2rxqxyqvLao2
sqY5l/TV0qfFOeXccE45l5wj2kQ6Bl67dubarFqndWkbqz2nedRpb64No7aM
2oRqG6o9pHaS2lGOU0rftD3VJtY+alNpGfNqb2lez2w9q7WMdWn7qc2qdYqR
JFaSNn3a9hkP7L222LweP5J4ZcYLm0F/WG036sHmFL9rTvG1asGvFH9yVjH7
auHFpJxZzL168IjECJ1dbK1a8IcsMxtyfz3YpeKRboFcrgeLVEzSbZAr9eBl
mjYauVoPdqZp2yL/VAs+lxit0yEP1VNWDNWtxeyrBd9VDNjpxfKqBd9LjNeZ
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
MO2T8TVfg16FhkgvQ8P9sbV8pbCn3KnAo9Gff8Yij2fhnolbdrPifFyMrd+Q
1yquz5iWk4slA+3anms0nugU/YntaYzPZ7U1Rd6pPWNqvFPjjYpdY9ok/YmP
KTaNdUzWn3ia4hEZI9P4qp7Pv9QezHPxvYxRKraNeDPi33Qib2lf2hNf2vil
YimZ1gU/gXgw8Pe1J/6q8aJrRf+vHknM55Gi/atGEhPa2NDGRL1yJPExjVe9
uzYhI4khbSxpY7xegTxRf2K5DrUn3rTxX8XW2Q6asD/4YmKJiSlm/NZjCnwc
Ma+M7yoe2XjuH9oTX9V4sfZ14o7g+RjD01iexqQ1/qwxZY0tO1lH8HuMOWuc
0kOgQ/szp7wPjKG6UZH2e4HPsHCBm3Bgf2KIGifUGK/Gep2gI/hTxog1VmxH
R/CpxOcS30gMqyUKzAXrsKzYD8bz/r+i7jxq93rc43hE2M9zPzrHwTncU3c9
011JoUJbRaRRaaCy2w1bk3COJrUritpIalPScBKhKHMlEo3sDKfVco4xqd2o
EhIpxblefb4tf1xrXb/vbx6/3981vfFE3fOvzuQdUR8Js9S7g9d7dum/K7lj
JrzKsydSY+bAmfDOsUhtAw8cAx0b3DXHI31uTe8xkRzGLfgLe8n9WSKmvRee
p/xE9SH2k8siZ6vlJ21U03/v1noTyfd8MXtKL/k/8hdfMhN+/S/Extf+PjwT
RiRWpGcETxwffHoyzEvsS/zwNT3rE+Fjnl/y+9I3r7az5UbV9D1in2v6jJo+
u6bvmkjO98dr+ryavq+mF9b0mXJNPLMtX2mTmv5YL7z69Wv+qTW9vKZ/XdPr
1fRH+EfFVJe+YiI8zxvFrHv2J8LfxD/3LP7PRHia1jm55NRetoUni1WLWYsX
fFgvtWTe7pr3wsPEqmeDeovYcs/LZN5B/rELav5D8pVq+tyZ8DWx14+bCP8S
X3l5zbt9MjzftWv6I6XfOhn+77imT5qMzxefF5/59NLvngwvd9azPBkfsXjw
uZr+oH1Pht+7SS/7wmzHH13W7hfmJvYm/ueJpf+8ZJeZ8Ezdq2Pcg154oh+e
SAzW7jOR3WbCGDVvq154oO7BHtW+fS/5wLeXLK7p7XrJ572tZNFMeLPyie8u
2XcmTFBsUM/UrjV9VC+1nA4RE98L79S9WcqHVfqxvdSCOoLNrxd+q3xk9XL2
rvVP72VfL6nz/+hM+L3jyXzjv1bTt/USS3Z8yTdqetOafr/nxztRz/793bBQ
MVHXqPl/qOmXl37SRPipD3WTj+mcZ307avpVE8lXXnsmbTMlf+pm2fV6yccc
lfysG/7pcS3e/86avqebfb9vovFPu8m/kq/52HQ9893kN8iv+0tND3up7f6c
kuvkl3STL6Z+/NNr/UNrmUNKFlf7XiWHl35Yyd6l71PyjtLfXvKm0t9ccnDp
byvZpfRdS+Z7yRXvltxY0wfVvANLdip955L9Sn9ryRtK36HkW9PJEZYbfEnJ
5dPJAZb7+7WSJaXvW7Jd6duXHFD6/iU7lv5G9R5Kfy2/j2vlWtf+31P7Xscz
5F70kgs4U3JzTd/RzbX7VV2Tw+XjlKw9kfzsd8nX7SbfRD7wwfJt2v28taaP
kX9csnJBmLS38lvW9Aae32pbWvp5Nb45YSpjnOtqfHN3uz+31PyjSr+rG1bt
r2v6yNKPcw9Lf4XjnY6sLHlvm/eRbvKl5Ms+UO0ndZOvJF/2frlP08n5ketz
eclV08lJkov0rZKPdZPfJ1/3QblK08k5kmt0WclGvbyrY+9YTV8znZwfuT7f
LvnedMu5su2SE0ruXZB84ruqfVk3+c4LvZNynaaTkyUX6zslK6aTwyV36xr7
rGfs0pLfsLv7BtS8LUvWdx29C6UvLJktfa4bHrq+eu+SBf3w2fXtmO2r9cNl
xw5XP+op/fDc9fUY70/vh89uGfOe2g//Xd+K2b5q6Xf14tvGK/9uHdeDNb11
6eeU3DAT3rtvt3y/v/SSL6NmlVpVWPQb9tP3YsI/3EsOjVwaDPvHe5HHSjbp
Z94t+hdxq7WNS2ai6wuNKbW5JvoeY17XavV+WPZdfUzNu7MX34Ux5ZUz4c2r
bbm/MYSxRy/1tMTEXlb6FS1+1vW4oJZ/Ri2zuPRJY7Sad7GcqLp329X0p2v+
RM3fr/TnGEM67roXryxZq+7FtPenl2+j/KBvG5P00vd+2PZq+pO17LklZ9Sy
nyi5YDo1ptSWOs87Pp0aAmoHfMk3wLeg5OWlv8L99q6XbFT6xt5x77pjKH2T
ks1K37RkvvRxydalb8VHW/pLS7YtfRs+3dI39LxNp4aA2gFf8U2ZTo0CtQku
8m0s2XQifc46xuc1fXM9zx+Uf/nCGjfV+W2mLyi5XrxKTW9hbOH6zISXrOaz
Ws94yPe5ZpPpg6815qvpjSbTp15V0491k/+u/sWLjGdr+pyWz7e8jmu15i/2
vTmhpt/dzbfjpJKnln50tS31TfVtLVm95KwFqTdwynQYli9dIzllcsue2fJK
xbKpTYbphe21xVzYbuzLfDl8Orc2ezB7JJvmT5v9c6tm32QfxrBgu2XDZW/G
mGCrZbO9d5AaCr6ds+17q+aFb+va7fvC3m5fasCzv1/Z/Ad8Bnc2+/3rmz2U
vRWjgC+K/2lls+dv2eynP2n2bMe67VSz/3dzbz1jnjXPmGfNM+BZ8Ax4Fp6o
MzGdGuzs0/wn7OmWkX8sZ9q67O3m8Xf8qvkb7EtN+Z83f4V5fCI3N/8BXY15
/oLPN3uxY76p+T+cC58afwgmB/+be8C+r0aHWh3rtv5ru2HYOXgKjzR/Ats6
+/cPmz9i46m08S/w4fDlYJasMoxPjm+ODwB/gc+J74mN+WnD8GuwejAcsBy2
GYZlg2mD34BXgZ933VT4EOxnG01ln/wf/vfVate2ovlDHBt7/I+aP4TOvv7j
5u9YZyr+g6ta/6jv3KCNn/Snnn197v2tv/Y+rtfGO+z3bDFsMic2+4La7+s3
ewL/h1rv9sGfoj/mu+DDuL7ZHyy7Qeuf+Vvmmv0F2+Cu9r7ps42tfjeIbQuD
Bi+Gff/Pte+/dGK/5w9g62HzYd/Xf8pdlcOq/9Xfym2X4258oyau2rgYDvwb
+mx9tz77qibWlSN/eeuj9dVXtr5e/yqf1j6+3fp4fb0++5q2jHXt07rGnxtP
pCaK2ijW0bdf27bFP7zqVGq28+ce1+xh2viL/Q8aGxojqi3AX4j9wR+xa/N3
0vko+Dfl+Mr1xRDyv/iBZi/DkOAPxHRgO9PGX/j+Zq97xlT8zWoEs72ywfIH
qWmstjGGBX8R/7Rl1ZznjzYmMTYxxljRxNjWMVzVxi9018x4hP/78bpXf+/E
X7q02efY5PinjEfdK/UHjD+PbvY66/CX+6Y8q10P3xr+m4c7qbF/avMfPdjs
f/xDvjG25Zvi28P/49mxzinNf7ayE+bBkc3/dlsnbe9u/je1uLXxxzkmY2Nj
ZsfqmTJ2vqKN7ZyjsZcxm3N/b7N/uqf8+/zFzh0D4PTmn/LseqZPbv6035Z+
byf+MP4x+n2d+NP499Qiv6cT/xt/233NXvre5m+js6Ee1/x1lrVN/jnxAlgw
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
MaKf5KZiRWP84vJiUOPyYvzi9mJWa6Nj+To261j2SW61Y7Bv62CMYo3inuKY
4tb/uGSvmrf3OPOwSTFRLXN36XeVHFXzlpZsUvorR2EyYjPeWfodfJk178hx
mOY45DjpOOibl76Za6jWQ8mrSl84CrMRu9G8TUfhTlqGbhnztP229HtKjq5t
HTMOgxqLGicWd9qx4FRioj7JicRGxVDFLXTv3FP30j20LE4kjqF1MAyxDDGg
cY4dO5Y67rhzuHGUa+Ta7DMOg9I+bBsb0bawJzERbdO62OyY5bbhWcJy33ec
Z8qx2ad9OUY1q9WuxrjDuju/5n16FK7uhuNwhr0Dnn2sWHWt1e5X019t/7eV
fhAbkNz9+TCVcWgxZ7Fn6e65e60NQxhLGKMYhxjTGMcYxxabmW6f9qXNtg8s
WWU++9i79L3UsKh+8ZG5MKOxo3HFsdExxXG9MXmxeXGon+RaY3/Tsa4xrrUd
Mgo3GVcZaxlT3Tasi9XOR85XjrM8UbJIrQ81N9iu5sJIdk7OBVt5cc3bUw2O
mvfwXLaNs4zZbB+4y9jMmMnYyeZpo1sGIwErQY10tdIxFrTRsRvUTFc7XY1w
tcIvqHU/55nybJV8tvTPlGxU+sbj1BBXS1wNdHXK1SDXRle73L1XG321+TwD
GIdYh09Ta2I+2/JMeBZs07PxqVGYy54RTHjvhHcBi9274Rvj2+Id+XzpF3pn
vbvj3Cv3xL1wz84r/ZOjcN6x5unnjsJ814ZR4Zydq1rqju3gklXnc4yYz9jP
GPa49dbVRrcNzGPsY0xubG4MUSxRXHasdwx33FFcWCzhP5b+B8+MZ2cc/fee
mXHa6A+UHD9O2+Wlf6Nk69K3KflT6Q96JktfVnJZ6ZeWvL70rUoe8W0rOdm3
teShUdax7AdKLin96yWvK33LkkdHWceyp5Q8XvpjJctL/2jJbaXf6p0q/bBx
cqLkRr1A/oznbs3kUcmzOqvkYdei5CTf7nG+vT8qWTzON5j+w5I9x2nDFVtl
9eRkyc3CGNNGP6fkBt+6krd4N8bZ9p9LPjTOPn5X+v3eSe/mOPp9Je8Zp+0K
175k+9LfUHJd6deWvKn0N49zLb5W8tpxrsn3Sr++ZLfSdx9n3ldLthhnmS+X
/qWSzUt/9TjzvlLymnGW+WLpF5dsWvpm4yyrjW4d1/I3JYeMc02d2/dL9hjn
HB3bNSW7jnOMV5X+3ZKdSt95nHP5Zsl245yTc7235Nhxztm2nINjt03rfqfk
jeNs49ujXBPXYodx5l1ZsuM4y3jWPFOeJc+cY7m6ZJdxjsmx3+KbNs45/GOU
PDt5dKeVrLJm2uinu2auXcnP6tn/+Xz015T8dD5t9FeX/N982tYtfZ1RuL1X
lbxulG1Y9xclu43CFb5PLZiS3Udpo/9uPvOwh++dzzK3l76y5HDv+jjzdi35
7XyW0bdbxjx9/Hqlv8g517xr5sM5xgrHGMfBxhHWRsd59m5ro3vH9eXGFMYS
+vRx6fOjMMdxk53b2qMwiZ0j3TLmafPtwEa/dj7fELpjciza9D3vGYXbrg/C
uMe6f2A+3OU9S180Cof5jyXbe1a8w6XfVrKDe++auDYlb3TvS+4w1inZaZQ2
+l3zWdY2rGudL4zyzfWtXTjOt1cfoW/wDX7qmsmzlId5xjjfEnmVp47zTXFs
jtmxOkbHtq13Yj7H+PrStyz5pbHGfJj12PV/Kv2h+Xxrsen/PJ9vLt0y5mnb
pvStS35d+i0li0e5Jq7FgyU7j3KOzu3ukl1GaaPfM591tyq5eT7boDsmx6LN
tT+25F/GuQfe9YtKXjXOO7+09KNKOqVPjcO3xlqW4/LufvjLWMyYzIeXvn/9
I60xlX+ms2az7pElk+Ns4539xLK/rBN++x6DsKExovGl39FPbPsGNR9fHrMF
uwVzBmfmG4P42kYlB5Z+PHteP0xtbG05SGw/cooPG4SRYxvWxar5Vj9sbjkx
R5X+vn628cS6/eQ0+beT83zUIDnabE1ywN4xSM41W5Gcrv8qffdB2NgY2XjX
uw3CvsbAxtP+z35i8V/eCY/6WWKUmr8A71vOu39bOczvG4Rv/Tq+8Frn0H4Y
4Xw4fDc44Xjnckn4sPGk8dvlpoo52o3tZxh2EYbRirlwebB6MHJwa/at5Xts
MyVn1vJfb/7bvmMehLf9qtrefbX/d5W+qNqePxUf8Omz4d5g7WBS4bZg4Gij
Y7nsOcg6lv14yTcH8fWuVfI2vl4xJ1M5hiWl7zUIixyTHG8cP9y1ZP+Se4hH
z7cuXkjupnvE3yInxr37Uj+xFxj3fb6oYWIhviIGrs7/j/2w6V/EB1X6X/uJ
PXCOeOKP9uMLdM3xxD/VT+6ZGI/n1vYeqOljOqmX/MV+cujYq7fuhOv+3ZLv
lPyjZJWat+ogy5iHZ/6XfmIXMMmxyf9WclYn7wxe+bprpHa/GJFvsue1/2vv
2BVtm+d08szaF06A2nhiRC4ZhimALYBhgGXAB7XaIHl/fFNf6edden8nvHX8
crl0mN744XgDtmlblw7DeMJ6wk3Cmrq3xdfIV7uo9Iv7uRZiFnq1/gtmkxco
b/BzJS8YJNdWTNeus2FOYU9hWOFIXVjLzHQSk/PC2awjd09Mj23ZN9YVZpNj
2KP03UserHP7U8n8GmEjiIe5rI73M7X++fwKte6/z4bXLjeQzwQ/Hd9dbpsY
Hnx1/He5iHxMeOifbvfcvX7ebLYlV1AMkm1+eRh2F4YXHti5g9TCYF9V++Lj
tfwzO8mplFt59iDxrOzbalGsPUhskvdrSU2vM0hs0sD7VtMzNT1dsrj0vWbD
BMYGxmzGbsa4wLrA8MLyYntQM0+tPDaI8SCxS96nfWv9+UFinbo1vc9sti2W
yjtsHxjQWNAYGlgaaw0Sy/S8mr9nzf9EP7lrYlAma7o/SOzQv9b83WfzzfqB
cx7kW4ZpjG2MaYxtPKy2qzv5Bu5Ry49q+ppOvpFvqen9PJtTuQbrDsJ88o/s
3xgrb/tqk8srxlYtEoxArMBL69pfNhemH7YfhiCW4NaD5PqKEVarwb+nf0z/
lv5B961l9yl5tJb9m/iQUfo0fZm47mNGaaOL9d5xkNxiMcxq4agRoVaEmKYt
B6kpobbEAzX96tLfWtteUvJYbfvxkp0GiX8U/6u2zvE1vdlU7GWblb7rIPGP
4qvVyth5kHdFfLTaKstq+jVTiX99Xen717b3K/m7WJOS1WbTJ+gLvl+y5iCx
cfrQRbNhJmMnYyxjLZ/mG9JJjq9cXzVV2FvVyPhA6R9q58f+qvbKRwep5cFm
qZYJJjM2M4Y1lvUBg/S9N/qmlv7mQZ4N8eFqe5zQrg8bttouGFOeYc8uNt2Z
/eRiipHq1PxPDRJvLt5CrRgMOX2WvgprDcPON8S3A4vurH5yNcVkTXlfB6kt
wh+iVsqbBukL1RxRe+SMQWofsW+q9fLZQeLZLy25Wn9d235zyR/0FXPJgRb/
Jqf0Y/0wJbElr6x53yn5UT+xYnJAT+6nBorYbDnsmwxSQ0XssZoUGw/CuMa6
xrjGur6p1tmhkxzQ5f3klMst/0m1rV/6jf3Enj1W80/pJ2dc7LIYuZeU/lA/
sXEvLflqPzVaxFqLmXtZ6TdU24p+mN7Y3gcN0veKOXtx6f8PWvWvLA==
           "]], 
          Polygon3DBox[CompressedData["
1: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
kLNBzo8X6Osgc8fYfcE5xpli7tf/ARJckfE=
           "]]}],
        Lighting->"Neutral"]}}, {}, {}, {}, {}}, {{
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwd1Ff01gMcBvCnTZpKU+rfQhPtoWm0S4huSN2kwjmRbqLckLrJ6IbsdmjT
TjTRlnbSVNoXReMcn7+Lz/v+znveq+/zPL+Coa8MfLlIku4+ivoufH6SGVyj
px8+5jyd/eE9jtOqWPIO+2lcPHmD7RSUSF5lA1VLJi+ykrKlkudZSLHbkqeZ
xb/0vj35hIt0LZ18wEna3JG8y0GalknGs5N6ZZMxbKJ6uWQkqylfPnmBxZSo
kDzDHG7Qt2LyGZfpfmcyldO0q5RM5jDNKydvsZsGdyVj2ULNKslLrKVi1WQY
SylVLRnMPG7Rv3ryBV/yFdOZwUxmMZs5zGUeX/MN3zKfBSxkEYtZwlK+43uW
sZwVrGQVq1nDWn5gHT/yE+vZwEY2sZkt/Mwv/MpWtrGdHexkF7v5jT38zl72
sZ8DHOQQhznCHxzlT45xnBOc5BSn+YsznOVvznGeC1zkEpe5wuf046a7zuVZ
SrLE3YdSgTXyGEUNNsvpdeqzS34TaMYhuU6iLafk/SHduKQHn9KH6/oxm0EU
Z5H+DKEcq/RqBNXYqG+vUZcdevgmTTignxNpzQm9fZ8uXNDnafTiHz2fyVMU
ZYEdPEcZVtjHcKqw3m5GU4dt9jSORuyzs7dpyTH7m0InztnlR/Tgqr1OZyBP
MID+9KMvfehNr8Jd04PHeYxHeaTwPUA3utKFznTiYTrSgfa0oy1taE0rWtKC
h3iQB2hOM5rShMY04n7u414a0oD61KMuBdShNvdQi7upSQ1UI+oQNYj4I/aI
O2KOeCPWiDIijOgisogqIopoIpKIIc4fZ49zx5njvP+/B/8DvhCugg==
        "],
        VertexColors->None]}}, {
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl1HlM13UYB/CHRBEEDzzwxyH+gB8glGmZV2aGYCRlWJGpk/Ko7NCclbNk
TMu0lTq2rrmWHWandoh235v/YK2as61WWbT8wy11KGpa2mvrj/f39c/nu332
fJ7nSS6457qlaRGxyqe6NOJ4IqKNc/IjHmcT17GRazidLZzGlazhfZzMZZzI
uzmWizmaiziS81nNZlZyLlO8iUk2sZjXs4AzWcT1Zc4WRDzCeSxJRWQW+odZ
XM/V7OQR/s6jLC2PqCuKmMU2buQB7mbRsIj9XMiT3MZERcSfnMCKYvflLXyG
O3hMjktOZUT98Ih22SUVyYgq+VbuGBHxPe/iPi7hD1zGH3kvf+YKHuAD7GQL
D3I1D3EtD/NRdnEDT7CNp/kkz3Ez00sitjCTudJT3Z6riujFLczg8+zNF5jJ
F5nFl9iHW5nNl5nDbezLV9iPr7I/X+MAvs5cvsGBfJODuJ2DuYND+Bbz+DaH
8h0m+C7zuZMFbGchd7GIuzmM77GY73M4P2CSH7KEH7GUH7OMnzDFT1nOz1jB
z1nJLziCX7KKX7FDzWZzD5u5lwv5HRdzP5fwJy7nr1zBTj7Ig2zlIT7Ew1zH
Lj7Gbm7kKbbxDJ/gWT7NNPfYzB58lt9410Xecy9vZ4odeq6MX3OnnruVdcxi
LbPZpTc79Op2PsV5vJkpjuMfejuPW9mt5+dzHwvYzl/MxgZu4o2sZY38ZZZ+
M1OtbJEMSZfZZnGWPGwub+AazmQrZ3AVG7iS9byftVzOKVzKSbyT43kbx3AB
R7GZ1ZzDcjYxyUYWsoF5zLcjEtKofkN5LfM4g0N4DQfzag5iAwdyOnN5FQew
nv15JftxGvuyjjmsZTansg9rmMUrmMkp7M3LmcHJ7MXL2JOTmM5L2YMTeR4n
MI3jGRzHc/bwWJ7lJfyXY/gPL+YZXsTTHM2/OYqneCFPciRP8AJ283weS/y/
5/8DPTjVIg==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1HtolmUcBuCf4ipcJGGkbXPObc5NLckKNTGpUV+HRWy0oU78bHMttTZE
bcxaw0O6kS6WmSZKWDGpBU5yRh4ooaSamNWyUjzQpBUrZY2moVEX9Mf9Xjz/
vs99P+MqaktqhkREnU9JTkRmWkRTbsT89Ij1XMCc8RGpGRHNbGQTV7OH/czN
i0iMiZjLVzmHrWzhee5nZmbESS7iFbYxbULEL7yX+WMjkvKUbHPewy7+xURW
xKNSnR/RyfxxEZPkhCwpiPiWz7KbNfyBy3iKK3iGdTzPVexhA3u5mn18mZfY
zAFu4mW28iq3MLIjtjOFb3E43+FN3M2RbOco7mE6P+RYfsRcHmIBj/AOHuVd
7OJ0nuAsfs8HeIoJnmMRL7CYv7GMF1nOAS7kFVbxHy7h0IkRtbyeK3gj63kz
X+KtXMt0NjGLmzier3Eit3IKd/Bu7uIMtvE+trOQHXyYnXycH7OYh1nKI5zH
o0zyGBfxGy7mSdbwNJfzHOvYwxfYy0b2cS0vcQMH+AoH2cK/2cprfJ3/ciuH
6vd2DuMOHnevVf7TMT7DPHbp2F4dq2QHn+ZDTGW/Ln6hk+9zM9/jG1zAhczj
dF7Q6dF8l4O6XsFuZnAfz9rEadkopc6FzOZFW+qTBllvWzcwRebZ4BxZZ4+l
XMMSNvIJvsgi1vMRPs8HuZz3s5azuJQzWM17WMk7meRklnMCy5jNYo5hEUcz
wZEs5AjOZipn8jpO4xBO5TXvyO28zHz+yRz+wUz+ytvYw1t4liP4E4ezmyn8
msGveNW9fc5Bfsp+HuTv3M9e7uXP/IBnuJs/8m1+x508zm38kpv5GVv4CZt5
gOvYyUZ2cBXbuZJtrOUuLuVOVvNNVnILk2xlOTeyjBtYzDV8jA1MsJ6FXMnZ
XMaZfI7TuJhTWcUprOBkJlnA+czjXGazjFl8khlp/7/r/wGeW+xY
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1G1o1lUYB+B7CkvQUEKp5nJbezbdShMtURMbOWSGC3kCB7bq2VxjqLgh
vrGVDV9CH9PBMtFEURMctEwlZvRGCWkzJRVfU0xr0YylooNpqHRBH37nOof/
t//53Sevuj65MCMi6i0V+RGJrIj1iYiq4RFpvsV1TDFREDEo23euZJqr2MU7
LCyMmP5URAHLOIetbOE1HmLOiIjzrOU9tnH4yIi/+CKLciKqWc19sl+OO/dx
Rm7ETKkbFdHBoryIE/bPcoyclfqiiAtcxEtcwitczmtsYhdXsJsr2cP3eYtp
9nIj77KV97mZGU9HbGMmd3Ig93Aw2ziU7XyC+5nNL5jLL1nAb1nMw3yOR/k8
j3MST3Eqz3EaL7GMV1nOP5nk36zgTVayl1W8x1o+5Hz2L45o4AAu4aNs5GN8
j49zNbO5jnncyEJ+yGe4hWO5nS9wNydzL19iO0t5gDPYwVf5FZP8jrN5mK/z
KFM8wbd5mvN4nvW8zMW8yuXs4jvsZjN7uJq3uJa9/IB9bOG/bOUDfsTQ6y3s
dI9V/stPnMtjrGU+O/Xoc52q4j7WcBoH8KbuHdHBG+zkp9zESr7JBCfwdx0e
xl3s1e0UTzOLB3nZDKznBqalRPKce8zOdWmSNWYpk/0l1z6Ds83ea9JsDmfx
XZazka9wGadzMV9mA6dyASezjhNYw3FMcTQrOYoVzGeSI1jOJ1nGoSzlEJZw
EKfwEU5kP47nA+/GGN5lEe8wwRvM4XVmsYvD+BuH8FcO5Flm8iQz+DPvu7cj
7OMPvM1v+A8PsZsH+Qc/4xW28SI/4Rnu4C/cymPcxB/Zwu+Z5tdcww428wCb
2M6l3MsG7uYC7mAdP2YNNzPFVlZyAyu4lkmu4kyuYBkbWcqlLOEiTuFCTuQ8
jmctx3IuRzPFYr7BkZzD/Kz/3+3/AAvZ6CU=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1HtolmUYwOHbFUxBJREl5+b8pttyZVrOxBNr6ogpTWhBI521z9ZSUxti
WhYmuULnYThD1HCoRRu0YEZMyQNqbIPK1KjMCjWcMcVTaUxJ8wL/+L3Xnw8P
730/ieTi5xb1iIgqn6phEWPTIjYPj5g/OGITX2MdK7mBr3A9k1zHuczJjuiT
HpHNvlzP1VzHGl7g3+zkDebmRBRnRMxiPev4J/cyMSTiV1byFKv4mZqUnhvR
xUnMy3Q253IrW/ivujVjaESJWrVPIxMRxx6JGMUfOJrH+SRPMp/j1KmVI5zB
93mZH/I6a3mTG3mL9bzDLUzJiviYqdzJ3vyUD7GJA9jMQWxhBr9igvuYw4N8
lEc5mh0cy+85gSdZwF84jb+zmOdYwgss5SWW8RrLeZNJ3mYV/+frfDAvopq9
+Cb7cgX78z0+zBpmcC2zuJG53MzHuJVPcAef4m5OZCOfZjOLuIfT2cqZ/Jql
PMQXeJSz2cEKHuOr/JELeIpv8A8u5Tm+xU6+yy6u4mXW8DrX8LD/U+a+h/gi
j3A2v+EctvFltjPJLLaZhwQ72Gx2XuLnTHIKU1nIXrxm1trNXiM3cRbLOYz5
PGtW+/MMB3IXGzRHJ8z2ILbwtNlfy1o+z0IW6KJd+Utva7lSFMq0R3ft3RD+
x3TeZhq7+Yymqtp+FnAhJ3Iex7GSY1jBx1nOESzjcJYykyVMYzEHsIj9WMg+
nMyeHM8HmM+73o9RvMU83mA2r3IoL3IwOzmQZ9mPv7E3f2YqTzCF3/GOd6md
3TzCf3iAV7iXXfyS5/kFz7CJp/kJf2IDj3Mbv+VHbGMdD7OW+/kBW7mKe/gO
m7mMjazmbi5kA+dxOyu5hRWsZzk3sIxrWMrVfJYrWcwVLOIyFnIJJ3Mxx3MB
89Puv8v3ANzs5IY=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1HlI12ccwPEnOmhBl4iVlv205dFBq7BFNamx+kNJI37EbKbDovuUtQoK
KrakFXPSgXRKdKCBRVaYuIqZVNBB5zqhNjrIat1g0fGK/fH+vnjgxxe+v+fz
PElF88bPbRFCKPRY3iuE3PgQKr4M4eeEELbxJ25hMTdxPss5hxs5mxs4i+s4
g2WcylJOY3rvEDp3DyGNHZnKTizlKv7OEj7ga6anhJDVw++ZzXyuZxn/ZR0j
iSEcYTJvcDrfsooP1aRvUkPo2zOEKZzCAzqos9bNHBvxvarVjDTvZb0GJoVw
wXowLzGDlzmEVziUVzmM1ziCN5jJWxzJ7/RB5ekhtEwOYSvbcgfbczc7s4px
rGY8DzCRh5nMOqbyGPvxBAfyNIfwHIfzEkfyGkfzNrP4D3P5gFE+Zh6fs4Bv
OJnvOJ2hj71laxazHRexI5cylivYjauYyDXsxT+Yxg3sz00cxO38mjs5gpUc
xWqOYQ2zWctxrGeUx/k9T3AST7OI5zmNlzmb17mAh/zf2b6jhjk8zHGs5XjW
Mcp6TuBR5vE4f2ADJ7GRhezJBvuZyEZGeJJ7zUgBq/jj5/1mGz4xUw1m6zEb
uYdlnMh8JnMQk5jBu2Y0lhV8aXYLma+u2m993ayv5mqWKFMR64fOyH0t0SL9
4tws5Edn7b16WL9jApvZjW/Yla8YxxeM5TPG8Ck7sYkD1Ed5zm9vRhlhLhOY
xTiOYQy/ZQdm8gsOYytm8KP75Cu+ZV++ZgqfMYlN7M777MK7jOEttuffbMuL
bMmz/OCeOsVmNvAVj/I/HuEjHuQ97uMdVvEmd/EqK3iBm3mGG3mSZfyLa/kn
S1jLlazhMlZzMStZzJ2c+/ne5Exu4VSWs4jrWcBS5vE3Rvkrc+L/v3c/AfyV
4DU=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1Hloj2EAwPFHrpBzhsYMm/sK5Wg2jVgyMZIcS4k/HFmaMyEWpigUkjuG
WRptEjNjplAolGlMMzOzyRUrFJ/lj+/v09Pv/eN53+fovTh91qomIYTZfrJj
Q1gTFUJ+XAi7u4dwmTt4iZnM5TbmcCvPczOzuYlnuIGnuZ4nuZbHmcGjXM0j
XMXDTOfwviF06RHCUEZyCDtzMDtxECO4n1ncx92s5U9+YEPj8/1CSIn2PKcz
jQd5gO94k7E9QyhkHMu5jL+Zy4+qV2J/c4gJYSmXMl9X9Ut/NLNXCKkq1PIB
IRRxBW9xJYtZonG9Q3hhHM+XTGA5J/A1k1jBiXzDyaxkMqs4ldWcxhpOZy1n
sI6zOFexfcxlYAgDeJtDeY8j+ZBj+ITj+ZxJfMkprOA0VnEmP3AOP3E+v3ER
G7iEf7iMTQZZQ7ZgBttwAztwMyO5nVHcxRjuYRz3cyAPcRiPchRPcSyzmcCL
nMg8JrOAKTzjnceaxynG8ywTeZ5JzOEk5nIyLzGZeZzKK0xhAWfwGlN5nbNZ
yDksavy+jGKR792NxezOO+zBEkazlDnWfCEvMK1xndmUiWzOOnunxJ76yFKe
4z7O4wL24gjGcBQr7MVOPMFv9mgaF6ir8ozL7OksZnGnEhSvamfhndZpjTKd
jwxu52puYzobnL0f6mr8nZH8ygh+ZkfWsz1r2ZY1bMNqtmIVW7KSzVnBpixn
YBlbN/6n0c574Aj+ds8M4U/251f2YT2jWcNufMsIvmY7lrEVn7EZH/Ove+sB
f7GUP1jML7zBOl7le15mJXP5iuf4gqf5lMf4iId5nwd4l3t5i1m8zkwWcAvz
uJEXmRH1/x79B/WB3TI=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1HloiHEYwPHfkJCcOcdmZa7Q3GFSSBISqTVCS+TaUMo5R46as1mjhVyb
ozVHNtesjWm10EKTmqY5mmEhaWaWj/zxfT+/56+3t/d535iklHnJESGEqS7n
+oewJTKEcbEhRPcJYQz7cBQjOZK9OYK9GMceHM6ezOBBHmMa03mAn9nIT2xg
HX9x6IAQ5vQNYQkzuZjHeYzveZ+xUSFUcRWbmMu+A0P4wskcFh3Ccq1QlrmA
v/XU+Q+bNa9fCB0GhTCfC1SsteYSJvMhU1jKdXzE9SxjuabGhPDGPJ01nMF3
nMkPnMVazmEd5/Lzv/uxngv4lQn8zkT+4CL+5GI2cCkbmcQmLmMzlzMMDmEl
W3INWzOFbbmB7bmRHbmJXbiV3ZjKntzFSO5hFPczhmnsz0McyKMcwnQOZQaH
M5NxPMGRzOJonuRYnuZ4nmU8szmZlziFVziNuZzOPM7gNc7kDc5mF+Z77k68
xa68w268x+4sZA8WsReLmeNdJTCbibzIhYxnBCeyBSexFT/ajRJ7ks3DvMAj
TGAioxjH13atM0/xmx1MZAW7M48v7Wql9mq+OZ4TFO08nm/teo2q7f0bbtA6
7TQncwfXMpWruZ0ruZUr+MU3WacO5lq25we24zu2YQ1bs5qtWMUIvmKz77qS
TXzBRj5jAyv4k0/5g4/5neX8yjLWs5SfWMJaFvE977GGt1nNfFbxBl/xKiuZ
y+e8zArm8AnPs5xnWMaTLGUWH/AEi5nJImawkOm8y6O8zcMs4EHeZBqvcx/z
uIe53M0r3MlLTGUOt/ECN0f+/w/+BY8l2fE=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1Plrz3EcwPE3ydmYHCUbm2uTkJybZP4C15iRGLnPzDWtlCOKmcXMNxZG
FH2be+b6OqJpjpZJYY6Uo9hIkmbNQ354fh69fvl8+nw+r88ned6qKStbhBCG
O5T3C2FnzxAm9A9hYEII45nCcezHsezLdPZhGpM5hkkcxUSOYC9GWMSD3MsS
FvIAC1jMPaxnI7/yD4cMCGFiYgiDOYk5PMi5jHA/PzDGAb1CuMkU1nEZmxhl
vRqUkeKcvUNYrCWq0BU1KySFkKlOqSFMZzyz2JkzOFP3tcZcxVw+4FpWcx0f
cj0fcQOfMI81rNXkZPdmzmTDv+vwO7P5g7P4k7P5i3P4mzls5Hw2cQGbuYgt
BoawlK24gm24mu2ZyziuZzzz2IX57M7N7MEtTOB29uZO9uEu9uceprKIg7iP
g1nMoSzhMEY4nIc4kqUczSNMZxnH8SQz2JZn3EdrRtmO5ezAc4zjBXbkRXbi
ZXbmFXblVR7zbKfyKKexjNN5nFk8wWyms9kOpDGYP3nvMfNH3uJx7mYZC5jF
bCZyCBM4lK/sUjwP85sdy+YMdVPU/MxO1mqbtmqMRuudnX6j1/b7NetYx1d8
yeVaqnzzYm7iQuZxATdyPjcwh+s4h7mczbe+2Tq1NL9gs+/4OZv4jI18yt+s
4S8+4U8+4g9W8zur2MB7/MI7/MwYP/A637OSb3n537V5gS94ls8ZZS1Ps4an
+JgnWM1jrGIp7/EQ7zLC2yxhjMW8wX28xiJWspAVLOAl7uJ57uj5/z/2F02V
zZw=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1Hloj2EAwPFnTIQIkzIbwsxNbCOSHEnDbI6RI4Ycc00LYRghRyln/HY4
krOFlChSSinZGmMzRwublByJxMZH/vi+n/fpvZ56n56uWaszVkWFELo53O8e
QnFsCFN7hDC8UwjpHMY0pnASk5jKwZzAQRzP/hzHfhzLvhzDPhzN3hzFRI5k
D45gAk/yGIt4lIU8wgIeZoQHeYKH+JUhLoQv/GP8mfX8xAYOTDB31wcwgwt5
glmM8CjreITveZeJ8SG84go2sITxPb2bAzp7p5YrWzd1S1FdQih1TyOWsTGj
NUttE0OYzXacwxjOZXvO4wI90gbjMm5kOTfxMTezgnl8yi18xq2sYj6ruYMv
uZOvuZs13MM3rNXSrubYy9zZhKvYjDlswVy24nq24UbGMI8duI0duYNx3MUu
3MNu3M8EHmAvfvfN477/jRH+YCF/spi/eIr1PMM/PMsoz59jY15gNC+yCS+z
KUvYnFfYktcY8fxEHudkFnAKC5nOImawmNOYzF/+VxJ/M4X1HMoG1vq3t/mO
d3iKe3mS+ziDmZzOmYxlP1ZbK60Z4SdrKJOljGE7PbbWyrVd+UpWkuLdM4Rx
HMwX1vBzVVvPVf/OWckqPmUln3CRsrTOeD5zOY9rOYc5nM01nMXVzORKTmc2
p3IZ07mEaVzMSVzIVD6wJ9zXR/vDPX7gXdbxNt/yFmt4g694ndW8ykqWsIKX
WM7zLOVZPuRpPmBR7P996C/b9rt0
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1NtPj3EcwPFvOV6xuUAHpwtnW6lmZk6RVJKWyllJGpb8B5iZ8ymkpAOJ
dWFzTy64Njo4rRmWzDlETjO8fnPx/r2ez3PxPL/t+9kzoWRnXkVUCGG4n/SJ
ISTGh9DCRl5hAy+zns2s4yWeZxNreZE1bOQ5fuPAMSH0cwC/MopfGM3kSSEU
MIkrOZP5LGMDt7COpaxnNd/wNqeODeEWp/EZd/Avr/Gz+pQ62TPHhVCuMtc7
WKEbOm9u5U0NGh9Cu3kwOziEQ1WkkVNCKOYolnA0NzOGpYzlFsaxjNv0WHvM
XdzLJ9zHp9zP5zzIbh5mD4/wJY/yFY/xNY/zDU/wLU/yHSv5nqf4gafZyzP8
yCp+4ll+ZjX7WMMvrGU/6/iDDfzFC/zNJv5hM8MEO8BotvC0+2msZDrPMINV
zORZZrGay1jD5azlCibxe+Rs+IPJ/MkU/uILZ3Kd3ZGzYg9b2cADrOdBNvIQ
81nIWE5nDGewyw4MYy177UYhCzRCV83tdqlNB1zf4x7tVp55V2QvIzupeHMi
45jAR3b7gR7Z404+ZEfkHtt5n23s5F128A7XarUqzIUsZz63M49bmcsy5rCU
2SxhFjcxk8XMYBGXciPTuYFLuJ5pXMfFkfdyEdcwNfIfuJCruICFnM8CzmM+
5zKPc5jL2czhLGYzhVlMYgYT4v9/N/4BSlavAA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl00dIUHEcwPF/h4aWUacsnG13ZSYRbaJrma1rF5sOIqIhEaXRjk5ZRtrW
hoqYiZiJmLmLBnQpuxYdynYd+kiHL5/3+/MO773//yVuKcjJHxFCGNKtGSFU
xoTwl5GxIfxhBH9zDH9xNH9yJH9wFLNnhrCZC7iJWdzA+dzIbazkVl5hHitY
xg+8wI9sZ0pcCIPMZ5gVQi3jOcR58SFkqkB51gpZpEcqN7fyMh+zTREJIbww
R/Ilx/IVx/E1ozheeYqZ7fkYy+2M4w7GcycTuIuJzOdUFnAaCzmdRZzB3ZzF
PUziXqZwH9N4gBks5lweYiYPM4tHmM0SLuQxLuJxLuYJLuFJLuUpLuNpLucZ
ruBZruQ5ruJ5rmYqP3v/FH5hGoeYzq/M4DfO4Xe+8y0f8C0bOciHfM8mXuJR
XmQJy1nKdcxlDtczmsl8Yy+jWMZP9jqX/ZzICcPXzkKfSq31slgHtdZ8gGu4
n+lK0xRzKicPnx9GM5mTmMQBZ7pPz53XHj5jNwfYxX4+Hb6HnezlE/awg91s
Zxfb2MlWdrCF7WxmG5vYyka2sIHNrGcT69jIGjbwHutZzTpWsZa3WcNbvM+b
vMcbvMvrvMNrrOZVVrEi5v9//A8dbJ2H
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl08lL1FEAwPE3LafMcWZcLlZusygWERZm/gtt463t0KldsDSLCDOL/oJW
qGg5FZHTJCIiYqNY/QG5Hrq1jNWhji2focOXD4/H4/F77/3qj3Znz0RCCB+U
S4bwvDaEtakQEhtCWMM4VzPGVaxghFEGlvOvdev5h+v4m2XsNH+Eu3iYHTzE
nTzAdh7kaT7lKT7hST7iCT7mPRZ5lyucZuvGEArczI/sZiQdwjB/6pfaNoWw
XT06Zu4sj/McezWl+8Zv+IAFPuQ0ZxStcy7GFZxjjPOMc4EJLrKSS6ziMqtZ
ox6lMvZjhn1sYT9beZFbeIlbeZnbOMA2DnIHh9jO6+zgDXaykZ/s18DPbOIX
JvmVKRaZ5goz/MZmfmcLf3DBtw5znjku8hWXmOcyX/MWB3iTV3ibg7zDq9zP
LPexizXMlM6DzZxzJ2WldSy6sy5mFVW53rvbd7pm7i2HOMsL6tde4/Pcwz7u
Zi8zSqvaOMUqJlnJJibYyDgbGGM9K1jHgjc/pVnvdpIznGCB46U5jnGSo5zg
CMeZ5xhzHOVLjvAF83xW+/+/+gcelIGa
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0rlOFEAcwOHRQsUFbAC5dhca6KQTGk9MPJHjBUQUCtBdQOOtRH0Cr9io
iYooN9FHQFgPMOGmQrm0MAErbP2IxS9f/lNMJjNT3JCsS2wJIXzQtpIQsqMh
HGETK9nIwzzPQzzHg2zgAZ7lfp7hPtaznT1sYzdb+Y5JdjHBt3zBP3zONT7j
OlPcEwthlGVcYiu3lobwnhv6q71xZ7NWzgpdUbP5Klt4jRd4nTeU0kvzJ77i
Z77mF3byK99wjF0c5zflFoWwYM7jd+bzBwu4yEIuMcplxrjCOFdZxJ8s5i9O
2rObE+zhFHs5zT7OsJ+zHOAcBznPIT7kTT7gLT7ibT7mHT5hB0+zmlWsYTVr
mc0SZrF0c393GeFT/nbXtaxRhtLVay3ClLcZ1X3zCO/xI+9ymJd1SafM7TzJ
Np7YfD8eZ5LHmOBRXmRcMe0yR5nJQmawgOnMZ4R53MlcpnE3dzCH25kV/f+P
/wHwTWuH
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0jlPFWEUgOEPNAqUUl+XRKTFUiAGkEUWMfEn2KiAXNn3VQF3bLQVTQyy
6AVZ3BABG01MoIE/gJWdSIHRCM+E4s2Tc2aS+TIzJy7HL9UmhRASKjoVwtVY
CDOa11+9sPvPpKMhFKhEP+2GWKg8fTfn8p/7djSrN2qzn2Yrp9jCBJv5mk18
xUZOsIGTfM5tPuNvjvAXn3KL35jleV95mj9Yx03Wc0az2tEfnTkWwrnMELJZ
yBzmqkPXzZ2sZRfj7OYN9rCOvaxnH29qVaPmAfYrT8XmsyzQLTWYB3lba3pp
vsuh6N7oPDpvl8+D2nXORR2wW+AXJdsfNx9iWnR2leiOGu3vsYn32cwHbOFD
tnKYbXzEdpaxnKWsYDkvsIKVTOdJHmEGN5whletM4xM+1kVVRrvousa99xSO
8TBXfKNl9ZqX2MPP7OYiu/iJnVxgBz+wRlUqNlfznT5q1LzL93qrdvMcr+lK
bP+/3QM1F3AB
        "],
        VertexColors->None], 
       Line3DBox[{9891, 7670, 7732, 7735, 7801, 7805, 7869, 7876, 7939, 10017,
         7943, 7947, 8005, 10057, 7949, 7945, 7883, 7879, 9990, 7874, 7811, 
        7804, 7739, 7734, 7671, 7669, 9891},
        VertexColors->None], 
       Line3DBox[{9892, 7674, 7737, 7743, 7808, 9961, 7814, 7819, 7881, 7886, 
        7948, 7951, 8008, 10058, 7953, 7950, 7888, 7884, 7821, 7816, 7749, 
        7745, 9933, 7741, 7677, 7673, 9892},
        VertexColors->None], 
       Line3DBox[{9894, 7682, 7747, 7752, 7820, 7823, 7887, 7890, 7952, 10019,
         7892, 7889, 7825, 7822, 7754, 7750, 7683, 7680, 9894},
        VertexColors->None], 
       Line3DBox[{9896, 7685, 7753, 7756, 7824, 7827, 7891, 9992, 7828, 7826, 
        7757, 7755, 7686, 7684, 9896},
        VertexColors->None], 
       Line3DBox[{9930, 7731, 7797, 7800, 7864, 7867, 7933, 7937, 7999, 10055,
         7941, 7936, 7871, 7866, 7802, 7799, 7733, 7730, 9930},
        VertexColors->None], 
       Line3DBox[{9931, 7738, 7803, 7810, 7873, 9989, 7878, 7882, 7944, 10018,
         7885, 7880, 7818, 7813, 9960, 7807, 7742, 7736, 9931},
        VertexColors->None], 
       Line3DBox[{9957, 7796, 7861, 7863, 7930, 7932, 7997, 10053, 7934, 7931,
         7865, 7862, 7798, 7795, 9957},
        VertexColors->None], 
       Line3DBox[{9958, 7809, 7872, 9988, 7877, 9991, 7817, 7812, 9959, 7806, 
        9958},
        VertexColors->None]}}, {}, {}}},
   VertexColors->CompressedData["
1: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
HC/0iE+KyfvbJDlvM33QnfUTv0Pux3nDu8qYeub0KP4wzCc/wip5G/i3b7YU
OgG61E4hXxPwP2b5wysF9dLczZ3+h1GfbL4Vv/hbfw2xzX2bvwb1Kk+An20w
6G/NirsiUa+aZT03GIK+0SbGZV/A57n47W1lyO+HH374HAI+yZzHHzF8hDhu
vhdG3eWbZv3iIuYzqdzcrgjjvzgUbJ0KO7RJde038m4jxoFGyfswvnr9wJbc
3hqy+fs8r/VebaRujr1DAOjHwxesaOyrId574kI0PduI/C63rEDQRX8Yz9fE
PLUyZp4zw/jCnsS9zPip1bPOdmL8ndjbF4eY+Q+M8mDq2yVX9i5+zMzn9+Zl
dRGdJHDlnde6D7tIQnh8rp1sFXESG/9gAPRegwsFS0APPr6xwxT0gJZMx/WY
Z/FLKTdmnmP9vAYuYJ6J+XUze6M6ySlLru8Pi7rICdv1NUnSVeSWYKVCB+q9
+IkK55l6T+D5dcfJiNwD53QmXYzsJG8lh5YLgf+RkC2/s2SqyNabdctGYLey
4X7nQxi/sEv32xHo5XD1XHsnxmcM/X7IgfFqeXP8AjC+aaD2jA30yuVZq8ms
yxf9K2oHsS5PGo+7JGE+Gx9kVNRgPoX9u3RbMZ9RkkFcyzB+uYtyEDOeTzPH
NRnjBzqthuac6CQc/RrvvDG+KOq2XNjMKqJ4JKTcEuNnHnayZMZLP9/2MQzj
0+MOnhHBfFxOcJ+fj/kI8TW1qcE+3qeHXu452Uk6ObQz5cFHOjKhcJdUFXHs
63FSx3zGtS/d9xH0tqZzBzQw/zeCjf2B4FNxv+nmVPAhG96LVoO+5UV+UTTG
89x7m/gG4x/qf9fuwfxTJ0U2HgV/m9yWSBnQ9580jbQDf6N+Tald4FPZqu02
A3xeHjaf2Ak+X2SVJIyjO0lxfNqdqxifHS2gtkqaTqfxocmlzZOmF80ONLux
tT/b9WXrP2z9k63/s40vtnFNwwdavNNwhoZLbPGNLX6yxW0a/tPwnJZHaHmH
bf5imzdp+ZeWT2l5nJb32dYVtPqEVm/Q6hxavUSrr2h1FK1+o9WBtLqOVh/S
6ky29Spt/J1nDfG3mHOeZwZXXG8tJc57d9ffwHjV377h/i1VZAPfnstSKwpI
UgzXI3OjDtL401fjA8Y/XH/v3os3peS0mEpgT2I3saj3H9+EvqAmn/P4GNTn
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
nLd1MPLa4vbEfm7QbfTyvqYif72bnjHaHfnrkgHH0nfIa6YVTvrdoJ/a8m3l
ddCD5yp5KiKf3thxZO135N/x32O9OJeVkdvN1UtXge6vzZebDLpNUU3RTeTl
6WefSXGCv9VS17B08Dm96/EoX/Cx0Zqfthz01Kk+/rygv6nsP9yG+Wy/6fNF
B/Tcc9c1REG3fGX45hPoJ9b1y00CXezsqZRDoItsf3bJHHyi+x+cnVbdQ4TO
3n2782Ir4ZvfuepUdglxrnfaIw5612VVQzXQOwJKvjiA/mxJ5uuZoO/XOPXI
PbWVGDk0DQtnlZANYzb3MuMvK78KmYjxJRw2z1ZhvFDvkd1KoJ+4fvSc6LlW
0nBpeZjRbfDRe6M1A3QR27Ipuy60kqit3VNfZdHpND40ubR5stWXZjeanWnr
QltH2rrT/ITmV2z9k+bntLigxREt7tjGLw0HaLjBFn9oOEbDPbb4yRafaThP
yxe0vEPNI5R8RMtrfypvss3XtPHRGslNxzuriO3sy3P65QrI3cNNUh/1O8j5
b3OnDzL3oS4NzzVC3fLIQb6VOZ//Y/jb2mjw19Tfenekq5QMc6noy4G/8uC9
33oYP7tNa7fpjFqyuX+fvhlzL+x+YsxqzH+bdOasPsx/dfavoDmYf7Tg1o4B
1EtyS/1nBaNeOhmnL5XB7C+Fi9hOT4Dd9uROfXu/lbjOXD9F42IXyeBYnG6F
Oo3jlnP/Ntg5g5Tdj0Sdpv3EJ/rW5Foy9mcJUR5uJ5rOb148udhO+veaB3Wh
nvRTExi/HOu1vDrrwy3DFmJjEdXxHfVtx0qZ2EPwE51LN69zo77lae68rA6/
mhM8L6EWdIfzviMS8B+JT2HHjOGH212eeTP7xsYiBdfi4YeGyY3iC0CfWmuc
9T90CbvaW6BfWD1VewhxcbDDvFsTcVEw+ULnCsSFw+grtRmg3/h2fdAEdEsl
roBjoA9mnpF+hPhKz18vMh709R2e5Azia80Y5bjXiN8P8tF+ExG/YlXjG54h
rvcv1tSxYPqvnRVK7qD7l3CNyCGuXc08ZCYCB74vvqjI9EHmqh8nMn1Q0fEa
1Z0YP6T24NoWjE97NSArgvE3JOQDGFz98tljhRjw6sb1qxWfgWOP49tUBRi8
nWKUGAW6gNmjrVuAY7+NvNcuBH22+WnveaD/iLK4OI6hG3jc7AXdTLXC94hn
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
Fxj8rMj10sd4gQ3+X3nA5wFftlwK+MxacMHfBvRLCxSfnCmqJFK++t4q4DP1
1fHAbcBbPducfdGcDeRd0yT7nohiMmvDkPtH0HctepmagbwzbsPejDvA7Tl1
33g9wKdW/HxeI+YzXU8q/+z/gg/rebKUS9OLZmeaPWn2p60jbd3Z+g/ND9n6
M9t4YRuPtLhmiw80nKHhEg3HaLhHw0karrLF52/F39RXt1WR+kU7TaS0Csgt
N64nhYYdJDVGOtob4y8mC1516SklnPzly4MxXkHimsNc5BGDLe224ujXLpd9
GrKA3OChJ2l+mP/kkPRjizF/DVNB+8mYf+NqnT5N5CmVKUJVd5Gncg/cea2F
PHVdMfnbeuZ9NrPKSpeCVnIw0SLZN62LGORN3TZfqJZorMt4xQH7rKmb89A1
rZ18LHlmpAO6Bc83iTGgb8sPH7QDPeuimwlz/5T/QvZu5v6pY/37cub+6aqM
ew6zkZcrozukwrAuGW71/enIyxuUlB9og162VO1bOOjG6ww0QkEfacm+pI31
nXbqxhlmfc2XHLd2wfqqLVr91Bp+MujrLiwDP/HS6UodZM5XVytNmxnVSW6d
so4ZKOoike6aD1aCnpL9+MoX1DM56e/yc+Bvm58bD+6Av6Xx7pKdCb8djtpU
vhX+3FYm9XgB/HlXlc+Vb/BztePfXZ+APkdw3f5I0LcJ3lsoibg47Pd7qRLi
6FA9h3sy4uhDZZ4XUx9qPDaWuQj6CY9QrhHQu++bmkshHu/lLU6bj/gVmhTW
cQvx6NL/SnQC6M0WEq8MEaffRi34tZaJa2KQzeDMvu+8minAmfprL9NVgRtv
Hf0HekR7SH+QS/L1vEoixNtcXRT0iARmhtw1xfjbCY93XAKefD+4ZPkb4In8
dk/z2xi/IjftvkZOJfm8Ks04/Ogj4tVz1MsR412ssvcsBi5t4H/Zaw/+a00S
HeoxfiFvEefVu5UkrM7GxhH8Vzkl5okBJ9/xbO6v+l1POoUF13seLybFDTlG
huBj3RYoNw9yt5bPTbwBuaHGDwJloddX/uGxztC3fGqxxjPoNSAsnjYF49dV
aX00LqhEXb5xWUbwI9KZ5eL2Bvwf9onnHUfd3hD3+eAy4LCmod7e7Ri/Zs3H
6KmYZ5TIvunWmKd9XHjUttYe8l5NWvnUYD0xeD3ndVVoMdl74969TQz/c6r9
UbDbJhVLM6VQ9vzZ6st2PjT7s7Ubbd1p60jzK5qf0PyNrT+zjRe28UiLa7b4
QMMZtnhFwz0aftLwmYarbHGblhfY5pfL4pIzC9GPzFv9089tegG598FaqUuv
g5x9nXL0OsbPdF7y1rKtlDzweaVViL5G4a2unTLmqfhlwfyTmOeOocDpK5h3
Cx0naX5Afpz5+m0Ehwz6qutT503EfLqPfR95OL6C6K2XfnpwThMJm1ZZ4Zn+
jvzuFw3hPlVFlmUvbIyGfbi/NJWeudJFrk8/8Nh3Si2pW6xVWYS+zL6wN9L1
QjvZLP387YdDdcRsQcfzp7D/aP8kub2wf1ePU9cErJd/smA50w8O6iesa8J6
GSs9/HwI/WaVdX4pc45LWGvFeXPUFRwpbzesgv+kbBrhk2fulbSvNhrNnANx
meSljLpF4Vw6iYC/5ZwP+q0LfxOeMfX5RPjtmzdDSiHwz6OXPG9ZwT8ztB7w
Mf4fvCAubyH8nOt4mloa/HzvYh9tZl8iceyVp5mIl4g+zvADiJfhVKMgcdDX
6c5dOwi6SbCW+2mmDnRSevIN8Zh4ovya1b1KknTC9vsw4pEz+5bzTsS1yLXR
tj7Ak4Qhz1N7EdcTLZfPMwG945poSATw4Wx/VG858GFKeMCp7+DTGJE56Ak+
xTKcjWOAJ91reLisMd5h2UEnB+DD3epfbuLg45wdXGAP+uTGDv4J4H/2Vr3I
OtC3K145txz08A2H5i8H/3Wzsr5ng/9Oi2yFGaDf2H126n3glV8M0a0GfwPF
MRezgaubrvZdqh3TQJIvqujERxUTrxqlp0y9PYkva9178Oe78bL0PPj3Numr
SIKuGrxIqhx8DD85NLwFH8MjHU+Y/RZ7x8jzPsz3lKXGt6bAnu3uvNmHwN8o
sLd7PncD8dqXHRYZWUymX468tw58DrYYKs+HXo9KNh4Zx+TT8usxTD185GE1
3zqsi7bttdIHzHcZk7gypi/g1NZakYm+YLApICAb+eJC54DJVmaeP5RN34CP
9Hc/I/3QPzcftvb5U/OnrSPN/jQ/oa07zQ9pfkXzc5rf0vyfbXzR4pQW1zQc
oOEGDWdouETDMRru0fCWhp9scZgt/rPuXyjzp+UvtnmQbZ/Cth9h23fQ6hla
XUTzZ1rdRYsjWjxS6z1KvNPqRhqe0OpStrjHtk7+U/jMts7/V3mB7Txp68XW
zjQ/oa07zQ9pfkXzZ5rfso0XWtyx7TvY9hds+wgajtHw81/1C3/qewStP6Lt
v9H6rD/1/YLWD9L2G2n7k7T+lLb/SdsvpfXLtP1YWj9O2++l9fu0fWbaPgNt
v4K2H07bJ6Htq7Pdt6Ht57PdL2L7HeFv70exnQ/NzjT70NaRti40f6CtO1t/
Y+vPbOOFFnds45eGA2zxhIZLNNyj4RsNV//V947/tHNitPMAtHMFtO9TtHML
tPMPtO9ltHMXtO9xtPMetO99tO+DtHMptO+PbL9T087b0L6rsv3OSzt3RPuO
TDvX9Ke+O9P40+ZJswNbe7L9jszWH2h+xdY/2fo/LY7YxiMtrv/2uaA/df6H
dr6Idl73T903oZ1Dpp1bpp2/op2Xpp3vop27pp0fo53rpp1Po51no50np52X
o52vo51vp53fY3vOlnY+n3b+8E+ds6XdR6Cdt/y/5Zwt7Z4I7dws7b4J23O2
ND60+dPm+Z92zpat//ypc7Zs44XtOVu28U7DDbb4Q8MxtnjIFm/Z4jnb+yy0
vEPLd3/qPgvtXiftfg3tfijb+6e0e0C0e0O0+7C0+7O0+7a0+020+7+0+1O0
+8W0+1m0+1y0e9C0+2Js72nS7nHT7rv9qXuatPvstPt9/2n3NGnvDNDuXdLo
bPn/p927ZLu+f+reJVt/Znvvkm080uKaLT6wxR8ajtFwkoaHNLyl4SoV/1ni
PNv3BGh0tu8U0d5JoL2DRHtPifYuE+2dB9q7ELR3omjvS9DeoaK9X0F754r2
Pgbbd4So73dR3vdg+44Q7V0y2vskf/sdIdo7b7T3W/5veUeI9o4f7b2d/1ff
EWJrn/9b3hFi689/+x0htvHO9h0htnjF9h0htnjLFs/ZviNEyyO0PEXLg7R8
R8uPfyov094npL13TXv/kPZuNu19Rdq73LR3Gmnve9PeA6e9D0l7h5z2/iTb
d6pp76j/7Xeqae/J/6t3qmnvptLe7f9Pe6ea9m4t7T8L/6++U/3f96j/+x71
/5/3qP9ffXeaFu80nPlPe3eahrc0nP/b707T8tTffnealpdpeZ9t/UCrW2j1
Ca0uotU5tLqLVkfR6jq2/zeh0ln+N5D2/0Haf15o/4Wh/SeR7X/9aP9t/Nv/
9aP9x4f2H8y//V+/P/X/Ptp/S//2f/3+1f/7aP+3/dv/9fvv//v+9/7fR/tv
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
ecwVdua5dThrBuQuq1ffHQo7q0vVPTKHXOWsK6u2Qm7ynZg9JyG3+Pu2NMav
/Pf92h8Pv1o8eKQoEPpKbn8Ysgw475fwbtZt1MOXh+7F38b6+g+VJMhA3647
ATZ7EL9W22va70Hf1vGdiWvgz8ZJGbIz4M8RllKFi+DPH6K/T3/I9NGvHmnP
hdwWjX1WHLDzcuuCDXch1+7BaYPTwKuVp5q54yE3eKfd9GjYWdzhWaYy8Nlr
WqsOg8/XDkbPOQp95UeCkj8qNBEt7SFODeg7eczNRbzQ93nZ2M4G+PO1xQ8j
WqFvjuOYnIuTgDvJeT2VzL2Y+eFcJy61k4QoiY6tzPnDCK+3UR9LyWW5Hfde
ADd+hmnPnYB64KRUe6ujTC0xjYpJHw+5tS/UOlXhzxyf5zieBU7uq5KOMGTe
+dl2RvAl8sK9Bot9kyB3uY8M6UccxR+YuKAAdq57fzXjCORGmJ5K1oOdOWTM
aicz+Hx/pkwT6pCTrnNzGuDPk+0jtRqh703XIQNu9C+vUorCmfOTkwuiXWdA
rsGC+qBtkPt+VWCzGeTWRSk0/EL8+jr+jq2BXD6e6+t6oO+jMp+iPugbzS1a
/x5yxR2VV2689O/k/is7/yu/+ldx9K9w41/h5L/KC/8qD/6rvP+v6px/Vdf9
qzr2X9Xt/6pP+Vd92d/uN/92v/y3+/2/vY/xr/ZnaPsn/2qf6l/ty/2rfci/
vb/6t/eH//b+9t/en//b3xf+9veRP/Ud5099V/pT37n+1He3P/UdkO33R7bf
N8luPqvJsFuaQCC/Cvyk/lOmrx/8JPWl56J2xNfeJ48Uj8sUkKI7hSIXmHfR
iaikLehm53mU1BF3C0tMKkUQF55eRg+cYbcYzUyDHLECEl+7YMgMdstoE+OP
Bv/kbRdv35pRQPIPNhgKgI9UO9fNe+Cjkuybflm2gPRMmmT7FPQivxMC68Hn
mM9vU9mpBWTrcHaKLfjotLvZbkC8zAtP7bq5sICMCyqvf23QQbgsm7LEEKce
mfxW1moFxPZBbONc0D0CPihZQW7Uxdvb1wB/vgYn+2uD/4Er9VMDQF8+p2KG
JnD+vNvd7Omg81S6eM+H3OW6ww2zphUQ81eStgchV1FUbMwJjA/68Tw3A/MP
9f/hyo/xOx7ni3OC7nVx1qZM2G3LlbdGoaD7cQkvvIt5Om3SGeCeX0Cq2tfm
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
SReX0sWxdHEvo/Ezo/E5XZzP6HmB0fMI3bmG7hxEd26iO2fRncvoznF05z66
cyLduZLuHEp3bqU759Kdi+nO0XTnbrpzOt25nu4egO7egO6ege5egu4eg+7e
g+6ehO5ehe4ehu7ehu6eh+5eiO4eie7eie6eiu5ei+4ejO7ejO6ejdH7Orp7
P7p7Qrp7Rbp7SLp7S7p7Trp7Ubp7VLp7V7p7Wrp7Xbp7YLp7Y7p7Zrp7abp7
bLp7b7p7crp7dbp7eLp7e7p7frp3Abp3BLp3B7p3Crp3Dbp3ELp3E7p3Frp3
Gbp3HLp3H7p3Irp3Jbp3KLp3K9p3Lpp3Mbp3NLp3N7p3Orp3Pbp3QLp3Q7p3
Rrp3Sbp3TLp3T7p3UkbfWxl9z6V7F6Z7R6Z7d6Z7p6Z716Z7B6d7N6d7Z6d7
l6d7x6d796fLE6DLK6DLQ6DLW6DLc6DLi6DLo6DLu6DL06DL66DLA6HLG6HL
M6HLS6HLY6HLe6HLk6HLq6HLw6HL26HL86HLC6LLI6LLO6LLU6LLa6LLg6LL
m6LLs6LLy6LL46LL+6LLE2M034wub43R/DdG8+vo4jq6vD66PEC6vEG6PEPa
vESaPEa6vEe6PEm6vEq6PEy6vE26PE+6vFC6PFK6vFO6PFW6vFa6PFi6vFm6
PFu6vFy6PF66vF+6PGG6vGK6PGS6vGW6PGe6vGi6PGq6vGu6PG26vG66PHC6
vHG6PHO6vHS6PHa6vHe6PHm6vHq6PHy6vH26PH+6fwF0/wjo/h3Q/VOg+9dA
9w+C7t8E3T8Lun8ZdP846P590P0TYfS/Cd2/Fbp/LnT/Yhj9X8Po/x26uJfu
3xDdPyO6f0l0/5jo/j3R/ZOi+1dF9w+L7t8W3T8vun9hdP/I6P6d0f1To/vX
RvcPju7fHN0/O7p/eXT/+Oj+/dH9E6T7V0j3D5HR/4yM/pdk9D8mo/89Gf1P
yuh/VUb/wzL635bR/7yM/hdm9D8yo/+d6f5N0/2zpvuXTfePm+7fN90/cbp/
5Yz+T2f0/zvdP3q6f/d0//Tp/vUzWh+A0foDdHUM6Ooe0NVJYLTeAl3dBro6
D3R1IRitL0FXp4KurgVdHQy6uhl0dTYYrdfBaD0QRuuNMFrPhK4uCl0dFbq6
K3R1WujqutDVgaGrG0NXZ4auLg1dHRtG6+HQ1dWhq8NDV7eHrs4Po/WCGK1H
RFfXiK4OEl3dJLo6S4zWa2K0HhSj9aYYrWfFaL0sRutx0dX1oqsDRlc3jK7O
GF1dMro6ZnR1z+jqpNHVVaOrw0ZXt42uzhtdXTi6OnKM1qNjtN4do/X0GK3X
x2g9QEbrDTJaz5DReol0dRfp6jQyWu+R0XqSjNarZLQeJl1dTbo6nIzW82S0
Xiij9Ujp6prS1UFltJ4qo/Va6eq+0tWJZbjeLE3dWkbr39LV0aWru8to/V66
ex66usF0dYbp6hIzWt+Y0frJdHWY6eo2M1r/mdH60ozWr2a0PjZdnW1G63Uz
Wg+c0XrjjNYzZ7ReOqP12P9VHXhG688zWt+e0fr5jNbnZ7T+P6P9BRjtX8Bo
fwRG+y/8q74P/6oPxb/qi/Gv+nT8q74h/6qPyb/qq/Kv+rz8q74z/6oPzr/q
y/Ov+gT9q75F/6qPEqP9mxjtD8Vo/ylG+1sx2j+L0f5cjPb/+ld9x/5VH7R/
1ZeN0X5wjPabY7SfHaP98hjtx/ev+gAy2n+Q0f6GjPZPZLQ/I6P9HxntL8lo
/0pG+2My2n+Tro8no/1A6fqK/qu+pYz2S2W0Hyuj/V7/VZ/Zf9X39l/14f1X
fYH/VZ/i/3U/5f91P+j/dT/r/3U/7v91P/H/dT/0/1t93v9v9bUv4htr8yN2
YE/RZRXRAir03Mx8YewXYbXQQfI+G/stnGteWzk147PFJhR8VQNSvq3e+JE6
I7UysGJFHeXRHiE/G3xrzKJMLcD3grlbLwv48n9M+HoZfBf3h04cgr9Wt/H/
9gL+/eX0xeEn8Nfbmjo67EH/3SPZvROwk3WJp90zoA9xXa1GPJhXmfXIUBL0
7UpGNO9qkofs9O1tFPzUa3eDPm6ZFmpOpIavAuSZ7u7z9wL8oOezXM5e+CnX
bdnPZOEHK0KGhJJBXzT7qaR0VzmVH7DpXA/GP5kkYrwRdkz12ZIdKbBjCR2a
to+hD5MvtbgfLfhE3Zn3yat2VQt1nLdozRPsx6tNXPKL46ophe9p1+QRb+ia
K3KJYfyC330GnoF+/BGWWecgH/12F5YY0Hfuc9koBX0IdAhLnYI++Pzpvb+X
5D/bp8SIE79c+2nZiFwL9UnB038E9mTBLWFmD/jZ8w1DvSoY/0fnBB0B+NlN
/r8byP+UfXaPHtm1lmN+PSGnQX+5FK9fLcbv+tQ7eodcHeXlHLTjJsbfFNyl
Mw/0O8ftHmSDfvrJh1vnQv4hA9dqR0D/+Ya9vkGg/32hx/wsyOeuYalZIehb
e9X0VYD+7wU3LYNAvyzolb4c1ncL9ST5Oda37ffL1XMw/snUOXKj0GehY3tf
nIM+H2+22pMF+bvM8ty3lcQhWQolhaB/cdOZLCvQN19827sc9BU/Hz2TC3sS
O8WxYB/oa1m1tu3B+i5+WZK2D3qbbc8vIw364g2LNpB/x4UzkofIv+NYx5Pd
5N9x2n2OTQugt17amnWa0FtDbaWw59BbzeLP/bsRX60bbmywIvf5P2Q3bkN8
lSZ15rkF+MrxXcgL+1FOnclZeKoDesWx5k/1PMiN603llvlYd4+zpW/zIbcz
Dz/phkJvd8bpzfYheuvsyHoccrsZ5OsxjHlddbS4vhJ89yVcSCRxoIyx4KqD
iMMPLMv8yoE4fHtSnpMX4vDfdvc7id9ctXTCsRH2p/nh3wfEb1b6B8Qmgu8S
42jNJ7J1VMDKwbhU8FXbOb1gPeZbEPrkej7sz4U91Nh6zNfJfFzvGtarctl4
myHkuU7GVHYS8uzjqnMRQrx659RK7R2IP4sO/3mRj3j1UWTSJfI/+s9DGd0Y
kv/Q+PtDD/imzb75ex300NzoraMG/Npx8/X7dpF4zLY9jBvz7RSamTZCPHaX
ScOiDPPNfnb2uQ/i8DQzASVp7FMe5jYeP8Thy1JbHE/x1FFxMgu1BSDnFYPq
34cgZ+b7K0P3E/twg++oPeR8vdn/RivkHOXpEL0A63t+U5LQBexf275RB2Xw
Pbw+O6gM82XR0VovBP35xNaiXgH9kbJKPzIAvm1RknecwXeufRqHMPiGPV06
5Yt4O8ndZkQA8w09G3hTDfH2BnFfqTLwLTRiPc/TUk7Fs33aaAW92rdrd30Y
5muV+TNEFH7khsNgnx74vmUS/qoMvn4d7aWpkHPMx1FVXciZz+N1bhzZd33q
54mc75wJSiNy1pl/0Z0f67ulJ+LAb5w7wuwLZLKwviH18ryZ4PtCxvV4O+yw
wdnbh96Db8tU5W828K15/XY0Hvu943DrB2L/G6c+6mmAr2V2am4u+K61WyG1
EXwf3zK92oD5/rrHp2yD+RrYf7ORx3zTbZ5PHSP6PPlX8Sjk3Pz1jq8m5LyF
yYr/IvhaiA0Fbe8rp85KR5lpQ84f5rL+Zode8QavPMAFfa4Nu+dG9LmbSyjC
EHxbtKg73eBbm9bZv4rUf8j5ccEPfHfMqb69EnxtLZ9W+IDve+a9PUzQqxM3
b73Vg5zjl1Qcq4ZehQ0abjkOvq9LdnRoDJZTeb0lQg/At324/40F5uuTO3so
Cno1nanvYYT5tvP8UouA/YlcGnyFBeeUE1GHB27AvnkZ3/204Xo1teVXyc0r
8HfXtwhkb4K/y2Vny9fF+v7a4hU7F3zDj66NtsL6Vrw6fbcbfC+/Dl0QjDjN
K9wibgr6nHtB++EexFFG3CMnn8nXUYWbqFcXMd8N/THznEme0j3/3etgN5JN
zLN5SH4R18V3ybAbS0+w/4zH/j36ykhJHfv36WCZ6yD4HmcZTiHn08I8Zydy
Pq1T6R8hfA+fzvD1Bd/eHS/i/oBvyqRNyGvos+2Isl8UzikHnuRI8GG+6p+0
usrhj8okCw4mwB9dUglZOQv6fL3UW+w05Oxxe+q5DOS84sIKtlOQc3hgbY05
5MxZnT9NzptDYTz7wsHXv8tG+TP4njyU3+ONuMJu1fmy9dArv2mW8BbELYeG
o1gjEf9fYrq0+TXmu0jJQ7sNfNlG2JmqwJerwHrJT+zf8xbpt5WhzyeOeX9l
J3a+atWlnfAjz/nfKuVgvn9vS47JkXywqaMuHJDz1yHuURfwdTx2wGYl/O+Z
s5rRsVhfJa/t0mqYr/zzh+tnwT4bSJq3y5F6s5ncRiPg61stWPcXfA2KEz93
gG9ve7KiLeb7M3nZpADmy9R59e1lzHfxkJxIA87jGwNfMXWCr6ma+sTxtE4q
vWd+DT/4mgsLsK37U04xx+QnfUQcW10lqbMGehV7wjdLDHq1c172/d3ge5Gl
WagKejVb7WJLMvTqI395xlHola4Oi8ok4opsO7FVwvDLr4dcH6nAL58z3eIb
DDkLfT9e7Qa+y5dUO9pDzrNW7KzjAd+1RctXtIBvlOPqp83gy2NzecNX8H3o
OK7HRuLbpFdhGuDLUxDpKAK90lNpCjpM4sPtAa07oVeNEdLNU9CrE3YzMbXQ
qwWz75sMYL6vK7xeDWK+kWxLm/rBd5md3DYLzHfkg3XPAWKvlE5PrIGd1Pz7
taqR1EeqMvmSR/LwmSutjSTrKIft2k7DWN8D87x75cGX7xX3RAz43gvv/rYF
fDcuaFu2kNyTFNuyt4Hvnc22+76Cb+Eoe9Zv8OW46Vn1HXy9HA4H7gHf9VE3
cjLAd2sxxxzBznLqykFFvUroFdOCi7NI/tvS+Zo3NGAnK24e9Cf5b/Ja9bbc
iH+YSvRXbFZsoagKGQFVyHndPWllZcQ/b7S4v2hBzrWSGQmskLPeXOtXaZCz
XdJhtdMkz+3utazdkHOvllsgibusXXm8+BB3JSSZcHeDrx5bnpUC+MoWxAxx
YX3zXQ1iyDnrTrv7Oh3o1aKe/ryt0rBXztb8jthHy+ZOf66AnMs/lEw9xXxr
bGdNcWP/XkhPSgtaQuzz9Wul4Nu4ZfJGBuYrlLhsmMRLD+1vyNognpn89WI9
iZeCctY1boCdLFq1TzoJdjJN+kkiifdq/bcricIPrj21xdYRfrAjvvtgEfTZ
6WtHqSH2kd9Ti/vLsI+03yxlJ+/IEVc38L7EPjoZ8+qKEviW3mDtZME+WhUh
H+NA/sGFuuU2YR85ZKT8ScP6qlXU1wxhvu/UxXapQa+UhO3r1TDfBK5Spk2Y
b11t1QNtzLdLhjfNGfNNWCDVwYb1PefxxIbcp8mqmUeS+7SX3d+jid+Xmi29
nfj9n58ikojfd810e0T8vvqWTdYR9SS/cWYr8fvJjW5mqrCTopJ3DK1gJ93E
aq5cwnx/Ryh4mRO9KnFQngc7qThV8EMCerWnYIXuFciZo6EyKxJ8i4yUNm+G
nH0KCx51Yb5K4/sL1oPvvbgj3L3gu7q/czOxk19N9o/EwE7KOQ6OT4PvmjeU
8jLYDfaCRyGPMV8fg91zlEifuItzixdCr0QczYXWQq+4s3UvaUCv5A90BafB
L2S+PzheC78g7yJ/tie5h/rpv7DMC3xFqv3W8oOvolPZZU3I+WBCqD85Xzvx
iFhy4nydfG+pCDlfC29J0AnGfOc2rzU3wPn6SFnznwDM1zQ0R80e83VI5apd
Tc6PfNmPl2K+J+oN/sRCzj12rMyasFfXrIK7bCDnWRvdjMj7+HeJUxHkfZxz
b+BL8j4usTQ+Ox58L3xXzlToLqe2Gpmv+gu9uhh8Yt1KrK+ohNYKNujzVLGr
Bonzw5/w3jQmcvYLzvuB/VvI1vVEHnwfPDdN/Q6+PsrFHi7gu7bE9M8y8C05
IvrFFX5fTkun/Dj8/tOaxnMq8PvuQvl1B8FXZbfW866hcmrIr23yM/QqW24i
cjf42hy4GHsKfM0dxJ6SPIqI0nkXr4FvrvjtsRTMN2LNHNFR6BWnkupqG+jz
jC5vgSz0+dOqojYp6POdujGp2Yhzyr7x//qBOOdv9Imq54hzFAJCLTjB13bx
mvGeKcQ5wYYxo5Czmnco1w3Yq9lOsRkTEnXUep99LGOQ8+FkI5u30Oft+o6P
I+AX8qUuBswG3y6zKtnr4Nv8VdrDiORjdGsdmUB8Ze3/R5Lk4XC6b04meTib
70jqkDycivzF2fLk3knuxF6u8XKKK081+AL4avPFRFtDr648f+9zFv5IKM+z
WwLzPXpINaYc+zdUXK5NAOedE9bL1dWxfy9lMDvPg18IkOXYcxZy1lqvuJAN
cuaofel4G3FsotKiDknwjTigyFUNOe9PSN5Lzrmh8/iMSR7ySW3vUyQP2TLb
QTAQeqWzzExFB3p1SaZ/x1nM96ARS88Wck7pyQltxvpWcn34qIz1jfrO9eU2
5vveX2rebsxXKmzt4DDmO/vpkQMi0CvbT5XdZP+6XPyi9wJ69bMgjrUZfDfM
576wuKmcKrnMc1cYfB9J1n4OxHwj96h+68R8teZF3xLFfCsPZn6dRf5zFf7W
Tkf8/DIxPS8Jcj5WOBRfC75z8/4+cCf1UizvrXkDvgUHIrdswvqmj7lfY8U5
5e15s95wrK/EOb5F5Nwa4vZlbhrm28/TMO8a+J4urD+9GXo12dZ9yBR6ZXmi
5Zkx+MrMEZaTxHzvOwkVnsN8D7VOztmB+dYUXzRtxPlIwuDooWWwG5o2KXe7
YDcEC7wdybnMfXdINjmXBSgn3iTnMmU2gdNN4LvdRHWWNOZL8deeFwXfDe9j
ztzAfN9H/YpcjvgqMTfDUAh874ata74JviJ+7rkPoM8COyMe/8B8n8am+nGD
765DWvXXMd9bNUFvIjDfa7+erCH2cKF4S2kK7KEWjmekTlShZM/jObD/Hm8v
a7PC/k/biQiSe9Rn89aNXIb+rDhunBqIc59myZOdttCf/axFL9Ihz6MJp6tN
QH9jzXjDAOhPmU2MtxC/Ji31Nq6xnJoaoNYvIfF/vRrvF9CvHH8vuAfncZmn
Q4vIefykKcf+Dws/UY/NRaIilFuoGtY89vr0Pqrus4nLKdDnGN61VxP0R3z1
mLixH/tPTGtrdFZTX0KTXGPVyL3fkbxRvS6qwGZL8RnwHZgZE/rQX05tluDd
bg07MNdFcDPJ10pJSWQl+Vo79pj8l6/1Kdrn5iLwlQgc+1Wg1EIlGuzd5ZDR
R60/F/R6E/x4zIds1W3w4zE3/3KPp/ZQG8deX/PrRZzM7dqXw19ASThv8zTQ
7qLaFW9c2Q2+XHoqXI3D5VTRxwY9JuzHpr9dG4KxXm1xhsO90E9uqW/HiH7W
LbKMqSLvGnG5wVmwA6lrhzKmIc/0P9cNU0g9H+/ViROY75OchapLSD8Cwysy
N1urqecBj0/ZGBdQ8399c+I16KKs5ij21YNvv1lhYAT0hLvk+S0ZyNlB0OTz
A/B14520tYCe+L66LS9A7p2MWnqXYh2nuZ0MLeDHmwUdxN6Ab35JlPhW2IHe
6u6rWbADlIX7iXLELcejFIbXYL7am244SwkWUHZzb42dwXx/+tddyAXf89T7
9Wrt5ZTJtOjpVPBlZfZ0IfcV1wyHbU0xX7XPVhrkvmI0P7p5J/heVHYwHQBf
Px1381jwlX9h5BoPf1rGa7U2Dvui8vTdsxuwL3Znb5PU76qmBsc8XTlXFVCK
HZei52N9d4m8OnsZfKWPNhhv6S2nOGv2PJbD+n6TvL3yAMmXu7m4Ixb7cdPR
2A3knLX5r18nsQO+0647iR0IDOd8TOzAzabBhbXXqqlnDiLrd8Cf3p0u77tO
7hVLnlQ9BN+jq/+fVq7+p8krCk+tNqy0blKhxW7QTA3SCfNjgCPuCootc6DD
YcClC4XBEOJc5TNggOKYQiuLLYEhQzu+JiC6yjfadwUnoLApVAcOFN1oMBPJ
JMUZBmPP/QPeH0z49eTmuec+9zznPec9yRUuCDcy5Ij9qcPFIBsJ4csO0b4j
NtE57Cj6Ds7b7Y607+AW1HnGo++48UFX5PseQySnJ7riN9p3ZGqvJkGPRWrH
r4Ogx+L4lOurkAfy3nO9qQV+5kDavMyLIb0z4olbwNcLxDe0wD+Xyit7FX3r
8w+b4rbTd1Hc6h/O4FyX9FPHFagTUlzLn9D//68FNfRS/DX5W6oovn/6wysU
v7DoYnMFdGEx5U01bGXIs9jHkjPgzfL3dAX93+KtMT21Qe+iU9zSKejdId+4
ugf4L1zM0ddQ30aGyN+g74jKs7f/9znw1QM+B+h7j7/4W3n0vcdXgrsbyhGH
3z42TMcjDtce2z9C4/CunybXAvzZsj2N51BPrnTu3XMc/Cx/pzS8FrpT/rVD
dFs2RBwtCwHV4MfDRbq5E31K4dnsgQz0KdtS/+Wmoc4xV0hMIvj/QF+fcNKP
IZV99nuvy21k78o7623AT146LO5GHfVZYtDMEuDvs8SWxYB/e0N/1Cbwr68d
Ch+S0P/t9jYX6DphZK/0V+j6444QTTx0LYlxNOZOWMm2WP1zqTtDBs/aatfs
spF7Y7rmauAbQpc6TaD+F8yl2h4Bf9U+6Tct4Cfn4KVPi8BPVVrDD/TdvIj0
ibkS+K+wGuKE8D+F12oogf/V/e25bX9Yia/b7kplIEO+CtXH7FTYiP2MQ1UY
8E2tY16e0/1ErXxTwkV+eBRn+s4X/MQIeTod8u0/2rvmlkWcEy3W3Gqx5miL
Ndd72Xniy84ryZeOEavBW60gl+/9FkNGn5nSM4BfdSvZbxz7Znb/vKFwLUO6
mn9yrobdTETuKtjDKlfIfD0Y4tMXMugMXSenBHcmgrdif9PuNnwvSofefREG
3i78KebrgW+MqWlqdGOIWXNfLgCOdJxz+SpwvI3p9efXMWRSKFT1wN6VYRBE
AkeXthC6zpUh0fOt36uAEzCuVh2EXracqpq47IPvwonbo8PQOyd8rEWMPJNk
4kd8sokhqs6SB5thT8p+IovAvqdrmuI+kjJk5qQxawfwc+pGXelcQ+E14OYP
XVSqO1rpXGPF4OFUmv8VgfP3PZH/999xV2mw7waRmGvA+hOzN9svwP+CrNkv
+FifcN0sWQZ7So2n0gTeoup+Dy6APYPj5NMBPw8pA+zLkZes4wfa8+DPFd7W
jSPwc2yu87RdxpAfr1VwteDNvbG8j/LP2I5ZZcCZ5BwRUv6jWtY3cbE+bdlO
p1Gca3L+fFYgcJbk6Q7rcL/ttmL7UaoXt+F8rZzdzobDti+bn2znYuOBjTc2
ntnuhe0e2e6dLU7Y4ootDtnili3O2XTBpiM23f0PSL6Zuw==
    "],
   VertexNormals->CompressedData["
1:eJzs2ndMVFHUIHCwYC80UQEBFRVBUFCa4MEGAjYsKIINUFCaSpGiIF2KgAJK
EwFREem9KIcuXXovwzDDdECxISI7m/12//uS3WSTLXn885Jfbu6bd+85556b
IGVqd+bGAh4ensqdPDwLef6zvykgnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJ
J5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJ
J5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJ
J5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJ
J5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJ
J5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSeccMIJ
J5xwwgknnHDCCSeccMIJJ5xwwgknnHDCCSec8P8ZNxY/RREYuIq2//G8wLot
8Ht+Eoa3B7soWITgzpe6O6jSkSic4BtmNDcJG1P3c9i0MNz7dG6wnzcbSZat
LnXsSXhwaGjt4cdhuHznjs3Dez/hA92Ebrv6SXh8+4hOiVQoWm3pmFipX43N
3+L6bF9MQi9v+HUbajD6X7zXOHGjHr/LPtpyzGQSVA0VNi5OC8SX39pS+GjN
WFRWdyBOjDs/T9v5j+GPMbCu2qCE3Yo5Ku1Hywcm4MvbNwvb3/rhEWMDxoe3
7egJp5OpsROgX7Cbvpbmg36+HhqFMp147R9Vz/TKBNS8fLOv/Yw3ugksT379
sAtN8qWlp7dMQLpqz+6ddE8c2cbyMHzfjbUiETsm2ByImb5em5P2CBnS+zV/
5PSghZS/wuViDvQ4/NjLk+2Bdt6CO4UTe7GVHu3T85gDv4Q1TLrTHuD82gc1
dKc+HB/cecPKmANjNeohnfdcMXe8TWaBYj8+a2zZoqDIAUX+F2mHnZ1R7c0J
mye9/diiXH9FfyUHMpRWpcrHO6HBaqWdd2wGsGNrTJ0Tgw0VVyTLxwYcUOp1
7uq0bwP48F6Vj089Gwz/hak1S9sjYyc1o+3WIKpM3yk2SGNDkPPM4X3Od1F2
pFFGoHMQ7xzi/VfzlA13Ezpkp0PsML+2YNklxSH8LYtnWl3Y0L9qyb86YWt8
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
5TrqO7AjwdLheWcnmgftfysexYa+r77zUVvb8cAFdb7Uti40fFZmUJbBhkCN
V/knS1txzUHHWZf8brzP/1XtTjEb1pyuqoha/AUfJd6sL3jUg/V+K7Vuf2SD
wvSuP73kJrxK8v7Tsa8X3/p+H79bwobwQ8lHD843oJxkaF9jTy92yp7ffjSf
DT6ndKfFTtXjbxGbNbG3+lDzUPDWX+ls+NDw2jez/jPyHPWcquL2S0Z/xU+q
vmGDMunonQmLWtz7JKrC+WY/1pKt9rvGskG6rlqgfUsNOh4pYel19WOzcZWy
2FM2eAxIf579XYW7h+3V1u0fwO3L/6x08mPDd/ne30cplagsv1f0QPQAPhg2
eBfnxoaY6uConaQK/FXh/oMzNYAry+d3Fd9hQ3Nu49IUZjm++RHZrX5oEN80
xPxadJMNb45pKaziKccfN7wU94cM4g+nlbRHxmw4ZHasJ1qjDGvnliTc7xzE
wWX9Rc4GbKDtTIZUn4+4bki1WmTdEA5lSuW16bBh+4+S+MjaEpSeW/D94Jkh
jD+aYb8e2NBw6/aKavFiJB8c/NYQNIQLHDczFZXZQOZPO8+rXIjOL7acjSsZ
wnPu75JsdrOBo62ztDcnH231R99WTQ5hcp3Uk13b2SDp/7ct4G8OLvq0KTds
6TB+lI0suLWDDVeLjg0etM7BxfHuT+WUhzE1YfftPHE2aJ89oJajkYq1HJnd
iQrDKO6wLNVIlg2JUi+pByszUYexwplPcRgXHJN7uFiaDVmBAjHS157h0Mft
+7NnhzCJFnSFepgNpKPZa7/5ZOK6xhaF0IdDaCHpZ/j7HBvM9SpkPL89h/dB
RorD+oPYFudb5pfNhojMFuef94qwl1yR2LZlAOeEC6Yj2tiQNntEZ2FtFmQJ
/QkeGyPjq16/QZ8yBiwis90XtLzAM10eVu/T+tHi/dtVEkIc0A7dtjDRBPHy
zc8vbaV7UPmp1ZrD4Rw4T6/Jsg3JAsUVd+ekIkbw2JFXxq8qWOAboKS24VQE
bttURhqbG8D2btNLm2rYwKAd9F7Mnwl1qdWLy6RG8Pzvg6n7KNx+WGF/kNHX
BPAbz3VwfDqEJp1zrmDChoOjmkDSy4Zfp6aEHZOH0azurEnWAjYcrb1rHHQg
C47bq/jHzQyhgq2LkJYSG/SGrddHyuZBjOOenkLuOvuc8VyQvJE7fuW1ElPI
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
FcEwFMGcc84KimJCRRQRRREUREFFwJxQUcwKCFMBEUGi5CQ5d7c5h6//PVfv
72pf7Dr71Lk4z9VbNeotA3Y/z1pzjvEb5wvJMmH2v1Pbn1GKV0R4q1cV6Lx0
+6H33/LJ3e6P9tivofRJv4fO+7xK3Exb1Xz99zwKORQzzuI60aQk87/1g6qw
78KLJw+n5NDQdWP6e8Y+p5Pejf2nK8+xh803aa+ozKT7MTkb62S+oG0njfsE
V1ajWHbjjWZMOi3PfHqtuSKcPDyvDyuYpXz+2FT3b1eeSl2qA/c/0Iikr2tK
npVdVb4HTdrd8R6ZQq71Rs60rv+Sxo15kFJUIkPzVR4Dur5KprLghR2N/r6k
B0tapct05Ni6oGq0zu4kCjG1X5ii/Hf/bObYcRzkMDjiN27i7ETafO3xYI27
r6i6aMbMzUvliN33ItTAJ55SByzp/GFDNE02sts+bacc375pN6nz4g0d21b/
74o2r6mN/cYNc47I8WRzbpvQlrG04+XqpaOevCbHa/b6nr5y+GVsdig69po0
o1ttyx0XQz63281+7S/HwWnLHcz7Kt/jVnrfd8fFkN/OcxkBD+T4unmbZUfl
n8/wcdLO6AmxpPMuzurSMznuX1p5OuDWS/qb9a3WqbBYGp805JpmpBzDx/14
meESSWvvN0oy7vuGRhvs67E8Ro7KiwP3xuyMoFsnxxxZ4f6GLNf9nPUsQY6e
I/R8f20OJzPF0aYPq9+QZ+O2mvNS5Ni99E5S060vyHtAwpz80XE0usbeuFMZ
cvRN7J023/Y5VVxPWuF0Oo6spiz/1SxHDstr61pF/QijxUP1zIemxVHkv0kf
NuTLcb7/4AMldULJVGOgdc3h8ZSQ9nrO2wI5Ts9a/LtTUjD59Vu3ItAgnl5P
tDy0tFKOPS59Nbf9fkqlHTsPavcjnpqdLHwyrFiOFtuCm3h7PaKNUQNt0xvF
058PVk7t/siRljmh+dnGj2jo5+N5/V4l0KX0uW8KC+WIPmD7b3znWzTBZdyk
h5XKv5f5j3yLzgo0yFGYRrvfpwZ3nl/oNzWBZkWWHfz9Xo4yR5/+HpsPUOgu
cspe+Zo+PlzoWbxYgdRBDxdmnr5Pfa3Cum8aE0u2mtfq5vdXYMyNV0vOW15F
GHU3azwxhJ6c/dq0Y4wCW5ucf2+x7wl1ezL3ye45L6nHLRut2esVMNXt/uPK
vATM73XZpdarPHq5VB768n0lTv64amdsEU+lg/sochqnQWfI0BmGmjLUj4vL
+Zv1ktzGFE4btu02HYnYfEWxS4HJu4et6qVzArZhXzofmhxHO8e3WTCwhwKr
Sib/a9OUqHPW0rhrihBKSDboPOSEAouCdhvfXPgASeFOw74vSKKtX3TmJT+U
Y+edIpOrbT1o97+j+3rXeUXLBsaYrFX++m9WPNlT4PYE+xfbFVs1SaJXeq9y
4pSfw6O5sW+DNgbgvFvTutmz39BcYzmyeilgrHVjyMbUp1BsN9Da/jOBanX9
XWOm8vPz5KeRkdm2Jxg+JPK65784+lPt0GX9dzmO/VlfeMcpBFqjsqzL78fT
m6wdTTX+8zmJPdC9S/Qz9LIq+hTaPJ4Wbq7tP1V5Djkz9fjbRB3C9aEv7/f/
Gke/60yprJ0nh499a+s2O5/DtaFm/0DlfepGs6azY7PlaB1wsqPZ9heotbck
def0ODI/9F7bL12OXX7b8wK3haPehKxXL7+/odVhjdOd38qRsqXzkrV2EfAZ
v2jvJr83NLVt95lJ8XI0SA05WHUkEjXKOk9KG/qGes47/37bazluhrVccDfw
JaI3Gmt0SYilyr2n1nwOl8P/81+PhoVRyByk23nrolgall9vkkeIHArXZxsN
+0cj0+VbI9P8GDL4ajPH8b4coa5XZg71fI06N1+4TV0cQ51GfNd0ui7HhzX+
Jktbx8LJtGV9w7jXdLj89bChPnLYjR326FfkG+zRmia/MfA11Vp4OCXTRY7F
D4I/TzsXj7u3tOraOEdTv5ACu6fb5Qh6FtJ39dxEfD+6Tr9d3Cvq2mNZSchi
5fc3qkrR3T4Ji75nB/+t8YruZXUJtxkhx4ngul9To5Ox5eDBto+7RJHGpSVW
DVop9TrPzb2RAveMMUPbDnhJmwqO+9cqluGVRUKjH2Wp6Oiz66tWv0iKbfDY
vv8VGY4nfcPM6HQk1jdxbNs2gjzXXBphP1OGTS2a3vAtzcSfAUYGmbXC6Urp
WruKimrYuc1rVjguByMONj/z+eNzsjTe6zlF+V4w6F3vfLMPeeij+yXBpIzo
0dPqpA/K98iG0onrFn/Ox0jrc1v+tg+jph7VegfzKyFPKBg/+lwhlteeePTT
7mdUv+TYGc3oCpzt2jF/8OFiZNrELm5+L5gOtpy5s8WMcqQ0UlzqXVyKyAWH
Uzr+eUJ7qmMiPXuXYnPD5vg7uBLJtkvd1/x6SHrNm74Y0a8Qt7cedK0zsxim
gbs+/x7/nI7t1pxdtaIcLXJzT9fqGoHGjoaNUkru09FPgSsWuymU56RpL7eO
yaaZU+YMeajnRLPthvtqf6qG3uhCA/M3xaTde86XD/n3aNudWs/sjcoxfYDd
73Ij5f267zkH92PXaVSFd/ixCYXok9OwrVeNMtp988qBFRuv0bZgnfIgw1IE
5n8saXO5mApqZn1ZcfIGDSl0nb3OohxNO61q9TO4kIISn6zY9fYWWbTX0OlS
VIFN97c9/6FTQB222Ffdcb9Nx6J1ojv/qYT7StcpVhPeUcMKv82/xwXSunX9
XXIyqpBRFat5NjCHao8beX/1qbt0J7vW+AjnamDwrCnZC7Lo0vRkw8d+9+jZ
ZJK3bilDuwz5w9umGWQfEDrl1O37VGdCl2a1D8oQtu6qi9WaNAptUnuhf9gD
mle0Yt6vd8r7754bVQ1CU2h6Cxg3fPWQPKs3O1j1Ub6Xf9TN7Wz2lob3Dh/6
4fkjWpSoaCVbLYcDPMMaf0kiyyFzmq278ZjqHBlwd/1JOZymph0yUZ4vh5s5
W151eELmPad0MglVfr8WnK1jY59AZ5pu6/lizFMacVUxoJ/yudG/7+HN4b5x
VOJRnTro+1NKr3qbcfOHHNv6FWR7lsaSXpb/gvKzQbTn8dqFhZoK/EBaivWC
GNI0Gqk3bnAwTV35buqx7goM3m+y1bU6mto3irkx4kUwPbds+dRmsAJPrPVM
J/i+orpdJ8QOHxNCt1zSE7TMFOg2WWZ7ZHkUhbRYvtn5WQjVMg+9lTNdgbsZ
/btqGb2kwKEFzQ/rPaPi1fqGg5TvHc/P7gfbd4ykXpU7nkz0eUa63y5Gj1yr
wGnLmbKnmhHk0iRVO/zXMwp/9Xzygk0KDHyuv21Ug3Dq2DBmQ9aSUIp0vkqX
dyrQaUXktUYNX9C7kVNswq6E0q90l0t7HBQY8s350meN5zRjag/r1x3DyHbJ
+uVzDinw8m3ndp1ahNGHDe9PHvgeSgk163c94q6AzZwY07o3Qmh9TNLtK0OJ
Bqc/auCsfL+YjS07+SIpiMrHN771fW4obat65PH9vPK949JGu3TWY4p1fHq8
Q8Rz0mub/+rrGeXva6afcmHCQ2oxpNXj4TeC6c1+kwZHgxTQsGhUlrkhkNoW
jblKFuG04MuoWmN8Fdhvf11/7s6rtGP4/h/L7R7RrZzRrkXZCjQ8tX90h1pX
6bFV1/7dniv/fiduZeTfUMC2yY7DKT7H0SJ5dk/LExfIa/hPbYefyvfyvjnO
/ovOUkzWku/7A4Npz5fJPX8nKODtXvlPw+6Z8jnwePmlrU/x3M8zbvd1pf6h
38Qn/5JonnaUTcnmAvQ9sLvGirEVMPnWboV+xwR8tBz1YnVlAb3+Yr+2wYIK
HMtNSpnpd5e+7HMd16fmC3pxKHTs+6sKNMlue/TcihDybrTuRC1tJ1K+PSb5
JSqwPb00Qt7LGX+SfHo49gmnSRev1DwVoMAli8BaicW3aWS+q5leng+d6m7c
01Ch/PsemLgm7vAD2BRpN93QIZKuhXY4UG+/An6Dl72LijuJGfX/VfR9f59y
OgWU3i1TYM5MT906YU/x58OsaT6zwqnDesOSDCcFrAf4DFh38wFmOsz7bjI4
hE5U21wZrfz5Pw0KPymrF4IRfcw3z1E+3wL1I8rHHlPA32rSbc3uIdiffzjT
LTKUnDrcHvtB+e/4N14rs9eUMLiMfvKz/HEYhXiP8kh0VSBlVUBkr4+Exas1
TX0+hlJcSW6MubMCQW8W/GvU7AUGGbbbVzM1lBrWKqnvu1eBxAu3Z/g2CMeY
O48tdmwJpSvttQzmKT+3xxvs/9tAKwIrl9gG9GkfShdufw5LsVbAIuPzGHmn
SIxOarfgStAz8nDafC1ojfLP0ybSOMnoJVrNnHWuy/Rn9NbVo+mDRQrssqrR
LWpFFKoS+wZbFYRQp6QlJyYpv3evJqWv+en3Ch+np5kvtwqhqE8BX7eMUWDJ
2qfeD2TRaDv0xNKASuXnxHD2svRBCpwYb9u70aIY1K+wal93ZTA1andkaWE3
5a/fes7W0PJYuDhGGWrFB9HW+LbJ3ZTPDeNo98C5Z+PgHeR9LrlfEDm5d/Sq
Up5/YrtfDlnvkIAI6ybTvu55Sr6TZq6bmytHQ59R+maxiThBh00iQ5/QhKiR
JXOV5/xJcxfekn9Jwvs92z2o+jFNc5gfuc9LjuWjx+jkmr2FRS3b0psNHtNl
r7t3/qySY/UQeV/L0BScrTFy5tGWj8ggPaGXU285tD50STNek4ZJNXd3PtTs
IWU5afTqr3wO66048fnB6AzkW1zsuODffYrrMOfGWicZSvfetfszLwuTrs85
71t1j7y26S+MbCGDWfXONl8DcjD7pp3+8Ly7lLqii/VL5XtB1nrZHdOx77Be
z2DrhheB9G9zTN8hmVUoOzTOL6RVAZrYbjewV9ym/Vlwc1C+d+wPU1pxcCEO
t8vs8rdfAKWu//k0sbACZl07t3e6UozPHypt27S+Sd3qeB0MWFOO2q7V9W/+
LUVtk1ndt2ldp5k+8csaDy6F7mKrl7pdKvHt3EqzM80uU4mp4aOBmwrRYlhU
0Z43JXjdzzs4oPt9Mj+ZVFt7RhkGXg0KWHY1DQGWuWHyM/eo87tXP8ZnyjDt
8pq/JlHZ9HKTzdNc2QEMCT026tPbakze9X1Rs8QS6hUW1mh8+Wo0aJO6p2hd
GdJ22v0d17OSimx7XlyQPxbrvZtS3JZC6Cyqmbusfhk1CJr19nrEOBi6Pj//
bUgpckdndOpxp5h0a5b82VNzDD497aJra1WOOq/qXKuILKTx3Ur2tHwwDK9c
M6oLKivgPfJSozNdC2huRM0JvlYm0Pnu8ul43Sq0s9Xc0X7VO7rX9G3NO7NH
ouLJisiBRVW4W/k66Gx8DumFTCCTQ6NhbOjXeZhnNXRyCm5Z2GfRpiX3Frka
jcG1U2n15neRoZ+uxtqj6zJoSZfvt53qmOHVb/9T571kcL/QrvZI9zR6kGg0
67xSb5hmo73iowznujTw9SpNoeC6w2+9XjEG04LfHc0Y+Z/72qMrthvfkrGV
Rnzv+ab4eT7OcKu9HCNcv6ae7pBMe++WGe7oMxrPLoZ1/3FXjmmF6w/5fUik
3+tPdPC4Ceh+bdT6nvLcvtbsr/281wnkcCtF+3S9EbhyrdRu5T85qkx2T0NJ
HLnVHPa42GsYfjd+OMO6gwK9DS7oWvR/QyeXGP5e1MoYbTsMNmxkpHyPtFnc
o9ovhmLrOfzyfTIE5Z0NW/2arECIf5jmw/6vqfBDqXOC62AccVk74eMyBdzj
O3z4lfmKmtu2WbZ3kiEWB12tc3CzAuMG7+962y+K8uNC9m7pawCdDZHd+ijf
m27WsXOOb3lJi97tnzy+lQFavm690fioAst6DVlWNjeSbr9e12TbZ300OuMw
ovK0Aq+jV449bR5B731OPti0rB9WJlzMOntJ+Zwf32lU/shwCl7fp8bc5oaQ
zVj8dr7y+X8s4WpFq8EvqOXJWhrzNPLDWvgsP3X5kQIXHtRcnTrqOa2xfbVt
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
Fp3e4fCajw9dn77AtYcu08xqVmHcqVb/dnrlo++4nE0TQmJR6ReoOHeiAm8O
rQ9x/VCAA1mhFndv5qD32cftqt4Uo8PcVVpVV4qw9/jkok/FuZil9SGn3otc
LFwSLp/XvBxtVyz4dsEjCWXL1gWNeh6OxdYZNnvW/e/1XP+/rVfx+5ve8Pv8
v97j1e3GjBhbP4Ty+jWrsfNyOho8sKyyPiIDzdwg27vtKt03dalqkp4P2UC9
d9b9q+B28dC5wVO86U0zj0chKcp746f1E72OVWKlldHzxBAPGr039HTa9EJU
aK243HJ4JSJ2F39KPu1Cg43WVi68UIhbI0rbWdWuRNRBm28j5U603Cx83Mis
QvTxjb+RlVWB9L+h377sOEyvbG5/o5ZFiHe6vuGM8ryQ3uJGsqP/RTLLf/lr
+6Mi3KzfP+vGgAoMvfd78MRNATTcYvj6JpXKe7hXXMqhXuV4VbdD11qTAmjN
9O7WZjqlCPkTtWuXdhnc9mjc6DL+JkUNPd/ToXsZynUuxdduWIoO47VP9v9x
nS7uPerdsEk57uxbPqNR0xJYaD88kxB9lYJzNrl1eVuOmb6TNOx7FOPr4hbb
3iRdJtu49ce6766AV9iAM6tnFCErx+xb91aXyOXZho1hDSqx26OP1uDjhXgS
5Z710OMCre3fyczgQCUcMpeZnyxSfg7ttv2qu/0crSmaeqhnVSU6tHwUnz62
APPvf6xZr50fRXmu971qVoXftSKmGgfl4+cyn1XmTX1oy8Y3HYadqEL4L4Wi
emg+Ro3V0+28yZtWXb2sOT2tCp/Jb8IY53cor2EY9fzeKTo7ps2oPlrVePIX
i+3u5WF6TSvX7W+86N7w3GlR5tVIWGv6rfanXAwedPNpGTzJfnRJXoNt1Uiu
NVXz5thc3O58v41P2nHSHbk0q9qnGi2sIyt2KL8/Xz38/63Y70Fn5z0b2jOs
Gm51+yd/aZ+Dt6samr7Y4U7HdqYZmOdW4+KIYwE1zmYjdI5lff+vR2ho5x32
T79XI6Pljq7P+mRj+a7Tb17bupDbyLb+aZoyhMqaNT8YnoX3V05+zpcdoviO
fv45PWRYYHP2ci2LLIR32Hxr0kQnqnF45ZzPRjJc2z8tv5VOFibcG7q0laMj
9Z63rOUQ5TnNt9cG35TkTGRn9Vxn0NCeznvlHvafJcNJs7A37j6ZuFHpPmLR
6R30xHjyqjHK85vsg+JctHUmtmUcfX9UfxPdmXAs/r3yefj8wfZm+tMz0azL
2H9d7ZbRoV+/+h+wkMGgwHHzG2TiSd6Krr9MhtOQhZumbbBUPifbD7hzYVgm
NnRb9/hrsiE0bffe0FbqOpbPmg0ekQm3xSX7ZXcX4Ollf82yNTKMWHF/7Yxx
mdgUdd/b694GyHPv6R5ZLsNKj4lpv5dlwrahwaXr+7Zj6bC8WgbzZXj0J+qy
waFMTE1p93hRpz140Wn4ym+TZeiyx2WNQVAmfHRvrQzp4ojEAcnx5SNl8NPp
i/XfMxHY98flsTWckDvt49C6ejJcOmzvvW1MFipGxIc3DDqEwdNyfo5oK8O8
Ht6Luvlk4WxZ8LLn81yQt9t01cZaMvSq6ah98HcWKmdUnPpdfgSZwxyDl1VU
o0Pa+wuZ67NR37mRSec97shqNsMhOrYas4cFuV8vycaM94M3lLt7QE/memX0
zWqcGdYl4+nGHOivuhzTX3YcW21/DpjopPz/NU75atXOxc+aJXV1V3hi2u2a
zU0WVKNustcjrZu52NO15rtzP7ywesaZuQN6V2Ot/pxlPivyoJHX1OmJ4hTc
c9JvX1Aon/8nD9+do/cOW1aui3j2whs5deucP3OnCice7ctJr5+PapsDfTSt
fXDl53OfFmuqcE43GSed8nEprPTTJjc/fC0ddHiNZhUivC7+atVEeU+5YRbd
8O85VBrcfmF8pxLfn3y+0flKAWrUqal1rvAChvdZFPJsmFJP19hkM6kQX/aW
j0/ZeQlu5V6/9z+qwOzJq9/F1S7CjF+pLeabX0Fz04HkqFOBU5vce95JKsIU
rw6te0+/BtMBG2X9lpTDcfXde9/vF6O2TdCfGif9sWHDwL0KxzKkFdj8HeFf
gvLQkGdrv93E3wqTSd77SzHO/T3Z3SnFj99f9jyqfxuH1p4/31p5v80K1ykL
DC2D8XITxXHd25hjUHvQEP1i5C+rsyIxvBzPy3eQg9YlWJrUMe41rwiHvRPn
a9lW4Ptg18U9s5wx4fzhfl5dilC1eO4P7WsV6Non73pA9n5MuHVicc6PQrRf
2vJCdEQFRljPMphffRCe23UP5UUXYsuqJS82lVXA13h5bAOdI9iZF93HxqUQ
Q4pn/PNvWYmYFof+tqt/AqF+YXn3BhRi0ZQnSwpnVuKzYmnex3a+mBbdteVe
vwJYxC5VzHxYCcMOOi+MGt1E+katHT+m5SPp56ixy3ZXoWrl4z4mieHYdeyc
0RavJAzLqjg2w1IOu6OTbs3YGIiV4r/dK7bHtij4/+4e/f83/fuC2YEeWcto
1frwh+lZm2D0fqVe9T8FRi23qBs/xp2OTLSQU7dLOHwuYNTXHwrcfut60euO
B30N6OOQ2/URele1fPC+UAHj4veTW+t70JoxA8w+uT/Hv/63O3UNVqDbmQNv
U6a705Qb7etrNouCVcCltoecFDi4Tu/lxYZH6XPttF0fvsQgomN4kvU4BZzd
3pk8TnWhiV9aGn40T8DI0AuVzeop0N8soknFa2fyfu221eRQEoK+uvaeFyWH
3/JJeyE7SGk33BfU7/8W6yPv+PZwlqNw18xOH0Y60Z+IAju/8ynKc/jpzt4T
5ZB1nLMmJ2Q/jT+yt9qmJBVXXj5pbq683yjuO10YtsKRtBNs3/Wtkw6dG4Hm
ltnK+30JJcUY7qPHDtsTqXYGLvxr0/6TvwwdFk/2vJq4l1b2nePqWpWBK1dz
nhvvkuFhq8ch99/vprTf63HlSSbyNxraTJuivE/M6N37bMIusrsy4tNhqyx8
WdquhbHyPdnmvbOrceVOOpJnYfClUTbM2qblLq0hQ0FXx7063XbQp5Of5272
zUajQ3X6OeVV42tLo+SyLTa0I2CvS1q7HMR6no7ZS9W4sX7OtsOxW6lTz5RV
J9xzYPk7Zqv+5Wr0WJW4bbHuFgq22NEt/HMOnlKNQkeXaswJ0DvUV2sTlQ8f
NtpwWi7CEjQMLbZWo8/JpoeH3beiuQu6aaw9lwtZw6sLC5ZUY3PtVpcddS2p
TkiXFxcLc3G936ngn5Oq0XF7aI/sjauplmeSzod2eVhW8HTR6+HVCClccUVj
zXLa+SqzW5eJeUiwXVSySb8aeeNvTk/RnE9dM58eS9yQhxavnb+06VWN6faZ
QZP7TaHLTSsWbzyQh9++Vld+d67G46+6P83bD6D+2fU/5B/Nw0cnp9QNHf/v
Xsy8i//3A+55uHW2vPmvDtV4c1vbpWf3AXiUM270yCN5eBFzxDVP+f+XnzmX
02TcFBzPm3RxjH0ennyxnuDftRpj3Gp7XR0yH2mzMqyPrcxDnmahZ16famTW
SzvT9vBydKqMzPw7LA/hHfdeNRmkvA+t3uk96cpqnPzRA1oN8zDt0qgK19HV
iHy7PNrT1hIJG7487BCXi/n3Zuhem1GNnCb1/kZrb4CLc227UQdz8ax4WMbG
1dVQXHjb75P7JoRHPW6w0CAXX/rRzMRd1bCy/TFmsO0WGL2L7aOVkoONphp/
Xx6vRoO/HsZxPbYht2/JnaR1OTD5tDloRkA1vJd2fl6UbYOWlx80DfiYDcet
EU5Or6vhaNjkpt65HZjV1LDv5o3ZSO7uE71D+f7XaH46YIytLUyuTtnolpGF
uCGvl05qLEPRSxP3lK12uFWa1KemQRa8YuO7DTCQ4YX28MVpAXvQqPmel+U7
MlGc03eN1SIZntp8GVTjngO2HmjRV/tiBhLLzzilH5Yh6NOKqPsB+5DaY9iI
L/fTsaGL84AlQTIEDk3X71vuiMqeVQ5zb6ThpY5Xb7nyHv/g7NXByTMPwFmr
4ZXL9qlY8KhHj0/d5Oj/WL9cs8wJRw86DH/SJwVL/5ZMXLlUjqBrV2slXzuE
AYtmVNy6loyDmH6lxFeO3TWS5jzzPKy8Z0fOCK5OxAOjZPPn2XKYzh3Qtk6A
K/w+JvnXLYvD07DokX7tFUjR8FyxseQoHOZvjZWveY3P/fZ1G79YgaPrzcYF
dzmG+d3eyhtPikT8R79M69MK2Jrmao457IEOfXt3zRsUit0TLqRteq1Au5vD
ZNVlHjA+/icnS+Me8i0Td0VXK5DX6+iuARbu2Hh2Qu+SHiehfeGgx4I/Cizq
MK1YK3sZrMV/51Wt1/r+T3rfSbqkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qk
S7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qk
S7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qk
S7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qk
S7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qk
S7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qk
S7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qk
S7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS7qkS/r/M31Ro0GzyNSP
3NN3H0rLqKSQaxlLdFcXQLFp1bXjBmdpRduB9m+/VtLd4JHV3QcX4Ix3w7eD
h58hq5zUl+e3VlKPOuadRv0rwIZSz3H5hadofVKdzH/tKmlqPbJJ2FOI357P
jpQ7e1ETP70l1okV5D+4/ZgtpYUIOuml6TnuBPmsy3/w80QFlU4oy003LsJP
/Wazdth5kMOyXzt2La2gbkdqDJ3pUAS/7O/xE+Ld6NjbS623DKygWR1M+90N
KkKT5kvHGnx3pX2NneYFNqyg4K4z/JtUFaHCp3X04cWHyUA2+rhxRTmVHLk8
qLF2MSbPTx5Zq/ogfevWqXrWm3JydjAvzBlajPM9XBUmpw/Q9pSTe1c8KKc1
JS9H2swrxtKyhQUlUx3JU//1749ny6lT1tHLDluKMeGKsV/vpnupR2rr7EdH
ymna2WtFe52L8b5tlsUuy110LE9rh9Wecjrv+WJh8plibF32KWCRlw19u/tu
rWJTOdUs63zskX8xRg91erasxiZqoL/ujsFa5f8/bu3SsQ+LMfuKzdZko9WU
afNyzaBl5RQxPt7f/VkxLsaHLdaMmk6vI81vaywqJ+v3bnKnF8XoNvv9i4zf
Pck+pVVNp4Xl9LL+prptw4vRrvDPj8bxRriu0fCjm1I3sv9h2FSp33h44/yQ
EQvQOODnFX3lr3NleFLAJOWvM/utfXZipQXsk6+uu6j8fR/0Tj3ZUPn7Dp34
refLXltQ/+2mGJnyzzlnp/3Z1Q+KMcmt37PhDXcAp7IytbaUk+b48w/nXi9G
M9cal2Nv22GYpUFYm73lZNY4fvab08VYv6F1ZHlPB2x0vbG6jXs5LY7xeOvn
VAwDzN8RGuWI0rmPv+JiOZlnfmzusLEYBb1kRfq/D+DC+xct05+UU2XO15s1
ZxYjelTrDBscQv7ywxYjk5U//34HkzwHFmNeUOP+H84fxkTHZR7f3pfToED7
u5aNimHoZV22t+8RZEVG/HvUsoJeBJz7ZpFXBMs/rbsuULghSNb69IyRFdTm
7bibA24UoXEr34kzHD3ws/4Mr0rrCvp2sdu0zHVFCH7X1OLvmBPQ/KWdX3W9
gvoeCj+Z26EI84pHOQfv8kKdNnW9VlVV0Ke/R5KtXhRiyRyTmSE3TyFQ60/S
xxGVZBx+7bLH5EJclI+y/vnRG/EHjEbM9qskt9ij7ttfFMCvSf2S+2m+WDZo
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
2fOVqNxfk/57QSHZ7p3QeuSMJAqMO1EZP6gaAWcqbhYVFdKk2Uofy+/Gk2br
z3XjulZj8sjTY+7m55Ln+CUrrz9OpPtlntIivRr0UJ1YPP5HCvXrrOfZ/VAW
qXnapvZ9VIM7mw2b7ZNkUNmvGZmz7ZMpdN4ktxYjauF3KNHPdEISHZz351Ha
wiyqU9tooNyjFkcPrmowMUihN2esslt0S6M1YydbOD2uxTOjUu35x2PI9Y6y
rv/5HNrbULvnVodaPEi3VnIpiSe7sgCLdtcyqEnmyKJN/rXYVvOwoP3ySHpu
/HDq0MkF9N5x89dG2f3B9ObZuvKdEfR0mkHDDJUcmtB8fQdvo1q8N762z3xb
JKkfDWh3wCeLjEoWTi10rkX78pgYm6Fh1DCu9r+JrfIpPGaDUURwDVq77e34
duhH2thntVLFxkLqcdBpbudOsnvIyK/RzXcE02DHtYHr3ufR2g3Xqn4p1WJd
UIrJvagQMjGo2jTHIYcqZs8xNz9ZC7VPsUrfvxBNsPkcZJlaQLnqfiPan5Dd
r6K77O6mF0CTair3xhYXkt+wdS07SquxPnCly4oSX1I+OH9cTVgRPQyTHPfe
Xo3lTU8OWfPcm1q5jOr6g/LJr2fjbrWyGvhLhlfq2PnS0wTrxGb6eZRzMrhi
0rRaZP5Ld3Pa7EUG697N79+5kIptri06L7tHaYasa227zpNO55vGD/ErpE0T
3lQ7DK5B3k39Wqeub2nCzOG1LRYW0cGKNTf2plZjzoL1yVrRr+nr76zWx+KL
6Oi3gwcvX6jG34aWeXWb3ejP7KUB/acW0xbPNRsjJ8s+V/bfhirZPqMZGpHb
bt4pprW/7vUc06IaI1fNWGuZ9IG8b2xp2Lde9vv5+87QIrwWG6KMx0d386LL
538tsp+WQ3v0unbNT67FMI0HITv3eJG0fdbDAK8cCjrfUXnY+1o0GUCLHM0C
qdSkf3On0xnU02jC1oOXJHByWN32lHog5b10qTq7MoO23l/QdNYNCc7kVh0L
dvajm7EDe6rkZFBQwc5Z0tMStLmQ1ea1oQu65uWG57kU04FNSjf/fK7CBufj
K658cYXPzh198yYW026b/vGzp1dDU0fr3/K2HjBoNn1ml4Qiun2m+Rj/89Xo
uDLiSumyt3DJ+bn5/NIiWlPxRa9adt8LTMufmDnNE31KXIo+exfSgiuXHq7Q
qkHQM6VW3te9YGrWq+F5t0JSniB9X3ahBlMvHHMveeKNhZXJF8tkf9+QvKYX
tWR/37M34y+ou/lCot7x98f1ebT43C0L5am1GLSz9T73Ol9MuKNlnRBeRKU7
7275tK0axk8H/VHdGIBHBzT0lUsLiRo/LFWvq8Ynu6hPxX8J41uUmLtmFJBd
j15TPh2rgdrmSV+G7A2Ge7F9u4U+eZT4pUT/bZNaHPjsXvM8PgQm3bwvDHbK
oVOt33j3PVGLhZ2CaorHfIRxsxlvnm4qpAEBl+HWsQbP63bW0ZgwvMr84lDb
Np+cEg0CewXJPp8+bgvUDkZgsc/dCc7tcmhWzvY14Ttq8XTe5dWeeyNx8YDb
bWfZ86Jy7QyTpBe1eOPnN2PhxkiUn71yePX0AqqM0vP9OL0G9bEP/hpdisFD
vQsTEyxyqEvXJb6RbWthuvhlRAdpPJTDXP7l3csgvRZpu7R9ahH7wPzs3mlJ
qLLRCb63Poum3rX9s6Or7Od/ZqF+0DAFzh/de80dmkbLPtnv2/WgFnV5G2cm
/0zBh7Sc99ay96Ypt6S9vtnUYIhem6efyjOwcPecJOOAZLr34aWNr1YtjpW7
FM2PycW+jaO2bvZLpMJS7fLbK2oQHKr1KWRSIUZ+nGT1ZWMSvc4I+mgje8+q
7LffvVvHYnR+ULZh+N1k6m/c8YuuTyUku9O23UwuxIcGl3sLfeIpf13c3XO9
qtFmR31Po14lcPoXd1BpRxwNL96j4mUje7+7/frHy8pyfH57/YvSwyRyiSqq
bna1FOEnc0vHTy5Dwavq6n5T48jWNqXXndhyRI8dHH8xoApX/czfLDCMIQO7
Z56+/kUoDdl2x2F7BR5tmn5gRNM4eh13Yvrce6XIzXd/+q2kFDf219zYoBNC
/QanlGTHV+C+iWRbhEMljfEwn/q8IYba1SvPaapdAjPTMdesRpZRvV3PVOMp
H0htR1zGGtm//04p/ap5hyrSLlbVyirxoey3U04p2Zcg3HlvxMeTlZQwY9vg
VSVBpPX1pKHmsFL8jbxy+G9dGWl12XT6xetQ0n1qYjDCuxy5136W55eU0O2Y
C5VPT4XR6Pwln+eaViJ6Weswv6giWpE0YuSvWeE0eUFCz+9NZc+vXtutahrz
KKis31Ozd7F0Yt+XH2v0a7Dnbp9xywfLnhOzsy9uiIyg+1F65eVLazCg9/Sw
Hv8ySPvQLfeFp5Op8u/sR9ratbDvsqNy2tNs0uo68YDu7Gj65WmoNW1tLXap
3t6Nwam0Y4llScOiFEqWRjX0j61Fs9gHB3RHyd7/Y3UW9Lgle6+90HiyUzcJ
CvOXeiklJNHOp82UnxxKorqINnuUT0igcXboJ7s+ybSxucqAEodEShoemn3Q
QoJdLQy79NFMoMKv3lb5EzOowLDCv2lULdpOf6WspxpHy/qeMVjkmkxKehYH
Nf0lKNLZUlM9Jo7StP1WGhxIpsxc/1kVIRIMGhrwQlclmjJ1v/xYrZNBJ0MN
nbaoS9C9uCBQIzScGh46X1Z6k0orrDxflQZIYLlpWdrOvhHUO6Z4bt/2sntR
ztbRXdIk2J4yU7M2IpQOjXbwthqcSY/HrLYzHiZBl+D7Vt2+h5AkaqZ/+coc
OlK9cv9Ky1pYbfyTdX1lMK2m1dV2bdPJce30jqU+Eiy/M6Yq+EEwdTDPtQ25
nEaHlF//SEiQIPGdv0eRhMi9vHbTxkeZ1N9nwpGrsyWYoPWkS/81AYRtrYzL
G7LJ+U/xvMGy38PjthmvR2T60oILe+rf9c+j447frtktqMWVu88CtpW/pyU/
E2/pLMwgjV6TZhW+kqAg1HrxvQleNKJ/1+utK9Mp5k9Iy/FBEuyO0b6pMf0N
WQXPatg1LJPWOuXfb3tdgiFHpndXKfUgNTuNWIOfWbS0fmnvd0Ml8As4oKw7
zIluzSry+Noum9ZYd7ijPEqCv3pL1hzLdqRm2cd+G03Ioa2tLPtfk9biyJh5
vc4edqAtQ7WnKu2U/fyVeGrTR4KO8WU6W5ab0eL3+d3ntcmmfw56/zx1JHhu
0O1prJ8z+cxDXZZKBqX+8ssISZTAelFqemOG7L2yZ9DDzj3jydnNz0apixQj
b7x6t/T2dQo/sm/J0IFZZNVcObnrXonsvfKow4jkp2j26eKjN6djaHKXVZcW
T5FiYeTiyRHWevjY5bvBnLIsComYc9JklgS6o1RsBpl6UPblBQ3hgek0592N
LUoZEkRfO7b3CZxxfaFX0YXMNLr34s+3sa3rYF1zJKxQegz7VqQUjW2RQwOO
x5a8V5IgJ2v5d8uhDrCdK9W9siKN5rkVj149sA6uuUd6lL+2QMCBptU1qdl0
QSoZdFlVAuOGr4ftEu0wTv+zZWulHBo0u9e40/9qESH94XA/6hVmX1h+1yw+
m/qYzX77f/9ct2Vx0zXLXDF94Int9XuzaI9fZZd/yyXo6zP64567nnjbSU/p
WWgmWR055Fq2TYJ9Y82MJ79/h4wR/ZS2lqfT2z2f2t+PkMBtyv7Djbc9oX/h
aHvTx+lk+uFvVWOyBN4fc1xnVvsi/bmSTsrgPPLI2PVr7vxaSKvr+iUZBsD2
5rOOUX+y6Y4kO7JHZC0WhTxrPuM74b3drrwn9pk0EOp+Z2W/z8ZmbkdV1gbj
zn8OzQ93Sqc+Y34Mfe4tQW300IWSx8FwqWi71+96GvWIzNC3jpfgtHqDX8vG
EKQ9yDhTsjaH/urNHFB3tRZrAg7PHBAXiiGSsKLnIzJpxJsGte9asvPhzqHq
m1Hh+OHYYni0dyo9ei8pniM7B9brL7B5PDACYVH92k3plkqzl0XvOJYi+/dV
p0VpdohGitKRORUzM2jXbcsuU2Tn0hfVAwcHdoqDivfnR/ffJ5N20LDGz7Lv
6fVudz1ddeLg4qacmCh7f+mzyfy8l+z7UrzP7/vGEQko1JG2qJktO08et1FL
CqvFNHWnd8eSk/BplkbpD7Mkyk7yaKl2VAL9TroP3TSTMd12/vbId4nUq+zW
ApvLEkwbWRzRVysVtX+aTR+/JYUCjdMPQPb7vNVjxs8Z2ulIebBG2hAQJ3tv
2PDPqLME6Q5rm9z8mYGMyJlvDt+X/Zyaxte+DqtFTtsHMxbZZuOype3AhiPR
9KF5inSVfi2GXK99fLo6D39PZv4yKo2l0h/X3crW1mC5YXjaDI0CaJ+p6qtf
E0Fz97m8/7e8BjsuO1e0DynC7fK7W+8gnFwdjzsdUJHd9wJmq54qKsGvJX+T
H/cNI+vhjV17XajEKu3tc243Kceo9ScW6dZ9pIV32+n+flOONv0tv2qlVKHp
wlwbi2fRZHb6dJdmr4sw9k9kn5RrlcjsMM2kiXYI6X/tMvVbs1IE+nXtZGRX
ho4jX6c1uPtRvDserNKvwF6lLXXXR1dBd/U3x7E9gmj/O72V+ktLcC4qdFfy
3DI67OlzdbXsvaFjwDo3h0cVGPug0+Am+ZVU7Fv1uOlaLyop8TjV4ksJrmX1
XGU0sYqUXw3cvHeRJ+1u19tr2JUS3D8cvfCMXTlN0r/VbK7JB0rUVrtYd6Qc
heZ1FV8PldJAy44X/P19aaHHw64PtlZi0eoljrqbi2louO+6EW/8aeSuKcof
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
r8uIPXeD6GxLzXzv7AAaGLf1orXsXFKePqoHvX5K57rs25Qd/5EWZfy3uEp2
fp789HyP1YjndHG0Bz06G0hqRaOl9wKlKAuO72p1/C0deJ6+cnz/GMpuXzA6
f6QU6feNHt/TfUhr/g6dujFadv5o5RRoREnR7OrpVg0D1pPq5uWrYup8aRSV
xpsnS9Ew5IiGfeMZKrt3Pnjd5Lc0sXKv+/dqKQKj1nT5mf0Wd3Jb9S9Ld8KV
XyOGZhRKoXG6yuzQRVfySNwxeNT1ADrk87lKS/bzhOnMMr90wAv9Jtd0nnP+
NZRXRG8oTZSi/oHVVu+68wiIOlKyJcuFZrsWZY35JkXGfKPB8zp9RA+9osFP
MpNl792VSX/H1iFc0mdEzqx3dCn5zgfjGSGwydmWFGktRcuLg742+e6OR8cv
bJmwJhTWH9TCPlyR/X/dt7jhsj2Adie1TZh5IAN/dp/+EXNNguFjfaL3l4SQ
YW/v96kdwtCwZcCv9eOkOPt+jeroBlf0+dTjQP/yGHL2M9XYKvu9nbe0OCzx
f08Bdzpc6rkvkO7cb/min7MU07d1iPgx6iOp+j52bXHnLbUftlPZ/LoUOVNq
Bw76bUvTY4cnK/lGksGFHaHjtkqRW29w9XiRP7Tm+gb1zs2k9wut6j/L7v+x
18p2KFu4022dQNO32t7UbdDS529ipUgeNPrwVtnz95RvRtZ6J3+qvRI5qPkH
KaBjY2F6wZt+Thnm0aHTC4o1cuzrKft7HY3qXX+xIJAiDSv1Hjf60ZgV/idC
ZM+RS61Mji7560oV77Mtwwe8pV6VxW1/FkhRuFJve5Mh92hI3ir1A94faGZy
wUynbCncnJ5Nmtv5OelY6WSsG+pG7TO7hDjUSvGfetjks20u0bNPvTUQ/pbm
Xm3pY1YlxdiKfdqlLwiPL9l39ZJ9njv2m7GrTPZ5tnVYZbrAOgiP4pakDCwO
oASJWYaZ7PN8PVrT0GRDOJqa+bq+9PKnyQ6j6k8slqJkxZzva3eH44X5z+MT
8/3ob/nQ2HrZf+fbqja9pnjEoOSU6Z8+lUF0wOxLwfn6OpjuCqRns2LxqVfx
rQNuPtRz5NDsA22k6GY+tPXE3UkY0GyW2aclH6hTnU3RJac6TDTY8mTLsVTU
ay7wapUTRFPVXgw1a1EHuwkb1g5QTwNyR3k+zPWk8yVL5o1Rr8PH5C+2c7tl
oYfWxcq1t9/SvgtTYnz0JVDWmL33y7xc2D1tuhYFQTQr+JRVmOy8Slw54u6Q
CXmYpTP2fpyrBzUuN33TQ3Ze9bbrULTuVSFcbv0q33jMnRb0WxJwQXbuvXq3
I9jLtxipkqfduu5xo4nTXdRfyc7J60fnY83tUjTztfI4be1F5VqX0oaurUTl
ciw28SvGF1Org3tkf5cpp0YnGMn+/dOjpmcm/yrHdepjn97NiQaqxAxoMqkc
Y93m12mmlsL9yj/TtwUuVOraqsfiqZVIWTNlcsLSKqx/2NHGfPIz8vT43uHR
1RIkdG2d2yG9HBsqnpjfWeJB3q2OrS3XK4enr8rwIfWVKA4dNHXVAmfaF/z3
uH1DCab3TXvYI7ScNmurO8yo2AyHJbPbF5uWw+N9cVVZWSXVOh1bPFBjFeoq
Nbd00SiF1iT116rNKmi1xSH/iGp7ajC5YThrXDmOr+l+U213FSlVbjo/btBc
RP5u7SM9VILes/a4/NWooCkfDXNnBs1F56ZJbe9rlmPQoMeBiV9LyaZ8vtvG
a7OQo9r3XMzISuxa8jn6v5ximj10q7Lf4CnYrhllHpBdhYZF8Q/+Sygkgy3j
6q31JmNJoeGpGJ0aBMzu1vzvxTx6cHbrlMSi6Wic0+LtNdnfse5qxZ+2+7Mo
f+eraQn2szBk29ABVhsk6Pjc++wd4zTyfDlmwmfbWYhvnd3iq+w+WaX78odP
SBJp7Wn+akvIdOSaPp0+NbAOGsM8TkdWxdL7SfYVAYN0gDUfW+oOk90bD87u
PEQ5gqZOqTD3vDIadcdvnThxUoruSid6V4wNpvAxBbpGH9fSB13zew7vpQhu
E5HyYHwwjUrVmFBekBkYsdxnn43snz+0HzLkj8pdOuOW22eqqgcN71mvMrhO
ds58jS0NfG5PXUx+dktWvk/u+uPPvP4pRcXDuXM+PXcg6dIPyblrPelht1k/
HsvObaPcjrvOvLxBJi16ddEaZUdftvmMqW6U4vmZzNXXUmywqFvzfIndC0od
MfnvD9n5XJD/1KGb03qy2/O4seLDFDLKi0j4/U/282c6+Ry+sQMuro1z+oTb
08SbRU1VZP+dMpUItT8LHNF+qXL54jeHZOfkkRY9fknh/7dNUdZ9H6y72fvf
6KR3iGm1e6mO7Hlh4vJn6sHeHvi1qtXK8mO38fncoUYj2f9XZbGNUcICJ/Sp
S+03cu4jOGWkntGql8K+R/2BOI9UjG3id2/e1iI6vm3rXp/oStgvMnv/ZfpH
GJwcNXnstVhqSf/KmyXXwbm95ijNgLfUZmDdBe0OEcgx1my0lp3POQOH3ziR
kYpLX9VCNa4V0a26yUXBzyuRZtc0cHJSHPqrHah8cCuTOuaEzna5V4ttDwsr
3HoFodCjf2q3llE0eUiP8G3/SbHfpZXahoBUahxqMUZzUxFU1P9tWCL7eSxL
pl3IWhRGM561OLzsZQz2bYrbN192f361pJfe1y/PceRTqdYTm0gqMPjYL8RQ
ilPNvp2wy3GnL6rTyxJV/GXvmx1jiKR4q/Ys7XcTJ1ovfXd/ltdTWmTbw2H9
V9k9hH9+usg/PxQ//zf++UmNf36oiZ//Mf/89IB/fkwVP/821Rnz/nX6QNJ3
/20urHOkcyarHxhlStGhRP77p/b8+yfF7399Xp8ip68XaObezZJ9FU+pefTw
vgNkf/cT/Henzmvkf3co/u6Dtbe8HFP9hNYW7O+c6fOU+qau13v+Qwq1Cvnn
Cnqf5Z8rKD5Xa1fYBa+2fgLd9WNXYqsZXdxoXhQv+++3y5N/btFURf65heJz
W8uff3zgzz8Un//OrisDG8YG486XHSOauK8l8+Zav+z//+8XPl3s8n/fr2mK
79cI/p5Cb5z8e0qK76k6f6/RYYD8e02K77U4B+B0Vn4OkOIcEOcG1oTLzw1S
nBvinEHRHPk5Q4pzRpxLGHFZfi6R4lz6yecYplnKzzFaKs4xce5B+9eW/zv3
SHHutdzTy9pMqQIb5xXEpFg70PvVd38sG///nZ/Q4vOTFOenOIfR5JL8HCbF
Ofwfn8Oy76H8HKZO4hwGn//YOEp+/pPj/57/GHVZfv6T4vxP5OcLNeHnCz78
7/OFwvj5gr3i+SJ+fnrBPz8UP794fpE1P7+geH6J56Dsai1/DkLxHBzHz0Hy
uyx/DkLxHCzn5ynFn5Y/T6F4nornNf3k5zXmi+d1Ej/f6esk+fMdiue7uCfQ
OL4nQHFPeMT3CurN9woo7hXifkJT+H4Cxf1E3GeoY2/5fQaK+0wh34soju9F
+CPuReLzTHoS+ecZis/zPb53kSPfu6C4d03h7xGZG8i/R1B8jzbz9xFf+fsI
xfexPd/38JLve1Dc917x9x12/H2H4vvuyvdGbOd7IxT3xkt8nsDKU36e4Kw4
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
FflSjOZ8KaaKfKnIo2IP51ExTuRR/3B+FVM4vwpFfjWM865o4Lwrhoi863nO
zcKcc7PoJHKzbzk3i3Wcm4UiN6vK+SKqXiDPF+G8yBflc16XdnBeF5oirxvD
uV/awblfbBS530rO/dImzv3ijcj9ivwwJXB+GPdFfrg155DpCeeQocgh13Ju
mfI5t4wckVsezPkrUjolz19Bkb8SeWnazXlpKPLSIt9F6ZzvgiLfJXLXtIBz
11Dkrqdwfoya/JXnx+An8mPzOddNPpzrxmKR6xb5NPrD+TRkiXxaLufZqO1k
eZ4Nh0WezZjz5DSK8+SYL/Lk9ZyXo5acl4MiL7eX83Xkx/k67BP5uuecb6dt
nG+HVOTbt3F+j1SeyfN7eCDye2s570d9Oe+HkSLvZ8b5QHrF+UC0XMH5QGPO
59NSzufjosjni/whPeD8If4T+cOFnFckP84ror/IK/7gfCOd4Xwj7ot84zvO
Q5KU85BwFXnIE9xHoBYa8j4C5oo+wm7OW1Il5y3hLvKW/TifST6cz8R1kc8U
eU5awHlO7BJ5zijOf9Iazn+ih8h/7uK8KK3ivCj+E3nRT5wvpRzOl8JU5Euf
1MpzqrSfc6pQ5FSnct4V4Zx3xQKRdz3IPRGc4Z4IQkVP5G+SPDdL4ZybRbDI
zT7gvgliuG+CnaJvksu5XBDncnFT5HLTOd+LYM73IkXke0dyzwXfuOcCEj2X
x5wTxibOCaNR5IS3cl8GN7gvg12iL2PCeWOs57wxXETeuJHzyfiWJc8nY4fI
J0dznhlWnGeGIs+sxflndOD8MxT5532cl8YFzktjvchLX+bcNeZy7ho9RO76
Cee0MYlz2jgtctoB3FfCDe4roUD0laZy3hv9Oe8Nd5H3TuB8ODw5Hw5NkQ+3
4Jw5TnPOHHYiZ96Jc+lQiZbn0rFP5NLXcD8L17ifhSLRzxL5duzhfDueiHy7
Oufk8YVz8lgpcvJDOFePdM7V45TI1XtzvwzduF8GRb+sNef2sZtz+/i7nHP7
+znnj2jO+aNE5PyfcN8Nl7nvBmXRd8vlHgGOcY8ANaJHIPoIMOQ+AhR9hGPc
s8ML7tlBX/Ts+nHfAeC+A8pE3+EW9/hQzz0+hIgen+hTIJ77FDgu+hRTuCcI
0ROEoifoz71CLOJeIfqJXuEQ7ifiBfcTYSf6ifrcc8Rp7jlihug52nDfBOe4
b4I2om+ykXuUeMk9SqT9b48SV7lHiSOiR5nJPU0EcE8T70RPM597nRTHvU6U
i16n6NdQPfdroOjXiH4ojeV+KP6pcz90F/dP6QX3T3Fd9E8buH9K17h/igbR
PxU9IOrOPSBoih5QEPeGaCr3hvBK9IZEH5aMuQ+LP6IP25L7s5TH/VmcF/3Z
U9y3pU/ct8Vp0bf9wv0mesz9JswQ/aaR3P+l/7j/i4mi/xvD/Sn6xv0pTBb9
qZPcL6Z73C+GvegX13I/iwK5n4W2op/lyX0uyuQ+F2pEn2sv96DpOPegMUf0
oIO4L0ba3BfDAtEXc+R+Gb3jfhmeiX7ZAu6j0THuo0FT9NF6cI+bRnOPG4Wi
x92J+270nPtuSBZ9twbux1E37sfhmejHmXKfjm5ynw6Rok+nxf07Gs39O1SI
/t1Y7rOTA/fZESr67BO530ebud8Hf9HvC+Q+IJ3iPiAUfUA/7g9SP+4PYp7o
D7blviG95r4h9ETfcCD3E2kN9xNxT/QTt3CfkTy5z4j9os/YlvuP1IH7jzAW
/UdT5gzQK+YM4L3gDNT3l/cukcy9S/QRvcsx3OsEca8T5aLXSdwDxVTugcJA
9EArmNsACXMbsFBwGxq4TwplXXmfFAaiT7qE+6eo4f4pTEX/NJf7qpjMfVXs
F33VvtxvxTnut2Kj6Lfmcx8Wy7gPiyrRh9XjXi2+Oct7tQgSvdot3MPFzwPy
Hi4cRQ+3hnka6ME8DTwWPA177vNiDvd58U70eVW5/4u53P9Fpuj/ih4x/uMe
MdaJHnEb7h1jDfeO0Vv0jgOYK4IhzBWBiuCKdOT+Mr5zfxkRor98invQcOIe
NMaJHrQR96Zxn3vT8BG9aT3mokDKXBT0ElyUF9zLxkPuZeOA6GV7cb8bd7jf
jQrR705lfgt0md+CHoLfosH9cfTk/jg6if644MNgKPNhsFDwYeyZP4M5zJ/B
V8GfqeY+O85znx3Bos8+kPk22Mh8G6wTfBtt7stjHffloejLT2B+DkyYnwMF
P0f09/GF+/tQ9Pcbmc+DyczngbXg83xjPg/Kmc+DkYLPM4P5P8hl/g+GCP6P
H/OCcJx5QeggeEHKzCWgMOYSQMEluM2cIhrAnCJoCk6RhDlF1JE5RZgpOEX6
zEmgC8xJgKngJJxiDhL1Yw4SkgQHaQbzlMiKeUoIEjwlU+Yy0XXmMkFNcJnm
MueBLjLnAQrOw2XmQlACcyFwW3AhspgTRYITBTfBiRJ8CSplvgS2CL6E4FDR
HOZQQUlwqPSYX0GbmF+BlYJf0Z85V5TAnCt0FJyrj8zHoHvMx4CH4GM0Mk+D
3jJPAyGCp1HA/A3awfwNtBT8jcnM76J3zO9CtuB3xTHfg2KY74Fiwff4j3kg
NJJ5IHgjeCB2zA+hGOaHYIXgh1xkLhlZM5cMewSXbDDzSUiV+SToKfgkNswz
oVPMM0EvwTPRYf4J/R0t559AIvgntsxLoQLmpWCc4KXMZL4KbWC+Co4Jvorg
vNE+5ryhleC8fWV+Cz1hfgu2C37LOua90CzmveCy4L3YMx+GgpkPI3seMB9G
g3ky1JZ5MjgreDI5zJ+hV8yfQa7gzxQyr4YmMK8GGwSvJoX5NqTOfBu4Cr6N
KfNwKJl5OHAWPBzB8SPB8YOC43eYeTs0jXk72CR4Ox2Zz0NbmM+DAYLPcydN
zvPBY+b5oFzwfLo6yfk/1J/5P/g3h/k/vZkXhBrmBWG24AU9YL4QwpkvBFfB
F5rDPCJKYB4RGgSPyIP5RdjD/CK8FvwitZVy3hGOMe8I5oJ3ZMncJAhuEhTc
JGvmLOEec5YwT3CWfjInE4KTCQUncwPzmlDNvCaME7ymS8x3guA7QcF3cmce
FDoxDwrTBA8qiPlRuMD8KNwW/CgD5k1BnXlTiBa8qWzmU2EI86lwW/Cpwphz
hZZT5ZwrOArOVR5zsbCWuVjwFVys/cxBhQtzUFEkOKi/Xsr5WpjBfC0kCr6W
I/O4MIt5XOgueFw9md8FDeZ34Yjgdw1mDhj+MgcMPoIDJrhhOMbcMLQT3LB5
zJWFPnNl4Sm4smD+GH4zfww1gj+mxRwzmDLHDDMEx8ySuWdozdwzaArumT5z
dPF7h5yji8mCoyv4aRD8NCj4aUHMYcNL5rDBX3DYfJnnhnnMc8NiwXPbxnxg
3GQ+MO4LPvBy5sJhB3PhECe4cLuYSwwr5hJjluASxzJ3DtbMncMCwZ2bxfw6
HGB+HZwEvy6EecgwYB4ywgUPeRtzlRHHXGXkC65yV+bsoZE5e2jMYc7eQuY2
I4K5zVBwm+uZ/4zzzH/GAsF/fsTcP9Qx9w8vBfevJXOnMZG507gluNO1zJ1G
LnOnsUhwpwWfkNyZT4gWgk8oeNc0j3nXsBa8a1XmH1Is8w8xUfAPHZibTSeY
mw1rwc22ZL4ijWS+Ig4LvuJV5nKTK3O54S243KOY00jVzGmEj+A0dmK+N2kw
3xsqgu8teOD0gnng+E/wwP2YD0mHmQ+JYMGHjGQOOS1jDjnuCg65P/Mn6T3z
J9Fa8Cd/MMeS+jLHEn6CYzmNuZekwtxL7BbcS8FRp1LmqMNHcNQLmJ9J55if
iUOCn9mNeZv0kXmbqBW8zVbM7aRPzO3EeMHt7M2cT0pizieWCs5nEfPkqR3z
5BEtePIxzAuls8wLxR3BC+3IfFFazHxRNBF80Z/MKaVVzCnFcsEpXc+8U9rP
vFPsELzTg8w7pdHMO0Wu4J2uY24qxTA3FeaCm/qcuf3Uj7n9iBLc/nzmr9IV
5q/CS/BXnZjXSpuY1wo9wWuNY74rrWW+K3oIvmtv5sRSDXNi0UFwYlsxb5bm
Mm8W2wRv9ifzZmkE82YRJHizD5hbS6HMrUW14NY6smeBDNmzgBbCs6DL/Fvq
z/xbdBb82zTm5ZID83KxXPByLZmvSxeYr4u7gq8reLx0k3m8OC14vIeY30ud
md+LOYLfe4F5v5THvF/4CN7vLuYG02rmBiNYcIMnMH+YLJg/jBWCP5zJ/GE6
wvxhRAv+cAHzjakb841xWPCNWzHfmMKYbwx7wTf+w/xk6sr8ZMwU/OR+zE8m
C+YnI0HwkyXMZyYb5jPDSfCZLZnPTOOYz4x5gs88i/nPpMn8Z6wS/OcBgXL+
M7Vl/jMiBP/5BPOl6RHzpfFG8KV7MV+aVEfK+dKYLfjSTsyvhgrzq+Ej+NVG
zK+mNcyvxh3Br/7LfGycYD42DAQf+y3zsdGJ+diYIfjY8czfxm7mb8NU8LfN
mb+NJOZvY7Dgb79nvjf6Md8bzwTf+xLzvbGJ+d5IFXxvE+aHYwLzw3FB8MP3
Mz8c7Zgfjq6CHz6GueU4zNxyHBPccgPmlsOcueX4Irjl35l/DmfmnyNe8M+/
MC8dXZiXjnLBS9/OfHWcY746+gi+ug3z2NGXeex4I3jsg5jfjhTmt8NV8NsF
7x2C945ngvc+jvnwuMh8eNwVfPhezJNHJvPkIRU8ecGrhxXz6gHBq3dkXj3i
mVePNMGrb84eJQSxRwkBwqPUxkrOw4ce8/DxW/DwlzI/H4KfDxvBz9di3j46
MG8fbwRvvzfz+VHFfH7sFXz+18zzxyzm+UNf8Pwt2BeARPYF4K/wBcxgXwBq
2BeA5sIXcJK9V8hh7xXChffqF/sIYMY+Aih8BMnsL4Ax+wswVvgLjrLvAMJ3
gG7CdxDH3gScYm8C3IQ3oYg9C9jOngUoPAsq7BFDF/aI4bzwiPVkXwMC2deA
JsLX8JT9DrjBfgckCr/DFvZE4A17IpAkPBG+7JXAMvZK4KjwShxmnxqK2aeG
/sKnFsXeCnixtwKOwlvxmv0X2MX+C3QX/osZ7IODFfvg8FX44OzYrwE/9mug
XPg19rCHDi7socNs4aG7zP4OaLC/Awp/h/DcoWmY3HOHWcJzJ/wgUNKU+0Gw
VvhBhEcP69ijB3Xh0fNkLwmc2UuCVsJLEsg+PnQzkfv4MFr4+PTZ34dF7O+D
wt/Xlj0p9IQ9KVB4UvTYG0hf2BsIhTfwIHsDKZa9gbAR3sBe7B+kwewfhJPw
Dyqz54V+s+cFGcLz4sBeGDJjLwz+GbIXxoY9ieTPnkQkCk/ibvbOkPDOQOGd
OcOeGrrCnhroCk/Nb/Y20kT2NiJUeBs7s++GGtl3g+bCd2PO3hwazN4cxApv
ziv271Ao+3fQS/h3zrJ/h7axfweRwr9jzh4fesEeH7QXHh8L9mBSHXsw8VZ4
MIUPiGrYB4RG4QN6z14hCmKvEAqEV8iH/USUwH4i6Ao/0W72E5ED+4nQUviJ
1rP/iNqw/wh1wn8Uwf4j2sD+IwwW/qMf7FEiJfYogYRHKYy9pZTF3lLsEt7S
VexjombsY0Kt8DEJrxOZsdcJk4XXyYr9UCT8UFD4oYLYD0UR7IdCe+GHmsz+
KTrE/ilUCP/ULfZP0Wv2T2GE8E8NYr8VrWe/FWYIv9U09lvRSfZbYb7wW71h
TxYZsCcLwcKTZcp+W0phvy3WCr9tLPu2yIR9WzgtfFuL2NtFy9nbhefC27WD
/V80lf1f2Cv8X4bs/yI/9n8hWfi/UtgvRhfZL4a4//WLkfCLQeEXO83+MmrJ
/jLoC3/ZKvaXkTH7y3BI+MvasB+NLNmPBj/hR9vNfjQqZD8aLgk/2iT2r1EM
+9ewXPjXjrJ/jfawfw0LhX9tIfvdSJv9bugj/G4L2e9GBex3wzvhd2vN/jj6
w/44WAl/3Ef2x1Fn9schWPjjFrGHjhLYQwcN4aGzZW815bG3Gs2Et9qcfXZ0
nH12yBQ+u1fsv6Nh7L/DKuG/W8K+PNrBvjz8Fr68CPbr0XX262Gr8OvpsY+P
lrOPD2XCx/ed/X2Uzv4+rBf+vmPs+4Pw/WGA8P39YD8g/rEfEFbCDziIfYJ4
zz5BnBQ+wVbsH8Qe9g9CKvyDeewrhAX7CjFT+Aot2W+Iuew3hIvwG05kHyIW
sw8R64QP0ZS9ihBeRXwUXsUV7FXEZPYqwkx4FaPOT1nZyuMh+gVu0n4p+/1r
b9jkdXlxIR6yzxHC54hHwuf4lX2OMGGfI3KEz1GLfZGYyL5IGAhf5Eb2ReIQ
+yLxTfgih7KPEv3ZR4nvu9lHWco+SiSyjxLWwkf5lH2XEL5LhP+v7xLN2XeJ
euG7/Mo+TRiwTxNuwqepwj5NvGafJj4Kn2Ylezxxmj2eOCY8nn3Z44nv7PGE
vfB4tmEfKPTYB4phwgc6jv2hmMP+UOwV/tC37BvFS/aNwlf4RqPZW4oC9pai
QnhLM9lbitbsLYWW8JZC/YjyvtHuuFf0dPdb2Tmg5T5+URedInxmXyqc2ZcK
c+FLLY6W+1Kxh32piBC+1AL2tGIpe1qhKzytS9jTiq7saYWn8LQms+8VWux7
hb7wvQaxHxZB7IeFwg+r2iD3yWI0+2SRJHyyndhLi/3spcUr4aX9yF5aDGMv
LUYJL63zxqsx9be9gEcpmld6V+PW0PMb9XSL4cieXLRkTy7yhCf3EntycZU9
uRgqPLl72beLH+zbxXzh233Mfl4IPy8Uft5v7PNFD/b5Yorw+dazLxhP2ReM
VsIX3I19wRjEvmBIhC/YZEhNSFZlILyi1sUHK1fhypLeo7/eLsF09hGjgn3E
KBQ+YuEvhvAXQ+Ev9mUPMpzYg4ws4UGuYW8ytrE3GRnCmzzx8NSvASWRSHs4
X3ecf7ns/S7i5JFnZZjPXmYYsZcZC4WX2YD9zhjIfmeMFn7nuXCVtl+QDk+7
fy/DTpdgVGjNt3Zx5Ti8QCfuxvAi9Au67lY4qQjSr1ZPvsveT3PZQ43b7KHG
LeGhDv7pOrRkRRFmGp/VKzLLwcKxJ9soy95fxtfoHL3UvBTXby/wba5egO9B
bTzWyP7/hEebHrJHGwqPdtMKuUebHNmjjV7Co+3IPm6azD5uTBU+bvXZf1QG
jM6jSyqHJjQ1kJ37z03mXA4tQ8NfMkguyKILtpfrBt+swB3HfilHDIrQjD3g
NIQ94LgqPOCL2RtO+9gbjkThDd8csNVIzyiUDi23tlILkd03JE37RUYXog17
yek1e8kxUnjJfdlvTsJvDoXfPIv95mTFfnN8EH7z7+xPpy3sT4eW8KfrsD+d
QtifjgHCnx7DfnYqZz87/IWfXYX97BTFfnY0E372xex/p3j2vyNe+N/vdTob
v3iiB61Q6tkps7YWc1s2tzioloNr7JcnG/bLI0L45X+zX55+s18ex4Vf/hf7
6+ky++uRLvz13uyvJ0f218NU+OsndOqh19nfg8a5tRx7OaoWLzVGhp5zyIHl
uvBJA196UfS4rvdy/1TjYPPmn9XrC7F5k8bCMcde0YMUtW0v+kmw3LDTQf9x
2fCovOTcbIQn7Val0fPP1GD7SM+TUcML4Re7oOuL7y70RFs7+NU+Cb6ujp06
QZKJWyeydYY1kd0nBw1//qm6BkZjXVUn1ufj7KlxgTPUPQhKkU41c2uR4xBQ
etctD1cz4hbtvuVJG5Y0tvxwpxr5qosW/3Eowtp95UPMHZ2pzY0+vV5claBy
TNNlDXsz8WxrbtSWIjda82vkgW62tZi9psvqZma5KB9rnbvo/luySD3lurtJ
DVb/tO6f1KwIPU6v93v424UmmSa3sM6rRejBmHPZ+3OQ/zwjdES+B02JeTC0
v2ENzv/67TX+UCEKD9uWnjV2okat6MZhGhIYqtycteVINsavbWYz/7U73eqA
HK23NfhS3G3Wz5QC7DORPpw65Tmp38pRX7FUAg39LMPR17Kw68/Tjvm/X1K5
aly1XmMNqreOatMvOx9Dvep9Xec50oUNn/uMOCOBa2Lp60kfMqH64dCk3Hsu
lKV7b3mXKbUY9Nqqi9rXPEhjvUv+3bGnV+P6Wjx1kqCd0eLDpV8yUNqwfd/T
o07U3ma+1wOTWqhPaj5tYa882f3uQc7SIa/ouOU82xKVGvw13/lWpUURrO3P
SL2/PKGrKQdcTGMlWNUu2Pvt1Ay0chg208P0Oa0M8x5b51wLXeq8atOaXKxw
NjQ5ku5Khzr+sjRYVIPQ5uc7VtvJ3ttrBy/t9MqR2iu/p7L0WvQb9r1H7JMc
lGS2y/Z640wbdS92qL9SA8uRSht6Ty5E9eedtTmbHpF7m9Z9zldJEF5tdK+f
azriu2ypva3sQPdnYe/EJhJ8bJXXe+K3bDRZ3JDU+8MLss/+onzy/1F03eFU
vm+cBpIVKpHMkkJEZN7KXmUVUtEgikQoKZKZvUf2zCZKiTwKRQnp2xnmwcHh
nNeIVEZ+7+/f93I99/Pc9/1Zl1whOkiZladbtI6Cq2nTFrZHeUjYv41gchCD
GqPwnGs2A3D1Zrno/dEilKFFVni6QIerU39Knu4dhW+lGaK+Ijno1Athy1h9
DHxTMrledpABHZKNrJYoRGsqX7Sf72dASyFfk7P/CIwHL/5HcMtEjVoFavbX
8fsYtP2pAjKo/ahePPMwH6m2NKrr6OI/nxfvEU4fBi8n8qtIQjqq9Y689Ref
4zJzyghrBwkixusveXbkomM3Dh6rv8GAt/u7Dd/cGAaR6Zedfpap6PzgZYf8
VAz6dnaJpZ0jgYShhZRdfhaqV2mq0ghnwIez7Wkj80PAPpN7+/V/SYjFOyDV
rwIDS0tzWbdFItyKTxhbf5iBss6f7N5RyACh1pupciFDAIbaWWVWCYiztigq
+x0G7emq43XpRFhCoV77z6aiVeKtUK0mBih6OAf+JzkEgt6rvb+lMlGC/hpd
PZoOHieuZ5ScpsD9HrfR4rAYVKYyXrf3KwYG/qznSSZEiOVTHo7bloSensw9
PtLLAJ22+uo7/YMwqpZ26CeeI8K36vcFl+D+lvOZzqW9OA+fZWIPVIlAWoda
5OhkDLjriM9sdhLBkPIYGavGoRmVYK0/FAakJnTuNosZhJ2s+5iNWZLQVCoT
xaKZDn8b7k7zTI2CZueBNq+CJyhf6PprNioGIhcWB34TCcCavKKTvhyOzOuq
1h3nGGDkIuBceH4QnBKZRWIkYlBg7XWe81/p8KDBKfxX5SgcE+6q//rYD0mU
qOhdoWNw7DZl3/U6AgQtv7yydvMxusTc8V3+DwMqFRsOX5AbhPK3lUsvN4KR
Zwx2f5hMhzyRxLT0J6PAem5f0G5nV8S1xTD+8zwGZaPbR1szCfD664ti2U4P
pBWgJz+1wYDYP21Zs3sGwbEh2mP/Py/ky/EifIVCB4m9w1eqb47CM2YDu5pO
fXTXX/XKvkUM7HuiothS8Pv0y/4tIZ5B9gIOTwibDNjTRy0Y5xqEVoFghtwl
K1R3N/Fl4QQdEi+uuz65Mgpho5sDK2raMJRRlX8IP6fdaX9VWzIB3nnd3M3V
ogeKBya28OH4qlOU8R7jHIR/P1N/rYiZwIWP3m+FqXSw1GPK/u4wCu87/tYk
izhB8rbhoSX8XckinK9+PyNAgTEtJ7bNDbYd/Jd44B+Od7rtSxb8XaNc2tx8
Il6w7qpYD2N0YC49SKlzHYUG1fnPpx/fA0/xX1ov8D7/WOVgUGrxc7y/l33I
DgChygZXF7zP5rVxuamyg7C8wWJ95dMTEHruLDWP97lWIaDnKd5nuYLzXepN
QTAUHZ70BJ/7wmrJ7PMfBBh+QlDLPRIOyp+K+b/ic98+K2G8/dwgeMs8ePP3
XjQQXN8IPsfnbiTJ/2+zYhTiVEIviNmHw/dkb7nIAQxP/7uu2rIRge/aa6fR
c7HA7uqY+WiMAb+5NRwuRQ3CMMHZrCYhEU7wJkI5voe1agc0xCdxXc629//d
FA1cl6a0R3BcSFm9uyhiSARni8oT74oS4euC27WYPgaQPjHXDvYOwqLLtnnp
3lR49n3DnOU5Hc4sNnNk76HA9oTL77Yux4PheAclogUDOa0Vz3PJRLjjlPrn
5HwKzGdIX+NsZoCG4ga9X2wItpAuhtl1PoPXsiHaP3CcztJVvD6fosCUY9c5
Xf8kcGTbrhFZicGKsmmcO4MIes0DpXMHM2CffUvqBs4PdPups6WPh4C7cded
8vUUqHglLkVIw3VtPq2exZwEtR5GXztNsyBMMot8NoIBftM6Jsv0IZDQ+ex3
LSQdml+SKy0eY9DDvM6x2EICNXcx28c+uXB0L/PGpAsDxvm32LpdG4buMOGu
i/sz4c3znxwEJwxK+qXoIqpkiCRYHLI4lw8qVeZ7E/UYQN3jdGZhahiSb8Y9
G+/NhpiPOitHDTFwtWBbed1ChnFpo7UjeL5O5ZgX5z3AgI9RBtQo3xHgWVT7
xXIuD9a+VHpxSGHgtKUhYZv5APTy7eyUbywCu8eSrlw/6ZCVwBF4n3cUGCoZ
WXJD+fBRmzdMaAsGwzHlt4KxAXi8ZtD5Nr4EYmWOuO99T4cVXeHL+5pGIU2F
090+pBC8dHvy6SQGvOa/GvElbRB2WRfzq0aVQlGa9uHySDp4CTaoe56kwMRl
tdyrxblwXs6gpbMHg09We1QtjhNh23DMwuy5YjjcFvdOqIIBq5LozbazQ/Ct
5bvk65py2GvLnSd7hg7aKS+wo88ooBfV98eWIxtkLs4lFuF4GW3NbzPIJYBC
BymZcTEfSmnsfQfLMZjdmM/dPk0E1pqkC+a6z8Fztodv5R4DhCsXF+r5h2Hj
7GPvlbVK+PDlp20vOx3218aPGuL+R3bxy7ISfyGIdRWcncDn+PY9UmOUk4Aw
t2dAybkM/Ar++5eohePooXef9ewwFBYe+Km/vRi6dVx6dS1xHuh9/ehKIBk0
eK/n/OusgCjauOHqBh3IHlGK6t9GwLfdlW6t+hx+LXza5yiMwauwl7yCzgNw
njuv4P29aija5c+1+ZIOYt9qJJc+j8Kf8w/NQ5vLIO63RAUnjrs/qn/9pK4M
QnK7acjF1lq4IBdy+OBVOsQOnMytcaPAMf//3D9nVkJOmKfqSCYDmpi2KS54
DcGmC3F8+H4dWDAlCj7bSoeUhsSws5sUqPpRcsR0qgbcPu54vMOUAWMX/9sh
nTMM1013tH13fwkn8j5W7UubBfEUpqnwnDE4yxmyf0tOGUQLMv+474XzZAXr
7T9EEpyRO7K4h/AC9ALWku/O08Hm9N6rXpMj4DZRunn0TCn0nx64pRaLwcv6
SeEDtiRom5Iy2bq7CtbEuCy4DmOgxJeILokMgMFYRrHLv3rgnhZcMgqmg9mT
H7PHD1Eg/flj1v+Ca+GWcAPne1xP29mT+nIjB+HGmsl/e7waIEJ9GykKfxfH
8tl5VQYFxj3lmB/X14F5KOjxOzNAXfd4X4nIMHyWkg/KVWgEb7nmVuzmLLz2
+UcV6hyDOYuR2AubL2H01hiFMEkHvrwED2faCDAZH6b0QDOI7Z07/KV2BsR0
E942o3HQvGl2T1vhNdwbEDmUoUuHmzLZ6g8CKHD45Z10aaNaSDRwCye+Z4Dn
2bzjDR8HwWXqL7levgn2R5dWsbrPAtYrI6jYOAYpWgYrFanVcH4ufXn0LwPi
ru59dnhiAIoDjqaffv4SVN+c8vvKxYCVXcR4z/MjMGnBE751pBXs4h/4DuvO
QPNfq5UpmQl4yDt3eny9Ccr2cb7i24H78+n0X1IfKHD+DEfFwa0foexf6cCB
jGkQ7W7LyZqiwmSJbZyZSjsoJofHO9yagY9Kayr7OsbhaDxDY8+VXjA/47Di
huf/tvm4hRjVSXDK3ZH/SvwbqA7zcIl+n4aHDTJbhxMmoFfFb+Ud4wOEX3WV
3DIwC0+ElMxtWykgt5mwtA9RYKBJdC00bwzUWygZO3uogPE8fBzaRwG+bWLH
VZxHIIaJ5VN56hScOZN+/cFWKuiQbX8kS4yCn5MzTS10AhbvfU3OKBmGkmDd
SE3WMfA3kws6UzUFefqurqN1Q7CcGdjT0UAFtcIeQ+PGCdjYOG7e/qsPvat8
hXTix0H2IZGrppgGPz2T7BipZMS38Dx5JHka9J7plW73HAPykK27+JN3iLro
UHCmjAr6Dd6r41I02LA3uMHS+wnJbJ4cb6ZPQ19vGLX6BhV4uudzU3a8QK15
bA1ipyfhjut87Pv+abj2Z6O4oa0JMRFLxBQMaJCj0x2kHEuF0EyjQ2nLH1D6
U1c5365ZkIpW1FTCc/cd/js3cg88R4b/lVudTpmEyvQiZTJ+Ly/2LTav+uqQ
WST3vFAADXgCCanxPlTw3iG7THvXiLgaV/cfWZ6F/o0c1dVFCoiNFr8tNMlH
D0SSD+V1TQI3q9excNdp0GU2iI7eWYlW3ktFSObQcJ//983dy1RgvZRsPC1b
j1I9j2va4Hln6D9P13w8z7Zd4VBteZWJVLJ+mJVjk6C/XmCzx3ga/tXGVfU7
liBRfZFNiRc06PUN0/U6Q4WK0L0TCSnVqG9hqlOPhw45RatHOn9TwMluqERO
8RlKQLGvpXim4K20+/yQ9DQQTn3pF98oRA/80uX3t9Lg2YAHo1aLCgGOlGOn
s8vR2uFFQvAuPC9nBkg/WqfAMyP7HOHaYuSnc13L3n0KZEV2ex3omgLTkwOT
ryPL0Ks+5XwmBg0y6j1cYQsVWu4VPwrjrULcbRz/Xd5LB9Lp8/WC8xTQOO7z
Xxeeo2nfDmp0jTPgqr7nCSetQVDpWFEJLq5CHaW/vKNYpyFg6on+NskpGPuK
/djbXI12W1cIZqvOQNaODduM9AkQ81Dkm3lYg2rFnqIXUnjf8kJXw/E9bnoh
HJQ4UYPU5TICIzoZ8COBz0K4ehCej96+X7uzChX0rHwYKpuGap6T9K33JuF6
8L7Snf1VaO5Wp6RAwgzU5X4Ivyg1AY1bL2srnK9GJwllUTmn6LB8eXU5uJQC
aVkNpk/wPtfLEs7Ov2SAU/YWgfFtQ9D5W/bqZWo56vrC8P+A79uO+MzFko9U
4BYp+RX8ogLx3mZ7kkefgcEqBX2XmnGQ+K83KehMJRIzNjF6c40ObWLS5P/u
UkA1rP7d/sZKdCKf9jYa11/VwrBGDsUhiEurcZ97VIo6hy6EkQdoYFzeXEsS
oEJnamO41OUy1FViPequOwvy/JPO4ifGwWLGOYkmVI7STL4VLeO6f/aY7fDj
E3j+TT46Ca/KEcv8yx82/9f3M9yhPepDkNYcxFWhXIJ+D1hnRTnOwEMX+bYX
nhNgbr72T0zqObL2kqzLSp8Fj9uq82ebx+DqIaHg+X/PkdnEDt3HuD6m7mur
6xsfhbXgNhf35lJkKGSstbuOAWhaPClJagi2Jvf1E6WKUKZ/0j930gwY2Ud8
Cv4+Dve1COXnJIqRR9i9+21Ts+AWFU7yNhiDSvZnq7ycJajysCJYjdAhhuuF
0K1zo7DXPmDsxUQJ+p4RYlPwDvfz48IjSf8GIX1jzGR7yXN0yvHNXu9gDFiM
OhdbY0mQcvfPGJt1AaL/krc8rjMLxy1OHbWDcYhLCuz+cK4QFWgVabnL4Tr1
jsVxK4kCw3Hd79ONi9AKSfaeJCsDrv13+rLRpxFovti/5KZQjLpfyU2adTPg
28X4fTc+DUKvhMCw5o4S5GSwu4H1EQbNPpntT+rxukP6ndMNeaip9ZcPS8Es
KDcnz998NQb0gu1+7E356M52Vo9aDzqoLupnVd+mwLWS6DuNrwqQ1qORn0py
DDgRffKIg/oITPAaMnGW4Dgtoh8lDuF5nDK1lTl8ECIki0TloooQ3x7sxfID
DCr8E1ojP5BA+6PO3xPJOYgmHd6puTILWvTgeZ8TYxBtxSlSbpaHCK9FFujl
dGgUZ4fqnRSwGZc0VjXORyJZG9HiVgwoedO1FFI/DMIfz13mhAIUsoAkL+A5
5fyYtcO69iBI/nx83OdoIboXYk3a/xDPodXNvnfek4DT+8G3mF05yEzr/EI2
nhPvXPvhPXJpFFLeCFdbb8tDifzBEh0+DKClxvzXJz8MNdKV2tyreajESbRM
Bc936afsFOd/D0Ba2NYqp5l89IV4UTo3EIM/xPvH/V6SYDTzTIbk2yzk3mpY
ZylLh48reznaRiiQ6p+4h/e/TJQdECJpt4sBskpu46q1I1A5KfSqoS0bffns
ESWSygD22qGc1/VDAKIPXwWU56JLH83SWHgxeM9X0J1bNQDt/b+lUVsealyV
ftgTgu9PFvf98RwS1HB/qAv9l4HiNWiCi5oMYLNY7njAMQLCzKpntgxmol4m
owBvnAcOOvEPxuE4Mvt8RLmiNhvZmYtmpEpgkGB9d5Z0dQBmWb40tAfkovl7
mWyHozD4uShgsTOYBFGfbus78KajpsorC6G4L6r8yO2WcHcYfE6E1G+lZCDB
azPBpXgu63HvmcrrGoQhxc6Am6WZaGex5p48JQyebRrXnd03ANquYg7rN7MR
kTpz3CgR38PtmyNS10hw66+MpStHKnKQj3/ZE8kAMa8tQVHTON67vp31I6Uh
u0Oq/S6zDPDtuFXx3GEQyB1uQyF5GaimiTHfo4tBOG+BYUA/GS6IXLzCeT0T
BfNniU9lYHCucXPZT5sE0ZpJGani2aj/sYZD6gyey94m7GErJ0Cs3W2FA3bJ
yCJxR2ouzjMsAU4uLU5DoC+e+Vh/TyrSDV7MEcZzTaW5cabA+gAAebvH2b40
RLRyWZC3xiCPmKLCHUuGLN00n29hGciu4zW1PR8Dy31fHX8JkUBQyj3BWTUT
1QVdnfw4i4H8HXMl0RICeFUt7Xj/ORGJPpEes+liwKGIt7Wx2CDs2b9vW71P
Mqp23YPoezHIkrXpI+cMgGZarp7igVQkUe5OabyKQcGHeKKvKRn8OO7bYm1p
6HSCvH5dGQaDbrFqz1eIgMxaPsU4Z6BYhQWPjwwM1NEjUlU2Aba3M13gt05A
lqJVS5pUBlSzR997GjAIvrxdXe9mExFx6xsb7CgG+XxRGkMGA0D5g3H4Byaj
vQGCA5fv4PnoUaYPHxcZRFvsdVl5U5HIw1MroS8wYD/yT+raNyIEhappHihI
Q9/aO7Rt5vG5r3xyZEokgOkP7pm2gThkd7ym+uk6A+TN4w0uCAyCuT7hEMk9
AS3OWn5Q0cIANe4VFfhNhgypj2NdjETEm+p2SADnqwllDwWF7/ie88izbbom
o/7wimXRRrzPXjIavZVE2HB3W4TJFPT7jpSA0U8MwqIV2vaHECAl421itWgM
opw9UuSE4yjfWyWn9+0ATOzX3FK3EIcGLH4rDZzBYC5GlyW9kgzd6zYPpRwS
UBhcHhqOwN+7qS+8P4sEvOV3RFLaE5Gdr1aNSysGQS59rY+eEoESaZ3jfTgZ
bUHFjnd/YWB/P8th1JsANzfLD5+9HYkUfhyrXDyIQdQlktUPpwFwiSq7m8cW
gwyeuDaNXMKgc+mKka8LGVJOmmbszI9Db53Snz5PwiDmsqaJmCsJpofsHAuF
EhDLUH+l3ic89w14SPy8QQS5X6oQ4pSIEnsjler/4Od/UWDf7kQA7MHVJ+4v
w5Flm81WbRUMWieDNMNw3Ila/Amn8EUiNlPHywa3MKgajWfCjpABi9o2+90z
Grm/No1yzcYgd93YIFuNBKyN19Q5emKRgvxWvfyvGJi/VpStNiRChuJVWank
eCQof6x4Zg3P491bJFTOEeD0tR2/VaZD0JDmqq+tPj7HwtM5IgQyVN6z4Inf
Ho527TrynPseBrb/QO/MMgn+m/h4pkn8KZJnWRTfXYLjggn5/+Uhwf3JQYdI
rSjkoaMdfP07BkWEmXYlGSKwS7cf7LGNQSVDSZV//2Fg8015mk+fADqlGYPP
/wYh7qrfd05a4Tlxfu/61iwy3GG31RHtC0bUyYcnZIPwupuh9C0dJKhVjSyt
KQ5F/6m1ZGZU4f1PSqaUMIigsL/vr/yDcMRh/HjCj4Tz+SX2QiY+IjQ6BRkH
mj1F4crqkZ+Z52AXm6KC2EkC7LcevhzY/Aip7y7J/obP8fv12KX3t8jgLRO/
e7/TYyT0Vnk8+ikGAbrc9LRsEmzJu6pnSA9CGncW91DqMbh3bfno8R4iXNhZ
yVp6JxjpziSufBrC9+2MkU/uBgE+G0VoifwKQTmzDR6nts1BbEZ2/dxRAnjS
3rUo899D21+r23E4Y1ByX/UWmz4ZVrwGlG29/VCresvDPfEYFC8zfpUHkGDA
tXmf/3d/JPFTMbTvDQYtKW8/HG4ggv/ADT9fhQB0KEwhRIWCge9dsnAcgwDi
RYvtPAaPkfBdjzeGLHNQk0h9QBcjQK//E9H2rx4oiOGDfcL3h8zTebDoKBm2
n95hPhzuiR5OpZWUJ2Mg7n1LeNmFBIk7OAgKh++iLOn9VmbNGHDcSM6XKybC
7rXnc+2fvFFGaYFG1TgGB2cSOB0pBGAfuLzm7+yLxNZqfnxinYOOdi1KsiAB
5ixDo2TZHNF5Pr2Vb7dxvRvW6SoWJoPUfM7Szaor6ATVKlUkDT+nWNfc6hIJ
Rj74126zvIa+xxTKn2jB92fq2dalTCI8UO65T/l1Hb14LHmEh4rB7aG8zngy
AcL0/PZS052RYkQeVzXbHPBEXC85uYcA9+ZeqW9r0ECJv7sy0z0weHGZqW23
IBmKViv867wAxXmvz3XgdS2ffLusc4EELC447+09hUYaNZaa8bot9mvd1zOI
cIdKvKTufRppUfT4/PG6/KEL5FAiAQb83Jae9ekgPkUtygZeVy/z7t06fgJw
hT8LPy6nBHpDW4r18LqvzU5cyRQiw37bi8pfTiiDxmSjbThed6x4XN7bngSy
x3xkUzVOwsW82dIEvK5zgVQvPCMCkcdo193TauB0J2/9Cl7XVMtSgJ1EgONp
MbmnDDTAlSlt7BdeV31Ti30Ur2ueF5C7JHUBJJfsrxi6436DHH6eIkmGBjH7
l3fbLsJbngeM1RQMdmheWaVdJcFU/mznxCUHsLc/yHvnHQZYuFrrSC4Ravst
30WvOUK+7Q/J4gkMPsuMDX0dJADH3RRdH4OroNCrnJuG1wWVXaUf8D6f/uf0
UPKUO/yLKJ+JcsFAIlwt4LMaGXgWDKeshO9AMb2coIv7hPYnO/pyvUnQ5+wa
5pvhCZGKXuJ1b/F3jb36ZF1FhATGESKF/y6s221ifWMYiOz7cHuFir/r1s4S
vzhvKGzXCsvB9yrx4sZyghABFr/94Tz+ywdIumvNWldwvHy8QXW6SIbZA7by
XTL34aYZ5+eIaAzOcyubUOJIsK175/Yr1x5Ac5o4v2cDBn3hzSoHPxChIfG9
2bf0h3BztMRteQSDHPFcVp0lApx5y7+w2B0AS2s8RG4cR/H0y7qGEgTI0XZV
uNT5EGQpmxdDbDCQ255jMhJBBqRwlKZfFQiGwRYJ07ivi1pu65rH/fkAty77
VcMguPjhYsHnWgweuNs9rR4mglsY5bNZ4xNAySfmpQdxnQ2b7j7CQoQdByNO
GUuHANsXNt4tOG98undgp48sATqpbrZPk4Ng8se60j0TfE/yW20fITI09ni9
u2cdDAIbHsv+/jh//ik7LE0hQeN5ySYPvlCoPMxmQcZ9heWw8Zr9JhH6LaLk
TL6FAUfqU84oAgYLRmmFh4WJ4JFZeIAaEwExQiVKMThP0nWDlApUCfDKTozt
QmoI/Jl3rTysietXEuuWik0yrAbvPvUrKwwOMA9yXsB9RfAWffSPjwxHWmzX
TAsiwJtV9V8d7qPCt7zlKTtEAiGSL+FYSST0Gfd4yH3D9Xdi+UirChG0zpJr
3EqjgVFfVv0J14WTI2JJFwwIwMr64diBe+Fg9x9zXI4MBpc4JL/+NRyAADnL
M0+bn4J/XApb3DUMhvdZ5G+cIYN8/n/3LJmi4aF8N+FmOq4vxNR6ISsSeF2T
F1Q/HQtV576Rjn7BwOhWUN7tc0Q4e4ojcMupeMDaNBy7cR20cLvutus8Aabs
0iwHTkeC57cE2f/24fxj/LRfLHMAHKP1pppboyG1f3+P6Dk8B/U58PXGk4FZ
x80kQiMOCLw8CdyxuJ/c5s1jGkICLemrgr8H4uHC4HZGejt+jvTT/Y0+ROBM
PuJuvicR1/vdM69w3ecRCONVwXW/vD+BSZ4lBqYsThm/3YaBh5On8uavASgJ
jXHdbIiDJduj77j0MDjBoyp2gkwG+/DsM4nHE4Bt3zSh8gkGBtXah0cbSXD6
toaiSEQiiK/8UojCcd2q27b1YDoRsGz9IyuDSeATniCTj/sc3/l7Ysdwn7Pl
kr+2dl8clOn+3KeEMcCktpaQaTcIH19fETGwScBzdZyluSIGH2+pn+A+PAAZ
9efbm9oT4QDtnIOJLwZm7cnsYUskGFQr4Tktnwwbfvdd9uH4Kk7eVabQTASN
VZe0nIwUkHb6nFmD+7qvhvdtdZ8Q4OFPnfzu8wlA55H2FPjOgBvqLl5SH3Ef
q5SfrDaQCIOOh3YSRHAe0wp5ee7RADi8PPwjwD4ZWnjGnRdxnnkzdKB2XR7f
twTNjLMDKaD5a+i2fTXOJ7nRGhfGiHAzoHjh2vk0ODo+6cGygEE/PTCoKpYA
B0UaEsV+JMJGY1rw8QYGMG5m5M7jeYq4/cB3j5vJ8CrquUQUOwbrIsMWPOQB
eFd5y2Z1PQWSLBMUii9gIHlf4Mw/TzIsU9NSnKPTwP7GhJ477n/yPj8isLKS
wMlY0MReIAMUrHaMfsMwiF3cwvQonQC/Z7f62N5Khk+OKEADz4k9FZ0vbzcN
we+M+FYdnlTYMa9tabnEgEHiUTNH9UHYy9XnUvAiDRxGrj64heOdPmVpZdxA
Bi5psvf2sxn4uTYfbudgwHdOpTFehgRrFI2RzelnoLltPk0PzwveSQ+YnuUQ
YHaOnCYtlQr9rbuIP7zw89scXzvrDcPwUmGFBCkNIq2DipkHGHBnYCggumgQ
bLGUhbCQDEAL/vyG6rg/4bLwztsgw07s0ZcvRzOB7v6ZOyIV38PVBj8JCxK8
DP2Q7/41C0aTz5z8/+9l2LM7dj/LJcBOl6ev59TSob+2mFfNhAEfe/8e6B0c
hmdGj2vL6BnwQ9wtUbGFAdsOhUgX7R4CkZpnPy6mZsKvUUOdQ0cwuHwVa+DH
8X6g1rfTSS0b1suR9BSOL5nD9dxdd0nAQH+f7JZ/BhzVxe03RRggcJLv5Maj
EYj+efNs20QmrNwL2bU/jwHfvlll18YMAWeZ5XRsXDZMP+izdBDAQKnjQIRF
8gAI/xcqVX88F8j5fnf+hmPwe33v+rtEEqyzPnJJ48oCl9pzhRXzdNDPEFD+
Jz0Kktdc/Iq/Z8OVXRfGWR8zoO9QOGHrzmFIW27Zczc2F5QVJTmABffhRzgU
hikDoFJqd2Jbbh6o8flcYcZx+pHTt7i2kgSjNTvX357PAQfm4z9pb+lwSiT/
tfL4KKhn8Z2a5coDJy71kPuXGOAhU1f9LnYYMpNuvKin58HXbpPU9/ie3Mg7
X+wmOwinAw4ni7/PB7rK1hIbPGdl9s1c/Irw+49LvDkimAutaXE6zm9nofde
2WJWwhjknXgio++bByEDfVeePKbDYkb1/W4rCjiz7VY+aZMPgSsWIzYnGZD/
oEnoncAIkCudnaSOFUB73bK92hgD1Iefl2XeHwQJ0T3KlzYKwGvrzh/JDzD4
sbWn2bCLBMMe10oSjmeDk6DCo+8rs1D2VosheWIMZC3mG1K25UPWk15C9aVZ
eL1FzVFfcBz4njWV+MzmQ5eN5FUK0EFsSkb8zDsKsAcN9h/qKIA8d+nWah4G
/PpsqmteOgL/Ym//fZNUCKFmRZyHe/G5i2+TM28dhHtpy5WW54rgn5luzSP8
Pt998uXv4nkhuW9868+qAliQeqz9d3kGProRuHKqxqFjLHDPRnQhaF9R4Xn0
ZxaUld1ccmTHYC2M52fDxSJoZIhuqZ+iw1WXAAVJjVHY8Ne0XhMqhqN5Dyd0
8L2dupyGkpmHwCy2fsfXrmKIOrqlhCsAg2lDoXH/GhJMnsQ2uOOKILvGzmo4
YAZmIXT0pckEpMiIH+u5Wgw+f+u8mMtnAab8R+yKxkAney71slgJjB752zmB
78Oyu+n+tW+jMEs8Enm1qwSSh22M02vwua8NFBqcHAL9N5LKyO45cD91NwsP
w987W8AmEEQC81XOu9yVJdB5Ydtz3VUayLcKRU0uTYDOuBNB0eM53LkcHR5s
PQs6fdwPvUTHwZtzmP87fynUT0oKqMbSIY2a+GKPIgXqxycNLDNLIe14Vlx2
EQOM9yzEVV4eglWVc4+FmcvAxLJ9fc2ZBp/4pcbNi6jA8mSYsFZVBmrJuSPz
f2ag7TUp4mPuOMQ+mksIViiH5nrOo85X6TB9vqE5zI8CsomIfeppOfTedVS2
ymVAZ9YfbU73IYCWjTNqdyug2yB89tvHaWhbdnjCZjcJqZ8d/C+wVMIJoQeO
HzJmwEm4p/HRgQmY4yz888GhEu4M1f9U+v//s/XE12TXGwp89iHrRTyqhIOJ
F0b1Cxhw+fbcvyS7ITB3CWlPz6mCzd/0CExkGlb8TEnJ7FNgoT4zUS5WDVfE
wzIsNWaAj8nhAEfqBMx0jG4jn6uGRDHuBsY+OlQZGQp20yjAKslNE1WthpGN
HGG9WgZ0t2Rj4fuGIDpT6fkX0Wo405KtNPhkCm5e/qKuWT4FmoLNlJaRami5
6zDYR6fB1vp/LSurE+BjF6IXc7IGMm6TGV2sdPg8z9wnum0MLqzd15s7UgMW
eWxaO78w4MpiRPNSySAQa/Kny12KoS1z7I+U/BRUD9/4vbFtGm7WOKWdeloK
OonH5Ba7aaD9Y3rbT2kq7KpKcDluVQEnCNoK6zx03Aef8lRap0C4+x1/7VdV
QKSd/8k6h/Pw48/l0/sGYfjCfGSBTgb4rjHL7D8wBbyjewjd+6ehiev5CcMT
hdBHzvdK76HBMeq5p7WyVLDZNvomLLwMPNydhbpF6HA5/Vm/xTQFpOOcfyWy
PAP+A3l7x3ZMQffzGJnxY9NgqFz7rvhkMWReYnEq6qJBTEPiwQ8KVKi6sZrj
LFYFBvk/cyYk6SCn6M5rRqZABze5+78vuZDd/CvGCZsEtufkRTajaUh6FmCf
fqwczIZlIujNNHjRJZ4Xqk6FnnNisfNsdeAUE8ezX5wOTRGkZJs+CvCUD17P
7C6CPuLQi832Sfj3qFNp7eY0OL3R8fQ++wK87hUaGhTTQO8oW1ylCRWeMu0+
dZvxGpqEB+eK+eh4juZuPv2ZAqGie0by56sgVE0jJTt0EsyeFN70y5wGnjl/
UzPNRtC3u7oi4ksDQ/ZrVreuUYE591p+7+P3cITpl2IWbRbSaxoMi99ToDvW
7cD3nEbIVX3S+WXHJHAqzeZuTk6DYH3Ws9qNDpiM8Mqz/TMN3he1mQL9qODM
PeDoYtIHxYqphpmCE5Dz7NM9NVsatD8MY86+OgRLJqM7Tn6kwodIkhfPxwnI
5WSbrCNkostKzoJWHHSg2y7rE/nGoGhO+/bqz3TUF6yiaZ01C0+/RMf6vB8D
w3Nqlk3lqegF78a3n5qzoPShpDDedBzOULXD3/olI/Z9LMnX6DPA+BfVf+v9
OLSMct34p5OIeNZ2U+jPZ0Am7EPKsPAE7N6TaWwRFI9W2CySZ2/PwHq+xFmy
6wT4bQiI283HoBpMIM1CawYOfTcoP/b/vxtKvj0dcCQKjba3bb7in4Gmypzf
N0YmILiRQ3YxNwKdDnKI/71AA82aR7UuO6lA0RYgeUMY+u4YcUOrnwYOR0O/
JeH7w3YYm5BfD0bpC+/5ia9p8GtopXyLJRUUwNb33ccgNHu+YQXyaXCK/HNX
oDsVTN0E2mmHApFPZNn1fbE0sPwc/z0rhArckUyFX6oeoBMux1v2BdDAmKPH
ujuNCg4xR5s12H2RauoAmdeTBgKGuS/PP6eCmvHvQx1SnmjHd4/PGM6Hlvce
ZV+vp4LZ90eDfbM3UFB/sWu+Aw2qD/9IYW+mQsjLslxlTTvEWblaJG9Pg0KN
b5Um76kgOL7xl6NHBRUxs//8/99NaDz6q8j1gQrC1gvvSeuHIOC/PVtC8O/t
bB4sgvj34p6WizwfzeFTu14VM36O10LMXAh+zsUib69+levww7vDSQmv22nY
UxqL1zU9GdLswOQBrPKu1cfxe+YbOF/Wf0kFR4elSvtkb1ivHXWe96DB+pRo
3KtSKnwUHLjh5+IHqSO8vrce0iAt6f2F/gwqqBepZh3mCgCJHwKDr6JoYJVd
MhEQToWb0xfGJs8EQap81/rPbBrsH4guDPSkwvODkfNqacHw4L+UgCv1NLg8
2aHlbYO/17ZfaysjFJglRRhWOF/5B+qND52kwvAzgc6IixFwFDuVoDpDAyyq
UIljNxXIPJf1j/+JhDCOEJsa9hl4KW5RykmfgPuDf3qMemIg4XuBgKfCDJwV
Pn20tnECluS5rXwfxEOww5qv3+UZOBDFdNIycALepSTzJBkkQqorpX41Eddl
o+lhouoEjCY1R9HCk2FPltyl230zkHViv47n1Dg8mUoyoIynwpVv28mbQrNg
z4q8ex+OQ2U6+/cTGhlwY+hHR67XLBzdrieivTkGxjuVrNDpLEgi+ocRSLNQ
X0K6JHN9DPK/v2o6a5iFmmT7/a4QZxGKPvLJ1XkMWCqbuy3MM5DXbfVdmW6z
aO3iLm4utnHoN/F5o7maitZd+DpjeGcRa+KO9b2R4zBpo6iY35CMRnqMz/u2
z6CfPNOFdSvj4Oyg7ZLomYis74tWdITOIL32bR2WuN/g47iWHFEUj0RCZrkf
m8+gr3fU8m8mTMC3gk/xMxKxaAl0VA9KzCCtwJbBoS8T0O8o2zZ4Jgp1bTnw
1H2dhmKijf6bXJ+A7IB+9x2vIlCg6u4u40Eaqv13qPzUISq8Xxb8rKkfht7E
cSsst9CQMpw5dtyICiuXLtrPLQcj4Vm/tA8lNPTXniHzxpkKP25oDse+CEKR
Lg+rdRJpyGTvJ+WQQCrc3mv8uGI0APmInG8QD6KhhQtUVYFkKrCn1wkcMn6A
DA606ojepaHLw5Od/+F+g8y0X2LwqQ9yTd9yQtCFhibzq7b+fEEFq1vu6mei
7iCDdr+jWx1p6BQwc0U1UeH+8EUe0wBnVLW3KGngAg2x93lZlOJ4yb0kHJ8z
fQ7lbL+s9sqWhmxqjs+faKeCYp/mz6MLx9FOYh3zqh0N3dOr+96E4+6VhkrB
ycvyEHWaY7MfP4d+rNr0HX5Oxs0dS5iYNVy8HZrRcpGGSt+PYX6ICq///cwT
K3cCtFVD2Pwa/j1OTPzNayo0vxtfCRe9A14TNyseutHQ8ukYMqmSCuakXrr5
Ph8oV7kSePY+De24hB3+lEOF7Au+Yoe/+UFQRWJvfxgNSezZYu0Wg/Pbg8Wn
7y8EgJzgsMWBdBo6/ZHCnXOfCgmyV0kTzkHQHZbjerWShhg3uX9zO1JhJpE7
yzk/GPjMFblm2mjo0uClVHMdKtzRUTfSpIVCCvnqde5RGkrv6KztEaPCEf4P
IinGESCzq6Tb6h8NsZr47WrHfQviWcT4iJFguKQxc0V8Bjl5Cn0V/ToB0RKB
ybuzYyBD0o+81RT/nmf5OzltAmodjIi/beOhv7FZx/DhDPLQKiq0tJ0ATb5w
9m6hRJjuu8sT/HIGFVyI7fjFMQHn7AyVjpslg0SQtPuLlRlk0/fye8+LcRhH
EakGyalws5x/ek1/Fj1ZO12WCePwznx0AI2mw59rLOssBbNoSddecP7NGOxX
Yma7+i0Tdv2T+fOCk44SVUwjqnaNASRUqv3p+o5+B++M0O0eQSOj361jcZeu
fvvovfUHQ2jT63tQfy0VaWjm0V9/n4D3ikqqPHXvkF+wShYYUFFnbE56mB8N
CKyuxSKEj4gkxP8xvG4aKW3IvInE9+2ee/6Dzpha9Lnyx/FLRybRrW6rQs2Z
aWD9zDmjv/stehf2VfWtKQ35Kqru8o+nAmqPXv0Y+h5pHn1mxTU9i3Zm3Vjp
a6NAZ3zVpyX3EpSg7GRsFTWJXsfw6aTlTEP1yUNNSl9eoIf8DhrqETRkKZG1
bQ+ua5ejX2dc5HiDbLpsviTi7z2Re7LQ+jsFJhfi/FuG8tC70o8RKW2TKL1C
jeTjMQ3bF9OzWr+UoxCyqKMfjtOni7FcnOfx+8x/bWA+VIfOedRw2QnRUStx
xRANUOBn3/6wNoVMpMzm+JxBm0Ry9zW315+ZBqg1MPqaWYziDd8iidc0dJTz
vfmqAe4/h1WGP5lVodcKAueVDtCRVKLvo9YJCtibrXk/cEhDvP0Zbw5unULm
Lef/rCpPgzsPj4xmSgGyTjt5cC+iodgJ0hv9U1R4VHc8jEO9DJEj2taz9tHR
jZ6JmspFCpQ75Tb3yqYjryFqTAnfFHqZafiDX2oa/ui3apuKF6CfujHHZptp
iO078zYbXSocWJQtebr0HL0NFjiYzk5Hly3OiN3dOQb35kRbd9+oQiTy3PMS
jIEu3O6bHNw/CCqOl0vlEoqRXO66kYrIFBJcpJmL7p6GmT8uuYdHS1Hep8Qg
thoaOlv/77HQGSq0pwUH5Q9UoNFj1z0M6bNIcyD3+bDyGCw6vUfIsxqxSixc
P/mRgVieNlWebBmE+3aBgoVTVehYR6iXx90pZLYYk93XOAVPv95Zk7tRjQ6/
+B1c0UNDf/6b1vomQoVbSxU3V55Wo5fnhZgoY7PIOj4zjunUGMxtzB4qM61G
d/flr07mM9CKlefWZ1ZDUJFISOKwqkLrd9OezfNPo27DXYce7pmCur3lozM+
VWjqrIVi6cEZJNtmdFrsJY7f317S42eqUE5roaDN2izK8R75pio0Brldmu9N
hivR+/rFbUsxDDTk0a5dUDYEN7vvHm2Tq0CDmHBdEppGQzXDt25fmYQADpWD
DnYVqF8vlkfu6Qz61VqjnXpiAqTMnlrkmVUg6peqiVVxOhJMPZJxe5QC/wRP
mf5gr0ByF1WbHcIZqE5g4/rg5yGgrDBx6H4uRf8C7fZ4XKWh9yFl4z/LqHhu
IPBJ7ipDb7VrCaLYDFKqctNlw/lhYWYjpVe+DHHMu2metKCjjl98AkFpFOCq
9PT1OlyGTEi8h4mRDBS0XbB8sW0ImvivTTIFlyDqp0dcEb9pyKBKMObx7wn4
uvc3LW6qBK3JfXmhajqLKIyFYUnZcbisKJQ1K/scUWsef6kLoiMmuWdzeUYU
SL4Z1a9o+xwJ3HWNNUhhoGdiRSLBeUOwv4M6t3r9OeLVc6R8DMHQX32brotP
SfDPaNsPUa8ixBMyduPMoxn05UBx2LjZBJz3G/H8ihUh622Vv7WLZlFWJKdN
ctUY7FnIVhc4V4zsYzjSB1/QkVk57WTs0ijoaGifOva8GHVuSBzTKWIgAkPR
rNF1CMooW3gDJ4rRno5DgnQ/DG2ct3Qf/UCCYzGO7HsyC5DZXg3Vw8szSHvx
xNnv1eOwy0eg2VW6EA0RlvIjl2cR6fmuM6CE4+LBTNhkaSF6HaHHf4pCR69+
hfxHtx6F3ge/Wb4KFKGlO5lP/r1iINXDf1ucDw3B3G9Lw4j7ReiV3ej7Um8M
DfClrNRQSHAuXpL/1988ZPrWfLvFpVkUpaCyThIch+LDLDW8qfnIILw5RkmT
jn6dsMU28Xzkx8s3biBVgHZ2330gycFA4rd4iE5vR6AvanTXYmUBEp1umlbq
YqD7cyrenoODoH/6iMLjQ4Wo7fhPt8y7GAr62O0/MkOCPGuxj7K8uWhofX+u
8dtZxHwrN/xzwhhYsxR+p8rloe6DNzeaAujIr+ndZx4bChw59OhYZncekqld
3Kl4goHUL+VVthwcgaj2d+XVV/KRRC33LMswA238SX5pET0I69h1Rh6Wj5y2
J3AX+2DooYzM/pEJEpDHP70cHM5GZxNleT800lH72xWj8qlRuD7aG5QlnYuM
/o2E29gzUMGvoEtY2jBUGJ/kPKKUh2L302WHFhiIya6WL1B9EPafsD6QjN9n
i/b0PBWfo/v7Ve7RfhI8iYuo//+/zxmNcnm8OEdHM2153csyoyB79043rGeh
pJJX7nkBDBT6wJrdcdcw2BlfunlIPwfp7BXbeWYbhgZXQ7xfzw6A71UtUefQ
XPS+8cK1ikAM+cWZnRN6S4KmLhqPKCkDnRVikvp7gIGMbxyzoQeOwDGGhHuZ
WCbq01R9qpzLQPnBsTVbE4eASeNsZdi1LORbUB0mvBdDlsSGYoHMAbD8cDZB
IjsbnTx6x/NuGIZ0BX5kbMsigRLi+Do2nYZ+bnWXYDVhoGM+gkLfh4aBdNbO
bvpIBlqX1FbsesdAf5Zu/2ARGAJBllMTbC7PUMA6z3qCNIayirwPDZsMAM+S
acrXnEz08jp34YlYDLWWM91fv08CqbzwA+97slBZtl9YDB1/r7nkXZ48AnRd
Yvadp6Sg2rIA689eDFRs+NmgU28Yyvriu7Vk0tBc3/19dDID2TT8+/KweBDK
ZJsEOO+mo/Sqtg0ZdQy9fhUhJbZJhl7UXv7zZQYSN2mm3k7FEI3v250TViT4
k9LXELn4DLXuNb2chNc9Ytx1TbOAAKJ8IfXecslIOv9hlUEqA9nxcqu6Nw2B
SLWB4H2vFMTRwKTmucRAJoWeCxfwuS9jYpzrdanoYMln9TwTDIm4mhRAAxm+
9cpsqZhPQy8Wh6825WBokdHKHihDAmmhbVYKhzPQu1a7zQoGhgi+X+4H5hCA
48IF8bzcRMT8uybIuIGBlgMmQ16oD0HvcmHUCiEJ3T/o86ubHUPsSan8V0kD
oOLZshi/MwWZLLjJ89hjqEKtqmroDhk4HFZjpTVTUaWPSSnTcwz9+pNf7bGd
BO8O+g/730pDOjKcjdFzGLr4KsH0VioBonL5hTmlElD4h68k5e8MlKioPvqx
YxBSBRbk4swSEROte6ucKIZ2GHB6nng4AKkHjbrpnkmIHDKU+NgVQ7MKVWEC
x8ggV9GXNpuUjE7W/TMRqcHQ2tCCZvUIEXQWe3ZY16cg7RBlu/UFDCU2ktiU
owhg/ul7sPSDOHQnTNDDGtdxwh/7paN2eF3WtQebPfHo3Pid2y8VMcRa/H53
2aEBYPbnoqqOJqAascXFeV8MMQcioYOLJLi98OVnKpaIOPglN1cbMGR0uLzm
2xsicGhUyMz+TUJHK4wLPy9haNq7yHvsEQHenE48Vvg6GjFrvM0m4/jSsMq4
HPNrADzEvX1Vy2ORbgqf5z09DJ0pLp2uIJLBU8LvDp9ZPDIf6VOyD8bQ1hjr
rWqvSVAeGqOfqJOA0rycrvu34N+PhrQ7JBNBgG+LnO/JRGRLZj/Vu4KhC9k3
VvQ8CPCDKxY7u/oUOYg3xy7sw1DM4C2f188GIOvilM1CXRRyuW03H34OQ1+V
/8hpx5FhT+GSkZ9rDCLlvXn3DseLd1jc7eQgEsSLuGm8FI5D+7OnrSM7MLQz
z2TwP08iRNk9Tn11Ix4VvdUomfqLof1uhSXijgSwVLzVaKsYjkylora8lsF5
nlfVMMtwADhusi7ylkUg0arrqgvXMJRrpVofYEYG5r0KP6WFI9Fimr/VrgwM
8ciQCu6Z43U1Tsj4xEUhGmWXIH83hownTTbyLYjwLNrOtXszGsV1m37+uY7r
l4oB7z4LApwyjiHInw9BXbLVHRqa+P4gRZVLOB5J8+HtbwNC0dZ/e0kv7mCI
q1bSJZ+XDG7OL69sFochC9XjviYFGLq9VZlNVZIEoQeCj49/CUcsq72Pt/Vj
KG+G9amaEhEafUr/6i9EIAZWoUjaxJB6nUB182kCPCCxn4q1CUL2X7K6w3A8
7vdSbNRGZFDNl+1Ul36Cjg8d/f3RH0OPkoYnNkZIwH5r4f3C3ycowfeX3qVy
vM+/nGJggwhoDjuS2RWMthz1uK1HxFDp04A3AoJEEOo/dkQ6PQSxk77d9t8y
h/qEWkqzThDgunoBcrB8iLZyUrribDDEVObLUhdBhhfRHg43FB6hzNqUTYlQ
DGHXKJTNOhIcDnCo2eAKQAVJhw8pv8BQZ/Er3r+DRDhl+tlsFz0A5RL/JH4Y
xFBwPp25eis+30hO3oSOQMS6tJvYsW0OpR3WNDp2hAAMuCv2+YkPCqyQ0de/
giHHWzf3GV0kQw6lszEl2gfF9cacfhmNoS89morKcbje/XaYuZjigyICowQR
jpdEj5n7jFYi3JjfN30g2wd9dGTPuDaKIWQj6vhgkQDw9QfXYKEPUnp+qSmH
ZQ4RZMiRc6IEkHl5+d3B826I/6kBMc4FQ3eS7S83q5Hhz5MU1lmPm6ir5ZXI
pUQMmTl/Fdf3JoEfUXKfU4QLYplVnRl+i+OCS/FNdSURXp8dk3id64yYLUQs
uMcxZCiQfWIrlQB/L+aFMjVcR8K7yXlzrHOIP7uQZC5IAFcW4/SfbHbolOJO
fyN3DHmqsVoPSZJh9GWg6wW7cyjmtCnTFpznOdt3avdcJQHBaadEUakF0lM2
/vTwHYZu2R5Yr8wlAqGyfffeORMkdk5L7PUEhrRfDLwPGSRArGjw3oynuqg1
uSq8mm0OyT+kYFf2EID5i3rKg0IFZHZRN1DPA0P9HD/ks4TIcM0pa0tKAz+a
ohtcCEvD0HB1Zo6fPQlKj2z76iMpDOx++3rjcH64ntBAMnpGhKsCI9asrYqw
/PuLrgMVQ9HbdZsESAT4YtK6Q1pIG1jOShj9xOua3F/U+clPgMztofm3mE/B
C+FtF1LxuuUD0vMigmTgjI94GfbOHAJtypYb8LrBXIya8Ask+OaiTz6wagtz
emuP8/G6mhf4Hk9kEGEmad/wxjNH4IwTv2WF1z3XwnUI8Lq66YZuZm+uA0W0
UO8zXtcgN+ZpyW4CHJsNtmMdc4QbYotR3bcx1AxXl5qFyXDq/L5X0QY3wEzO
TWAd7/OCl9AE4xIJNK+V29+vcoerep+OLeN9PhDGHsedTYS/d1SOH9/hBUJP
rqrV4X3+KsPVK4/3+cHWqIe/1Hzgbq3VJ0W8rotMUtZFAQKYCjk008/egdNc
1fvQLQyN5bapdB0lw6Tp8b+ZB7zh7XRx0d1kDMVdnuoacSXBo4Iff8oY9+C2
b5T1TBOud2OauyglRGCfUs8jNvpD2qC0nzC+Vz/lVs3J4/h8md7SpkIDIe/B
RCQnvlcx7BHzBGEC3C8xeljx6B7kjh9y2nTCUE75i2wtfTJsvCmJ+jnqD29H
F0O/xOG+wnSsbDaQBF2f3+Xlij6GaywKgUZvMFRDVSHfxXXHanrTtND8CXx9
vHjLF8eRPf2H5fQ8AT7JXSSPBIZAwPnRpLPb59DQj8brlodwPeJpQEbSAZCZ
+ZSv9RKGothvr7O7keHtqWdrEBkE32xb/hx7ivuoiS+mErkkCFpVmZPZDAZV
XdvHavUYqn0v+WTLNyKQVLc/17obBh5PRLyGcN5QTew6/JqZCNPt5nKGUxFQ
f32lk3frHHK17vx7VoEAZ30IpMDjT2BP498UMSsMyVtk5F/NIoON2xwL53QI
kB0eyaPHGLrGptv04yMJjPZeV61/Fg5Wrz/PECsxdGIy5vTiPBEWSP9cNMwi
wadjmtcF58mvTyjNHXtxnmydrPP6Fw2CWvdV3Zjm0J4D3JPXtAjQcP1jd4FE
KOyLFF9Q18eQCvRkJxNwHJVf6uXniwCWxCSWJFzfPxCvKNmvkKAmTIhqzxwF
5wweZ2kU4/x5/0tYAT8JilrdZFTmYuCUbr2jEq4L1p2fOh4pEEF/Yu9mnVs8
bK/jNvXdwHWnduQakxkBzPi31/r9Cof9XEVewioYmkraJcUrOADvs7MFT++P
ghesC5vvbuJ7bm5wTloW55M/F6KiT8XCxCFOtYAsDH0/8/ZXrBYJtrhm+oXW
xUOK0dyKLa6DfY7hrXZniOC7ef2Tik4iLJ9zczVaxVCLLtP7vIsEUPNc4Tz7
KhLiJmyg6yD+/YANk6/zALCL109X88SCwLPoGRN87srAfLjvJhlMm/5H0XnH
U/1/cZyKkiYNM6M0ZFco5WgpUiJ9KdJGZsNsWA1aRHbIJntvjr1nyp53Tyst
I7/7+/c+Po/343ze55zX6/X849472rWl4AO4Zfh9yeLo55G/HXOH7fqBvf+5
d/aNQLh8b53qJMf354kmFR12fXDjEF/CwtogqNQqK+f+zdGlzu8nU2174Wuj
Qv55h/cAW0YW1ATYGPufYIFn2SD0aoXWDrh/gDfnjzQfv8BGgjP/1/nMAXi2
pvLCwKlA+Lz3zKlxH04ONyopV43phwaepru2fEEQTFdL4Uc22kbWdV/274PM
Q/QTV9uCwTAvqbWck6+6nCsW3J72woiUsamZ8AdYb3Vf2mSRhZ2Nuue3CA/B
Y1YZS+BvAKTLhGA0Jw+YSvrdsv47AJ/48ypP9n0EDWkVFfGnbNRXDpaQ7usH
6Vvddl/ygsG8cwybizjzLN9Xdie3Dw7X2q9bfh8KJb2Pn37i5Mn1sF3ejJMn
S4Zqbk69DACiJnNgLYmFFzcFJ2p5DAHjID858tlHoKs9M726n9N3t9U2SzqD
0EpsXbz6KBgsJ67/vM/RVXHJYxsSNw+AjZnsv28WofBwfdylE9ls9Hxsvd6m
tw+U6++zC43D4be4qnotm3POWD/9eVgvhBP1lWgrP0Iia/XUbg7n2jRsaVOe
5PDmirJN6oLBYGCf+MGSw1lic4PZMTGDkCv8X9VGyVCQCeTRoHD8uqZJ+Y6l
/gBUb7P3Xi0bDokSj6Q/pnDmWe4ItWGeM1fcUbHFSp/An8L6dZ3DKZdaa2K4
43uh43awqdunIIhZKfbbOY2FbDdmmIrFMMyuX7VOoyYELny4dKWAm42WiVR+
3aVB6M7Wjekmh4GQ4p+3bzj73i7588mKDwOw3e6hXQXPJ4iy/SBCiGGjh0hl
R+aOfiDf33nFUyoKeFs+R3+hc3hwq+lo/BcOL4xerVh/NQT+BFLFit+wsMfo
tugX6jD4PEw88DwkDO5KCloqMlhoPvd0z+z1IZj2ato43hEBorMvHe+fYmPd
1oDk318H4FTpFvKrFVGwNHnF8wYnZ8Y3xFvtOt4PhJt8ZX9twoDpYFb6wYKF
B4Ly1ux4NAIb9/DjfFYE2FLkNEu7WPjtvnlKYNMQpMSfl4majITO20MB2QfZ
OB7pp5awfRBMj5felt7zGXKL285d5OyRGs+xhpEbHB4nLlNCrkeA0/Di4V2a
nDpb/Obv8o+CTn58tXpOJBgpr+/py2ch77VJTZnDw7CSESPZuxANfCoORqK7
2Ljrz4P3m68PQmDFJ74Tn2PgqPiR0/iWjaUGBZcJzzj6kOm4W1U3Eu6otvxo
2szCIWv9ioOZo7BWUe9sW3k0GB2pSvjB4cqfllUVt7OGQU6ZtVHsYwxMJx2I
kxHk5NgRN5fJpEH4PmyZl1QTC/Ziks07ODx+aVBjsim4H1hkU9PO6GjI6N73
3m6CiSL697weXR2DtHfTfzdwznnhnq5z3IUzhx0+wQ37RmA+I/1iUlcsyH3f
vF9tBRt/F7oMyrIHIWGH+6EHq+Phwthl/j9ebFRf2C5FTewHcTbpenxUNNge
iVO69IuBXCMRBy8emgDL7Mo1pNgYsHU2T9RJZ6K96bPni2vGgbZvxeMedix8
tIx8/+Yyh1tfzvR0pYyA7T8t8y/K8eDIlSv5boaFqjKUmRalIZi/KP7OzTYB
7Lh5ab0enLw9IhARm9YPf8M35XrXxsDnQKPdl+IYiOV96cz8CSBuyLssIREH
eg+jeUceMFHfAF0/W4+Dt0bm2dUP4mHnOcV8ojILHZI1rjfsHwX1icJw7uIE
qF15bWfSBAtXhRodTXYYgvJ110Sos4nwwncVvwfH17LTt7ZpxvdD39zo/RfW
cZAe3pVIPMnAjamPT5/UJMBzI3GaW1s86Awc/lKrzMQe7sRzW7+Ow4u0H9+F
pBKh/Li+e9A6Fs4m86Qp5oyCkdjR6R6LJDizPST5FIejv9++8DwhaQj01Ggv
jkYmg9JapzvsF5y9O6Cb2enTD5aHmTPWugkwekvZu3mAjmJOJRZe3QQg7ZIJ
V8pKhIkpZkkNk4FvYmZFlzQnoIe3bOtD7mRw3aBE30th4vOjxKkS1TGw5rlb
rw4pkHehytKxkYVKX9lrvLuHoIr70GUbyyQ42uG28OcWHX86SN27YE8EL1u9
mKfNyRCx+1n3zGcGNu1Ty3HMngDBf6/bozd/gd+Bos8CkImZ27rV6cVjcGFu
V57ZsVSoMX+dHYsslN78WCGEMQSBdrmyTytSgD9baYQ5SkMlWY1oT0ESPEkd
yty2JRVqjZqLfl9gYMZI1TJhFwHEvEq6ZbXTYMxjm8/pCCZmLG3OdxAeh7Pb
fl0pvpgOz0a+5UdWsFCskJDewjnf8+H4mjSFNDil7gqKF2hI5+oNqK4kwf2W
zAev7NJB1qtuUGeejruPJ28lhxNAnBYiL+iWAV5hbz4edWWiy26nJBv9cTCs
U4/pOZ8JZttWlxjVsnDKs1Kls2UI1sga8CxfzIAypojtrjwqLomTNlvYksF0
VUZSrUMmKLBl/HYn0PFrY0p3/zoiMCJ9G3jPZsGegT86OqZMvPK0Odzl6ThY
1yq/nf+eBexS+Zrqbhbqeu0ZHvEZgloUMJBqy4Abcj/9SwSoKCg/fH+fEAWM
L29RkuDPgoTy/qCgC3Q8IvW9n+sZEfynKv+1TWVBfZzX3p4TTIyxVYx4Fz8O
HebiAWFHsuHgejMCjczZ6/o9LXTFITh28pDebEcinH2drPPMiYLv3xr1LFZR
wPy0tZpIwxe4/GCrC+MvDQ2r7ykEThPhjqdoVrdFBmjH+rpc2stE176Vn3R6
xkHoxgapeY4O07mU41u2UPANqWQiYhcV8lo2Uwybk6DJdHzlTAMNb9SSfl47
QIJHOZ5dc1WZcOTEV7NNQkz8Qffq5WGOA58VeWTJNgZ0aYLJ/VNkdIvIvmmm
TYWp8yJN0e5pkHNHzr84l4a5vnvljmqTgOCpuyZOMA8WizfdC9zAxF9Op37s
4pwTqHjQJyg7Ea7/d/+9UxMZD1ad0pmzoMKFW4oE0Tu5wGP9SoI7jIZOOvbZ
P41JYFhx6b/+2BJonLxnF/2XgTkGCiFz9HH4QicIBttnQd7CsT96/mQsPjQ8
kPmBCi16MSs/bSyDSFnPmrvWNHxH814rZUWC5f7mmfvTNdAAQYmtLQwUWaf0
+3r/OHjJNZV8di2FqrVn7rGPkfHWYIfnnzwq3L90s8NKvhGETu1xVZCi4S7l
qhXSB0lw/ur9aw4K7WAjGlqoM0NCdRnPd0WbqVBMrW/99XIA3FO63bpjqfhp
PDI35+4ENJ6P/LkoNYpTq4gHzsh8x93K7o+OyjNgJmawL36ZiLHJ9traPGP4
Kb8w/EAwEea3LNtk1o5ilMO5g049oyj8y9i55SEV2BE6D0T3jKOSpq1Ri/k4
RtUKFh7RokCckvsNr/FxNIdjit/OTCAz6NxjrSUSbNJp8LtqMYiLB4/9kGwi
4nUXv3N698jQMjG346RvO8byPO+bz6LhkPaJq5Z/CSBk9EnnwNFulLGZzzDv
IOPwkF7lSAMZzP+8+uYd24in3k10aD+mYaHXZS4NJILNrJWiT18V2llna91V
Z2Dcg5d5CYMTQBJccXi9QQNueaH2+8xTKvKsut46zE2GVGVdwzipEuzS+tF+
/SYT318cGOE9OQ4TDfw2c17VqB+12O20io4v45sMw12IcHBHfGdDeB7KiR5T
G1FiYf05Y56HhBFw5o/rIriX4+XQSQtPaQYKbFsvenMHAd5G/xEU25aNg1KK
O7ubWLhwoLEtOm0Iwr94NArIFCP90i3RxD8MNBw8qKU1Nw6O3id3FtwtQE8p
C0vJKI7ejt+4IEseg2YGZ+v0ylElw2FhNUcf8raVMce6CCCQ5Z0y3ZqH52w9
H23ewUI1Ya791N2jwP9ujPfIsxL8Irq70cKQgTvrjEmpjAlYcuKS2k7Iwaxy
fjX+15y8cdri9NroYTDaXrKeNVOIhwV3DCgRGRhywjavXWwCHhEEXZq5s7Hp
NpflEpGF23n6heSODMHbo+0ro2LzsXBEw03BnIkhuiFNUTfHQfPocxejD+kY
xLXjxJgyG9OP33uS9nMA2JfaSs/55eJCT+tCdyMTH1DtlB7ZjsHpH9TT655+
QZPLNW0kRzb2Js0O87T3w3nHDxmDhdnILXqc/8BOFpI/JeZ9Uh6FuAWJl/g6
H1s1DWL4PzCQfnKzaXLKBGSeuWR+XS4TJbckm0w8ZCGz+iHj4MYRUGBcTXmf
mot/JPR+nPrNwKo5xlVugQloPbbuUYteGv4kttuUFrOw3DdkmLJiGG71GhHL
uXNw23y7605DJq5/IvZP9dU49CxPty/WpKCosH6X7C8WZtENRVbyD4FJJ4+A
waYsbKjyW+URx0QhL0+wWjUObQpP9xi8SML8XQ23HeXYaEC8VZwsMwjclxqu
rr+fjg37v4cP0Zl4flZg5/9/Z8/QUNrf51UCxg7MUOPM2NjxlBInajAAsadK
5Wy2paJkCP/A030s9NvJ/iikNgrZTFfhpqo43KB8ffgDh5t4C95qEN5y+LQ2
TObu32S8cvbVBqtbLBynhVUctRiBQdrzg968GVgb2WxlyMfE/s/VCkE8E9Ax
JFMoIBeLnpe0hqYz2Cgh+Hx14bc+eOabG2y8MQlrcu7UuAaz8Frvq8ju+GGQ
v9MWYdaWilufrrdV1WXi6rJ1LV4x4+A7SsiqfPIZlz4OvzDqYqO9lMn2ENk+
4FU5Nm2il4CFq/fX2nJ8UFFow+9aDqfw/q2dkixJwUMPV/V0vmDi1+2DOdtP
jMNCgBsfIzYOLbqsExksFtpn5Sev0R6CHYuOTxjNSfjX1FGwq4SJgt9OHxjv
GYPR4OvZjiKxqK3aH/SYw5vSDy9VeKcMwoLPl6fUhQT8a+l2ppVzz59FK/Nt
FceA2jlrIm/2Ga2u5iTe5OT2db3hFmrbBuHqhfB9EmfjkbcmwVN2Kwufq15l
hIeMAq3M7kxCRiRWhjml/TTk8HjWnztFfhxO/9XcvCIlFvsUewv0j7Lw0c39
QiJ8oyCUWH/dRjwCmxrOkZ7Zs9FEjac1g8N3xoqmEpQtMZhr87vkzXUWdjs4
rCp/NQJHRbdS82JDUc1oy5Iip48qa2W056L7wcbybGLkpig8PnUrbJsHC096
q+o85czzhaGCL5nKwSiwqFZ1KIqNhQdzir1U+6FQ/q4DcT4cN0Rwq+34xMLM
A/w8rpx+pVqu9WBVB+L9mD/H0jhc6ebpEvekvw/mfxnlf+4LwYdveavL81hY
/OPanfkTnOcFzogNt0ag253OzdnvmLjZ1GrFGk5fnsRumfQ59wFP55wqj6tm
o923uBHJl31g92D3SpWEjygc9JbCxeHQr3y8qdc5/eU6vobgOB6Cgwv9mxyS
mBja69obsX0crI7sPkB9+hbrtFXaJDlzQn0Xzcc42gcXQ57dGT3xAe9WV0gy
B1lYMbw0fIyTY1M8v2v+ygrErzuOUfrKmBjumLKdRR2DY6qdcmz1V2j86RdN
bJiNO+Mjop25+mC4hdn5Ifg1joQHuVvRWfh+mXv0tM0QfF/3Mjmi/R3Guhia
trQxsSDiYuiPzDFQj2KASYgnNiRY7PclszGo+anri65eKKfafHad8cKx7b9j
LOdYWNWhFn9Ek5Orf2163KzyHDePyCarDDBx3efxGcGXYzBpU+bMsHDCO+Su
UC0WG9+WqI2uz+yFVI0SVQcjR/Ty0ziZt8DhERel1Tslh0A0in5GdtcjJOtv
3VE/zsSPiiqGZjZjcJB8/uGKrbdQb9JNR3aao5+RPsyJ8F7wUYjO/6FzFXfm
DxyyX2bhBC/BIHzTEORkda+sO34Rne6eDV8kMvFEULf02RtjMGx8Zm+G4AF8
r7AxQXyGjYFJHRfngnrBWU7X583uI/Dfl1Qc4JxjBy+v9m8YgsV4IfkLXQZA
9K22SeCcI7w01ux5cwxUD6zPW9hmAIpKjbM0Tj15fL+beUJ6IWbe3+ylrwUs
K9u2xv/j6AyR1kEUHIJt7OrTwgceAmND7C0xDifumal5oWg9Bnp7FFnFFXYw
dcHEQGeKjSfZxYIm0b1gN6Uf+X7tEyg9onmwap6FM9EmtT07OfU0iUwH+zyH
gxrGJf8NMlH2+rj5P88xWO3tpprn9QTcl8jCtgw2Xp8/1qFb1AvrnlOz31x6
CfMmYne9Zzl9tyUppp8egrBX9xosGt5BHr8EbbmdiclbflsXpo4BH9tvgj//
OdivPjESQWDjxV9pS2pjnL6X7XG98v0dEIx3Gz6jsDBmvTCx1nkIPIJd1iiQ
A8GfuGy0soKJd2fvnSkjjsHDRZTNN3wNdk+rhof72Lj1q8yvrK19IH7qqSaN
HQAPt3x08+9lYY4UxfxG0RDsr/Z2EtgWCkJKjS/XJnPyZ0Gv79Nt43B4n1Pn
jTI/+BO/YvJMCxvPOz+P+XqlDzJq/F9fMQyG6Utn95FrWKg9I/b+NO8wmJuc
m5TZ9QnOLNbqmXP2lOs1zw87zp76/lFNvLQQAEcO+AcPlLDRaUvC2N60PujR
KpIbCgmDJ2E++23TWAjyvGMqt4dBes33/974B4G6956t75LYWOsXUCzP1w/h
U38HHTs/wdAd52eSH1i4M/J8jXf7MDzjeqPKtysUuo99lDzzgY2S7Y+X4h71
Q/2jvoRWns+gHi7BHLrPwty9LU28p0fg4ozgvmP14RAe8ecNxZmjb8/xkyWD
w/vGB5X/7oqFL1uMA++f5/i1r1TUm+YRKJNd2e3lEQkvu6xoKlfZuMqncDHU
bgDERzV2L32LgzjHiKJAGRbShFmjcqajcPbKoWlL889gJ/ClmXCYjYPsYifP
pQHgYtoeYIYngH/YqA3hDxP7NBcLFOZHwWd99L9FtVhgHbuxL2wrG/fQM6Q+
RQyC0p/J63+fJMH4zJESYgNn3l7uzVuRPAZZy/53d0zEQXiCmdAwx4/EnWte
hHHmKuDBzLcZ7xSYXx218Z8fE48rrzOVVh6Hr7YxPwJzE+BWmpa8OIdbl/Z7
n7m0zMlLKsfeHilKBffgUrrLRSY+iWUuXQ0ZB5U/Bd+iN8dArdbQrxRO38sE
lW3atPtgm9mJS+ScJIjt9Gpve8vp17nPakZNw5Dn6rlhWDwD5Eflhh3WMtF7
l21t0soJeDUrf7mlPRYSTjyUFYlnY6ZzzKfQNf2w84V+cwExBaxdVfIZBiyc
H61j+8eNQNHR3kzNjHiQKbteK83py44PjsePD/cD1+ZVAksX0iAt1YRquImF
1K/dCiz/URgLie7Q7kuEC4pxunkn2Njs99qrvXYAnGJ4Rg02ZsJ6gxvjUfVM
vLgkNKQXOAa9vmmH1l9OgbP2zD9Bq9k4eezADvfqQfj10P20aHg2eFX8d1Hk
PhPXHkqRnLs8Ds3T3BtCDqWB2DeHGTlOTvi2Z60f9HP0JLhT24TDXx+EBv5F
rGeiokvTreKpcdh9tsk98U0meJ0abbN9xMLoPp5YX/4RiHOQeH7iUT5MJ768
ZvaJgUdJkzP/QiegyXH/76WDOZCwQ+50JsffJaKm392+Pgp+AlWZrdKpwFei
duKDNUf/pSRElRb6Yde+gvgqxzwQTjFI/cLxr8dbQonLfWPwMyTRNFwmE/Tc
evqKOPOz4DOYPWozCEw9J33SxkKYzfkWXCPFxEf907YpFeNQMLXzlPy9HBjd
kr8gnMlChi4ObF0/DFE3t/+9uLkEepNMNMU9Gai8aP5S+csEaFnfO/NTKB/s
v7hkvpRnodG3suU6+gh47DxgttG3HG42FAnmF9FRwut04pt8AmxxU5QqViqC
NKFmv7HXTNx9OsmuiW8c3A7d/MIvXAbeqnUXXbMZOPT4oE/gpQnYaKy5VcIg
B546hfR0fGHhxYb1zLcSw+AipakxFlUFB7ZWuot60HGJtelvJYEACsxfdyrv
F8Fk7TklMU5/r28xqMw5Pga/V/AtXRZogHoVf/mQPCqu1ff5HthIgksbL3fs
fVwN1914jxZcYOBXGb11g1kToHQAjH83tUH6C2XRiFdUXBzawh/nTIJ3ISLJ
EyPD8Dp2X6OiHBH/CiUy+faT4exqR5du41E8PPe+q2pvH74/uHGNYxYdpKZ+
fNoVPI48/22pcD41gMu7P/ltP0MD9oggV2w9AX8OqodXcA3ho7jmc8QdFHA6
uOhqkkLAz6bCE4lOIxjPr7RV0ZYMX9H2VE/LKB6A+tRm7nH0sd6qnMRHheRr
YzEiJ/tRutNGxOsNAe+seFYbuo0K+dxPel649yH9e6LQmY5xVGWrnzQKoIFg
wg9hueSvuKs3W4tiQMS70lPmVyupQJ8ez6sgteHr0Tkh7SAyh4+Ph7h7UEBg
hUs9c1MXbnbhEaEoEbHp+evXVhdpwOvO/+DnpRZsBoeodD4y5h2uD7+mQoUd
+4JXrmmpR+OTY5fsP1DwUuH6i0ReCrDXtpvy3azBNqWWibB2Kk5/4XmgTSSB
6e1PmWJbGvDCsPRChz0ZFzPjBLLEqHA8vvNYQR+i1MNYfq4OGo7Pjnw4/pUI
PyrP+wjeqEU4pRMVxznfOcnqZbIsBfQzJbbYnKzGW3m2NxS9qRh14qTegjYZ
Yvsv9/ssVuLVPRfVZs7T8N3E2ntVj0jwQcpefuVEGd6Mu/f06yIN+SSlvh7K
IsLD/vqLydeqMHt4ZWr5BAXJZ+sE9/0jQ5Rkg+tr8RK8/nIfYTiIjqLjP4of
/CaAapxPZ31KBeak+jJOBlPx0U9TOKJPBu+ljQJdyYW4NjKiY4cIA7Vmvwuq
nyPAmrLutIPTpbjh3obxpAM0/HNHgRz0hQS/ng4Hyr8oxnPZITzOVTQMUVu+
4r2OBHv7750LMi3EJS61C7yadHSNPPyV/H+upzYJF9jlo9IP+W6rTDr67bi/
3ZpJgFebU1e4koowWHgx724HFd0cZU9+lCMDaUsUwyQvF2MTm/v0BRl4p/VX
XqkFAQrllvOU/hVgNKNYxuo0Dfk/EGzl00nAHRLn8m53Dq5/LTS4z56BT76d
r3pKn4Da52GX9mjn45tbJ9S35tCwuy0yWkeFBMVtONTnlYULQXdvKFcxcNq3
eOWlRxNAvhsv61CQi6k8wTZlAnRM0iiPK6skgoZSiVuJdg7uCj/1wNuGjqv/
u3zzuAERpDdSJrOpWdh17v5Xi3I6KvmT3aLoBOjLenvyiUMGat47o72Xl4G1
rHe9eT4ECBW62NW1KQdzKvoidlygoeR/3PHv80lw9KS9tb9UGtq8Fbppp8PA
84k7bc33E0AnwWL7y5dZmLhKcrg1koY6kJHw7yoJvom8Oi7yOwWd2UetKl8x
UEm79s27bxPwgCRCv7YmAx8H6eAHEg0FBUPkKnlJcM2rQn+SnoRdMsW/3lQy
sP79zXeHn0/A2B/x5ssJqfh+ksgalqGju6sjabyICOttesr2zSZg86o/n1Rm
GHgSDrtbqk2A69zdlvvnUxAPt+uuvknHcOdh6w/2RDiQfvx+9tp4zMxylVsl
wcSNF91sxWc4fv348kHXlUl4NmaVm2kIHWvUaw3JskRY7dFpdXpfLNavKgo+
dJaJ+V8/83hlj4Nx2pd5ofR4jL+8Kf13PR335rR6nGIToLaae1NDeDQW8qqr
smyZeLZkMLHcaRxW/X4bvvlWLFruGU1gTtGR8eJfwkQBAQbszq9IbIjCOoN7
l422MPBu7cIvuZcE+I4rHES2hOPBbz9bNh1gYFRDsNUVUwLc3U2oGzD+iArp
7NMyepz7eRXNFjpMgD3J3/eGm7xHNfGOMMnrDFz7fM42cwcBthncNbL/7xme
vvXuubItA12iXg6WrCMAQY2rv7rMGg3zHlEl7RgodkVzMomfANJ8b0oPntRC
td/+wU8eMvDmuOe78ZUEEHihPqZU/ACGJcTUjRwZOL/90PxqbgLkjO6Misz3
gob3+fOvbRjoLGDr+Xw9ATTN/My4RP3hc+Ld5UxOPS4BNQrZ4gQYOik6fWwi
CNwUR8se6TJQdN/F7+IaBOgmSLw85xcBiX7v89IVGfj0zpXg1OsE0BrrUnNJ
/wwxTrSP8us5PrLZtu6BHwHCXzEuXbKNg8wa+HmUREcDl3ektfWcua00rrLS
+gw1vgpXy+9x/NdgT07543EQdCmW/0RLAIE1Af68+XR8svrFWZ1VROC+6vir
qygWBuU9Dd20mDgSEs//tnwcBk8u64vbJIOYmYNsy1M6Di/2mSmdI8KxRqLF
6d54sGVS3JQ3M5HO/jl+nHcC1AgPSg7++AJ2rq+Ffhyj48Vtuh+nwolw7tFZ
jV2rk8Duw/C7wCEG2hztu1xizJlPH++B2IB0mDt7qkbuNw1TFxWoytNEcCas
5s27lAIdPM01Wz4zcOA6jw1PzgRMW6Z37dHPglTySdf6ZBp+ONx3nPcCCV7n
P/in1ZAKET62nwVNGVimd0/ipAABJEL5YqdFc6CnUl/nJ2d/mzpOD9vmkYC8
+o+htXUGOBgp3i3ZwMC3p2qnMp4Q4MY6AcdMmWw4IF395V8xHTdevmEZwpln
r9d/fftKc8AsqlI52oSO01uMX960IsKj0twTpY/z4KZ/2rU5Jg0zeebG4lhE
SKx716G/Mhv803STAgoY6PdzVWCM9wRoXHOwyrAvAIudhSP8D2ioSWwXIz4m
wcyzdoulzhwIa3PJfcDJCbPuKHd7KwF8ytJ2pMYXwduVjT7HyVTcdGK3Jk2Q
DDtWHfWRm8iDk//u55P66Pj9ZkDhT07+WS9KrNI4XQgF2SOnsy/Q0daz+r/o
W0RIe7s9k399Cbi/TNgTk0lDD1+pE///foT/2sZd7ufLQWJy66n9s1TUiVAa
k54kwXUliRSp/kI4Wxokzebs4/7hxnVZBgR4XBjiIL+pCoinZYSIm6lo9OLn
O41OMhiY7rwa9agUTnlu02By7idaJvSmuBZHh69YX/uvuxLMHtHPxd6n4XvS
kO6ZcyQ42blGpVekBooaL8+m6FIx/9i3S7GuZCj9kL72XUg9VKyf0t/aQkZ/
E2nGkQ4KJ9dyrZPKrIJ2RrxgUQINyftuG4QvEKHF4eHwwcB6eP80ckPUEAXd
hd/n6ZeTQfyQtNml0XZ4Lb17o9IWErqHdj95Vk8Fj8cJhDWvvgLMBY4pxRBx
jdlRnasvqCD2QvxYWNIE6HlUSHIlj+Hf/pWjVu5k0ExkKY/TSLCHxX7AEJjA
uBOi/dMKEyDruNOqp5iIvxWKtUZiavHgVX6L0iIaTOfPyd0roKKvkvf3q/od
OMMdve2TGAnGs3o81YRI2CR3kJngN4Q5Bt8YZZUk2KVyXVD5NgnrfGu4h8v6
cLtCZbzRZzKMvrT5121MwgfV4Z4q1CH8+e385iu3OHPe/HHYPYeAMlbBa5vf
9yPD3+6nEpECQv6HNyjvnkClxCu3yV5DuHHbs8QFLSpsd6jfQfAYw27Lmwvk
tQO4e2Pk/rUEGpz2/RlizhzCY13rog//HsZAjcb/JImc/LZRQCbpVy8Gzr3Z
t7R+FIUb/z0y6KIDFfGIzb0e7G7kW1G2cwJFjwX0H1Gnw5d8vUnu3d0YeFOr
I39oHNc/qxla7KTDOZ2lUv5n7VgtpMJ0DyTgm47Ul8H/aNDY8jfmxcNmFHGL
MfLj3MfBjcTGcEEa/Oz78mxErg1dBQ7VmgdM4EqTNQrX2+lwpJJJf/avCcOf
iqdoMQlY2brb5OZaOtToeHdrGTXg40oxq0IxErp+N2E5HadBlYh5koRAHW5J
1AqO2UtGLp0RO5obFf7WsvJ3i9WgYpNHhu4WCkqYR8pAEQU8rUmT/XfrkPij
R8M8hIgj7deKpJtpwDftFvT9Yw12dg8OKz8lYb4GabfILs79yG37S/pRhczz
ma5G58h43Cvm3ogXFcx736Q7LVWi29XFzy68FJzkO3bjIacvpHOX3wxcK8fl
pakUShZnPkf8frzWoUAKn91A+coqtMxy4TfWJuHvh/zOHvY02Lp8l1jBVYpC
VpT+QB0qRh9cwxObTwZPcrTA47cV+HLl1iDrGRJKHGgVPkenQmHy6zULZ8ow
6Ze8vJofGdfUeXsbWVKha+P9DcuqJXhOyk9gzQ4KSv1kx22lU8Dl8OLSBcMi
rJL4Y8UXR8FSVt8g3Z4CukslwzxBBShehtzaolT84Um13PaXDPGDzp5Pf+dh
Is/S1pQ3VEy+1bam04cM8xtM2F8iCvEMz5OLm06S8d8XczFzpEKr/AmbHS65
2LTm04WNM1Rc6a9ZKi/KqV9PryV1Lh/vTlu1tBaQcT6jRqfTjApzfQbHr9/J
w1vWtaGeEhQMleJu0/tHgY2yuvUu1By8421WQvakYLtvxX5mPAVMlA/Xkx2z
Meq0q7vWIAWVk1dXyl2gAOxYe2/P7kyMYGj0/dtPxdrKshdyS2RoUjukccAo
DQtMqG/lnKn4+6OgfG4OGSjf8tapZqfgxwDxVSolVPTaOnfK14YM/7V17KIW
JeLA55MVuXNU/JtwsmwvJ99++/3njL9yPLaK/Qwk7qVh9eLI/X+zJKi3DD3q
4p6AK/d5jXAzyTgX7X835wwVXEsS7IdSPuO3wvT96Zdp2OuQMFVZzcmBSVy/
ijyi8cTEsYrH2yj4j6C6+YU0FS4Q/C9RGRFo0DSTFf+Yhqp/j4g0h5LATKjr
KmVlJDr/Cai/o0bBR2+0nPNXUqG0YM/+i7GB6CN153J7KA1/skMbj7iQYPJw
YZ6LpQ9qW1KpXOcp+GWrqqHeLAUU731I2PntPVZHvz09mk7D67NLrh/NSVD+
3+d0oeAANA4OaNI3paDL519bbDhze6UoHD743scLdHP178jRW3WmedNZEmyV
k5CueGQEy+y5Kv98Cop4H90e/o4Ctgu66Q8vX8SCg2+0enJpWBZ29XChCQk0
klpll8OeQcHalvkxFwra21sINDZxOPTTfEiWiQRGd5ms3l5Ew6kOgv3rSyRQ
8I4h7m48g4znimhzhoKnzyzMOf2hgCm9yoUu4g3HE39obq2goXPem4/lHB8p
iaD1fqZ+BGNd3ozrtylYe/6Vy4YhCgSu2JCO695B0qMh+espNLy/LXmj/B0S
5D9Om6DLBsOJ8Y/Sypz7fO5w2b2Uhwr/DSQEuIaGwJoV5wePB9FwwzXha884
vty6ZGjb1BsDEROd8srSnHqsZQkHOfyrV3dKWPZxJBgn9drlO9CwI9EoTyOB
BPsk20sGnsTDrqcei6MMMi5v8TiVfZYKtQ67hE92x0JBYnaLIIeDltX/Tvr2
kECiMzzs6GgC8C1U/i5cT8Npne7aoE1k2BD48dv1XSlgsj7c4xmHZ694OCeE
XSaDi59r2aHjaWAyuNCc5kXFjJ+rnYwSydCyn5np7p4J3rp2ATc48/+A7P/4
Cmf+b/gclL5FzgZP17M8Cs0U3HvWIu28OUf3nA6H/Y7NBZZ2vkHWVQpKSv+M
uNhIAaV2vl/zrvnQmzxqGzRKxq96mdXX1akQVFo8ff9RIcgc848OvkRGvtXh
Z3bkUEH8S+rqNeRc4P7HVS03SMXyExItzw+QQeef64HtlHzg6jbsMLlExewU
XX2FKjKcebrf5p5UEZDO//sUXUpBvTLu/Lb/KOCvUCC3M74EpnPWzs6uo+BY
epdeym8KXLOo+HT/STko6F5T+KhNRmfp8dKROCrwJE0vPilHSNa5r9Vyi4QF
MAYXTTj6Ly0f5q5RCucTv3S+1KLiQdLyG/UKMrStmn/qNlABTMPz+l/NOPdg
Zqd8PJgC+25lX90lUA0q53Rbps6TUYc9f0zanQpH3pSvOphQC15h8DFiNQkJ
4oxvJBcaHN6QcI/fswY+NWn3uP0g48WM7iM/uymgd7R0n8aNBuAytBCWPUrC
y4w9Ne930+Da1joundBWkL0QdCeKNYHtu1aQvcLosFHA3eLJYCvcvp8rl2ZC
xKVWSd4dL2kwJE9Pn1KlgEfs9OTarO84eLdE2sCQBMv+0VYbliZQtULdJjqu
DxNsndr2ZXJ8x7VnkSeXgBV/HmkIbO1BxQ+k1LA9NHhnkjpNdCXjT5t7BRTn
HpxS+OLkGk8GC9XTcbmCnH4EHChqkO1G1rZzza/vk8C2z10nPoOEj/Sd8owm
uvGNXbU2u4QCfh4d2p/qiVgQ4yrzIP8bWmQIDRZNUkD/GtHPRWICgz2Oa9z8
+B0XEleR4zm+Sbhpzbvq2Aje1m4Nq9frxeD57T/7lRiAlyz+RJ8exNuZX7eJ
8Q3iWYEXy7fFGfDP/GZq1aYB5DN/19ie0IullQ7J6xSY8NDWonncuxd7TFc3
ntcaRNK9wxv2sBkgRmJLhHT14A+Jkwo2a0ZxOkHlV5czA3ZGG9XlfevGKxKr
N8PQMBIvjOQVSTNhpEeWaF3ciZZ3+BIebhjHQ40ixttfMsANJ40fr+5AZ2U1
tcyEEcx1JUyev8KEfYmDnRHKregcnWOiqzCO/84cek2vZsDhNbFvHTOasGm9
h/RlhwksKDpL0uXU35dS17PxQQPyGZBVCoIIGMX1ajf/AzrI3FDnHdFtwCz/
sNU/S8dx5FqQAi2PAUd+Gv5N96hDrjsy63aXTeDa7abCgrsY4P9zQvPLSA1e
63rA/zuZgBiyX8AggA5pVlnZ1jeqMdTRUiDKm4hv5ouM/luiQV1E2WHvuGq0
bP7EY2Q6gR8fRS4Ic94rbIWut+j1KjRfniuplyZgxLXlSG9+zvumr719yKoS
j70LiE4cJqA/b7RTPuf87tfmviPHypExcMsq4zUR32rGLIQI0QG+WBiv0ChF
3tkBh2hZEopBYBIphgZxntZziqbF+J9781PVKk5uTc3xPLKfBtSW/zaoLhZj
U7eTUac5ASdOnyB2r2TAmSOa6SYqRWidmiV8iEFA9ywbJ2IiHfrrQvxHnQtw
ylzQI9SGiNEvrbnCdOlA0REbf92dh8ovPX4tEIkYdMBFvnWGBsqsU6tWSOai
/wE2ScyQhKUW3LtiomhgvY/QvPg5GwsUPt0WKSbhXZ4qxkU9GmzY4/NdOyUD
J/fJHXUUJGOm5u/sOW4aVJqGso3nUlFhT9n4rAUZtUvxzUgpFXSdHqpuISSh
neXm8OtZZPy4qmq74DMqnJ08csHvSRJKitxZ8amDgBrKzm+2DtIh2Oq7mdik
H6rKyJpRSARcOzFs/eArHZjxd/lvecXjA6kLhGkeIsZZrn9OzaND2cKmxb16
gbCwcbUfu42AL1coP3ck0mGY74Gmb2sYOv67LDd3eAKPoIfx0BwDdjhVbHbw
CEI5+uOFJ3mcfllauz78SQdHkvDYYe044Mu6NDD5kIgi5o+Wym/RQeVg/SK5
3AnT7ibatNUQ8K/T7penWRydOfsysVk9Hh62mn8V3U3EUut9J5Ui6bDwIblc
JjAS0tKytlFKCZiVLZKoNEmHQ5Hh14QVU+DUmh+fX6aRkaF96cwlDypom92r
TClKA9nwzOfq+mRcihG/caGTCnH9h/f0zGRB3oG87rtUEvbUZSw4yNDgvwzD
ZQtGDvjJGp+RsSVhkr5AX4ovDZ66GvuYrsoHniqrH0PjRGSZyL5K+kGDXJO/
d+/sL4SF6toX+ieIyLPP2+mLJR0+F0ufdXtcDAXPExIH/Dn3diF2ZpBABz9r
5wPqTcUQfSDbrzyRhL3LvAvSWjQI/y1duhRVBisCfN26G4k4//howSsGDXZn
d4T1cThUUrJj11gzAfVfZgS/iaJDztXPFj0a1VAzcmEfX9IEnn0kenjEmAHm
JyeLNDfVwNGbXPEP9xMx/Fbl01IO7xyS37A5e7IOdidMuVM+TCCzpt1kowYD
vgmvrty8qhEu4Ab/yKsEPM/l8ocRSAfbN6y7Y01tsO7AltaB9WP4p+qZlMBa
JtCX1YNVVvaBV4lQG+AAOodp+yrOMGCF0t4JU9oE5KfaeGkJ9GBaqpicENKA
fHjCUcWNAusXR0LPfu7Bs3LL9ir+JIiy+/PYVpkG5V4v9xOuf0fXfOy+u5IA
W/N0/s34ERGfKawaka3DdJMz3Cu+0uC1zsSingwZpy/UKKhc6cXm2HjPyBNk
sJd+7tB7lIIxQZb+V3K7Uchb2L/xGCeHRLvM6OlRMdxneLugVA9e0ijya6gg
wmi1yv0QMzKuauJ/9WBvF0avxzui1hSImNnP5ctFRIHHoxs7zDvxagHP/a2v
OPXtMK9s2EnAI1VyNht9vuLf7fpnNTJpUDtM6FUrGUdS+gveG7WduGvy3yOC
MAMo0yv8XAPGODwSyP/u91fkXrHiUOt+BvCVEhkpN4bw/M2RO5s5fjdZMin2
//89u7gp1eAEVy/SxfmE82a/40+zXSn3/jKhUYPXQ3y6B//yLD/Y9GwAQ3wS
ypI//f9/8xTfaO3g1HEybhxd+3DYzWG2zpQFx/vtp86/6kLPlSZ/yuIHMTKr
yOMvmQmP+lf0C0a0IV/xgzqTXYP4ZNuHTpoBC4xBTsHepAWnbol5BzUPo8vh
W6sDOpmQsrtZtu1kE/6Sd+Tepct5j8bgrfbAhPrGypmg9EZkmOlLzCYPokdI
+mPiExYkHOHvduRqwEjmgS3Z48MYczcmt5GHBRnblZb9HtRhi3bP2uSFUZz/
Q7kS78OEZ8uyFXb/arDrWHnl5qfjOB86nWm6knO+wDGr61nVmDl+yxuPj2DJ
f79aHouzYPspzf3nfKrw65QUf/mfUcw4UfT4Ti4T3n0/9cJmrBK7K25GLp8b
xzMBTjfdTzGBP65qB3aWo6G9Xk7RRo7Pm9bvo31jANH9O0F0hOML5qnZi40T
+Ms8RtHuDgPsZegzO2aKke7kWdnnM4oq/oLJ1j+YcEDpHSHkRyHqx196qlI5
hvP5L+xN45lQsfl5/gu9AoxQGplYcBxH9bVf2zwvcu7tpEbZtpV5mGr49JfM
r3EUXrzrNLyaCSYOPh/uDuTgkMr7B5ddOTrJslZKLmKAl1/E7XXvMtDNZ83f
kZEJJD5uGKp+wgDfa81xfLR0lJNprTI4y9Hnpj1idgc4Pr6p4t5dgwR0YL1S
uvqRgEUu43oBvAwQKLS5fXNnMRYprNJkmQ/hfPb56YQ6FohJ+xd5NlYiScls
/1qnPjQ7Nhax6hUbNO4Fr/L+9AV63Y3DWr8QUMjEbqRzhg5yArvK6jtS4cTp
1R+k9xAwZCZrKlOPAdo5pvBgUw7kbl0Ttpg/gWj1PiItgAFWYtohapO58EmL
dENhwwTGNQWl//jDgD8d/MkatQXgrjKrcd10HAt40w3vmTMhQEWw6/uBYpg2
vB5+dO0Yxv107l/zlfP5x4867D+lYDApWW1YO4H9O7t9JSwZcEsr8ffAsUow
TpcUMAgex72fPaP/iXByjmKh76+5KjCscSKcfTSKqubsKNkeJoxOkLK8Qmth
IONkM1tyHM0l247cOMAERUd1ATdSAzhuN32U1DOEv3JPuClrsiCp5JTra58m
UNY4Yj8pMIaqs1ff2p5jgrRGX6Fq1wCQFf9ZH/1/PswMbxtTZ0Jy+5nXaq9I
MLtH916O6Fe0vyO4b+NXCpipq3eeKKGDpv1c7Z7PrXiRzpoqKp+A279LAv6u
o0LlYM9/fp85OuDoP7ssQ4LzlKg11zh+I5oS2k8UykaHfdqJ0hzfkddPW2W9
ko4HKWvU43cU41QjV1JWKRF+Frzj3vyMhiavPdbrj7Xh97HO6FldIhy3qN5u
fZuKLhsC6p8MNGJoXY1f8goyNI1mFF6LIOM1l7I9/Zw8uE3o8k7nTxTYb0wr
eBBAxMNHbGdKxVvw54cp/3hnGtT47P+T6TSBjirOGrLlzeh/17E1aw0DfmhX
kR37R/FkpKpptEoz+jaA0ElDJrxXP9jifGYEHasoq85Hd+K38E1SVZeZkEV8
kN2dO4CnpXVYljs7MLaqRveOIQtCX76lDcz1YZKKUUxTwFe0FJBfw63Igj3u
N6wHdb5jwUuntQF1XfisLV3+7hILlmmPXa5W9mDJ2bn2hwe/YdceibaaQhbc
Pl0rmfyzGxvMttyv5e/GPb8k3dd5s+FnyRN34+IuZNcpZ33iPI+ShLshSmwg
SX+8zb26E51SKGs3m/VhkV6jXXMtC26qjN+pFW3HoEXx+R2BX1Eko+TFfCUb
xC5qQL96K8q3t+2SuvUdxwf43UVuseHsmmEHsnUzCom1m5ZK9SPF66kpbZYF
V2LoR59NNKBoufmrR0++IeWcrQHWs8GmelXxBfd6DE4+9KhvvBeb1gV85LFg
Q8mq1NYb++uQz/BQj7XyAErssTu3Z4EFT/Ymdf2l1WBOU/eXz9ZDOJ5E4019
xYLOC35h9XerUTQkR5WL+R3v/FCcSUE2rFmovNx+pQo9v4n+eDPch2csa+J/
WrHBNe/Dy5PplRg8xDd0qngAqeH+lsR1bNjAn6duUlKOqTePRFt4DmHLzxP3
6tJYHJ/2Td7dUor0o6c3CimO4D32ZfFdZ1kwrHni7x+eQtx3tXZ46Wgfvqg9
uqCXzYawJsflMp0cbLHzHZ0g9+Fn2oFD5z6xwWFpckhvYx5WVa3/4Zs+gAuV
p0Qk1dggslGPi5Yej/uE/m3/dmMAs4gKyj1X2PD8yilfn5056PS7NZ6sN4Sr
LFgdf4ZZ8OGUhuz5YDP03mB4L5bej9k3728fdWMDN1+5hsF0NgY5OeyK5BnG
RfkjvBtzWKCRWHVfOywbyuL39rlyTaC9L82ikqO3Xpu/HU6cyQG+2bOSIn+H
sE3A9WEq5/melPrX/10NwRfbdIaeagziv7Oq9iIKbBjcvtaEVy4XZK+KcbWH
DqHGUi3xUxML/tXvHSwnxMG7jwEfxBMHUNPBve3ZOc488Ad9FEnNhzts4vfv
YgMYJTl7dtqADQp7G2Xb3PNA925yVPYfTj75aM8fV8eG5i2/PoyvKIMY4bXV
g1tGkG+05dX6Cyxw7JxIXHhTCdULolIDcwOYMbzNdm6ZBftzGoi56tWw/H7L
3YRLvZixce/Kngw26Gqbu4mJ1wLv6CnhQKkhVLy0e9d0MAvEp774rPZsgBW/
V4dUw3eM+jrTP5XMBuG+G+Ere9sgeHRA5b/tPXggdOs1iUw2NBbXf1U83gXR
sq26KTHfcWqFIZOPiw2+2yoPTklPwNq6mTLjsVZUi1taYS/GgI2VL9R/fyRC
1/wl1VijJlS0dQ1YFUgDPUWbAuFCMiQQLH9wv2vE2ph4gZM1FLhlkldcOkoF
+2Objw5cbEYbd5U9Y1dI0Gr1bVBdnALVoYum47W1mKEfaWYRRgGtxBut6ivJ
GC58Kj+lNQ+D6OfChji8s9fBcwe9hYZDe//TOb03D7/fSL80tY0E/62TaBb5
RsOx0JmvertKMNN/hcm6GSI8c3btlthCwf7O83W+MTV45fsW4aJsCvzmD6Lo
rSLhhZHV/oodtVh8xtjqiSsNnFX0j5zmJuC9T+9OmifV4tY+t18u/+igOCtl
h7zjeHV/+MVTpTVo5Tvx9q0eE4r/1a9s2z2EtM+nHN/cbUT93urbfjdZ4AnH
fnHT+lDLN2jDzphaVHi42dtLmw0CuUc2hOb14oWpOWdKVAvG/OJTfLafDXv8
ug6YC/egW2TY0x/LLYjpdsk3m9mwzY3L/v7lLmzYppZ3vbMRnZzSNarMJuHF
1nElIrkDwyUKlOYdOzD0QnXhZtFJqNpS3CIf3Yw8Kc9T6gXbUb/qTP5rj0n4
6JNp0QhNqGAg6HPjYzc6PKimJchOQr76xsWzb+rQ2XrVjLpDG7YdpATcaZiE
IZFzM+8f12KtKOWK3ngXNhUdnRJ9MgnDlPoP7fY1qGXGmd4nPVi/0s7midQk
OHw+ktzFV4EKY7Or6ho7UCyNcU96YBKCW+pZ1v9K8ZK66vGV+t04+EPhrfbn
SZjaoLHAbV6Csze1V7wL6cGJP1c9nutNQsKbrw8zcwuxlWeRlLD1O1K35hh7
bJmEx/Zq78lhufjYRqZurWkrtrrKJwfKTYHp5QUl9u0iPASWUa+C2/F7SOm6
P/8m4Vmw3Yn/xNox0P1CTFPOV7jdbNyyUMKGk4vnj8fVvYEsC4cRBUoPGq1w
8D18bxJuqyZVVA4mgrELM/Ve/TdMXlVP+XJ0EjRyE5WMxBFFQlZHXt9Vjq/5
HPo1A6bg0MWQnMCXJSCWwD6sy+7BZ/6Mmd5jk+BZpxXU41EOCa4p3TsMOpFb
VMTD8+sk0KMCfh2xqgP7nmYeAc12FCfoEbLKJsFMyoU3/tdX2LRhiFVyvg1J
hI5/78rYQBTSvb3l9DD8Xt3zpXSxCq+4S7bF3WEBnXSP8i9oDF68F+9jy9dj
yaHi3nmO/0Zopkn5AAFeNR8/c2pFFZ6RwLkVC3T4XW0vmGVPAkdK6tvP78pQ
QsaaVnKLBhWa/Cl2Hyggp3XtxDqXUpQ9YO2f+5ACpbR2Ied2GuxyKpU2x3Ks
YD2I7iJz+KjBlxYYQYEVwvL93mFVaKf9veT9KQqnThZfmAUdfNz6rKTqqrB/
Vmd1ADcR1nR7i3ZsJmMo7Ymg2s0ylL3whVeijwr7z+5bX21Pw54BkSJCbw6+
yt2rdOMtCY4KRBh9MKPj4AM1I92D2diiK5zob0WEbWRWz4kkCnZ7bOLR4fjP
ncvSn2gOFKgt90hQbCMhJlmTB7nSsM/R7CX5BA2+HnkTe9SJhKz9NKszR0px
rOdNwcbbNPjzbELpURkB23fuE14cSEPy9dtONRzu3u10WOuVPQHflUsaGWSX
YnPD7UI6J/eq/vz8IsNpnOOXS943TItR4KFU5OBpJny97uZStG0EP7tG3nol
n4dnNhp2CVmyAGe2zhL0hvGi76M00SYOlyTIlCVy+nVD00LzVWs/uoFCxBxf
MSo97zs8a8IGa9hwa/MUJ5cEJM/dGy7C4/27RmO3T8InolzanZ3f8AG3w3+n
R2rxdOjri1q/Of4oHO22en03er+SCgt0QFzHu1L+Y+gk6HeGqhTztKH85dvJ
g4Xl2HsjoEZn1RRE1grc6Ce34DvVdb+LRBpQte0/6z2tk2Dfr7nj+60GDLDU
HQiXKMdWMy6+m/pTYE99XK/5tB7DdTceMjlTj7tLT4nvEJoCuTW0lJ07q/BL
brN23ZsaXHv+RfEryylYd8TiuFN+JT7p0vZZiGjCRQnVwVnZKWirU5bdLJuO
HQP24VfqG7HzRvOLsTtT8PY7n6y7bi4w8htexkiGIO8z0JKhT8G+MX5nGYNO
MJO971tC4vDUkPH8lygG0PgvfuI91gmpp3YVnp0Zx2HRP4ady3R4o3fq6jWr
LnikeDbo17lGjIqlzwfcmASRZVVrFfV+UFIc8+Z2qEa5Tc8PHdbj7JGZd3Da
63HodO3RvE3JR/Wdee80OH2MWF/bqj5PAensdeZ7zyej+8cnDZaHOfsw7Tf7
TpUOIQMeITp/0jDCjsSfEUOEexF7bm5lUkCfNmdyeSIXZ4NZv/YfogDBdVVs
uCIdGg7NtEoZ52PujY2GVzm+aHPQlFeL4zsVPsVW80LpGGdBMQ0XooJuocPH
p6k0PPbB1bG4LRhzRj3+19V5x9Xc/n/c3ishciOyZYZkveyZmS17ky237JmM
ipRZKgmp7Fl02ZFs2ilK+zRkRfid33m9zx/398/78fBwbud8xnVd79fr+byd
Pi0F9aqnH/y7MEP16NE+pH4NH/U9OOlZlwXJmDa80sRGddNUfkKH2Vah7dTF
Oxe3rDJNRd/Wphe+FKWqUb93hGUOPKWW5Dd662WRiq/j5p5qn5+iTlq59fvT
brmytN0f8KN9Og445R79G/NRpYUXG7W1jo1a1Kay0d64DGxVuVn/3kxSc3Nt
/5Tb7Ke6nc+P89Xu60MM2rx+YZegIvouaT93rIu6b3lo9ALtdd6pd5M6P61i
VM1VPv8ED/RSK47sfOg4XYPax98ubT3lnVLRhU279D2kfB90WBrfLAeJs40t
Nu1/pQ72mbv1Zo0A9aXMnIozb+Zg5YenGTuvRaiV8a/KPvjXR03bftFinPb6
qVDx9ErT5EfKV3m0MRhwTE0+XNq9jH0uXN2e5lftfFfl3nE7WedlT/XsW8X0
o1dz4XDGst/W13fU9kcTK3fZckUFFxsTMPt4LpJLZn81+HlSWVzfW+LT9BDV
+L1tmzrhuTh3wb5a2XlvYfPXv8WTBUnKusW/mXZbMhBcs/wkW+N3akunk/vu
v/2A0FejG5TSPjfimne+OMvwrbqS/syuwdUPcFQv6hhfTMeh7ckzllV4o+p8
Ppjx5sAHFFxoOiKtKB1Bt42CWw46r3Jz86Y+3BmsTs0rvLz5QS4+LTS/77r8
EV5kafb88zJY5Z/91W2UdS66LtyxsP6/ESjIndbwy99LqlUZ+3oX6uZigFGD
hLRTrxBj5VLoutlHPY+4e7jv7Rz8U/xI09Ud3sFrvY1H1K/z6lzQx4JAkxy0
OO3XbGevGJi/G/21yX4/lf/LcLHdNO367Y1pQN0hCVjjVcVn4tSz6ueLca2d
tL/j75uuH1PDkrDmXUWLFGcXNWZ3esu6PbMQ/ub55c0hH+HmXP1ZkGmg+nZr
/c/52uekTTevM4ZRKSjd6UTN0TXPqBW/ao726p6OLcNaBjvPykBsK4ulDcx3
qUsR271s7ZMR82Rw+VdhqdCUGXW8wsdt6uRoE/+ja7T/vXLA1LTcdIzeGHto
1MZjqtSaueu+lUvR/3m1rbTuz+N//ryayT8P/Z+Xz1VV2+s+F/rPlf9PZdpR
9/8J/f/nE/671BIX3b8LX+XfJd+D8nyj+x6g/x528XtT34/rvjfov7fm/J5V
OL9n6L9n+V1UP/4u0P8u8jsqP/6O0P+OlvzdVZk83e+OlvK7J/M6Ud95nSBP
rpPKobrrCvPzdNcVTsp1FcLrFnLdKv11+4HXLS7wulW75bo9wesWBrxu1Xe5
bgN4X6gpvC+gvy8KeB/hMO8jmMp9JPcdRvO+Q4jcd3KfIidAd59Cf5+W432N
47yvob+v5TkATz4HoH8OyHMDznxuQP/cMOJzBqZ8zkD/nJHnEuat1D2XoH8u
3eJzDNH9dM8x6J9j8tzDrxzdcw/d5bknz0k8jtQ9J6F/Tvbj8xaD+bzF/zxv
ETFU97yF/nkrz3NM5/Mc+uf5DD7P8d3G/P+f57ggz3N5X0A56t4X8Pnv+wKm
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
XM1CcjgxkBxOHBEOpzN5nihJnicGC8+zPnmeKEaeJ8rPIc/Tg7xQCC8UxsIL
7U1eKALIC8Va4YUeJY8UU8gjRRXhkdqRR4pA8kiRITxSX3JNMYFcUzgL19SK
HFTMIwcVR4SD2oM8VZiSp4r3wlPNJk8V/chTxTLhqWaQ14pn5LVCz2sdR14r
RpPXiu/CazUl9xWjyX3FeOG+licnFmHkxOKqcGILyZvFOvJm0V14s1XIm0Ud
8mZxX3iz1cithRm5tZgh3NpA8m9Rj/xbzBf+7Xnyb5FH/i06CP/2ITm66EmO
LrYJR3c1ubtwI3cXp4W7+w/5vShHfi+KNyO/N4v8XnwnvxerhN/bgRxgjCQH
GHoO8E5yg5UzucH4Ktzg2uQMqxByhqERzvAYconVVHKJoecSdyDfWAnfGHq+
cRH5xuou+caoJnzjH+N0/GS1mfxkQPjJK8lPVhbkJ+On8JPtyGFWwmGGnsNs
RG6zEm4zmgi3uTf5z2ox+c+YIPznHeQ/qynkP8NU+M/3yJdWseRL44/wpc+T
L62ekS+NHsKXziO/Wo0gvxp5/+VXqwLyq7Fc+NVrycdWlcnHxlbhY9cmH1s1
IB8bM4SPHUzOtjpLzjbKCWe7JnndyoG8buwSXvdR8rrVN/K60VF43SHkgauG
5IHjgfDADckDV27kgaOF8MDfkTeuhDeOjP/yxtVm8sZRUXjjseSZK+GZ47Hw
zBeTZ66qkmeOIcIzf0JeumpIXjraCy/dkLx05UdeOn4JL309eezqNHns8BYe
ewPy2JUteewoEB57e3LglXDgcVM48KXIgVenyIFHc+HA7ycHXlmSA48lwoF/
Qf68mkH+PPT8+e3kz6ut5M/DTvjzl8m3V8K3R0Ph2/uQb68KyLfHMOHbbyY/
X+WTn49aws/vTH6+SiQ/H62Fn29GPr9aTj4/woTPX5ip4/MrV/L5ESF8/qvk
/ytH8v/xy4H8/4bk/ytv8v+hEf7/aPoF1GH6BdBF/AIN6BdQZ+gXQI74BQ7T
X6Ce0l8AiL/gBf0FqiP9Bbgj/oI29COozvQj4Kn4Ec7Qj6Ci6UdAW/EjrKF/
QfWkf0H7PKF/4Rb9C2or/QtoJv6F7vQ+qO/0PsBavA9n6X1Q+fQ+oJd4HybQ
+6Cs6H3AD0d6H+zpoVCL6KFAffFQNKaHQi2lhwKh4qHoQA+FqkEPBf6Ih6IR
vRhqLr0YWC1ejDf0YqhYejGgxIuxi14M5UgvBjaIF8OYng61jp4OLBZPR116
OtQ3ejrgI56OQHo6VCA9Hbgjno7p9IYoDb0hGCXeEFt6Q9QNekPwU7wh3+kN
Ueb0hqC1eEM60WOixGOCK//1mCjxmEDvMalJj4nKoscETcVj8ppeFbjQq4Jd
4lVZT6+KGk+vChaIV+UPvSoqhV4V6L0qTel5wQh6XuAlnhd7el7QhJ4XxIjn
5Tw9L1hNzwv0npdIemcwn94ZrBLvzGF6Z7CD3hk0Fu9MZXpnkE7vDBzEO9OJ
HhyE0YMDJ/HgBNODgyR6cHBLPDhD6cGBeHBQQTw49enlgQ29PCgtXp779PIg
mV4erBYvz116eeBHLw98xcuzm54ghNIThNJO9ARNoicIM+gJQoR4gs7SEwTx
BEHvCXKgtwh96C3CBvEWraa3CDXpLcJH8RaVp7cI7+gtgpd4i87To4Sl9Chh
nXiUSn/XeZSwjB4l3BGP0g16lGBHjxJqi0dpAP1NqEl/E86Kv+ky/U2oSn8T
/MXfNIx+KHSgHwoDxQ+1nH4ogH4oWIkfqhL9UwinfwrjxT81nP4pXKV/Co/F
P/Wafivcpd8Kj8Rv9Zp+K8TRb4UZ4rfKoz8L8+jPgqH4s2zoz0Jp+rOwU/xZ
afRzoS/9XGgjfq4Sjjo/F77Tz4Uz4uf6Rv8X5tH/hQXi/zKk/wu/6f9CGfF/
baB3DH/oHcM88Y59bq/zjuEWvWMwEu9Y6g+ddwy96R1DqHjHouhBw0Z60NBS
PGh76UFDKD1osBUPWi960FCVHjQYiAftFL1sMKCXDV+v0MvmQy8bJtHLhjjx
sr2nlw136WVDvHjZhtMHB/HBIeK/Pjg0pA8OTuKDe0ffHC7RN4cp4pv7O1rn
m0MYfXPQ++Zu0WeHhvTZ4aj47HrRZ4dn9NmhkvjsXtCXB/HlIUR8efPoy4Mh
fXmoJr48f/r40Ig+PqT/18cH8fFB7+OzoQcQ1vQAIls8gOPpAUSRsc4DiB/i
AQykBxAP6QFEvngAW9E/iCP0D+KI+Adz6R+E+AexQvyDS+g3xBP6DVFF/IaO
9BviBv2GcBW/YRH9iRB/IkqKP3ES/YmwoD9Ru0+kP1H8jBA/I/R+xqr0M+I0
/YxoKn7GlfQ/atfZOv8jNov/MZT+R3Sm/xFB4n/cRr8kYuiXxF/xS7rRLwnx
S0Lvl+xJfyVa0F+JCPFXrqG/EmPor0RN8Veeox8Tr+nHxF7xY36iHxPD6MeE
g/gx/6V/E/Po38RZ8W/m07+JcvRvwkD8m3Pp8URPejwRKh7PCPpAcYo+ULwT
H2gt+kDRij5Q7X1LH2g9ekWRR68o5ohX9De9pVhPbylMxVuaQW8pzOktxXHx
lh6itxQr6S3FR/GWhtOXiuf0paKV+FIL6EvFTvpScVJ8qcPpY1Uz6WMFxMca
TB+rsqePFT7iY11K36u6S98rpovvdS59r6oefa+oL77XtfTMqpv0zOKyeGb9
6JlVfvTMYqt4ZlPpmVUv6ZlFBfHM+tJ7q6bTe4sO4r21pvdWlaP3FivEe2tN
760Kp/cWgeK9rUEPrxpMDy/Wioe3gB5eJR5eXBQPbxI9vOo3Pbz4Ih7eEvQC
q3R6gaH3Ap+nF1iF0QsMvRd4Nb3Aqhu9wMgXL3ALeopVf3qK4SKe4t70FCvx
FEPvKe5JT7EaRE8xVoqn+BF9ysqGPmXU+q9PWZ2gTxndxKfsRJ+yEp8y9D7l
CPqUVSf6lDFPfMp/W+h80CqUPmgUig96OH3QqgN90IgQH3QMfdCqFX3QsBYf
tDV90CqfPmh0FR/0VvqslfisofdZL6fPWonPGv/js1bis4beZz2KPmslPmvo
fdbi41aV6ONGW/Fxb6aPW92jjxt6H3cz+rhVAn3cuCA+7on0cau19HGjufi4
Q+gTV+ITh94nvp4+cXWMPnGEiU+8Kn3i6gd94vAXn/hg+sTVQ/rEUUd84tPo
Q1cf6EOHkfjQo+lDVyn0oWO7+NAf0Ieu1tGHDjvxoU+iD13doA8dDcWH/pie
d3WZnneUEc/7Cnre1Qh63hEunvdl9LyrO/S8I1E8773oeVdD6XnHffG8W9Dz
rjrS844Q8bwX0GuvjtNrjzvitY+j114No9ceeq/9GnrtVRN67TFfvPat6bVX
YfTa4/tBeu2D6LVXjvTaw0O89kaalGm+nsfVgq4n2ll/y0SphKMdR3b6gBkX
Qsul+Hgr29VT/QYHZmHp5A3bisol4X2LEmvfaHyU2zwPp91js5G3I//NyzMJ
mPKn11T/9r7q32KXTPbmZ6NVk9T88HZx+DSy3l5725NqefEy6ZGbNJiVUP2o
T0A0cj9Nnvzi+HEV+KqF02Ltfq3eiAVbVk5KRNDevMIqB7zV9o2Bg3v/q12/
Pd/p/qhFAoqCAkeeeumjWr8zaGVRQoPv1/6NbamJxan6GzstL6v9XRLHVvyx
RYOOv4wapvlFo8S5VU07D/FQczuHFzw2yMbbhSNudzz3HuXaWg2KuHVcje16
52TBwWzkz7tze9b5eLRon131H+3n5p0yP9HEUIOuCfb/5pyKxav4eZdP3fNR
S/4xeVLfQYMxsd1yHrtHwy75b+rBaUfV6vgiy8Y9szEx3PnnnIrvMeSK790u
Fz3UmPaV30RdyUbZKTk9m1jGwyDT2yTy13FVtsPSMXUba9Dqx3Ing2mx8L59
rHwfL2/VpV7X/mqPBo9HXR37cUM03s0oH1K46LDKW2oTvG9uNhq5XS5Xf2UC
ijWrqH6eP6qWpZr1DH6ZjQfLpp5xfRyHg77DmnjmeKg3s+L2X9Cu8196OFuc
NIpF/97Bsxo181JXb0QMHemqQfPSPR4lTI+Gy/tJtytPOqi+u6b9c2N3NiLH
zKrrnxaP3Sv8zLcdPKzmmBjOa5uZjelf1jf7PC0On7c8rpr0/Kiq+3nHqmX9
NHhYc//p769j0D+4xicH7fP/d87EzdOPaOD7yHd+497RiJvlPtn+mJvyKPnP
99UB2fhtn3W4w9x4/K1cqlK3ewfVkH3WE68W12C1X1rFIb9jkXRhiPerT4dV
rbY/9uy21iDB5Ou6Evti0HjxisW3Sx9TR233GX/01mCvcejzc/Wjkb/MdOLm
hp6qZLjXcf8MDUbVnPze1z8Snskj2qWXPKC8ssvmNtXuEzc/qhHRXruPKCoR
Uq2LobsavsRv3zwjDVp8ib3g7R2LoDrj7lQ1OaQau5buljpD++963H72vBEx
uFZrydayLY+oUw1WNjpwRoPhZl3THv2Mwtzinj432h1T+1Ozv03L0qDv03ve
xX0jcT3u3ozcHftVas+smAop2ehTzd2v16Y4JHas+MljwwGVY7Fh8qRWGry1
L7vo9+BYXE1+WjRppbuy/TDt67Kl2v2ySY8qftp9n5VNyz9v5x5SayqfsO6j
3bfOWruw8qLIKJR/uExzbfwR9ade5y73NRrcT4zO2HY4El8ajp9sU2efKj1/
WaMJRdn4EjZkWI06cdiWHZJdvXC/Ot3koDreQ4PlJs4zFxbG4FDFy6F9ow6o
ro06dKi3XrvfbO/eoFFUNKrOfLXY/7K7mvYiUT25roF566iQ2ZeiYHR/SaW/
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
uluye72Rs9Lh59Kw0Y3rKdiysHyBpuEYZbNkx5FQm3ScuftBY6+010l3ixNd
prZTu/tU+vt6Ujo0bc9Z3b6bAtOXPT63yuuASlGXiv+cqL2u+l96E3IvBX5T
6u07njYWR0tP7Xp1Qjomn++Q2+lBCnYn2FSz2jgXZ4xOHojV/j1VXq4YdUb7
94xZtLjb8D3LMPCBfauS09PRG8Wr7NFeV1eL/WMat8sOyw6X6GQ8X3v9+QSV
/HwxBRmHLtVuOmQtBte/09dkpfbvT/j0+O3JFMwzGrI5IHEj7BqMu9ZoSzpy
J6VY1nZLQe68HgnOF7dg7/z15/q6pmOgUVjn7ZtSkDnFZnLOl21olGl/6J72
Pi2YnG12Y24KHL8Yh/cY4ADlUrX9l9B0tMbwth0Gp+DgxteLy191xBrLmk+G
xKXjxp+mZ3s3TYHn9Nb344bvwasS9XctLkrH9r2D334qSsb5E2H7Mkyd8Q19
LZuYZqDbptC4+KfJqFpplpvjyX1otD2z6uaRGQhf1tVn4f5kzJvWa77rcleM
XmMS8HBHBgY9KPVw9NBkPBlvbu5zzQ2pz4eMW/0gA2nV0nwvffuI7KF2N3r8
PIj8+YaPnapnopZr+SKj3R9RM/BWxKiRR7BsSTeDY7aZ+GNjULVKuY9weXM1
ZMQgD6jWr+1nRGXi5t6WYQvmfsD/AeNjtLE=
    "]],
  Axes->True,
  AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
  AxesLabel->{None, None, None},
  BaseStyle->Specularity[
    GrayLevel[0.5], 30],
  BoxRatios->{1, 1, 0.4},
  BoxStyle->Dashing[{0, Small}],
  Boxed->{Left, Bottom, Back},
  DisplayFunction->Identity,
  FaceGridsStyle->Directive[
    GrayLevel[0.3, 1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0], 
      Opacity[0.33]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
    TraditionalForm],
  PlotRange->{{1., 82.}, {1., 81.}, {0, 13.5232}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->FrontEndValueCache[{Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}]& }, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {20., 
       FormBox["20", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {40., 
       FormBox["40", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {60., 
       FormBox["60", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {80., 
       FormBox["80", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {20., 
       FormBox["20", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {40., 
       FormBox["40", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {60., 
       FormBox["60", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {80., 
       FormBox["80", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {5., 
       FormBox[
        TagBox[
         InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {7.5, 
       FormBox[
        TagBox[
         InterpretationBox["\"7.5\"", 7.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {10., 
       FormBox[
        TagBox[
         InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {12.5, 
       FormBox[
        TagBox[
         InterpretationBox["\"12.5\"", 12.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}}}],
  ViewPoint->Top]], "Output",
 CellChangeTimes->{{3.7489371592438383`*^9, 3.748937164091798*^9}, 
   3.748937202892664*^9, 3.748937242313781*^9, {3.748937290085754*^9, 
   3.748937317070548*^9}, 3.748937348127986*^9, {3.7489374660637503`*^9, 
   3.748937561730761*^9}, {3.748937619084373*^9, 3.7489376925002117`*^9}, {
   3.748937802277656*^9, 3.748937845821941*^9}, 3.748937883387858*^9, 
   3.7489379402407084`*^9, 3.7489529435140343`*^9, 3.7489668506464663`*^9, 
   3.748966889909494*^9, 3.748967253739566*^9, 3.748967331559517*^9, 
   3.748968123780838*^9, 3.7489682048982983`*^9, 3.748968779980373*^9, 
   3.748969575509853*^9, 3.7494688344947147`*^9, 3.749642276282977*^9, 
   3.7497900314092035`*^9, 3.749790225639052*^9, 3.7497906535130863`*^9, 
   3.749790758693288*^9, 3.7497909637464366`*^9, 3.7497910798395624`*^9, 
   3.7497921625208087`*^9, 3.749792411868496*^9, 3.7497930073987603`*^9, 
   3.7497935346031113`*^9, 3.749793646629078*^9, 3.749793707009378*^9, 
   3.7497937665735826`*^9, 3.749800389010968*^9, 3.7498005322437344`*^9, 
   3.7498009117466707`*^9, 3.749801245719686*^9, 3.7498016371059237`*^9, 
   3.7498023934825425`*^9, 3.7498043064457254`*^9, 3.749806496127181*^9, 
   3.7498082653437743`*^9, 3.7498096595303016`*^9, 3.749810919440592*^9, 
   3.749811774447549*^9, 3.749813383320182*^9, 3.7498716139366236`*^9, 
   3.7498723003529673`*^9, 3.7498740739084396`*^9, 3.7498746997640247`*^9, 
   3.749875582598045*^9, 3.7498756906281567`*^9, 3.7498757754332514`*^9, 
   3.7498758300785685`*^9, 3.7498758852289357`*^9, 3.749876209350395*^9, 
   3.7498769511595316`*^9, 3.749884224137117*^9, 3.7498842816391535`*^9, 
   3.7498861763595476`*^9, 3.749886381071909*^9, 3.749886501790115*^9, 
   3.749886771915377*^9, 3.749886896231296*^9, 3.7498869547567244`*^9, 
   3.749887042676809*^9},ExpressionUUID->"f6d46012-429c-4b58-bb0a-\
c352fc29a989"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lineBarriers"], "Input",
 CellChangeTimes->{{3.7489379702384863`*^9, 
  3.7489379803920717`*^9}},ExpressionUUID->"196f6b89-61bd-44c5-bf37-\
b27a3e088a2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "50"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"81", ",", "50"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Text", "[", 
    RowBox[{"\<\"+5. \:041c\:041f\:0430\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "51"}], "}"}]}], "]"}], ",", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "32"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"81", ",", "32"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Text", "[", 
    RowBox[{"\<\"+5. \:041c\:041f\:0430\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "33"}], "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7489379680193*^9, 3.7489379807890863`*^9}, 
   3.748952943808311*^9, 3.74896685097198*^9, 3.748967257637772*^9, 
   3.748967332669004*^9, 3.74896812399541*^9, 3.748968205070216*^9, 
   3.748968780488576*^9, 3.7489695758173428`*^9, 3.7494688345047264`*^9, 
   3.7496422764238844`*^9, 3.7497900315092125`*^9, 3.7497902257430754`*^9, 
   3.7497906535640893`*^9, 3.749790758738285*^9, 3.7497909638644705`*^9, 
   3.749791079949603*^9, 3.7497921625828147`*^9, 3.7497924119605308`*^9, 
   3.7497930074987826`*^9, 3.7497935346571236`*^9, 3.749793646700081*^9, 
   3.749793707060376*^9, 3.749793766620606*^9, 3.7498003890649805`*^9, 
   3.7498005323169236`*^9, 3.7498009118286767`*^9, 3.7498012457927027`*^9, 
   3.7498016372319527`*^9, 3.7498023936205597`*^9, 3.74980430666978*^9, 
   3.7498064963275023`*^9, 3.749808265559824*^9, 3.749809659704343*^9, 
   3.7498109196426525`*^9, 3.7498117746415944`*^9, 3.7498133835382233`*^9, 
   3.749871614032632*^9, 3.7498723004569817`*^9, 3.749874074017457*^9, 
   3.7498746998860536`*^9, 3.749875582655058*^9, 3.7498756907421823`*^9, 
   3.7498757755577087`*^9, 3.7498758301806245`*^9, 3.7498758853359785`*^9, 
   3.749876209449419*^9, 3.7498769512575445`*^9, 3.749884224254133*^9, 
   3.7498842817391768`*^9, 3.749886176513618*^9, 3.749886381210946*^9, 
   3.7498865019041414`*^9, 3.7498867720704*^9, 3.749886896309314*^9, 
   3.749886954834756*^9, 
   3.749887042764829*^9},ExpressionUUID->"67787d11-a3a2-4e28-b6e0-\
162be2c98254"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"barriersPlots3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot3D", "[", 
      RowBox[{"opening", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
       RowBox[{"Mesh", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"line3DBarriers", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}]}], "}"}]}], 
       ",", 
       RowBox[{"MeshStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Dashed", ",", "White"}], "]"}]}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "line3DBarriers", "]"}], ",", "1"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7489380393713427`*^9, 3.7489380404916*^9}, {
  3.748938078302717*^9, 
  3.748938079004018*^9}},ExpressionUUID->"b181c613-018b-4d97-bbe8-\
2b8245b247f8"],

Cell[CellGroupData[{

Cell[BoxData["barriersPlots3D"], "Input",ExpressionUUID->"9c524b75-a9f4-4fb8-85ed-a42bf0284e10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
b95Fn6hzVC377vdXzKw3zXhU/NbpZ6xz4s8+Vue4uT/v7L9se83DH6lzoCz7
g53mZV9e1XhCvLf5l8EDt/1QnUNh2b6Tiidud/wHah+7ZR/njF0+/Yb/qn2w
lv3gPiePdx7V++gse37hzT+3/vie2odj2fdPXalzw/XvqnX8lv3lrD0WjF7w
tloHbNn/PmbhyJn7v6nWEVp2csXLvx6JvqHWIVn2s+mlj77vplfVOgbL/vGL
c355TPxf6jmoZf/+kMRL57/xgnqOYtmHXb3aaq+mnlHzsJY97ZJb71w19ria
x7Hsraavf+Hcax9Q40DLfm5++rHj/zlf3Ue6/y5nXLX2Oa/OUX1I3mdvyndf
a7e93QGXXOt6cMm1rgeXXOt6cMm1rgeXXNv2o5fcfOU7z65ivm4bP2eNx1c6
4x/GfeJLrffwjV89ZNwv/ovF7z0pc5PxgPiZ997z+itnGw+Kz79rwYx7DjEe
Er9mo2n/nPUj42Hx6pK7/emQtY1HxA9f7d5ZG7+98uB1VLzwXrndvd54THzT
Y5bb7E8HGY+LX3rOPeFrs8YT4hPXvXf0+S+2/dWcj559+iJ9foRtz/3dtPGP
puv957Z94MU//tVp36w0eJ0Rf+pfW0454TLjWfGFN+8fjm5sPCc+dm959kpv
TRu8zovvffTli6YcY7wgvtylMz87Lmi8KH7+Y3d+YV224uB1SfykK2PH3bKR
8bL46vve8cac6/RzTdue8fpB22+S1M9FbHvN71//9AJrhcHrmvh7Xx/6px1W
W37wui5+0zKP/Gz1N5cdvG6Iz06//9wRNy8zeN0U32ul9T+tnbb04LUlHjjs
lIMe2W2qvDafL33y5Jvvmzb4PXYmPdW/4B675OD1iHh7t+3uXeOsxQf1k/7f
PV85bt5n3xu8HhX/db/t7LLo21w5k77Kl8V7Dn3kH4O8jYlP+f8fDrjkWteD
m1y7P9+cy7Z9MBtd23zdNl7+4U7n7Ro2Pvn3sWVk7k6dFY37xXed/UzjsM/W
GnhAfMHCGZf99injQfG3Tr9+2QOuNh4S/90WyZtuPNx4WLyw0y3jy44aj4jn
L76x9NlixqPijeQTZ79+65oDj4l/sXCJjzc80Hhc/JI9VrhxsXWNJ8QX/2bH
B058RJ3T5Hq/jT89S53z4vpP+xemaeqcCNfXOfjShYdds8bAM+KLtt3m7NNG
jWfFV3NvZ1Z+bPWB58R//NN7v75+R+N58bV+GrpulRdXG3hB/Iyptz/xtx2N
F8WLVzW33fHvav2f69tOXWVOzlLrh1w/9vvrbH/HH1YdeEX8hGf3nLLf94xX
xZ/9/Ki9/rKVuQ7XxLf75o30zueb62ddfO3zbvlg+xfUvIz5cwJqXOf6q4E1
H3jNMtc9S/ym/7x+xfLbm+uYLf7xU3dsM3WbFeW1+bxB5O7EC3FzXRoRX+Hc
3MU3HrLc4PWkT3d/PVd/zFw3RsWfe/oXB3aeMNeBSb9m34/P/ai56Lu5diDX
2k2uh+rBpV+P2H9Y7fhLbzgwYr4uP9/WwR19s/Y37hPv7Dxy9nV7Gp/8+9jZ
vY09cwfjAfHlN7z+vPe6xoPi9+255tabpo2HxJ9zf01+ETAeFr99efcv+qN1
Bq8j4if43d/ovxuPiq+f8V0dutJ4THzKFZue+9xs43HxflyOmG48IX73n9tn
LRcxnhQ/aOTnD537H31O04i9640nXhm7WZ/zMmL/9oNT97rgKH1OxIh92UO7
7PLhiN5nPmJ/ueiEZZZaTO9THbEfbh+5/h4/N9fVvPjEsOA9c30riPf/Wb7Y
3nhRfN0NT79p3b+Y61hJ/KIN35g+Y2XjZfHADTst+9puev2Q++evvOih/1xh
rktV8TsPfO/lU14x15+aeGmzn93/iN94XfyAky5Z4cdpc/1piJ+4rntHY+t5
mRE7ctWOjfUb5npiia+x3Esbnhw21xNb/PLgG/uNvjzZb4z3L8/TZq0kr83n
Snzmpe/ebq4Dk35t+dzPn5xh7kNGxf+7wZS/5uKD+wdn0u/fyb1D2e/7g9dj
4q99sPZj++08GCc6kz7lOx8tb3fApV+P2P9c48iZ2dPlfHH5Ofqj0wPOMe4T
f2PRFf997DfG/eIv3eYG72jjAfHTPlly59/tYzwo/tldu135k62Mh8TdwdfL
bxaMh8Wfn3fMkQtXMh4R3+H9i/8UfnfdgUfFF/37idP/dpfxmPimtz3z+l9P
Mx4Xf+Hgi+b/aFfjCfH6cedtcFDKeFL8l3c8eFH7k8H3If16xL5xbbcD3GI8
LR6duKE0nhFfdqnR652K8az480uF58390FxPcuKtVZ+46eErjOfF7T+8eNvy
M4wXxB+b8sJiU5c2XhT/YuYx7+95g1p/77rz84PeenBbtX7X9Yn7jXfN9aQi
PvH7ubbxqvhzt5xzWbVlric18XmrT/t0ux3MdaMuftWh6354/87quYjrbtc5
9c4tzHWjKT6jP9GTNNcHS3z2our+j/57crxn/Ht77fXMDrMH1wFn0ifuV181
9w8j4hO34UtN/h7Lz3XevGdTT5hxyqj4T04tvLXODoPxhTPpXyz92Antx5ca
1I+JL9PnZ77+bq4dyLV2B1z69ah91oIzTl5hBzlfXL5fN+1bpxP6/eBH7Ydn
927/eUO/n/So3b8r+sPa+v1oR+30gvVXWGZl/X6Wo/bG9y/VOOfj9QavQ+LL
RONHnfCM8bD4nW6M/nyD8Yi4vdLMux8/3nhUfLvKjfcfvJPxmPj2x5afundD
43Hxo06Yv/fUz/U5xaP2Vq9ccs49d+hzTkft2y5YfaPnj9HnJI7am5Tmjvyk
rc9ZG7X3zTs32Yvpc5pG7Xe+WGLBzAXmupEV/9erR825eH/jOfHLDrr267+t
Yzwvvlj/BvRR8/dSEN9wLPT2vw42XhSfuJ9Z3XhJvDvr8xXevMlcB8ris1b5
5Ma7NzNeET/hw9JF/pf1ukD359rI/YffW68rGrXjKywz79JnzHWgLj524Hmd
HR4014GG+LP3PPDV8peY60BT/NbCtVsfvfvkfKvxjU+dvvDdJcx1wBZ/PXLb
SjccNbgfcCZ944lfCNP3R8R/dmpw8W0eHeTdmXT3t3/N8pyV5LX8XE821zzp
GdPnJj3zZ/+rF7bM/MCY+MWzjz5+5cKgjzuT/tmVp0+9fSuTz5b4lP//4YBL
vx61+8PWxZZZ33xdvq+7jnUvZNcb94k/tY37L9Y1Pvlz/HzhDdt/fJjxgPh+
09zONmI8KL7WZf/upSzjIfEt+jcQ04yHxSf6+0fqfbZc/+UW4+c5f1Xv0+O6
m/Yf7H6Wep8P1/vfzkW7q/cJcP2g/g1lSp0z7vpm/QvHh+Y6kBSfuF7NM54S
f3Gz35y57yzjafHD3oxlfEnjGfGJ6eGX1flNruf6H6eq819cP+Dq45/d01bn
R7i+y7MXP7zkmybvBfHTNp1/14ITjBfFR3/y2sLID4yXxLMnfXnnHXdHBl4W
3/iRtfZcYhvjFfHV79gxPPKyyXtVfOL3eTfjNfHX1ncD8KLJe118m7NPO3rf
zYw3xHdbMvHKi/9jrgNN8W/7hbkOWOJX7HX05YsunJyHNT4xn7b4IO/OpP9g
zirPPFoy9/8j4otdsHbHt5Hp75Pen76d/dxk3zL+p7OOvOGRDafJa/O5MG+f
azaaZuYJx8QfuH/7fzx+4mC+zpn0/nCnteCL7+ZarhODDwdc+vWYvfFbi+dX
LG5gvi7//yM/uHbzvc9WuXY91G/k15o+5xfvTzOftoR+n/gx++XDA3/sztTv
Mz1mP3lo/xddv0/tmH1Af4Dk1+9zOWZvcunSnfWeNN9P5Ls+z3hU/L4Nqqc8
NNt4THyJe0/KHLKp8bh4/+7kipWMJ8R3X+1f2636tD5/fPD3doY+v3js29/z
LfT5p2N2f1pxO58+P3HMPrw/gbXA5D0r/pODN1trlb2M58Qn5mcCxvPirf4D
wvn6XImxwf2Y3pc+Zn963xFPPviRyrXrM7+64O4j5xovi5/nxO46dlXjFfE/
/uKaacnzI4PXVfElf3H62PEh4zXx/foPTn5r8l4XP2Ps+H3eWKRy3f/+d3s1
+c72xpvic5d179y3NHm3xNdI/PXzcxaa/m6Lfzz/n7/+ar3J+Vnjf7vwotlH
b2zu50fEb/nRuhueXpocNxr/2WJn+9Z4wdy3j4pfXbHT3Y0GfdyZ9F89uvc7
01aezIn53H7/9tPf+Yfpl5M+MS6b+43q1+brgw8HXPr12LfzqwvUfbjr4/1/
yNdN3if//6N/2+PJN5ZWuXb9OvcqcMgMUx8Qv+aLGT+99yiVa9eP3eHxv7zy
kcp13x/Y6s7Lj1G5dv37U3+99q4nqve/dP3d5W5Ln/VD9f55ru8Z2efQw9dT
77/l+hG/3GiTS99SuXZ94jnX9SrXrveHreceaDwpvmV/AiJjPCU+8ffzlsq1
668U3cRfqHLt+svLnHrF0XIdyIr/8R87H7zZ1yrXrn/8rBvsS1WuXZ/ZfzA8
brwg/oNPznz+1DdUrl3vD1Num632q7vev4zdtKLa7+p6f9r4/nNVrl3fes5z
y5bCxqvio2PfLL7qOZGB18SXen+V3ubLGq+L/7Q/8Jhl8t4Qf+vB/zlsrYdV
rl1/+o5tpq6yqnFLfOK5ycWmj9vif1xu5Ve+fFfl2vUbt3cTv7S5bx8Rn5hf
fU/l2vWX5n+6/wO/NfNyo+L3HLLLU8e/rHLt+rnur9Ws+1WuXZ+Yz6wsLa/N
54n5kzdNf22JP3nj8f976RGPDHLb+u5/Jx+T9++PHvfYCy8t8wPzdfnzNtr3
99/7y3q6X7fspXb+3SYrJ00/84unTr7ws8weul+37B9/PfbFu1eZvAfFJ+ZR
H9D9umX/Jt5PqqkPi9/9cXzGSXfp97Vt2W+c0P8P9Ptitr7tU4fr99Vr2ev+
sJ9s/b5cLfuUGe43upx+X5/Wt/cPC1WuXT90YiJA5dr1i57Kv1duG0+Ln32W
+/G57tct+70H7h695gp9XmrL/nRJ9y96a33eYsueuL36Uvfrwd/D+SrXrse2
XOL3p1SNF8Un7iv+rs+haNnF+q3Tz5ip97G37IXrfxB98y3dr1v2jMb6t+63
j8q163v+9t0jrdcig9c18Yn5tK2M18XPvX3qr3w3q1y7vtbmxdeWXsF4U7z3
+fi8zbZVuXb9kB8u9fY3IdPHbfFV5uRuP3vXQR93Jv3wV1dY8vwjVK5d3/G6
2985f4YZj0/69c7U525ZpHLt+kQexyfHn8YP3PXwu6bJeoAx8ZP3Hru3/I3K
tevWfonpM6/+nrw2n/ccPfWeU2Y9/91cy9fNx/vy9e1XvenvU14w/+6mX7fs
L6/472Ob3mV+v33iq/cHwC/r8XXLfrOX+madNU19QLw/jfTatbpft76dnznT
5Dck/m1/0f26ZfeHg8+uZuojk39+/xf0Tt2vW/Yzj3665SuX6H7dGoyvVa5d
3+7B7D3XpVSuXZ+Y/39X92s3L6/+8vxHrtT9umVfkhwLvb2LyrXrT/9+/8bS
qxrPiE/cF/1V9+uW/dKG7oXyAJVr1yfWCQTVOYyu/2eH0ea/5+t+7V5vv1nn
q0+2Vrl2/fQnpu4ZeUf365Ydnf/lnI+O0P269e191OJqf7vrG1+1zgEn/Ur3
65Z98FdHP3/tV5GB18QnrvN7G6+LH7Ts/Tu996ju1y17k7nRw1dbT+Xa9Rk7
LDf3iH10vx58P22V6/6/15fTrf1+rXLt+m9mX3DAyxfqft2yy7d98vApjsq1
62v/6u0tbl7LzLONir99jTsg2Ufl2vXQ+5/PPGZzlWvX3UH00htYg/k0Z9LX
P+6WFey3VK5dn79af2HQi6pfQ66ntKFft6Fft6Fft6Fft6Fft6Fft6Fft6Ff
t6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Ff
t6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Ff
t6Fft6FftwefzYfp120YX7dhfN2G8XUbxtdtGF+3YXzdhvF1G8bXbRhft2F8
3YbxdRvG120YX7dhfN2G8XUbxtdtGF+3YXzdhvF1G8bXbRhft2F83YbxdRvG
120YX7dhfN2G8XUbxtdtGF+3YXzdhvF1G8bXbRhft2F83YbxdRvG120YX7dh
fN2G8XUbxteQ6ykdmA/vwHx4B+bDOzAf3oH58A7Mh3dgPrwD8+EdmA/vwHx4
B+bDOzAf3oH58A7Mh3dgPrwD8+EdmA/vwHx4B+bDOzAf3oH58A7Mh3dgPrwD
8+EdmA/vwHx4B+bDOzAf3oH58A7Mh3dgPrwD8+EdmA/vwHx4B+bDOzAf3oH5
8A7Mh3dgPrwz+Dz4cMClX3fg+XUHnl934Pl1B55fd+D5dQeeX3fg+XUHnl93
4Pl1B55fd+D5dQeeX3fg+XUHnl934Pl1B55fd+D5dQeeX3fg+XUHnl934Pl1
B55fd+D5dQeeX3fg+XUHnl934Pl1B55fd+D5dQeeX3fg+XUHnl934Pl1B55f
d+D5dQeeX3fg+XUHnl934Pk15Fq79OsurDfrwnqzLqw368J6sy6sN+vCerMu
rDfrwnqzLqw368J6sy6sN+vCerMurDfrwnqzLqw368J6sy6sN+vCerMurDfr
wnqzLqw368J6sy6sN+vCerMurDfrwnqzLqw368J6sy6sN+vCerMurDfrwnqz
Lqw368J6sy6sN+vCerMurDfrwnqzLqw36w4+Dz4ccOnXXVgf3oX14V1YH96F
9eFdWB/ehfXhXVgf3oX14V1YH96F9eFdWB/ehfXhXVgf3oX14V1YH96F9eFd
WB/ehfXhXVgf3oX14V1YH96F9eFdWB/ehfXhXVgf3oX14V1YH96F9eFdWB/e
hfXhXVgf3oX14V1YH96F9eFdWB/ehfXhXVgf3oX14TqnLW93wKVf92A/Vw/2
c/VgP1cP9nP1YD9XD/Zz9WA/Vw/2c/VgP1cP9nP1YD9XD/Zz9WA/Vw/2c/Vg
P1cP9nP1YD9XD/Zz9WA/Vw/2c/VgP1cP9nP1YD9XD/Zz9WA/Vw/2c/VgP1cP
9nP1YD9XD/Zz9WA/Vw/2c/VgP1cP9nP1YD9XD/Zz9WA/Vw/2c/UGn81Hy9sd
cOnXPdh/3YP91z3Yf92D/dc92H/dg/3XPdh/3YP91z3Yf92D/dc92H/dg/3X
Pdh/3YP91z3Yf92D/dc92H/dg/3XPdh/3YP91z3Yf92D/dc92H/dg/3XPdh/
3YP91z3Yf92D/dc92H/dg/3XPdh/3YP91z3Yf92D/dc92H/dg/3XPdh/rXMK
Lv0acj1Ub/r1OJyXMg7npYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7n
pYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7n
pYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7n
pYzDeSnjcF7KOJyXMj74PPhwwKVf63pw6dfj3uebue55vpnrnuebue55vpnr
nuebue55vpnrnuebue55vpnrnueb9f98r/PN+j+v1/lmrnueb+a65/lmrnue
b+a65/lmrnueb+a65/lmrnueb+a65/lmrnueb+a65/lmrnueb+a65/lmrnue
b+a65/lmrnueb+a65/lmrnueb9b/d/E638zRv88WuO3tDrj0a10PLv1a14NL
v4ZcD9W3vN0Bl379Q+WmX2v3gfvBA+BB8BB4GDwCHgWPgcfBE+BJ8BR4GjwD
ngXPgefBC+BF8BJ4GbwCXgWvgdfBG+BNcAvc9nYHXPq1rgeXfq3rwaVf63pw
6de6Hlz6NeR6yH3gfvAAeBA8BB4Gj4BHwWPgcfAEeBI8BZ4Gz4BnwXPgefAC
eBG8BF4Gr4BXwWvgdfAGeBPcAre93QGXfg25HqofhXpw6deQ66H6lrc74NKv
N1Zu+rV2H7gfPAAeBA+Bh8Ej4FHwGHgcPAGeBE+Bp8Ez4FnwHHgevABeBC+B
l8Er4FXwGngdvAHeBLfAbW93wKVf63pw6de6Hlz6ta4Hl36t68GlX0Ouh9wH
7gcPgAfBQ+Bh8Ah4FDwGHgdPgCfBU+Bp8Ax4FjwHngcvgBfBS+Bl8Ap4FbwG
XgdvgDfBLXDb2x1w6deQ66H6UagHl34NuR6qb3m7Ay79ehPlpl9r94H7wQPg
QfAQeBg8Ah4Fj4HHwRPgSfAUeBo8A54Fz4HnwQvgRfASeBm8Al4Fr4HXwRvg
TXAL3PZ2B1z6ta4Hl36t68GlX+t6cOnXuh5c+jXkesh94H7wAHgQPAQeBo+A
R8Fj4HHwBHgSPAWeBs+AZ8Fz4HnwAngRvAReBq+AV8Fr4HXwBngT3AK3vd0B
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
     
     "], {{{}, {}, {}, {}, {}}, {{
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0zdMUGEYBdCPYgXsFCvFDrgpboKb4obgphgXwUEjuAm4CW6Cm+Am4Ca4
CW6Cm4KdYgfsgFgANw+Jw0le8vKS9997/9xT58rOJkTEDIksPOdzlDraecQc
OV4epoZW+pgkw4fFVNFMD2OkJkXs4wSNdDFMYnJEAeXU08EA8+Quiiilljb6
mSJzcUQJ1bTQyzhpSyKKqKSJbkZIWhpRSAUNdDLIX/KWRRzhAjd4wDRZyyMO
coZr3GOCFSkR+znJFe4wSnJqxB6OcYlbPOYJT3nGc17wkiGGGWGUV7zmDW95
x3s+MMY4E3zkE5/5wle+8Z1JppjmBzP85Be/+cMsc8zzl0E6aaCCQpIW/suZ
ummikiLSGJdBLy1UU0ImUzLrp41aSsllXsYDdFBPOQUkMqybLho5wT5SGdNl
D81UUUwGk7rvo5UaDpPDnK08op06jpJPAkM2dpvLHGcvKXywybtc5TQHSOe7
Dd/nOuc5RDazNv+Qm1ykjN3sYic72M42tpJH7sI9IZstbGYTG9nAerLIJIN0
1rGWNaxmFStZQRqqCTWEyEO8IcYQWYgnRBGOHEn/7+8/G8F9dw==
          "]]}}, {
        {GrayLevel[1], Thickness[Large], Dashing[{Small, Small}], 
         Line3DBox[{2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 
          2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 
          2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 
          2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 
          2050}]}}, {}, {}, {}}},
     VertexNormals->CompressedData["
1:eJzs2Wk0leHXMHASaTYPGaJZpiJTyY4MSSMJkWggEcqQCMmUoSjJmCnKPM/T
ZZ7neXYcjnOckaiU1Hve4ev/w7PW8671fDi+WOu37nXd973va+99bcTvOug/
2MLExPRrFxMTC9N/+lkGhjOc4QxnOMMZznCGM5zhDGc4wxnOcIYznOEMZzjD
Gc5whjOc4QxnOMMZznCGM5zhDGc4wxnOcIYznOEMZzjDGc5whjOc4QxnOMMZ
znCGM5zhDGc4wxnOcIYznOEMZzjDGc5whjOc4QxnOMMZznCGM5zhDGc4wxnO
cIYznOEMZzjDGc5whjOc4QxnOMMZznCGM5zhDGc4w/8n+MkV3pSEeDV4l9dl
uL59AbH8sM2f+0YALc/xikuSlyFjz5LZY98Z9DvONvWPGBlwFzKvDXEYA994
eVif3Qziaw/8LniUDDlYy1TmBxbg2jp+UPziDOp1M8U5nCADk0vN4cnH92Fn
RD//itAMuj1XbtquSoa0rXyffaQewnqleH0ydhplSH6s/K1Hhm2Re16fKbSF
uyYHma0SptHSjrRbc7fJ4JMtE3CcywHmVc+oy1+dRqiXWd76KRkO3+tzMpN6
ApXWrgcb1qZQOWLC+gSRIemRodPrzqcgcmTo3vu3U+jhn46nJz6ToY9HaQD/
xBm8sr2CRoSmUEdEVIcXIgP5gI8X/0FXoEau3XSMm0Q7A1gl/WbIsHc5MFiF
+Aw+zFjLfd85iTT2jUybM1Gg6/qxY596n8Or1LOrr20n0Jq5ELfKYQqU8JVW
FS57wPCfR5BaNo7mHss7X71MARGzSxFpfV5w97hhcDBpDKWmTdWpPKdAPw71
d8i/hAZvlz60dQwl/BMUXk2nwHKhX9IZSx8Q6nWbPc46ivgz8rQeTlKAJmr4
YKrqFRiGeJGdccMoubmMU4uTCmvP9fevqPnB38Y59/jEITSgFSUWfZEKnyz0
vIDiD9MZb03YpQeRTVNu3OFAKihqNu5eag+E8PY3T08H9KPKH8HHjFqoEPBm
9nTpcBDofueR/6bVi9Rqkoh7t9HA30amOXlHKPzZOvJ85XsHahBt6LfXoYF0
jO/g0LW3oJohzM6xtwXZZafsC/CjgcrC8iWBE+Fgdl5Wc/VtHWKSydl/oJIG
uYPByR9yw4GQLeE9faAEHSPxFC1jaaBmYc3Wc/4tRFy0pqKDKeh1Qva5H79o
sG5yIy984g5cedRQPDrhgJSW78qQ/9H+x+XR/zT/YMZjJSl7CS4eWbNL46Ei
7tSyazNDw3BAXPvfAfc74L+xIe1rTUHKcz6OXTAOT8dCl0NPOECubljP8j0K
aixy2Xvi2jjkEN+eNY1yhTKVS/fO36ag5RVaQpv9OAxNHLGR2+EJyR+mX6cb
UFCYZm3X29hxMC5QNufz8YHDRnd4FHUoKPOoXdzQwDi0izhm6V30g43Au4Zr
ShRU+uoqho9/An6nRq5hKAHQJRqfPnWYgu44f/rMYj0Bd59HdbW7BUGo2r70
EQ4KqqPs5fRvmIAyw4fs6T9CQEXM1bN8nYwGeVwPVEtMQuG9HRr1rvT982xE
TmuajILPhmUzfZoEanj6P8tX4ZBkVK18pJaMXrFJD3wXnoI8sULB2JF3IK1m
PkGOJSNu+6Yl18wpUD6VWY6HCHihjpvZ7kRGQyxXODK1p+H6Fttgl64PUKg6
fbVFi4zarTR+bl2dhhUm+Za6go8QfV7wnAQXGTX/BTP3ghnQ1JaREnOIhvtp
nzmujZAQDcXrng+chdU7sfe09sTC08ddImfekxDaoNHIyhgwLPy2ZZtQPLRE
PIpL0ySh3yyNV1QqMBDp7rTB5pIAd+evBBwhEZE4T0nPqPYcNLa8nSgOTwJL
6f2acr5EFDh+Rytyfg5mpzR/HuJLgcBqu8e124nIM1yCS+EdFtbNuJ26+j+D
W/ejsEMeS+hjrWzM/evz8JC3OKa3LQ0qpxzeiA8SkEGcHrPn4QU4coE3UvrX
V0j0Co3esZuACl5aXN+5BwcfXjBniF/IBKSceMT7EB5R+VN6tu5YhG42kQMs
etlw99ohe03+RVSz2fL8OS8elAv+KFx0yAZVa9VHu4kLSPhD91DAUQIMcWcM
+KQngyamecOlZB5lsktPZMguwejfmp/fXV9Dq3POT8Qzj3r9vtrF5C3BtL/z
TzWqH1hoNuioTWCRRFxPxsTEEqR5LKwORAWBgpIV8VYSFmWdXRSy3UoEC1ul
ur6qcFDzqokauYZFRC7LzzyqRHibHJCgcDkaeveGl1QNzaGQ1UcXP4QRYUnf
juLllAa5GkGk3aMYRD0pM2svTYJVofNntdmrYEJyL9Ozz6Noe9FDkn0IBRZ+
+ZJT8nJgVHeLn3BSLapmXkjXLfv/X5eCFpRuYIdvwKRH6tsj1RQUl2kVff/L
KNRNP7YvHraGS0O/d0cdpKKjRbHMiT7D4OKLVWKJfQaII8rH/wAVVZzcqc4c
OAwEFq6Hf/f7gI+d0fSAGL0+pNfsjg8bBvHG8uJD//zBwDbnsq8oFR0r0F22
jhuGbvRCK9g9GJJ9emVThKhIr3+buUzmMIiI7QufinkLx5uKAk8JUJHDVv6r
41XD0NwxJmun9A5++57erkGvP5Vc9VqqfcPQUBTt7r01Al43pNh376UixQKd
GA38MJDu++GDqz/AdxkcbnwHFSnpfq3qYxoBvnsuRSIPP8IA3xjOmpWKuP4Y
6I4Ij8BFG2vzqt3RoO7StNv1HwWducmVp3dmBNo5ZFU1SmLAM6zPkPkXBeF0
uRalzUagJfZRav+DOGhSyXLZ+o2C/m4KvPf1HoGlKcLDmqOfQLzC7ps7kYJI
/VEnL6aNwL4sHeFW5kSwtthctcBS0Grofhv37hE4N2lxT98tCc7Of/xcPk5B
EZu/+9d/0u9Lvpe93yYZ+k0Tx6/2UdDBkJbexcOj8K4y/7ercwqcY37nz9ZC
r6tHdWseGY1CZb54wb/oz1Apm1c4Uklfnzg04Bk6Cg8PJrAcGk+FB4EsSum5
FMSGPIbuN4+C1peV5FXFL7CVPzrbNJmC7GqEY19uGQOLD7s2L5d8hUuZt452
vqegwa3C8ec1x8BjNF16h2EGgGFkfusrCtrposinHTIGPbkhazzcWeBlf+4N
3xMKqrmU6WwyNgZlNSLmj+ayIY+wyWtFr/NfAg9xTkmNAwrUTtaIywXxi2ej
DtLrebcCgpKQcXiyIXe7kZYH4XdVLyxJ0Z/zGouU+p9xcAKc10e1fDjiJM/2
cwcFPT0/2bIRNgGBFXeqGuTz4SgWvU4eJaP5j+dob+wmYZHjlpS2SiF86fzj
mvKWjI6/rZwGvynYeJEgI0Qugc5d2c/x0mR01ou7rGNwGtSH23TEqFWgpyGn
4ZhOQiY6udmqdrPw7PefTR2ZRmBVPyVcOk9Etx92THFlY2Cs67T9zXvdcOLb
86n4vCU0thZiJPVpDrpqEyTsWsZh9nerRH8OHl2W/Hnb8ewcVM2Yc488nAGm
NaSqdmsG/TgR9edNGR66/m+eg8Dv/5P3/+35vlnyVoBJ+j4oLF0+JihPQhh+
/Wv+kxjQyf/VOpbgBJlE5snZJBJKzd7yZsthDLBK3GeK/eoHZVmxTzYSSKgW
n/sy7igGnnY/GGpaewMHE9hK/sWSkORbbqOX0hioFauUCbSPANMwV56FSPo6
3K0/WRUwUD1dzTbmHAUXhbe9OhFGQqI/dmfwAAYObgp4NJ2OA841Tv3TgSS0
t0V8G78eBgTYPiU7liUAKTbiO9aThJ446SbpmmBApsH1yBBzMizcLDqi50RC
BzmLAuxsMFD+CTPtHJECMrfMXz22JiHDhE9Jvh4YUDr60vK3QCpk2ze/uHGL
hNLmkk44hmEgu0Lmi1d0GhwVC+Lb0COhS0vbDKTSMOCtqvMdy/8VFngih41V
SUi2csuekmoMkJY8S99+SodVWf039yVJ6LXxRPXWEQxI+Ab7F8hkgkWZyuge
QRLCp9y9I7pCj6dJmPfVviyIYeuYv8BKQr9crgox75mDjfUIfk/fHJCcNXnx
k0ZEVSM/+Bul5sDAgvQhVTcP5BrNVwbHiEhtVD6y8vIcDL9QvW8SnQ86mc0H
kxERPb00ocX5ZA5s3GbifycWwO2qKm7JVCLqiE91w32cg3c90Q4qqBAeCP26
ezKAiIpUokUs0Bxc57wVsONXEbx7mlBx9wER3WF3CqkizgEm3LvY5loJzBLD
O66rExHnrbWoK4JY8AziboS2UniiTuh3ESSiLcW2u17rYWF64/6X7XfLwX80
jJWHsoROcykncbzCgobn/gYRkUp4P8XiwF21hK67dGqy1mKB79K/noM/qsAK
eXZF+SyhyfmIn87M87D8TtI2jFIDydWfjhw9u4TsIp0FFa7Ng2iJoY07Rx1c
yR9YYMMT0C+zK5dJ+fPQGhYxctWvHli3xozJOBPQlziu18GSC8DRwFNFGGqE
qimhivQpPBpw/XaooHoB2Hf9yz17vRV0DWzj1ATxKNXpYrT3bRxg5BpPizl1
gUK4REGt0CLac87WPZdlETKfagh67x6Ar49jNEJ6F9BQugwSfr8IWcdpuxLb
R6HBh1wdcmQeDUhEFmwvXYQ1yQrBvuZZOPVygth8aw599OklvM3HgU1dalFI
5wLoNl65+PH0HEqxaTxGOz4Hnko8TO+npiHiekWgoscwupG+3TlZlvjfltcq
4sJzrqviyED/1xk3BwIKdJR9bpuxAMc9BeIS972E1znLTS+WCWiPc+hqyK4F
WBzge23pGgwv4F3LLgIBhQz+LLnJtwDky9/tVzY/wP6Gu28nFglI2Y8IknQ/
tiPn07hnLBSfctJWmSEg9ZpFpdP76ee3tM5I0YtJsP/aA787IwSkEax6Nu/I
AlgFVQfEjaaAGwiHZncQ0KPV7M1xuQWQCM/f8sMiDVauHL3WV0NA1dJFRO5z
C3BKvDLaJPcrRCybNtzOJSCKuKqZ0bUFePVq6sAGIQMEVK27NT8RUKVeebLh
3QWI+jRoN7YjG+RSp/kkggnIsn+rhK/rAjTtXcYbH8qFbgeBp2ouBGQd373g
H0pff/7ev7si+XC3SFjczpyAbtYpb9ikLkDiS/Z+U8kCmOdRqMzSIqAbERwT
wrX097JbKJuAQmjh8xzGHyegOrk8Quz4AsRZ2bNP3S4Co7jCEeY99DjfLn6y
9GMBXtclOha9Lgbqvhc8g1Q8ivkQy8TJh4NeFiq/cmMJjOmsX9rdjUfxGXd2
nFfCwQG+mG3dXGUgwSR//n46Hq19M9kffwsHTBVuFQovysGF3+m170s8Ik+H
7j79EgctIs9ddbdWwoT3vdrthnik5/8+VzUdB43ngk99y6uCioZfTV6H8Yi1
Q4GpZwAHu6iiRvp+NdDlIPZAfWURMXU+/36CaRFC/8jclA9EIPfm1qBH2SL6
R/LvbTqxCGSLO66ms3WwNf/6sa3PFlHXe64OkQeLoDj6/EygYAOoUm+sSsks
Is9d74yFEhbhRcM1z1C3RuDqxukZTOCQ3UYu0/HpRbjx/PnLY9ubwcHtipjG
Mxz6YT9z3OoQHi54Z25ewbeAS2r4oby/C0jh35oKjyse+NafechfaIcJW0Jg
+8MFRJYIPfB2AA9/s4vMp9y6YC2b6alI3jx6GSvs/vgUAZjuJ/W+u9cH1Y5m
Wp+6sKhLzp8rJZwAxg8Kt9jqDAIz070HfdVzKFF9TGr/EAEytjylsu8fBaXB
L/sfvsQgrT67wmtTBMjKuSD/mHcKKI1uVjY3ZxBXDGdq3GMCfA1VxwL7HHzl
1S259WsSZbs2I2N5PBjt+zw2r7gAFLd/5PMhE+jQZe9Qhe8L8FHBWjBwDA87
7a7G8faOof2XrYIkb8/Bd6mD+WsK/WDwwXDmpUwtktO80In7SP0v53WZzVv5
zw30+dG+PcTGEYfuCCRV/kR4yJ/jDeB9rYem9i5NX2rDITHZGM5DT/CAN8/M
dY6PhH0ZvqRzmziU3/r+5qYqHqYtXG1m+T+C/66i1O2zOFTAnbOsb4KHx8az
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
OHHixIkTJ06cOHHixIkT/3/h/wPagWV1
      "]],
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotRange->{{1., 41.}, {1., 81.}, {0, 13.5232}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
b95Fn6hzVC377vdXzKw3zXhU/NbpZ6xz4s8+Vue4uT/v7L9se83DH6lzoCz7
g53mZV9e1XhCvLf5l8EDt/1QnUNh2b6Tiidud/wHah+7ZR/njF0+/Yb/qn2w
lv3gPiePdx7V++gse37hzT+3/vie2odj2fdPXalzw/XvqnX8lv3lrD0WjF7w
tloHbNn/PmbhyJn7v6nWEVp2csXLvx6JvqHWIVn2s+mlj77vplfVOgbL/vGL
c355TPxf6jmoZf/+kMRL57/xgnqOYtmHXb3aaq+mnlHzsJY97ZJb71w19ria
x7Hsraavf+Hcax9Q40DLfm5++rHj/zlf3Ue6/y5nXLX2Oa/OUX1I3mdvyndf
a7e93QGXXOt6cMm1rgeXXOt6cMm1rgeXXNv2o5fcfOU7z65ivm4bP2eNx1c6
4x/GfeJLrffwjV89ZNwv/ovF7z0pc5PxgPiZ997z+itnGw+Kz79rwYx7DjEe
Er9mo2n/nPUj42Hx6pK7/emQtY1HxA9f7d5ZG7+98uB1VLzwXrndvd54THzT
Y5bb7E8HGY+LX3rOPeFrs8YT4hPXvXf0+S+2/dWcj559+iJ9foRtz/3dtPGP
puv957Z94MU//tVp36w0eJ0Rf+pfW0454TLjWfGFN+8fjm5sPCc+dm959kpv
TRu8zovvffTli6YcY7wgvtylMz87Lmi8KH7+Y3d+YV224uB1SfykK2PH3bKR
8bL46vve8cac6/RzTdue8fpB22+S1M9FbHvN71//9AJrhcHrmvh7Xx/6px1W
W37wui5+0zKP/Gz1N5cdvG6Iz06//9wRNy8zeN0U32ul9T+tnbb04LUlHjjs
lIMe2W2qvDafL33y5Jvvmzb4PXYmPdW/4B675OD1iHh7t+3uXeOsxQf1k/7f
PV85bt5n3xu8HhX/db/t7LLo21w5k77Kl8V7Dn3kH4O8jYlP+f8fDrjkWteD
m1y7P9+cy7Z9MBtd23zdNl7+4U7n7Ro2Pvn3sWVk7k6dFY37xXed/UzjsM/W
GnhAfMHCGZf99injQfG3Tr9+2QOuNh4S/90WyZtuPNx4WLyw0y3jy44aj4jn
L76x9NlixqPijeQTZ79+65oDj4l/sXCJjzc80Hhc/JI9VrhxsXWNJ8QX/2bH
B058RJ3T5Hq/jT89S53z4vpP+xemaeqcCNfXOfjShYdds8bAM+KLtt3m7NNG
jWfFV3NvZ1Z+bPWB58R//NN7v75+R+N58bV+GrpulRdXG3hB/Iyptz/xtx2N
F8WLVzW33fHvav2f69tOXWVOzlLrh1w/9vvrbH/HH1YdeEX8hGf3nLLf94xX
xZ/9/Ki9/rKVuQ7XxLf75o30zueb62ddfO3zbvlg+xfUvIz5cwJqXOf6q4E1
H3jNMtc9S/ym/7x+xfLbm+uYLf7xU3dsM3WbFeW1+bxB5O7EC3FzXRoRX+Hc
3MU3HrLc4PWkT3d/PVd/zFw3RsWfe/oXB3aeMNeBSb9m34/P/ai56Lu5diDX
2k2uh+rBpV+P2H9Y7fhLbzgwYr4uP9/WwR19s/Y37hPv7Dxy9nV7Gp/8+9jZ
vY09cwfjAfHlN7z+vPe6xoPi9+255tabpo2HxJ9zf01+ETAeFr99efcv+qN1
Bq8j4if43d/ovxuPiq+f8V0dutJ4THzKFZue+9xs43HxflyOmG48IX73n9tn
LRcxnhQ/aOTnD537H31O04i9640nXhm7WZ/zMmL/9oNT97rgKH1OxIh92UO7
7PLhiN5nPmJ/ueiEZZZaTO9THbEfbh+5/h4/N9fVvPjEsOA9c30riPf/Wb7Y
3nhRfN0NT79p3b+Y61hJ/KIN35g+Y2XjZfHADTst+9puev2Q++evvOih/1xh
rktV8TsPfO/lU14x15+aeGmzn93/iN94XfyAky5Z4cdpc/1piJ+4rntHY+t5
mRE7ctWOjfUb5npiia+x3Esbnhw21xNb/PLgG/uNvjzZb4z3L8/TZq0kr83n
Snzmpe/ebq4Dk35t+dzPn5xh7kNGxf+7wZS/5uKD+wdn0u/fyb1D2e/7g9dj
4q99sPZj++08GCc6kz7lOx8tb3fApV+P2P9c48iZ2dPlfHH5Ofqj0wPOMe4T
f2PRFf997DfG/eIv3eYG72jjAfHTPlly59/tYzwo/tldu135k62Mh8TdwdfL
bxaMh8Wfn3fMkQtXMh4R3+H9i/8UfnfdgUfFF/37idP/dpfxmPimtz3z+l9P
Mx4Xf+Hgi+b/aFfjCfH6cedtcFDKeFL8l3c8eFH7k8H3If16xL5xbbcD3GI8
LR6duKE0nhFfdqnR652K8az480uF58390FxPcuKtVZ+46eErjOfF7T+8eNvy
M4wXxB+b8sJiU5c2XhT/YuYx7+95g1p/77rz84PeenBbtX7X9Yn7jXfN9aQi
PvH7ubbxqvhzt5xzWbVlric18XmrT/t0ux3MdaMuftWh6354/87quYjrbtc5
9c4tzHWjKT6jP9GTNNcHS3z2our+j/57crxn/Ht77fXMDrMH1wFn0ifuV181
9w8j4hO34UtN/h7Lz3XevGdTT5hxyqj4T04tvLXODoPxhTPpXyz92Antx5ca
1I+JL9PnZ77+bq4dyLV2B1z69ah91oIzTl5hBzlfXL5fN+1bpxP6/eBH7Ydn
927/eUO/n/So3b8r+sPa+v1oR+30gvVXWGZl/X6Wo/bG9y/VOOfj9QavQ+LL
RONHnfCM8bD4nW6M/nyD8Yi4vdLMux8/3nhUfLvKjfcfvJPxmPj2x5afundD
43Hxo06Yv/fUz/U5xaP2Vq9ccs49d+hzTkft2y5YfaPnj9HnJI7am5Tmjvyk
rc9ZG7X3zTs32Yvpc5pG7Xe+WGLBzAXmupEV/9erR825eH/jOfHLDrr267+t
Yzwvvlj/BvRR8/dSEN9wLPT2vw42XhSfuJ9Z3XhJvDvr8xXevMlcB8ris1b5
5Ma7NzNeET/hw9JF/pf1ukD359rI/YffW68rGrXjKywz79JnzHWgLj524Hmd
HR4014GG+LP3PPDV8peY60BT/NbCtVsfvfvkfKvxjU+dvvDdJcx1wBZ/PXLb
SjccNbgfcCZ944lfCNP3R8R/dmpw8W0eHeTdmXT3t3/N8pyV5LX8XE821zzp
GdPnJj3zZ/+rF7bM/MCY+MWzjz5+5cKgjzuT/tmVp0+9fSuTz5b4lP//4YBL
vx61+8PWxZZZ33xdvq+7jnUvZNcb94k/tY37L9Y1Pvlz/HzhDdt/fJjxgPh+
09zONmI8KL7WZf/upSzjIfEt+jcQ04yHxSf6+0fqfbZc/+UW4+c5f1Xv0+O6
m/Yf7H6Wep8P1/vfzkW7q/cJcP2g/g1lSp0z7vpm/QvHh+Y6kBSfuF7NM54S
f3Gz35y57yzjafHD3oxlfEnjGfGJ6eGX1flNruf6H6eq819cP+Dq45/d01bn
R7i+y7MXP7zkmybvBfHTNp1/14ITjBfFR3/y2sLID4yXxLMnfXnnHXdHBl4W
3/iRtfZcYhvjFfHV79gxPPKyyXtVfOL3eTfjNfHX1ncD8KLJe118m7NPO3rf
zYw3xHdbMvHKi/9jrgNN8W/7hbkOWOJX7HX05YsunJyHNT4xn7b4IO/OpP9g
zirPPFoy9/8j4otdsHbHt5Hp75Pen76d/dxk3zL+p7OOvOGRDafJa/O5MG+f
azaaZuYJx8QfuH/7fzx+4mC+zpn0/nCnteCL7+ZarhODDwdc+vWYvfFbi+dX
LG5gvi7//yM/uHbzvc9WuXY91G/k15o+5xfvTzOftoR+n/gx++XDA3/sztTv
Mz1mP3lo/xddv0/tmH1Af4Dk1+9zOWZvcunSnfWeNN9P5Ls+z3hU/L4Nqqc8
NNt4THyJe0/KHLKp8bh4/+7kipWMJ8R3X+1f2636tD5/fPD3doY+v3js29/z
LfT5p2N2f1pxO58+P3HMPrw/gbXA5D0r/pODN1trlb2M58Qn5mcCxvPirf4D
wvn6XImxwf2Y3pc+Zn963xFPPviRyrXrM7+64O4j5xovi5/nxO46dlXjFfE/
/uKaacnzI4PXVfElf3H62PEh4zXx/foPTn5r8l4XP2Ps+H3eWKRy3f/+d3s1
+c72xpvic5d179y3NHm3xNdI/PXzcxaa/m6Lfzz/n7/+ar3J+Vnjf7vwotlH
b2zu50fEb/nRuhueXpocNxr/2WJn+9Z4wdy3j4pfXbHT3Y0GfdyZ9F89uvc7
01aezIn53H7/9tPf+Yfpl5M+MS6b+43q1+brgw8HXPr12LfzqwvUfbjr4/1/
yNdN3if//6N/2+PJN5ZWuXb9OvcqcMgMUx8Qv+aLGT+99yiVa9eP3eHxv7zy
kcp13x/Y6s7Lj1G5dv37U3+99q4nqve/dP3d5W5Ln/VD9f55ru8Z2efQw9dT
77/l+hG/3GiTS99SuXZ94jnX9SrXrveHreceaDwpvmV/AiJjPCU+8ffzlsq1
668U3cRfqHLt+svLnHrF0XIdyIr/8R87H7zZ1yrXrn/8rBvsS1WuXZ/ZfzA8
brwg/oNPznz+1DdUrl3vD1Num632q7vev4zdtKLa7+p6f9r4/nNVrl3fes5z
y5bCxqvio2PfLL7qOZGB18SXen+V3ubLGq+L/7Q/8Jhl8t4Qf+vB/zlsrYdV
rl1/+o5tpq6yqnFLfOK5ycWmj9vif1xu5Ve+fFfl2vUbt3cTv7S5bx8Rn5hf
fU/l2vWX5n+6/wO/NfNyo+L3HLLLU8e/rHLt+rnur9Ws+1WuXZ+Yz6wsLa/N
54n5kzdNf22JP3nj8f976RGPDHLb+u5/Jx+T9++PHvfYCy8t8wPzdfnzNtr3
99/7y3q6X7fspXb+3SYrJ00/84unTr7ws8weul+37B9/PfbFu1eZvAfFJ+ZR
H9D9umX/Jt5PqqkPi9/9cXzGSXfp97Vt2W+c0P8P9Ptitr7tU4fr99Vr2ev+
sJ9s/b5cLfuUGe43upx+X5/Wt/cPC1WuXT90YiJA5dr1i57Kv1duG0+Ln32W
+/G57tct+70H7h695gp9XmrL/nRJ9y96a33eYsueuL36Uvfrwd/D+SrXrse2
XOL3p1SNF8Un7iv+rs+haNnF+q3Tz5ip97G37IXrfxB98y3dr1v2jMb6t+63
j8q163v+9t0jrdcig9c18Yn5tK2M18XPvX3qr3w3q1y7vtbmxdeWXsF4U7z3
+fi8zbZVuXb9kB8u9fY3IdPHbfFV5uRuP3vXQR93Jv3wV1dY8vwjVK5d3/G6
2985f4YZj0/69c7U525ZpHLt+kQexyfHn8YP3PXwu6bJeoAx8ZP3Hru3/I3K
tevWfonpM6/+nrw2n/ccPfWeU2Y9/91cy9fNx/vy9e1XvenvU14w/+6mX7fs
L6/472Ob3mV+v33iq/cHwC/r8XXLfrOX+madNU19QLw/jfTatbpft76dnznT
5Dck/m1/0f26ZfeHg8+uZuojk39+/xf0Tt2vW/Yzj3665SuX6H7dGoyvVa5d
3+7B7D3XpVSuXZ+Y/39X92s3L6/+8vxHrtT9umVfkhwLvb2LyrXrT/9+/8bS
qxrPiE/cF/1V9+uW/dKG7oXyAJVr1yfWCQTVOYyu/2eH0ea/5+t+7V5vv1nn
q0+2Vrl2/fQnpu4ZeUf365Ydnf/lnI+O0P269e191OJqf7vrG1+1zgEn/Ur3
65Z98FdHP3/tV5GB18QnrvN7G6+LH7Ts/Tu996ju1y17k7nRw1dbT+Xa9Rk7
LDf3iH10vx58P22V6/6/15fTrf1+rXLt+m9mX3DAyxfqft2yy7d98vApjsq1
62v/6u0tbl7LzLONir99jTsg2Ufl2vXQ+5/PPGZzlWvX3UH00htYg/k0Z9LX
P+6WFey3VK5dn79af2HQi6pfQ66ntKFft6Fft6Fft6Fft6Fft6Fft6Fft6Ff
t6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Ff
t6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Fft6Ff
t6Fft6FftwefzYfp120YX7dhfN2G8XUbxtdtGF+3YXzdhvF1G8bXbRhft2F8
3YbxdRvG120YX7dhfN2G8XUbxtdtGF+3YXzdhvF1G8bXbRhft2F83YbxdRvG
120YX7dhfN2G8XUbxtdtGF+3YXzdhvF1G8bXbRhft2F83YbxdRvG120YX7dh
fN2G8XUbxteQ6ykdmA/vwHx4B+bDOzAf3oH58A7Mh3dgPrwD8+EdmA/vwHx4
B+bDOzAf3oH58A7Mh3dgPrwD8+EdmA/vwHx4B+bDOzAf3oH58A7Mh3dgPrwD
8+EdmA/vwHx4B+bDOzAf3oH58A7Mh3dgPrwD8+EdmA/vwHx4B+bDOzAf3oH5
8A7Mh3dgPrwz+Dz4cMClX3fg+XUHnl934Pl1B55fd+D5dQeeX3fg+XUHnl93
4Pl1B55fd+D5dQeeX3fg+XUHnl934Pl1B55fd+D5dQeeX3fg+XUHnl934Pl1
B55fd+D5dQeeX3fg+XUHnl934Pl1B55fd+D5dQeeX3fg+XUHnl934Pl1B55f
d+D5dQeeX3fg+XUHnl934Pk15Fq79OsurDfrwnqzLqw368J6sy6sN+vCerMu
rDfrwnqzLqw368J6sy6sN+vCerMurDfrwnqzLqw368J6sy6sN+vCerMurDfr
wnqzLqw368J6sy6sN+vCerMurDfrwnqzLqw368J6sy6sN+vCerMurDfrwnqz
Lqw368J6sy6sN+vCerMurDfrwnqzLqw36w4+Dz4ccOnXXVgf3oX14V1YH96F
9eFdWB/ehfXhXVgf3oX14V1YH96F9eFdWB/ehfXhXVgf3oX14V1YH96F9eFd
WB/ehfXhXVgf3oX14V1YH96F9eFdWB/ehfXhXVgf3oX14V1YH96F9eFdWB/e
hfXhXVgf3oX14V1YH96F9eFdWB/ehfXhXVgf3oX14TqnLW93wKVf92A/Vw/2
c/VgP1cP9nP1YD9XD/Zz9WA/Vw/2c/VgP1cP9nP1YD9XD/Zz9WA/Vw/2c/Vg
P1cP9nP1YD9XD/Zz9WA/Vw/2c/VgP1cP9nP1YD9XD/Zz9WA/Vw/2c/VgP1cP
9nP1YD9XD/Zz9WA/Vw/2c/VgP1cP9nP1YD9XD/Zz9WA/Vw/2c/UGn81Hy9sd
cOnXPdh/3YP91z3Yf92D/dc92H/dg/3XPdh/3YP91z3Yf92D/dc92H/dg/3X
Pdh/3YP91z3Yf92D/dc92H/dg/3XPdh/3YP91z3Yf92D/dc92H/dg/3XPdh/
3YP91z3Yf92D/dc92H/dg/3XPdh/3YP91z3Yf92D/dc92H/dg/3XPdh/rXMK
Lv0acj1Ub/r1OJyXMg7npYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7n
pYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7n
pYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7npYzDeSnjcF7KOJyXMg7n
pYzDeSnjcF7KOJyXMj74PPhwwKVf63pw6dfj3uebue55vpnrnuebue55vpnr
nuebue55vpnrnuebue55vpnrnueb9f98r/PN+j+v1/lmrnueb+a65/lmrnue
b+a65/lmrnueb+a65/lmrnueb+a65/lmrnueb+a65/lmrnueb+a65/lmrnue
b+a65/lmrnueb+a65/lmrnueb9b/d/E638zRv88WuO3tDrj0a10PLv1a14NL
v4ZcD9W3vN0Bl379Q+WmX2v3gfvBA+BB8BB4GDwCHgWPgcfBE+BJ8BR4GjwD
ngXPgefBC+BF8BJ4GbwCXgWvgdfBG+BNcAvc9nYHXPq1rgeXfq3rwaVf63pw
6de6Hlz6NeR6yH3gfvAAeBA8BB4Gj4BHwWPgcfAEeBI8BZ4Gz4BnwXPgefAC
eBG8BF4Gr4BXwWvgdfAGeBPcAre93QGXfg25HqofhXpw6deQ66H6lrc74NKv
N1Zu+rV2H7gfPAAeBA+Bh8Ej4FHwGHgcPAGeBE+Bp8Ez4FnwHHgevABeBC+B
l8Er4FXwGngdvAHeBLfAbW93wKVf63pw6de6Hlz6ta4Hl36t68GlX0Ouh9wH
7gcPgAfBQ+Bh8Ah4FDwGHgdPgCfBU+Bp8Ax4FjwHngcvgBfBS+Bl8Ap4FbwG
XgdvgDfBLXDb2x1w6deQ66H6UagHl34NuR6qb3m7Ay79ehPlpl9r94H7wQPg
QfAQeBg8Ah4Fj4HHwRPgSfAUeBo8A54Fz4HnwQvgRfASeBm8Al4Fr4HXwRvg
TXAL3PZ2B1z6ta4Hl36t68GlX+t6cOnXuh5c+jXkesh94H7wAHgQPAQeBo+A
R8Fj4HHwBHgSPAWeBs+AZ8Fz4HnwAngRvAReBq+AV8Fr4HXwBngT3AK3vd0B
l34NuR6qH4V6cOnXkOuh+pa3O+DSrzdVbvq1dh+4HzwAHgQPgYfBI+BR8Bh4
HDwBngRPgafBM+BZ8Bx4HrwAXgQvgZfBK+BV8Bp4HbwB3gS3wG1vd8ClX+t6
cOnXuh5c+rWuB5d+revBpV9DrofcB+4HD4AHwUPgYfAIeBQ8Bh4HT4AnwVPg
afAMeBY8B54HL4AXwUvgZfAKeBW8Bl4Hb4A3wS1w29sdcOnXkOuh+lGoB5d+
Dbkeqm95uwMu/fpHyk2/1u4D94MHwIPgIfAweAQ8Ch4Dj4MnwJPgKfA0eAY8
C54Dz4MXwIvgJfAyeAW8Cl4Dr4M3wJvgFrjt7Q649GtdDy79WteDS7/W9eDS
r3U9uPRryPWQ+8D94AHwIHgIPAweAY+Cx8Dj4AnwJHgKPA2eAc+C58Dz4AXw
IngJvAxeAa+C18Dr4A3wJrgFbnu7Ay79GnI9VD8K9eDSryHXQ/Utb3fApV9v
ptz0a+0+cD94ADwIHgIPg0fAo+Ax8Dh4AjwJngJPg2fAs+A58Dx4AbwIXgIv
g1fAq+A18Dp4A7wJboHb3u6AS7/W9eDSr3U9uPRrXQ8u/VrXg0u/hlwPuQ/c
Dx4AD4KHwMPgEfAoeAw8Dp4AT4KnwNPgGfAseA48D14AL4KXwMvgFfAqeA28
Dt4Ab4Jb4La3O+DSryHXQ/WjUA8u/RpyPVTf8nYHXPr15spNv9buA/eDB8CD
4CHwMHgEPAoeA4+DJ8CT4CnwNHgGPAueA8+DF8CL4CXwMngFvApeA6+DN8Cb
4Ba47e0OuPRrXQ8u/VrXg0u/1vXg0q91PbjJtQ25HnIfuB88AB4ED4GHwSPg
UfAYeBw8AZ4ET4GnwTPgWfAceB68AF4EL4GXwSvgVfAaeB28Ad4Et8Btb3fA
Ta6H6sFNrofqwU2uh+rBTa6H6sHlPhxyPeQ+cD94ADwIHgIPg0fAo+Ax8Dh4
AjwJngJPg2fAs+A58Dx4AbwIXgIvg1fAq+A18Dp4A7wJboHb3u6Ay3045Hqo
fhTqweU+HHI9VN/ydgfc5PoOyPWQ+8D94AHwIHgIPAweAY+Cx8Dj4AnwJHgK
PA2eAc+C58Dz4AXwIngJvAxeAa+C18Dr4A3wJrgFbnu7A25yPVQPbnI9VA9u
cj1UD25yPVQPLuPrLZSb8bV2H7gfPAAeBA+Bh8Ej4FHwGHgcPAGeBE+Bp8Ez
4FnwHHgevABeBC+Bl8Er4FXwGngdvAHeBLfAbW93wGV8revBZXyt68FlfK3r
wWV8revBZXwNuR5yH7gfPAAeBA+Bh8Ej4FHwGHgcPAGeBE+Bp8Ez4FnwHHge
vABeBC+Bl8Er4FXwGngdvAHeBLfAbW93wGV8Dbkeqh+FenAZX0Ouh+pb3u6A
y/gacj3kPnA/eAA8CB4CD4NHwKPgMfA4eAI8CZ4CT4NnwLPgOfA8eAG8CF4C
L4NXwKvgNfA6eAO8CW6B297ugMv4GnI9VD8K9eAyvoZcD9W3vN0Bl/E15HrI
feB+8AB4EDwEHgaPgEfBY+Bx8AR4EjwFngbPgGfBc+B58AJ4EbwEXgavgFfB
a+B18AZ4E9wCt73dAZfxNeR6qH4U6sFlfA25HqpvebsDLuPr6crN+Fq7D9wP
HgAPgofAw+AR8Ch4DDwOngBPgqfA0+AZ8Cx4DjwPXgAvgpfAy+AV8Cp4DbwO
3gBvglvgtrc74DK+1vXgMr7W9eAyvtb14DK+1vXgMr6GXA+5D9wPHgAPgofA
w+AR8Ch4DDwOngBPgqfA0+AZ8Cx4DjwPXgAvgpfAy+AV8Cp4DbwO3gBvglvg
trc74DK+hlwP1Y9CPbiMryHXQ/Utb3fAZXwNuR5yH7gfPAAeBA+Bh8Ej4FHw
GHgcPAGeBE+Bp8Ez4FnwHHgevABeBC+Bl8Er4FXwGngdvAHeBLfAbW93wGV8
Dbkeqh+FenAZX0Ouh+pb3u6Ay/gacj3kPnA/eAA8CB4CD4NHwKPgMfA4eAI8
CZ4CT4NnwLPgOfA8eAG8CF4CL4NXwKvgNfA6eAO8CW6B297ugMv4GnI9VD8K
9eAyvoZcD9W3vN0Bl/H1lsrN+Fq7D9wPHgAPgofAw+AR8Ch4DDwOngBPgqfA
0+AZ8Cx4DjwPXgAvgpfAy+AV8Cp4DbwO3gBvglvgtrc74DK+1vXgMr7W9eAy
vtb14DK+1vXgMr6GXA+5D9wPHgAPgofAw+AR8Ch4DDwOngBPgqfA0+AZ8Cx4
DjwPXgAvgpfAy+AV8Cp4DbwO3gBvglvgtrc74DK+hlwP1Y9CPbiMryHXQ/Ut
b3fAZXwNuR5yH7gfPAAeBA+Bh8Ej4FHwGHgcPAGeBE+Bp8Ez4FnwHHgevABe
BC+Bl8Er4FXwGngdvAHeBLfAbW93wGV8Dbkeqh+FenAZX0Ouh+pb3u6Ay/ga
cj3kPnA/eAA8CB4CD4NHwKPgMfA4eAI8CZ4CT4NnwLPgOfA8eAG8CF4CL4NX
wKvgNfA6eAO8CW6B297ugMv4GnI9VD8K9eAyvoZcD9W3vN0Bl/H1VsrN+Fq7
D9wPHgAPgofAw+AR8Ch4DDwOngBPgqfA0+AZ8Cx4DjwPXgAvgpfAy+AV8Cp4
DbwO3gBvglvgtrc74DK+1vXgMr7W9eAyvtb14DK+1vXgMr6GXA+5D9wPHgAP
gofAw+AR8Ch4DDwOngBPgqfA0+AZ8Cx4DjwPXgAvgpfAy+AV8Cp4DbwO3gBv
glvgtrc74DK+hlwP1Y9CPbiMryHXQ/Utb3eG/f8AUb1A4g==
     
     "], {{{}, {}, {}, {}, {}}, {{
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0zdMUGEYBdCPYgXsFCvFDrgpboKb4obgphgXwUEjuAm4CW6Cm+Am4Ca4
CW6Cm4KdYgfsgFgANw+Jw0le8vKS9997/9xT58rOJkTEDIksPOdzlDraecQc
OV4epoZW+pgkw4fFVNFMD2OkJkXs4wSNdDFMYnJEAeXU08EA8+Quiiilljb6
mSJzcUQJ1bTQyzhpSyKKqKSJbkZIWhpRSAUNdDLIX/KWRRzhAjd4wDRZyyMO
coZr3GOCFSkR+znJFe4wSnJqxB6OcYlbPOYJT3nGc17wkiGGGWGUV7zmDW95
x3s+MMY4E3zkE5/5wle+8Z1JppjmBzP85Be/+cMsc8zzl0E6aaCCQpIW/suZ
ummikiLSGJdBLy1UU0ImUzLrp41aSsllXsYDdFBPOQUkMqybLho5wT5SGdNl
D81UUUwGk7rvo5UaDpPDnK08op06jpJPAkM2dpvLHGcvKXywybtc5TQHSOe7
Dd/nOuc5RDazNv+Qm1ykjN3sYic72M42tpJH7sI9IZstbGYTG9nAerLIJIN0
1rGWNaxmFStZQRqqCTWEyEO8IcYQWYgnRBGOHEn/7+8/G8F9dw==
          "]]}}, {
        {GrayLevel[1], Thickness[Large], Dashing[{Small, Small}], 
         Line3DBox[{1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 
          1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 
          1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 
          1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 
          1312}]}}, {}, {}, {}}},
     VertexNormals->CompressedData["
1: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
tiPn07hnLBSfctJWmSEg9ZpFpdP76ee3tM5I0YtJsP/aA787IwSkEax6Nu/I
AlgFVQfEjaaAGwiHZncQ0KPV7M1xuQWQCM/f8sMiDVauHL3WV0NA1dJFRO5z
C3BKvDLaJPcrRCybNtzOJSCKuKqZ0bUFePVq6sAGIQMEVK27NT8RUKVeebLh
3QWI+jRoN7YjG+RSp/kkggnIsn+rhK/rAjTtXcYbH8qFbgeBp2ouBGQd373g
H0pff/7ev7si+XC3SFjczpyAbtYpb9ikLkDiS/Z+U8kCmOdRqMzSIqAbERwT
wrX097JbKJuAQmjh8xzGHyegOrk8Quz4AsRZ2bNP3S4Co7jCEeY99DjfLn6y
9GMBXtclOha9Lgbqvhc8g1Q8ivkQy8TJh4NeFiq/cmMJjOmsX9rdjUfxGXd2
nFfCwQG+mG3dXGUgwSR//n46Hq19M9kffwsHTBVuFQovysGF3+m170s8Ik+H
7j79EgctIs9ddbdWwoT3vdrthnik5/8+VzUdB43ngk99y6uCioZfTV6H8Yi1
Q4GpZwAHu6iiRvp+NdDlIPZAfWURMXU+/36CaRFC/8jclA9EIPfm1qBH2SL6
R/LvbTqxCGSLO66ms3WwNf/6sa3PFlHXe64OkQeLoDj6/EygYAOoUm+sSsks
Is9d74yFEhbhRcM1z1C3RuDqxukZTOCQ3UYu0/HpRbjx/PnLY9ubwcHtipjG
Mxz6YT9z3OoQHi54Z25ewbeAS2r4oby/C0jh35oKjyse+NafechfaIcJW0Jg
+8MFRJYIPfB2AA9/s4vMp9y6YC2b6alI3jx6GSvs/vgUAZjuJ/W+u9cH1Y5m
Wp+6sKhLzp8rJZwAxg8Kt9jqDAIz070HfdVzKFF9TGr/EAEytjylsu8fBaXB
L/sfvsQgrT67wmtTBMjKuSD/mHcKKI1uVjY3ZxBXDGdq3GMCfA1VxwL7HHzl
1S259WsSZbs2I2N5PBjt+zw2r7gAFLd/5PMhE+jQZe9Qhe8L8FHBWjBwDA87
7a7G8faOof2XrYIkb8/Bd6mD+WsK/WDwwXDmpUwtktO80In7SP0v53WZzVv5
zw30+dG+PcTGEYfuCCRV/kR4yJ/jDeB9rYem9i5NX2rDITHZGM5DT/CAN8/M
dY6PhH0ZvqRzmziU3/r+5qYqHqYtXG1m+T+C/66i1O2zOFTAnbOsb4KHx8az
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
OHHixIkTJ06cOHHixIkT/3/h/wPagWV1
      "]],
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotRange->{{1., 41.}, {1., 81.}, {0, 13.5232}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzU0owwEcxvFNSl7a2oEcUJy2zIb9zR/9ZXISmQ1LkXcHL1lZRiwNB3mb
kik1apKpyUs7OZCLaS4Ks5K8nbRs815sze85PH0uT30z2wc0XXwej1dE+4lp
lU4H/CqXOdJvIS9O2lgr+fl81wvDApsBzmQ4b+Dm9/sj3K56kqyQZ1zJPJx4
q62bDfpVSulC7APZGAxJxCG/qqOSLYcux4ERarN9U/CSG1uDqcKoE45ptIyE
TFKPa6HeHLJBbt97D+d+va/w197+Ba3GqzA8v7CzOaTyfqYS8lP/RqCLf7gB
fXGOK7g+zihk5ERTQ5acXC5MZHLJ05t8UR55m2M8hibmqymfTGm+dsOA7H1R
QXZG3NEacqnPUq8mu20qRS1ZbDeZoTLdG4TCnsYIrOY+4jT4sW4B9DHOZFg8
LC+FjoSXVWhg48UN5KC4SA71XaI0HTo7WwVwz+OpgDrZZDc8KhMMwd2lFhMM
jzZPw39uQvyZ
  "],ExpressionUUID->"750d4692-7469-47d3-917a-9727c04e3328"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"line3DBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "-", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"layers", "[", 
          RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
         "]"}], "/", "cellLength"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"line3DBarriers", ",", "barrierCoordinate"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",\

 CellChangeTimes->{{3.748938011420321*^9, 3.748938030604074*^9}, {
  3.748938063607355*^9, 
  3.748938075307157*^9}},ExpressionUUID->"1b2c00f3-7bc1-41c5-bdad-\
1a8c096c60a1"],

Cell[CellGroupData[{

Cell[BoxData["line3DBarriers"], "Input",ExpressionUUID->"e5dae3ad-66ed-42c2-bd64-0af56818de95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50", ",", "32"}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzmkowwEch/FpyrWI5s14Q5JNbMy0SbTlDeWasUKS640rkuVqqb1YlqPU
3N7MHEPYHIV4IVe8oNj2zlEU/2wYIsTv++Lp8/aJqGhUVnuxWCwZFeAKjda7
GPmckNXQT6rrqqRGsmfsoxZOj0+1wDX3kgOecj9vYFTPA3+INHak98Ibs1Jl
cDNy3lef9zUpG3zhxzwz8qVLqQLeqmwaeLbj1EHG2TkJHy1/C/DnriCJT24x
2gI4LHmZgNZ6xxVkbzie4GtO5Tt0xl7+wPY6kzSOvG83ZEGr7bsNrps3TZC3
PXsBM8Mk4njSIlNHCvHB5SSJyOdVcXACaT/X7ELfr/fSRDLQz34IBRzPgJj0
pB7/5ZLLmQOFeWRTs0KcT+75a7th8r3TDUs8xb/QPPLmoyTn9UeBcNq8GAqN
M6I0aJc9jkLNin9MEelKThHC7JKQcDV5YJuVQMH5SQasYOtq4F1OUCuc2Szv
gvujZXr4D3RwBGY=
  "],ExpressionUUID->"8609660f-3802-4130-8b79-e46ef0a1511b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{775, 872},
WindowMargins->{{Automatic, -876}, {48, Automatic}},
Magnification:>1.3 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 288, 5, 131, "Title", "ExpressionUUID" -> \
"d1891a41-4acd-4207-932b-b3ca8b4be262",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[871, 29, 398, 6, 119, "Subtitle", "ExpressionUUID" -> \
"041f7e79-40a6-4d5d-b380-a00f39134427",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1272, 37, 505, 8, 75, "Subsubtitle", "ExpressionUUID" -> \
"41b28c78-ea15-46ab-b8df-8276fd1bf0ee",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1780, 47, 1525, 32, 132, "Input", "ExpressionUUID" -> \
"6920d484-4e63-47ae-8f14-b467575eadaa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3308, 81, 439, 7, 43, "Subsubtitle", "ExpressionUUID" -> \
"189c16f5-6a40-4634-b3c5-fe4173665c9d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3750, 90, 2612, 61, 260, "Input", "ExpressionUUID" -> \
"f589989b-e1f4-41f5-b99c-8c76d7a6995f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[6365, 153, 494, 8, 43, "Subsubtitle", "ExpressionUUID" -> \
"b4581657-088e-4810-bb99-ab8e676f0708",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[6862, 163, 1389, 29, 138, "Input", "ExpressionUUID" -> \
"f12cb6a7-b559-4b3c-ba87-b12762276c97",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8254, 194, 447, 7, 43, "Subsubtitle", "ExpressionUUID" -> \
"77748391-58ef-4692-85bf-c3d4ec17fbdb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8704, 203, 5975, 169, 723, "Input", "ExpressionUUID" -> \
"bf7b973c-44a0-48ca-b28b-334404f8a067",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[14682, 374, 493, 8, 43, "Subsubtitle", "ExpressionUUID" -> \
"782a6820-0687-410c-958c-7b9f25185627",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[15178, 384, 2196, 60, 517, "Input", "ExpressionUUID" -> \
"7efce0f0-005d-4e25-8f7c-721212f0d258",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17377, 446, 556, 9, 75, "Subsubtitle", "ExpressionUUID" -> \
"e08127b8-7023-477a-9e50-984a7799d631",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17936, 457, 3721, 91, 908, "Input", "ExpressionUUID" -> \
"f7fc24af-996a-4c53-9e1e-d2632d816c63",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21660, 550, 583, 9, 75, "Subsubtitle", "ExpressionUUID" -> \
"e22474cc-b76e-4681-88b9-18dd26a3a6f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[22246, 561, 5132, 116, 896, "Input", "ExpressionUUID" -> \
"4a8e89c6-bb3c-4bfc-8683-7b3f9de00ec6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27381, 679, 506, 8, 43, "Subsubtitle", "ExpressionUUID" -> \
"0a7544c3-9148-424a-8c8f-276c5880df96",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27890, 689, 2033, 42, 316, "Input", "ExpressionUUID" -> \
"12ed346d-ee66-45ea-ac58-3a807ec86eaa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[29926, 733, 1479, 36, 251, "Input", "ExpressionUUID" -> \
"97be4e71-d562-4fb4-a565-39e0e55f65d3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[31408, 771, 558, 8, 43, "Subsubtitle", "ExpressionUUID" -> \
"0a282b52-028d-4a88-9d92-b554b914a0d7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[31969, 781, 1256, 31, 201, "Input", "ExpressionUUID" -> \
"52b964d3-7af5-456c-a651-a6ac2df161a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[33240, 815, 1285, 25, 95, "Print", "ExpressionUUID" -> \
"90ccdd71-0137-4766-8fe7-c3fd8d453704"],
Cell[CellGroupData[{
Cell[34550, 844, 357, 6, 43, "Subsubtitle", "ExpressionUUID" -> \
"e4030f03-178c-4bb9-9bc1-1a30ee7dd6c0"],
Cell[CellGroupData[{
Cell[34932, 854, 4311, 77, 441, "Input", "ExpressionUUID" -> \
"b685990a-8067-4432-947b-16b0621cf452"],
Cell[39246, 933, 26055, 487, 880, "Output", "ExpressionUUID" -> \
"c50429e5-1f33-4fa2-8a27-fc3f31920995"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65338, 1425, 13538, 274, 784, InheritFromParent, "ExpressionUUID" -> \
"e71caf75-8900-4968-9f0e-a27da7ed4b07"],
Cell[78879, 1701, 13421, 273, 784, "Output", "ExpressionUUID" -> \
"7a0bf1b3-0f66-4c31-88aa-274f86c4318c"]
}, Open  ]],
Cell[92315, 1977, 151, 3, 40, "Input", "ExpressionUUID" -> \
"c852c6e4-ecac-4c55-9d9e-12c34d2d6319"],
Cell[92469, 1982, 177, 3, 40, "Input", "ExpressionUUID" -> \
"0928e295-e165-4904-b890-678feb978288"],
Cell[CellGroupData[{
Cell[92671, 1989, 2053, 58, 370, "Input", "ExpressionUUID" -> \
"7955e177-7067-45c7-a09f-4615e5a71d1a"],
Cell[94727, 2049, 846, 16, 29, "Message", "ExpressionUUID" -> \
"9059cf60-dbfa-4e84-9983-b97272aa8e4f"],
Cell[95576, 2067, 846, 16, 29, "Message", "ExpressionUUID" -> \
"22d3abd8-14df-4345-bd49-b539bf78c455"],
Cell[96425, 2085, 3415, 68, 319, "Output", "ExpressionUUID" -> \
"87b5f6c5-33ea-40b8-aa6e-bbeb8888e5c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99877, 2158, 221, 5, 60, "Input", "ExpressionUUID" -> \
"96305b8d-1e12-42db-a90b-6c28dad5c2e5"],
Cell[100101, 2165, 1224, 32, 121, "Output", "ExpressionUUID" -> \
"f63d1f97-25c0-483c-97cb-c9f040be6f79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101362, 2202, 292, 7, 60, "Input", "ExpressionUUID" -> \
"585ea206-a7ac-4200-8f79-8ab3732bf7aa"],
Cell[101657, 2211, 1997, 40, 121, "Output", "ExpressionUUID" -> \
"2c641437-8bfb-461b-a60b-4da3c64501f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103691, 2256, 203, 4, 60, "Input", "ExpressionUUID" -> \
"2ce0f13e-c8b9-470a-b6a2-6412310867e2"],
Cell[103897, 2262, 803, 16, 29, "Message", "ExpressionUUID" -> \
"2b85bec3-3076-4038-b0de-4970d9dcd260"],
Cell[104703, 2280, 625, 12, 40, "Output", "ExpressionUUID" -> \
"076b41d4-88cc-48bb-8ef8-dd203708aee8"]
}, Open  ]],
Cell[105343, 2295, 400, 6, 40, "Input", "ExpressionUUID" -> \
"d42e1475-604a-4b84-90e5-ad0cb875c937"],
Cell[CellGroupData[{
Cell[105768, 2305, 328, 8, 40, "Input", "ExpressionUUID" -> \
"9d1e9984-4958-46b0-b52e-c5940e57a468"],
Cell[106099, 2315, 755, 16, 29, "Message", "ExpressionUUID" -> \
"b6d50201-29f0-438b-8fc0-5e5f4891e2b8"],
Cell[106857, 2333, 854, 17, 29, "Message", "ExpressionUUID" -> \
"1c76aac4-ce84-4b89-82f4-6124c69d82b2"],
Cell[107714, 2352, 880, 18, 29, "Message", "ExpressionUUID" -> \
"a4d7019f-7ed4-46bf-baf3-8b07e81e6306"],
Cell[108597, 2372, 942, 19, 29, "Message", "ExpressionUUID" -> \
"4c2083f1-ec50-45ec-abc5-bfe4c846652d"],
Cell[109542, 2393, 1746, 30, 111, "Message", "ExpressionUUID" -> \
"ee9bbe29-6fe7-49ee-8ef4-58d247fdd7c1"],
Cell[111291, 2425, 7925, 182, 300, "Output", "ExpressionUUID" -> \
"76105a91-c569-4f90-ad81-13d8dacaec51"]
}, Open  ]],
Cell[119231, 2610, 846, 29, 91, "Input", "ExpressionUUID" -> \
"c5137d15-df99-4dd7-a6c1-ca7e13c4008a"],
Cell[120080, 2641, 838, 21, 229, "Input", "ExpressionUUID" -> \
"1fd12a60-8603-46f9-9754-ccfa0a4da2a6"],
Cell[CellGroupData[{
Cell[120943, 2666, 878, 20, 132, "Input", "ExpressionUUID" -> \
"1610b4d9-237d-4925-9c97-c0c6c3d1cf0e"],
Cell[121824, 2688, 755, 16, 29, "Message", "ExpressionUUID" -> \
"c7cfff94-a03a-4eb0-a83d-c2f3100ca4d7"],
Cell[122582, 2706, 855, 17, 29, "Message", "ExpressionUUID" -> \
"1d80e8ed-9e43-4058-b18d-914f232a1809"],
Cell[123440, 2725, 881, 18, 29, "Message", "ExpressionUUID" -> \
"0d1e708b-3449-4ec8-ada2-109f8440db09"],
Cell[124324, 2745, 943, 19, 29, "Message", "ExpressionUUID" -> \
"73f6f589-dcb2-4d9a-835b-54d6e979903f"],
Cell[125270, 2766, 1781, 30, 111, "Message", "ExpressionUUID" -> \
"f28fa6a6-36fd-4aaf-8162-1cddb02937a6"],
Cell[127054, 2798, 756, 16, 29, "Message", "ExpressionUUID" -> \
"175e953b-1c48-4143-9839-64908ac8a9a1"],
Cell[127813, 2816, 855, 17, 29, "Message", "ExpressionUUID" -> \
"d434bcdc-db84-4313-bdcf-91b8588e50c3"],
Cell[128671, 2835, 881, 18, 29, "Message", "ExpressionUUID" -> \
"be2d8f4f-8b45-4153-8018-6cb6436eefdd"],
Cell[129555, 2855, 943, 19, 29, "Message", "ExpressionUUID" -> \
"5332cf0a-21bc-4eb0-87f9-2b8523966981"],
Cell[130501, 2876, 1782, 30, 111, "Message", "ExpressionUUID" -> \
"c244f022-a52e-4673-8230-cf732e411d90"],
Cell[132286, 2908, 756, 16, 29, "Message", "ExpressionUUID" -> \
"11cbaed3-bfa8-4fe4-b209-536550879446"],
Cell[133045, 2926, 853, 17, 29, "Message", "ExpressionUUID" -> \
"daa6e740-5106-4d1b-9867-b0f6855c05ec"],
Cell[133901, 2945, 855, 17, 29, "Message", "ExpressionUUID" -> \
"9a503535-6617-464c-905d-f9394189da6f"],
Cell[134759, 2964, 851, 17, 29, "Message", "ExpressionUUID" -> \
"3140bd8f-5694-4c11-84fb-0bb02d58ddee"],
Cell[135613, 2983, 881, 18, 29, "Message", "ExpressionUUID" -> \
"2aa61a29-057f-45f3-93d1-5ad4d2150848"],
Cell[136497, 3003, 855, 17, 29, "Message", "ExpressionUUID" -> \
"032774e1-e7f0-40b4-a242-afd92bbbaf80"],
Cell[137355, 3022, 943, 19, 29, "Message", "ExpressionUUID" -> \
"b99c08b4-d023-4f0c-9642-8bbf9f2ba63c"],
Cell[138301, 3043, 856, 17, 29, "Message", "ExpressionUUID" -> \
"b4c9a491-4638-4d14-981e-142943a6a618"],
Cell[139160, 3062, 1782, 30, 111, "Message", "ExpressionUUID" -> \
"3d121879-4908-41ef-bea5-b6e541a27d76"],
Cell[140945, 3094, 851, 17, 29, "Message", "ExpressionUUID" -> \
"c4b23dea-bf31-4f1c-9b06-ee5fcc3d3636"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141833, 3116, 276, 6, 60, "Input", "ExpressionUUID" -> \
"f6eb5ceb-7696-4d53-944b-db07a9270ab8"],
Cell[142112, 3124, 459923, 9744, 426, "Output", "ExpressionUUID" -> \
"5501fcbc-a961-4365-a5ec-ece38512e5e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602072, 12873, 242, 5, 60, "Input", "ExpressionUUID" -> \
"54665f61-46e3-4818-8f2a-3b83e6e5e9de"],
Cell[602317, 12880, 882, 17, 29, "Message", "ExpressionUUID" -> \
"18815f72-69c7-49e4-9090-4a369ecb041d"],
Cell[603202, 12899, 762, 16, 29, "Message", "ExpressionUUID" -> \
"c6bd1921-ab19-4d69-bab7-1c7eeb69d42c"],
Cell[603967, 12917, 595, 11, 40, "Output", "ExpressionUUID" -> \
"fe75069b-aa85-4b39-8242-accb4e3b5ee9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604599, 12933, 182, 4, 40, "Input", "ExpressionUUID" -> \
"368854d8-4c64-491f-afab-7f0d408dd6d2"],
Cell[604784, 12939, 614, 12, 40, "Output", "ExpressionUUID" -> \
"630da53a-d9db-4340-81d2-0275e69a118d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605435, 12956, 1128, 21, 248, "Input", "ExpressionUUID" -> \
"6a87c680-7cfa-41b8-8231-25f73f22afab"],
Cell[606566, 12979, 496652, 8201, 800, "Output", "ExpressionUUID" -> \
"f6d46012-429c-4b58-bb0a-c352fc29a989"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103255, 21185, 168, 3, 40, "Input", "ExpressionUUID" -> \
"196f6b89-61bd-44c5-bf37-b27a3e088a2d"],
Cell[1103426, 21190, 2255, 46, 66, "Output", "ExpressionUUID" -> \
"67787d11-a3a2-4e28-b6e0-162be2c98254"]
}, Open  ]],
Cell[1105696, 21239, 1039, 29, 226, "Input", "ExpressionUUID" -> \
"b181c613-018b-4d97-bbe8-2b8245b247f8"],
Cell[CellGroupData[{
Cell[1106760, 21272, 96, 0, 40, "Input", "ExpressionUUID" -> \
"9c524b75-a9f4-4fb8-85ed-a42bf0284e10"],
Cell[1106859, 21274, 90410, 1507, 209, "Output", "ExpressionUUID" -> \
"750d4692-7469-47d3-917a-9727c04e3328"]
}, Open  ]],
Cell[1197284, 22784, 1457, 37, 426, "Input", "ExpressionUUID" -> \
"1b2c00f3-7bc1-41c5-bdad-1a8c096c60a1"],
Cell[CellGroupData[{
Cell[1198766, 22825, 95, 0, 40, "Input", "ExpressionUUID" -> \
"e5dae3ad-66ed-42c2-bd64-0af56818de95"],
Cell[1198864, 22827, 678, 13, 40, "Output", "ExpressionUUID" -> \
"8609660f-3802-4130-8b79-e46ef0a1511b"]
}, Open  ]]
}, Open  ]]
}
]
*)

