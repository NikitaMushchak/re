(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1174599,      22185]
NotebookOptionsPosition[   1163493,      21945]
NotebookOutlinePosition[   1163869,      21961]
CellTagsIndexPosition[   1163826,      21958]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Planar3D Mesh Doubling", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660668673644*^9, 3.7476606793673363`*^9}, {
   3.748934775835075*^9, 3.748934775947117*^9}, 3.748969785632721*^9, {
   3.7498709452662735`*^9, 
   3.7498709548729305`*^9}},ExpressionUUID->"3682df42-8e93-4673-b902-\
35d17733c95e"],

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0435\:0442\:043e\:0447\:043d\:044b\:0445 \:0433\:0440\:0430\:0444\:0438\
\:043a\:043e\:0432 \:0432 2D", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660650798229*^9, 3.7476606629055977`*^9}, 
   3.748969785633028*^9},ExpressionUUID->"041f7e79-40a6-4d5d-b380-\
a00f39134427"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:043f\:0443\
\:0442\:044c \:0434\:043e \:043f\:0430\:043f\:043a\:0438 \:0441 \:0432\:0445\
\:043e\:0434\:043d\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.747660720326604*^9}, 
   3.747661032741356*^9, 3.7489697348519917`*^9, 
   3.748969785633336*^9},ExpressionUUID->"41b28c78-ea15-46ab-b8df-\
8276fd1bf0ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "folder", "=", 
   "\"\<G:\\\\actualplanar\\\\Planar3D-MeshDoubling\\\\Planar3D-MeshDoubling\\\
\\Sources\\\\Sequential\\\\Sequential\\\\Results\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747656893552808*^9, 3.747656906633217*^9}, 
   3.747661032741767*^9, {3.747664018501865*^9, 3.747664019128312*^9}, {
   3.747664057817404*^9, 3.7476641073677397`*^9}, 3.747665488148735*^9, 
   3.748933628112026*^9, {3.748933678444969*^9, 3.748933682795598*^9}, {
   3.748967116456512*^9, 3.748967124377589*^9}, {3.748968117085099*^9, 
   3.748968118090468*^9}, 3.748968199603396*^9, {3.748969393672985*^9, 
   3.74896939903098*^9}, 3.74896973485242*^9, 3.748969785633741*^9, {
   3.749002313128289*^9, 3.749002345037242*^9}, {3.749002429317358*^9, 
   3.7490025155955677`*^9}, {3.7490032762745247`*^9, 
   3.7490033047957563`*^9}, {3.749195504804994*^9, 3.749195505707028*^9}, {
   3.7494641359426575`*^9, 3.749464138960359*^9}, {3.749468893701499*^9, 
   3.7494688992696266`*^9}, {3.74987097942414*^9, 3.7498709846142454`*^9}, {
   3.749871729943824*^9, 
   3.749871732063359*^9}},ExpressionUUID->"5571f8d0-2fc5-4f95-bc4a-\
8988e6b6df64"],

Cell["\:0421\:0447\:0438\:0442\:044b\:0432\:0430\:0435\:043c \:043f\:0430\
\:0440\:0430\:043c\:0435\:0442\:0440\:044b \:0440\:0430\:0441\:0447\:0451\
\:0442\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, 3.7489697348525867`*^9, 
   3.7489697856339073`*^9},ExpressionUUID->"189c16f5-6a40-4634-b3c5-\
fe4173665c9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"parameters", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<parameters.json\>\""}], ",", 
      "\"\<RawJSON\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"height", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"length", "=", 
     RowBox[{
      RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<length\>\"",
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"middleH", " ", "=", " ", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "height"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"middleL", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"0.5", "*", "length"}], "]"}], "+", "1"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"size", "=", 
   RowBox[{
    RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<height\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middle", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"0.5", "*", "size"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellLength", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"parameters", "[", "\"\<mesh\>\"", "]"}], "[", "\"\<cell\>\"", 
     "]"}], "[", "\"\<length\>\"", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747655287287675*^9, {3.747656648179721*^9, 3.74765664850766*^9}, {
   3.747656733330495*^9, 3.747656752436288*^9}, {3.747656912578596*^9, 
   3.7476569586085052`*^9}, {3.7476569957355824`*^9, 3.747657000350354*^9}, {
   3.747657434800095*^9, 3.747657435013611*^9}, {3.747657489717287*^9, 
   3.747657567951728*^9}, {3.7476576237958593`*^9, 3.747657744332275*^9}, 
   3.7476579502511377`*^9, 3.74765802117413*^9, 3.747659478052923*^9, 
   3.747659922966485*^9, {3.747659991785955*^9, 3.747660041283514*^9}, {
   3.7476600785009727`*^9, 3.747660104489366*^9}, {3.747660507830991*^9, 
   3.747660518100801*^9}, {3.747660570048667*^9, 3.747660584277534*^9}, {
   3.7476606203847427`*^9, 3.747660620713311*^9}, 3.747661032742475*^9, {
   3.7489336188607807`*^9, 3.748933619107676*^9}, {3.7489338681042213`*^9, 
   3.748933945735607*^9}, {3.7489340816532583`*^9, 3.7489340850716543`*^9}, {
   3.748934703289136*^9, 3.748934761141674*^9}, 3.748969734852895*^9, 
   3.74896978563422*^9},ExpressionUUID->"52147c7d-0dec-478c-ad4e-\
299b35b21bdd"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:043f\:0430\:0440\:0430\:043c\
\:0435\:0442\:0440\:044b \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0435\
\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607284381437`*^9}, 
   3.7476610327420387`*^9, {3.748934769874744*^9, 3.7489347748029413`*^9}, 
   3.74896973485305*^9, 
   3.7489697856343813`*^9},ExpressionUUID->"b4581657-088e-4810-bb99-\
ab8e676f0708"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0415\:0441\:043b\:0438", " ", "True"}], ",", " ", 
    RowBox[{
    "\:043d\:0430", " ", "\:0433\:0440\:0430\:0444\:0438\:043a\:0435", " ", 
     "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0432\:044b\:0432\:043e\:0434\:0438\:0442\:044c\:0441\:044f", " ", 
     "\:0433\:0440\:0430\:043d\:0438\:0446\:044b", " ", 
     "\:0441\:043b\:043e\:0451\:0432"}], ",", 
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:043d\:044b\
\:0445", " ", "\:0437\:0430", " ", 
     "\:043f\:0440\:0435\:0434\:0435\:043b\:0430\:043c\:0438", " ", 
     "\:0440\:0430\:0441\:0447\:0451\:0442\:043d\:043e\:0439", " ", 
     "\:043e\:0431\:043b\:0430\:0441\:0442\:0438"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"showAllBarriers", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textPadding", "=", "1"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748936129152269*^9, 3.748936131996414*^9}, {
   3.748936437491951*^9, 3.748936446079194*^9}, {3.748936835688491*^9, 
   3.748936836198721*^9}, {3.7489370016931553`*^9, 3.748937002355495*^9}, 
   3.7489687346210823`*^9, 3.7489697856346483`*^9, {3.748970588914028*^9, 
   3.748970589224121*^9}},ExpressionUUID->"b7665848-0f3f-4ef8-b9b7-\
48870b8db5db"],

Cell["\:0423\:043a\:0430\:0437\:044b\:0432\:0430\:0435\:043c \:0440\:0438\
\:0441\:043a\:0438 \:043f\:043e \:043e\:0441\:044f\:043c \:0433\:0440\:0430\
\:0444\:0438\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, 
   3.747661032742928*^9, 3.748969734853208*^9, 
   3.748969785634802*^9},ExpressionUUID->"77748391-58ef-4692-85bf-\
c3d4ec17fbdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ticksSetVertical", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"height", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"height", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"height", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleH", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ticksSetHorizontal", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"length", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"length", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"length", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middleL", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ticksSet", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"size", "/", "4"}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"-", "cellLength"}], "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"size", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"Floor", "[", 
           RowBox[{"3", 
            RowBox[{"size", "/", "4"}]}], "]"}]}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "0.5"}], ")"}], "*", "0.5"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"size", ",", 
         RowBox[{"N", "[", 
          RowBox[{"cellLength", "*", 
           RowBox[{"(", 
            RowBox[{"middle", "-", "0.5"}], ")"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ticks", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ticksSet", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ticksSet", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"ticks", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ticksSetHorizontal", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ticksSetVertical", ",", "None"}], "}"}]}], "}"}]}], ";"}], 
    "*)"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74766059129346*^9, 3.74766061456117*^9}, 
   3.747661032743846*^9, {3.748933853433467*^9, 3.748933890369454*^9}, {
   3.7489339519881077`*^9, 3.748934022178279*^9}, {3.748934089035924*^9, 
   3.748934096639612*^9}, 3.74896973485367*^9, 
   3.748969785635269*^9},ExpressionUUID->"02e0b0f2-2f10-41bb-9023-\
b31a6a7a162f"],

Cell["\:041f\:043e \:0440\:0438\:0441\:043a\:0430\:043c \:043d\:0430\:043c\
\:0435\:0447\:0430\:0435\:043c \:043b\:0438\:043d\:0438\:0438 \:0441\:0435\
\:0442\:043a\:0438", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660845455511*^9}, 3.747661032744216*^9, 
   3.748969734853849*^9, 
   3.7489697856354237`*^9},ExpressionUUID->"782a6820-0687-410c-958c-\
7b9f25185627"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"lines", ",", 
      RowBox[{"{", "}"}]}], "]"}], ";", 
    RowBox[{"leftTicks", "=", 
     RowBox[{
      RowBox[{"ticks", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"Length", "[", "leftTicks", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AppendTo", "[", 
    RowBox[{
     RowBox[{"lines", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"leftTicks", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"lines", ",", 
      RowBox[{"{", "}"}]}], "]"}], ";", 
    RowBox[{"rightTicks", "=", 
     RowBox[{
      RowBox[{"ticks", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"Length", "[", "rightTicks", "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AppendTo", "[", 
    RowBox[{
     RowBox[{"lines", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "lines", "]"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"rightTicks", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "0.5"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.747661032744575*^9, 3.748969734854225*^9, 
  3.7489697856357327`*^9},ExpressionUUID->"ceb1d690-3e9a-454d-b782-\
51f5dc6358d6"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0451\:043c \:043c\:0430\:0441\:0441\
\:0438\:0432 \:043b\:0438\:043d\:0438\:0439\[Dash]\:0433\:0440\:0430\:043d\
\:0438\:0446 \:0441\:043b\:043e\:0451\:0432 \:043f\:043b\:0430\:0441\:0442\
\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660912488222*^9}, 3.747661032744845*^9, 
   3.7489697348543863`*^9, 
   3.748969785635898*^9},ExpressionUUID->"e08127b8-7023-477a-9e50-\
984a7799d631"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "-", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"layers", "[", 
          RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
         "]"}], "/", "cellLength"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "barrierCoordinate"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"size", ",", "barrierCoordinate"}], "}"}]}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"barrierCoordinate", "<", "middle"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<stress\>\"",
            "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"stress", "=", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", "\"\<stress\>\"", 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"signum", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"stress", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"signum", "=", "\"\<+\>\""}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lineBarriers", ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"signum", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{"stress", "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "6"}]]}], "]"}], "]"}], "<>", 
            "\"\< \:041c\:041f\:0430\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "textPadding"}], ",", 
             RowBox[{"textPadding", "+", "barrierCoordinate"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barriers", "=", 
   RowBox[{"Graphics", "[", "lineBarriers", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.747661032745192*^9, {3.748934559310659*^9, 3.7489346973352013`*^9}, {
   3.748936028834214*^9, 3.74893640178518*^9}, {3.748936537538189*^9, 
   3.74893659455238*^9}, {3.748936626625805*^9, 3.748936705526024*^9}, 
   3.748936851846299*^9, {3.7489369647365932`*^9, 3.748936969645989*^9}, 
   3.7489697348547573`*^9, 
   3.7489697856362667`*^9},ExpressionUUID->"fb5db8d5-5e33-4f03-bdea-\
9b8a047a785d"],

Cell["\:0417\:0430\:0434\:0430\:0451\:043c \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\:043e\:0435\
\:043d\:0438\:044f \:0438 \:0446\:0432\:0435\:0442\:043e\:0432\:0443\:044e \
\:0433\:0430\:043c\:043c\:0443", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660953767308*^9}, 3.7476610327454557`*^9, 
   3.748969734854912*^9, 
   3.7489697856364202`*^9},ExpressionUUID->"e22474cc-b76e-4681-88b9-\
18dd26a3a6f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "LightBlue", ",", "Green", ",", "LightGreen", ",", "White", ",", 
           "Yellow", ",", "Orange", ",", "\[IndentingNewLine]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myRainbow", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "White", ",", "White", ",", "White", ",", "White", ",", "White", 
           ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0.6", ",", "0.6"}], "]"}], ",", "Yellow", 
           ",", "Orange", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.6", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", "x"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"myRainbow", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0.5", ">", "x"}], ",", "White", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<Rainbow\>\"", ",", "x"}], "]"}]}], "]"}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myRainbow3D", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<Rainbow\>\"", ",", "z"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GlueMatrix", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "matrix", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TakeList", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", 
              RowBox[{"Transpose", "[", "matrix", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"matrix", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}], "}"}]}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Transpose", "[", "matrix", "]"}]}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotMatrix", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"matrix", ",", "matrixName"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GlueMatrix", "[", "matrix", "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "matrixName"}], ",", " ", 
           RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "lines"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "myRainbow"}], ",", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "barriers"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476531195786133`*^9, 3.747653120240994*^9}, {
   3.7476534505006332`*^9, 3.747653485458448*^9}, 3.7476535222351294`*^9, {
   3.7476535950633698`*^9, 3.7476536054617443`*^9}, {3.747653655142853*^9, 
   3.747653656807279*^9}, {3.747653688090948*^9, 3.747653739282906*^9}, {
   3.7476538118536386`*^9, 3.747653827707106*^9}, {3.747656704788455*^9, 
   3.747656729694378*^9}, 3.74765701664755*^9, {3.7476584586379547`*^9, 
   3.7476584675487127`*^9}, {3.747658699447795*^9, 3.7476587124774933`*^9}, {
   3.7476587568371267`*^9, 3.747658782431654*^9}, {3.747660465335277*^9, 
   3.747660479701996*^9}, 3.7476610327461433`*^9, {3.7489348068714037`*^9, 
   3.748934817133738*^9}, {3.74893485538281*^9, 3.7489349552592983`*^9}, {
   3.7489349950905046`*^9, 3.748935017743618*^9}, {3.748935079617112*^9, 
   3.748935148106749*^9}, {3.748935208873681*^9, 3.7489353309778967`*^9}, {
   3.74893543472754*^9, 3.7489354449637127`*^9}, {3.748935604513166*^9, 
   3.748935774112791*^9}, {3.7489358857234097`*^9, 3.748935920285569*^9}, {
   3.748937178914475*^9, 3.748937196849533*^9}, {3.748937233907132*^9, 
   3.74893723762293*^9}, {3.7489372857884893`*^9, 3.74893733649858*^9}, {
   3.74893736830401*^9, 3.748937501097311*^9}, {3.748937550591075*^9, 
   3.748937608682899*^9}, {3.748937665178151*^9, 3.748937688168676*^9}, 
   3.748969734855296*^9, 
   3.7489697856368*^9},ExpressionUUID->"7034ef44-7b65-470c-baf9-8730dfed44f5"],

Cell["\:0417\:0430\:0433\:0440\:0443\:0436\:0430\:0435\:043c \:0434\:0430\
\:043d\:043d\:044b\:0435 \:0434\:043b\:044f \:043f\:043e\:0441\:0442\:0440\
\:043e\:0435\:043d\:0438\:044f", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 
   3.7489697856369534`*^9},ExpressionUUID->"0a7544c3-9148-424a-8c8f-\
276c5880df96"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"timeStep", "=", "59"}], ";", "\[IndentingNewLine]", 
   RowBox[{"rightFlow", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Flows/right_\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"leftFlow", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Flows/left_\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"upFlow", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Flows/up_\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"downFlow", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Flows/down_\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"opening", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"folder", "<>", "\"\<Opening/\>\"", "<>", 
       RowBox[{"ToString", "[", "timeStep", "]"}], "<>", "\"\<_m.txt\>\""}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7476609656017237`*^9, 3.747660967119643*^9}, {
   3.747661148476931*^9, 3.7476611682072477`*^9}, {3.747664033808769*^9, 
   3.747664098047655*^9}, {3.747664136512883*^9, 3.747664166427652*^9}, {
   3.74766505356133*^9, 3.747665079854546*^9}, {3.747665111239793*^9, 
   3.747665126077849*^9}, {3.74893363765413*^9, 3.7489336546075163`*^9}, 
   3.7489697348557453`*^9, 
   3.748969785637251*^9},ExpressionUUID->"62966cc1-b36f-4681-9de4-\
51a178ebe406"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"opening", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<opening_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracture", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"folder", "<>", "\"\<fracture_m.txt\>\""}], ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openingAtTime", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folder", "<>", "\"\<Opening/\>\"", "<>", 
        RowBox[{"ToString", "[", "t", "]"}], "<>", "\"\<_m.txt\>\""}], ",", 
       " ", "\"\<Table\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalTime", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*\>\"", ",", 
      RowBox[{"folder", "<>", "\"\<Opening/\>\""}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748933665070517*^9, 3.748933667635915*^9}, {
   3.748967897373295*^9, 3.748967952408773*^9}, 3.748968045615181*^9, 
   3.748969785637787*^9, {3.748969873450966*^9, 3.7489698881760197`*^9}, {
   3.748970008078432*^9, 3.748970029339315*^9}, {3.749002589036405*^9, 
   3.749002591800912*^9}, {3.749197428231081*^9, 
   3.74919743718463*^9}},ExpressionUUID->"b93cc068-dfb9-4c03-b846-\
db488d037f35"],

Cell["\:0412\:044b\:0432\:043e\:0434\:0438\:043c \:0432\:0440\:0435\:043c\
\:044f \:043f\:043e\:0441\:043b\:0435\:0434\:043d\:0435\:0433\:043e \:0437\
\:0430\:043f\:0443\:0441\:043a\:0430", "Subsubtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.7476609770141363`*^9}, 3.747664166426536*^9, 
   3.748969734855447*^9, 3.7489697856369534`*^9, {3.749195493912162*^9, 
   3.749195499122786*^9}},ExpressionUUID->"0a282b52-028d-4a88-9d92-\
b554b914a0d7"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "folder", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\:041f\:0430\:043f\:043a\:0430 \:043d\:0435 \
\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0443\:0435\:0442!\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{
    "\"\<\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\:0434\
\:043d\:0435\:0433\:043e \:0437\:0430\:043f\:0443\:0441\:043a\:0430:\>\"", 
     " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"DateString", "[", "]"}], ",", "Orange"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "24"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.749195512564392*^9, 3.749195545569838*^9}, {
  3.749195598370927*^9, 3.749195681354604*^9}, {3.749197676357965*^9, 
  3.749197687499799*^9}, {3.7491981127205763`*^9, 
  3.749198119614801*^9}},ExpressionUUID->"0c7d29cd-de86-4075-b8d9-\
b2675ccfa70d"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"\<\"\:0412\:0440\:0435\:043c\:044f \:043f\:043e\:0441\:043b\:0435\
\:0434\:043d\:0435\:0433\:043e \
\:0437\:0430\:043f\:0443\:0441\:043a\:0430:\"\>", " ", 
   StyleBox["\<\"Tue 30 Oct 2018 17:29:45\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontColor->RGBColor[1, 0.5, 0]]}],
  StripOnInput->False,
  FontSize->24]], "Print",
 CellChangeTimes->{3.74980238769121*^9, 3.7498042983698835`*^9, 
  3.749806490550786*^9, 3.749808256898795*^9, 3.7498096546781435`*^9, 
  3.7498109127735476`*^9, 3.749811769699604*^9, 3.7498133773643312`*^9, 
  3.749871607190439*^9, 3.7498969358362436`*^9, 3.7498974147322035`*^9, 
  3.7498985858666534`*^9},ExpressionUUID->"ba3a312e-25b9-485b-913a-\
ecba04c202ab"],

Cell[CellGroupData[{

Cell["\:0421\:0442\:0440\:043e\:0438\:043c \:0433\:0440\:0430\:0444\:0438\
\:043a\:0438", "Subsubtitle",
 CellChangeTimes->{{3.747660686800205*^9, 3.7476607907294893`*^9}, {
   3.747660822878159*^9, 3.747660984637878*^9}, 3.7476611498754272`*^9, 
   3.747664166427878*^9, 
   3.7489697348559017`*^9},ExpressionUUID->"e4030f03-178c-4bb9-9bc1-\
1a30ee7dd6c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GridBox", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotMatrix", "[", 
          RowBox[{
          "upFlow", ",", " ", 
           "\"\<\:0421\:043a\:043e\:0440\:043e\:0441\:0442\:044c \:043e\:0431\
\:044a\:0451\:043c\:043d\:043e\:0433\:043e \:043f\:043e\:0434\:0432\:043e\
\:0434\:0430 \:043f\:043e \:0432\:0435\:0440\:0442\:0438\:043a\:0430\:043b\
\:0438 \:043e\:0442 \:0446\:0435\:043d\:0442\:0440\:0430\>\""}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotMatrix", "[", 
          RowBox[{
          "downFlow", ",", " ", 
           "\"\<\:0421\:043a\:043e\:0440\:043e\:0441\:0442\:044c \:043e\:0431\
\:044a\:0451\:043c\:043d\:043e\:0433\:043e \:043f\:043e\:0434\:0432\:043e\
\:0434\:0430 \:043f\:043e \:0432\:0435\:0440\:0442\:0438\:043a\:0430\:043b\
\:0438 \:043a \:0446\:0435\:043d\:0442\:0440\:0443\>\""}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotMatrix", "[", 
          RowBox[{
          "leftFlow", ",", " ", 
           "\"\<\:0421\:043a\:043e\:0440\:043e\:0441\:0442\:044c \:043e\:0431\
\:044a\:0451\:043c\:043d\:043e\:0433\:043e \:043f\:043e\:0434\:0432\:043e\
\:0434\:0430 \:043f\:043e \:0433\:043e\:0440\:0438\:0437\:043e\:043d\:0442\
\:0430\:043b\:0438 \:043e\:0442 \:0446\:0435\:043d\:0442\:0440\:0430\>\""}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotMatrix", "[", 
          RowBox[{
          "rightFlow", ",", " ", 
           "\"\<\:0421\:043a\:043e\:0440\:043e\:0441\:0442\:044c \:043e\:0431\
\:044a\:0451\:043c\:043d\:043e\:0433\:043e \:043f\:043e\:0434\:0432\:043e\
\:0434\:0430 \:043f\:043e \:0433\:043e\:0440\:0438\:0437\:043e\:043d\:0442\
\:0430\:043b\:0438 \:043a \:0446\:0435\:043d\:0442\:0440\:0443\>\""}], 
          "]"}]}], "}"}]}], "}"}], "\[IndentingNewLine]", "]"}], "//", 
    "DisplayForm"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotMatrix", "[", 
   RowBox[{
   "opening", ",", " ", 
    "\"\< Q = 0.16, mu = 0.4, n = 1;\n  E' = 3.2e+10, C = 0, Kic = 0;\n  time \
= 100, ts = 60;\n  mesh = 6, cell = 7.\ndoubling = 14.66\nMesh: 43x85.A= 1200\
\n\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747653460997998*^9, 3.747653495304405*^9}, {
   3.747653796100223*^9, 3.747653799875701*^9}, {3.747660987071597*^9, 
   3.7476610031592073`*^9}, {3.747661076612008*^9, 3.7476611426025333`*^9}, {
   3.747661174176361*^9, 3.7476612300712137`*^9}, {3.747661284923028*^9, 
   3.7476613898224154`*^9}, {3.7476641541370153`*^9, 3.747664166428453*^9}, {
   3.747665138222651*^9, 3.747665150908864*^9}, 3.7489337105144663`*^9, 
   3.7489679689599047`*^9, 3.7489697348561897`*^9, {3.7491976918927097`*^9, 
   3.749197692684002*^9}, {3.7496422971161222`*^9, 3.749642326224362*^9}, {
   3.749790005167671*^9, 3.749790014007488*^9}, {3.7497906600134125`*^9, 
   3.749790679063366*^9}, {3.7497909477150583`*^9, 3.749790952803091*^9}, {
   3.7497910818609962`*^9, 3.7497910819240103`*^9}, {3.749792207047981*^9, 
   3.7497922184335766`*^9}, {3.749792340778471*^9, 3.74979234564258*^9}, {
   3.749793557392832*^9, 3.7497935775719595`*^9}, {3.7497936375081034`*^9, 
   3.749793637715136*^9}, {3.7497936910109687`*^9, 3.7497936910819707`*^9}, {
   3.74979375909192*^9, 3.7497937591629343`*^9}, 3.7498007951649756`*^9, {
   3.7498009320688334`*^9, 3.749800937579988*^9}, {3.7498042554835844`*^9, 
   3.7498042722289352`*^9}, {3.749804321092074*^9, 3.7498043433821554`*^9}, {
   3.7498063241558905`*^9, 3.74980632684802*^9}, {3.7498082406888866`*^9, 
   3.749808243087455*^9}, {3.7498096440382996`*^9, 3.7498096457166643`*^9}, {
   3.749810890983674*^9, 3.749810891070694*^9}, {3.749811760200385*^9, 
   3.749811760271409*^9}, {3.7498133697705164`*^9, 3.7498133698335314`*^9}, {
   3.7498974392149153`*^9, 3.749897501913149*^9}, {3.749897539745287*^9, 
   3.7498975415658293`*^9}, {3.749898625288195*^9, 
   3.7498986391979322`*^9}},ExpressionUUID->"ef5fe2d2-c770-43e3-bbc1-\
801b2792c0e3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     RasterBox[CompressedData["
1:eJzt3QtUzWu3MPBIKUSUpC1ySwgRIfFElBApJblFyTVFpCJSCkkilFRW7t2I
5BKpRIWQbrqIqHW/pSQSvs63v57/3h7z3c4Z53zO3u/TGO/4vWOO9/1f5jPn
fPqvlrX6r3S1WiUrIyNj0/of29b//Md///2nDlGpVCqVSqVSqVQqlUqlUqlU
KpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVK
pVKpVCqVSqVSqVQqlUqlUqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVKpVKp
VCqVSqVSqVQqlUqlUqlUKpVKpVKpVCqVSqVSqdT/flVe+eu5NUoI101X2XXR
jdSw9K35pkIx4bqBTwcOMCW1P+iiqVkhIgzdW5Sxy5fUpFf67AiTnxc6DnRe
6DrB+wLyAOXtV68nlUqlUv+ZWi8pmtPYWUp4XVC5YOVkCWH69lknVjWICJ8Y
z+qi10tImJ7x1XTMLAFhmIJezKSrfEJZ+9p3k3VIbee/2GL+jkfoYbhohEkQ
qbeOZqfXVqRFF1OHl0//eaHjQOeFrhO6LygPUN7APAPrAq0jtO6/uh6pVCqV
+p/TdreD3rjHUkLTVAOORYCEsFPH9W9ObBQRVrFrS09kCwjdnWyzvQ7xCa29
8qbmnOYRrht2R+ZmFJdQOyEssPQBh1Dr4eaFc8eQsoItRgTFsQmN16sfaO9E
qv2bruvtplpC094yWWHFpIZDuxZa5/680HGg80LXCd0XlAcob1CeoXWB1hFa
d6hOoLqC6vBX9weVSqX+XbXuX/sp9qiUMPDsrLlLWsSEs7rXTTocICR01nCW
c3/HJ6woHbc7eCuPUM9iVY/5xlxCDfQt1qkfh3DWkhV+6weyCTsNce922KKW
sKb8QpT2lRpC/Sl27lZOjCmnP1vt4b9Fsm/bWfYqqMF+1v3SscrsLTI+JmuE
UC1Wi9U8uH/sG6S9/PPbc7G1WNN3gcP3Kr1B/ue1I6eW1GInyedEaGZWoyei
EJfpb2sZo+IWn0iE49BxoPNC1wndF5QHKG9QnqF1gdYRWneoTqC6guoQqluo
zn91/1GpVOr/lGrbbR0rb0kJi8zNjvtpSAhzFBMaNg0XEh5Xbi/s78cn3LBm
V+jll1xCbVb0zoRDHEKHoA5OOsZswrRBHdMGf6whdO5R13PEwj9Y22u50Ze3
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
pNa8HMqpPHiVmf8G3l4XHF6K0b4rl0+/O8/sF8r37bibpoiRjmDpvT59mP3F
UJX15EWICIWOUfb7bRWzT3GSRqVe4QpR5pim6UbZzH6X6b7mZIi9EDn0D9jj
tJLZN1mCzU2bSwUodNapdf3Ui3C8U6977tt2ClDExFWxw4wKcXzWQ/01z5UE
aMK23XsODHiO4846J2ZnVrauB/vrHYdzBTheldfOSv4kH+l4dHhySJaJH9wz
dc0SXz7KPG6m+HT3Mxz3LT2VGr+Cj3z1+gXb8J7+ZRw6DnRe6Dqh+4LyAOUN
yjO0LtA6QusO1QlUV1Ad/v5D1m1bHKpzqC+gPoL6DupTqK+hOQDNje/nDDSX
oDkGzT1oTkJzFZrD0NyG5nzbfVH/vYy8JcPP0ZMSmnzZMNZmuIDQ/3np9PLp
HELn1LG+KtE1WI40OWPl0bfI+chvj4PTOdj8mUkxi3IrkS0nGWU58LFf5oiN
71QVoWQjg8b6EiG2OizNeG5LHnJYILPIRUOC9e3cUvT63nV8HxuMHm6pfEPu
+zcffnVvHk/2L2tMsu6IdmS/3zydFRvfTD5fzPRieXYbSM6TO0O1b033IufP
x56ntlnnkHPsWll3z5yt5Ou0HWpWrJ0ox8zDQDRSYVtJ6/NajPvRuGPMc1nz
musFXZ9LkJt8nuK5TsxzXJFT85HAJjFSbtnkWiBg5ra15dSorJFiVDDzjHzt
e+a5Uj45t/eyVSKkPMHdeP0X5vk0rfenGKWzQmSZuVFpgAazj1jOHbSjRCBA
edn213vOZvYjf7l+F3YuaY0ffBJrxGX2Nf1iu6Htn7bupz2WrZbzZ/ZBl50J
Q5eP5CMtz0UFldwnzHlPF38+VcxDrBFDhP2G5OO4yqjJ05+v4yEH4WgbNbVH
zD6YFWmwYCQPZebJdT/HzcPx5PupX9VFXOT2IvjTjqhcHN8xSlxyObc1Lo4d
4crJwXHdygVfHa+0zlmzi00NHn8dh44DnRe6Tui+oDxAeYPyDK0LtI7QukN1
AtUVVIdQ3UJ1/vsP2RdtcaiPoL6D+hTqa2gOgHMDmDPfzyVojkFzD5qT0FyF
5jA0t6E5D+0LbfdF/WdaPXF87mddCaHD9uYEjbs8Qu1K1w9nDtWSdtcZ0uTC
xgbn7w3SuP4aGQ+r1c6Yx2PcbX3gnvILVDQk9wVbVojt0t3mXRTvCbK+fGVl
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
g72V2zvIXvMtWvqx+MGnB2wsX233pR6XXiGVdHmDtXpcbE6ecOn9jRXIcHzD
jC/RPKy1vfZIBe1S5HAnuKvtLT62+tGi4i9FhWhpzAs7YYYAW2heL9ju+wzp
C2WHyt8WYvN38BQrox8ij/vuWaoJIqzhKvNt/l+ykaFExlxtlxg7p+R92PtO
d5HtiKG3x86XYOtedzfcO/oaYt1xbokSS7Ay85fZzrwVh1TCIlazdkmxDhuc
wkTdI9CTbVwNcaMUKxMZYX55wjJmXY2Cu0WF/uB9mOwWpfdqZPxjt4xj56vJ
/TH5lpzm3Rtk3O1g9dbGCz8fh44DnRe6zu/vC8oDlDcoz9C6QOsIrTtUJ1Bd
QXUI1S1U51BfQH0E9R3Up1BfQ3MAmhvQnPl+HlGp1L+PH96GSi6nSAjP+Ibd
veIpJFwaXM6ePJpPaD3ifNNFVS6hbPDsncnj2ITxzs67c3xrCHPO2PaSBtZi
bTt9XXJi3Bukf3PhvvW9OFjnFx+d029VIa2uje1XTuNiWSVaTeUTKpD16TlB
6pt4WPneGiuuJ5Yi7z2708Jt+diwzdsLJrQUoeMr3mSu3SrATq5cnH7vVAFi
mTk67zERYo2tEk+w1+Uj+/rOc0q+CLGc+TfHyyjlIZlw13rpSRGjx8r5Dnb3
kWaY2laTUWLsgoOeU9fXZiKW+tW8yhtirG/Z+fCrK26jESEmjk6DJFieTYnd
7NnX0fWFATV+PhKsW02GTZXmVXSwV7inYZwEu4YtsJvWPRnZ9qpJ3ZglwVY/
S62PqUpCObLyzzJLJViHc67hoqoEMA4dBzovdJ3QfUF5gPIG5RlaF2gdoXWH
6gSqK6gOobqF6hzqC6iPoL6D+hTqa2gO/Or5RKVSf72BvQs7lR2QEn5Y+9tq
7gox4bpxq/JV1goI9Rv2+7PH8Qg3nF5dss+LQyi75fnzl9dqCa2F7lOVZtcQ
Llr3oPLQ5VqsV/VCg4sfq5HWR6Nyt9bnoTZZvcy3JPV+heRDG503vedgRfP6
PU4YUImcTw0fIZDnYfP7+3hOFb5ASh1n9vxUxsOWC4Zkqm4tQZoDPJNcjvOx
cSfCm64bFSGXbi8ckhcJsLeee1dJ6guQyc4dnxSlAuyGTj2H3F/1FJlGopiq
1UKs/Uq/WU9DH6OgYr+G0feF2JwO0lnFzg9RoNaRpanaImyFUdjTjF65KKrH
1NGvrURYq1Cvsvtdc1BDZ1mDeetF2Dk3xbcH7XiAtNUU58t7irAa2x/2rhgF
x6HjQOeFrhO6LygPUN6gPEPrAq0jtO5QnUB1BdUhVLdQnUN9AfUR1HdQn0J9
/avnDZVK/eeoLxi4qucDCaH8pFvXXGqFhKGqu8Y3lfAJDSVVXSY94RL2KQ14
arSQQ5hv5p1vmFBL6P/2wlPBmhrCaBunVys0a7HHdq0dIy56g3x9ja2X72Az
7pwi/zboNdKwUJ24fTYHm6KevSBEswod1A8I7KHGxdqvctuQl16BZOZskb3E
5jL2OdPYOLcMpVyXXdttJw/LqXx//3lAKXJ2WcQ/WMfDPrnRYGI7sgTZHxbu
GD2Zj22YPXn/+pnFSJAuYnXK52NNciZqVp8sRBoB748Pr+NjU9wGTPIZVYjS
kLnwaHcBtsh40JSpj58jjWiPhuV9BdgUnajB1WfhOHgc4LzQdUL3BeUByhuU
Z2hdoHWE1h2qE6iuoDqE6haqc6gvoD6C+u5XzwMqlUr9Xn0TmWT/e1JCi1dj
44YPlJAGxmz4bayQ8Lhye2F/Pz5h88stwxe17gffq82K3plwiENY9/XT1+cz
2YSmJ1oWPJOpJSyNbvb2n1uDnaKyL9ewUw1SPtlpwqVZtdg1veoSmg+9QaGf
NwX0mc3GXpQvGW/TrRrNqq8OCHrNxg4cunSjw4pXSGaSZ7LOMg7jvHBJAPsl
UlqjfFoul4OtyH3aWxpfiTStxDrmA7nYeMUJAYOOVyCVTq9Knq3jYnPerNoZ
mlGOnqh21ooJ5mIjs16dGmxfjgRdNzcUxnOxJkVxg/d+KwPj0HGg80LXCd0X
lAcob1CeoXWB1hFad6hOoLqC6hCqW6jOob6A+uhX9zeVSqX+Txk5UXHurGgp
oczECSvk5CSERQdrrhmGCAmdNZzl3N/xSWcP72PQ+pz5vZlZ9knNM7mE8Snv
jbrqcAhnLVnht34gm/D4yTXxhra1hO5zo8cX3Koh1J9i527lxJhy+rPVHv5b
5O7SJdUltwZbtNjFrXLBW5Ss1TX2mEEt9uPTdSH9Lr1BxwVyM1siarF9tZrC
AjTeoIbRo7+F59diVcYZtOvzpBo9EYW4TH9byxgVt/hEIhyHjgOdF7pO6L7A
PAB5g/IMrQu0jtC6Q3UC1RVUh1DdgnX+v6QPqVQq9e+m/rP53lVFUsLkFX3D
PhyUEEa7r4wx2SYirGLXlp7IFhDKls9eNjCCT1gjTn/pmsAjbI65cnLFOS7h
9X77+/s+5RBqPdy8cO4YUlawxYigODZh/msl7cQNpNcP9e+0SobUtLdMVlhx
LaHh0K6F1rk/L3Qc6LzQdUL3BeUByhuUZ2hdoHWE1h2qE6iuoDr81f1BpVKp
1P+cyX2un41WlRJqhWe362wqITSWMarr2iIitHwwybG8n5Bw1tj3byqtBIRh
Cnoxk67yCWXta99N1iG1nf9ii/k7HqH85bl5oiOknaJ7nNu3mLToYurw8uk/
L3Qc6LzQdUL3BeUByhuUZ2hdoHWE1v1X1yOVSqVS/5l2KtA/pP5VQvjk40fF
+V6k573z1TUqxYRVGbdUH88lLeq/WC/nrYiwU5+sQp39pJlnEn2nzvl5oeNA
54WuE7ovKA9Q3n71elKpVCqVSqVSqVQqlUqlUqlUKpVKpVKpVCqVSqVSqVQq
lUqlUqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVKpVKpVCqVSqVSqVQqlUql
UqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlU
KpVKpVKpVCqVSqVSqf9k/w98RvD+
      "], {{0, 0}, {86, 85}}, {0, 1}], {
      LineBox[{{1, 52}, {85, 52}}], 
      InsetBox[
       FormBox["\"+0.5 \:041c\:041f\:0430\"", TraditionalForm], {2, 53}], 
      LineBox[{{1, 34}, {85, 34}}], 
      InsetBox[
       FormBox["\"+0.5 \:041c\:041f\:0430\"", TraditionalForm], {2, 35}]}}, {
    Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
     Automatic, FrameTicks -> {{{{84.5, 
          FormBox[
           RowBox[{"-", "350.31092500000005`"}], TraditionalForm]}, {63.5, 
          FormBox[
           RowBox[{"-", "175.15546250000003`"}], TraditionalForm]}, {42.5, 
          FormBox["0", TraditionalForm]}, {21.5, 
          FormBox["175.15546250000003`", TraditionalForm]}, {0.5, 
          FormBox["350.31092500000005`", TraditionalForm]}}, None}, {{{0.5, 
          FormBox[
           RowBox[{"-", "350.31092500000005`"}], TraditionalForm]}, {21.5, 
          FormBox[
           RowBox[{"-", "175.15546250000003`"}], TraditionalForm]}, {42.5, 
          FormBox["0", TraditionalForm]}, {63.5, 
          FormBox["175.15546250000003`", TraditionalForm]}, {84.5, 
          FormBox["350.31092500000005`", TraditionalForm]}}, None}}, 
     GridLines -> {{0.5, 21.5, 42.5, 63.5, 84.5}, {0.5, 21.5, 42.5, 63.5, 
      84.5}}, GridLinesStyle -> Directive[
       GrayLevel[0, 0.4], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "DomainPadding" -> Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
     PlotLabel -> 
     FormBox["\" Q = 0.16, mu = 0.4, n = 1;\\n  E' = 3.2e+10, C = 0, Kic = 0;\
\\n  time = 100, ts = 60;\\n  mesh = 6, cell = 7.\\ndoubling = 14.66\\nMesh: \
43x85.A= 1200\\n\"", TraditionalForm]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1lw1oVWUYx08p4zIiRkrkEFslY1jiRCSmjDORUhPRFEJEZGiJDFExkRyx
rqioRWhYZIo6yyhDxPyYVx3j5nTOuY3r7tync3ffzm1uIn6G0Hmfj/fg+XcP
jP/4bZz3vM/zf5/ned9ZuX7xF6Mcx7nu/bzi/Zjf+Rlxg7os52zl5rJh0FMb
1/ww9DVq6onxyz6fiZrfE3u39dl90IsTdgx8GkFNW2oWQi3wVnGno0arjn5U
8nAINH30Z69PPo26ITe18bcNqFWby46kT0HNoA0Oghb2Z04NnUA1uysqQJ20
fM/lR1mo4Z9mf7e2bwC0pfbJkq7fUbNDJrCo384ykUVNFI49OafjHugMk84j
qHtNWFeg3jPbG4+aRwntBz3wi3lQH9YtWJm2FPWT1159f+ebqMVeNl/U3wV9
XlRQumkf6pKIMRLqXw/MQqijvFWaa/tAPfO2L/we9cyh4T8q5qMaF+Wmoq4i
A/eCXpxnNog6ZptxMKrZ3VujUcsfZXlO6gFNn9I2MWUr6pfmuLqodGxedIO+
Z+xbiko2KkSNm3TmoE4yYX3SBUrbK0FtMctsQp1GD2qz/F01Z7c5AJ3wXpPF
n9d1upNlfdXc6Su8FHTCd5vT+O/xDneL7E91XgftGOIy/0OzcMKtkfipLvBW
fWNbAuLuHeqDVzIS7jjJj+oZqqvtkNcSqpN30AeUsDbwTQXVsTbwWZzq0m3w
ZQPVmVbwcRdttwV830t1oAXOCZ/rZjhXj+mcNiU5h41wblNo/UY457y/BqgL
GRS/W1BHOD/1UHcyKf9xqFPsqzjWN/JPHdRB9slNd5/US9WPyQ8xqLOc9xjU
5SjltxbqOOexxp0m9V61mvJ1A/oE56UK+orzjYlfJfQhjvM16Fscz6vQ5zhu
5dAXOT6XoY9yHKLQd3m/ZdCneV+XoK/z90dgDkij7zwHcwN/z2mYM4pJT8Jc
wu//002R+UU1n97zK8w9/P/7YU4Kk093wVzlvPSMuKfmmEIyDJzSshx5iPKE
PCL7CvI1q82DnMrYWORRqjNDwDVfQZ5hlp2AvJqeQeBf0cLIs8SHQd5Ex38A
+Haz7A7k2XRukev5CvK9Jsx7kOdR4UM+SMv2A98vdSPI51KfQP6UNnwX+DEK
NPJFUg+DnBU5+6ovia+Qh6TOBzn7qjeJr5Czr5BHpX8FOfsKOfsKOfuqO4mv
kLOvkLOvupL4Cnm2zBlBzr7qTOIr5Owr5OyrjiS+Qj5X5o8gZ18lkvgKOfsK
OavPta7lk3/aLdc6GJG5RLnWzTTyg8+1znLe2yzXuhyj/N62XOs459Hnq6Xu
hylfrZZrn0jIvKJc+wrH3+da1zjOzZZXSN8aoYWbLNc+x3HzufZFPneNlmsf
DckcozxT6l0+naMGy7VP83m5Zbn2dT4XPtc5IEz+r7dc5wb2edxyrYPZMt8o
t/c/8m2d5TrHjJA/b1qucw/70Oc6JxVTYGOWH3ipPvpc5zCde5Tr3Mb5qbHc
znkUv2rLdS7k/VVZrnNkMa1/3XKdOzmPlb7/ZU51ZB5SrHMt5+Wq5ToHc/yv
WK5zM8e53Pe/zNkJiuc/vv9lLue4RS3XOV7nJOU693McSn3/S50N034v+P6X
ewXv67zleg/h7z9rebXcW5zF5jv/tlzvOVGZn5Tr/Y/XPW653qP4/ccs/0Du
Xc7b5j2HLdd7Gv//j77/5V7nEN/u+/9/67Lj/AewrmBZ
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -287.5}, {7.5, 287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -287.5}, 
                    Offset[{4., 0}, {7.5, -287.5}]}, {{
                    7.5, -196.44262593630742`}, 
                    Offset[{4., 0}, {7.5, -196.44262593630742`}]}, {{
                    7.5, -105.38525187261473`}, 
                    Offset[{4., 0}, {7.5, -105.38525187261473`}]}, {{
                    7.5, -14.32787780892204}, 
                    Offset[{4., 0}, {7.5, -14.32787780892204}]}, {{7.5, 
                    76.72949625477054}, 
                    Offset[{4., 0}, {7.5, 76.72949625477054}]}, {{7.5, 
                    213.31555735030952`}, 
                    Offset[{4., 0}, {7.5, 213.31555735030952`}]}, {{7.5, 
                    258.8442443821559}, 
                    Offset[{4., 0}, {7.5, 258.8442443821559}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -287.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -196.44262593630742`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -105.38525187261473`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -14.32787780892204}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 76.72949625477054}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["11", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 213.31555735030952`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["12", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 258.8442443821559}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Function", "[", 
                 RowBox[{"x", ",", 
                   RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.6, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0.4, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.6, 0.6]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.6, 0.6], Editable -> False, Selectable -> 
                    False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4, 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0, 0], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", "x"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.5791803252727762`", ",", "2.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.6583606505455524`", ",", "4.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7375409758183287`", ",", "6.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8167213010911049`", ",", "8.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9354917890002692`", ",", "11.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9750819516366573`", ",", "12.`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7497910767888556`*^9, 3.7497910825561404`*^9}, 
   3.7497921604903507`*^9, 3.7497922189797015`*^9, 3.749792407197445*^9, 
   3.7497930028207293`*^9, 3.749793532351409*^9, 3.7497935785571623`*^9, 
   3.749793644350545*^9, 3.7497937028425417`*^9, 3.749793762399644*^9, 
   3.749800386590419*^9, 3.7498005278267193`*^9, 3.7498009091590843`*^9, 
   3.7498009396554127`*^9, 3.749801243165845*^9, 3.7498016322398276`*^9, 
   3.7498023879312725`*^9, {3.749804277572139*^9, 3.749804298638955*^9}, {
   3.74980433049821*^9, 3.74980434409931*^9}, 3.749806490852882*^9, 
   3.7498082573189*^9, 3.7498096549572077`*^9, 3.7498109130386086`*^9, 
   3.7498117699456654`*^9, 3.7498133779274693`*^9, 3.7498716075315304`*^9, 
   3.7498969359997134`*^9, 3.7498974149854383`*^9, 3.7498975060552044`*^9, 
   3.7498975430145283`*^9, 3.749898586056816*^9, 
   3.7498986420827293`*^9},ExpressionUUID->"0f7f6b27-32d1-4b0c-aca3-\
98dad325de64"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749791069507349*^9, 
  3.74979107120269*^9}},ExpressionUUID->"e467c358-4951-494d-9498-\
e7f7b472b4f7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749198148660359*^9, 3.7491981613868237`*^9}, 
   3.749198553728691*^9},ExpressionUUID->"70308cf0-74c5-4b09-be7f-\
c253b89272bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cellLength", "*", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"opening", "[", 
           RowBox[{"[", "middle", "]"}], "]"}], "]"}], ",", "1"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "130"}], "}"}], ",", "All"}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cellLengthDouble", "*", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"openingDouble", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"openingDouble", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "]"}], ",", "1"}], "}"}]}], "]"}],
      ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "130"}], "}"}], ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.749196985608224*^9, 3.749197025912334*^9}, {
  3.749197061266089*^9, 3.749197061751774*^9}, {3.74919721845118*^9, 
  3.7491972432643757`*^9}, {3.749197285157329*^9, 
  3.7491973012521152`*^9}},ExpressionUUID->"c9e157ff-5cd2-4aa5-afd2-\
57bfec35d55b"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"openingDouble\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"16\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,31,1,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7494688309447327`*^9, 3.7496422728760767`*^9, 
  3.749790026304029*^9, 3.7497902230774517`*^9, 3.7497906493991218`*^9, 
  3.7497907567478304`*^9, 3.74979096090278*^9, 3.749791076886877*^9, 
  3.7497921605963616`*^9, 3.749792407313458*^9, 3.749793002937743*^9, 
  3.7497935324704227`*^9, 3.7497936444585695`*^9, 3.7497937029744453`*^9, 
  3.749793762494652*^9, 3.749800386683427*^9, 3.7498005278977346`*^9, 
  3.7498009092290835`*^9, 3.7498012432528515`*^9, 3.7498016323548403`*^9, 
  3.749802388039288*^9, 3.7498043010514975`*^9, 3.7498064909799166`*^9, 
  3.749808260031515*^9, 3.7498096550712333`*^9, 3.7498109151360865`*^9, 
  3.749811770056687*^9, 3.7498133782615376`*^9, 3.7498716077125587`*^9, 
  3.7498969360895348`*^9, 3.7498974150791965`*^9, 
  3.7498985861629696`*^9},ExpressionUUID->"df194c06-b429-497a-b001-\
3a4463df1dea"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"openingDouble\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"16\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,31,2,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7494688309447327`*^9, 3.7496422728760767`*^9, 
  3.749790026304029*^9, 3.7497902230774517`*^9, 3.7497906493991218`*^9, 
  3.7497907567478304`*^9, 3.74979096090278*^9, 3.749791076886877*^9, 
  3.7497921605963616`*^9, 3.749792407313458*^9, 3.749793002937743*^9, 
  3.7497935324704227`*^9, 3.7497936444585695`*^9, 3.7497937029744453`*^9, 
  3.749793762494652*^9, 3.749800386683427*^9, 3.7498005278977346`*^9, 
  3.7498009092290835`*^9, 3.7498012432528515`*^9, 3.7498016323548403`*^9, 
  3.749802388039288*^9, 3.7498043010514975`*^9, 3.7498064909799166`*^9, 
  3.749808260031515*^9, 3.7498096550712333`*^9, 3.7498109151360865`*^9, 
  3.749811770056687*^9, 3.7498133782615376`*^9, 3.7498716077125587`*^9, 
  3.7498969360895348`*^9, 3.7498974150791965`*^9, 
  3.7498985862099624`*^9},ExpressionUUID->"940edc2f-dda5-43de-8251-\
31a5683e2024"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.019444444444444445`], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQDQN5Jg3bHZw0HSpj9yeY1yg43HFjruBWgfENHPj2
GczU+qHhYMYjLxi8y8Jh0RbzH4eOaEDlHRzevT5gqdyl4XDd5L2F62wXh+R3
UU52HjD1Hg5yy1946P1Xd5jy2O9lwk0fBzmxLN/P69Sh+gMcGtUOtS0PV3fQ
8Lzus687yGF7Uv1N259qUPNCHPwdhBMPT1ZzaFNgVz2zKsxhXpzmaQF1Naj5
EQ7iHgF/JDarOjz9bvb35skoB+12sZvnzFWh9sU4iFxwufFhi4qD8/m0q89f
xDmog6zTUoHan+Cg7evluH26skNg8Olrv5oTHaI5igIO/VGCuifJ4fL8vx6C
kUoODPaPDzVOTnZQ1p26XXmNItR9KQ4LdZ8HxXxVcFiv9Xsdx+JUhyXH3+f+
MlaAujfNYZ37wyqRc3IOcWLCs/s3pTu8TSmYskdKFur+DIdqwynCb72kHXiZ
gC4/lOmgxpiVdTNKEuqfLAdhzy9GXa7iDnveOhXPvZjt4Pu5L7iERRTqvxyH
kq2iv0/3CTlk34yKV3mY61CwcRHb5Q38UP/mOTAEzbbYOZ/TQepokffqD/kO
+5tMki9uYYL6v8DhxbdJxzJkv9qnRhyVlmQodHh4t6G1iaPdHhIehQ6wdGLj
d3HiHfYiOB8SPgi+iMtd9gX8xXA+JLwQ/NeWL2uTxUvgfEj4IfiH9b9+VpMv
hfMh4YngAwASWgfl
         
         "]]}}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {}, {}, {}, {{}, {}}, \
{{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 130}, {0, 12.6294}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749196990364318*^9, 3.74919702626657*^9}, 
   3.7491970828775806`*^9, {3.749197218956336*^9, 3.749197243713479*^9}, 
   3.749197301774363*^9, 3.749198565405284*^9, 3.7494688313038144`*^9, 
   3.7496422729661055`*^9, 3.749790026392049*^9, 3.74979022318948*^9, 
   3.7497906494901557`*^9, 3.7497907568318634`*^9, 3.749790960981798*^9, 
   3.7497910769648952`*^9, 3.7497921607023993`*^9, 3.7497924074104805`*^9, 
   3.7497930030407667`*^9, 3.7497935325544415`*^9, 3.7497936445505915`*^9, 
   3.7497937030714674`*^9, 3.7497937625926876`*^9, 3.749800386790451*^9, 
   3.749800527991757*^9, 3.749800909333127*^9, 3.749801243357876*^9, 
   3.749801632446862*^9, 3.7498023881343107`*^9, 3.749804301221534*^9, 
   3.749806491091943*^9, 3.749808260200554*^9, 3.749809655153269*^9, 
   3.749810915324129*^9, 3.749811770147708*^9, 3.749813378379578*^9, 
   3.7498716078075933`*^9, 3.7498969361677637`*^9, 3.7498974152499046`*^9, 
   3.7498985862502484`*^9},ExpressionUUID->"4fbd6891-ae2e-44b2-afeb-\
bcb3d4e21aa6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"fracture", "[", 
   RowBox[{"[", 
    RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "]"}]], "Input",Ex\
pressionUUID->"ea3271c4-ed16-4d2d-91b3-a7f91fe0acdf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"100"},
      {"0.26481`"},
      {"268.419`"},
      {"191.598`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.749197715067815*^9, 3.7494688314248953`*^9, 
  3.749642273065133*^9, 3.749790026407052*^9, 3.749790223201497*^9, 
  3.749790649502158*^9, 3.7497907568428526`*^9, 3.7497909609927998`*^9, 
  3.749791076977911*^9, 3.7497921607163897`*^9, 3.749792407423483*^9, 
  3.749793003052785*^9, 3.749793532567445*^9, 3.7497936445616064`*^9, 
  3.74979370308447*^9, 3.7497937626106777`*^9, 3.7498003868024535`*^9, 
  3.7498005280057592`*^9, 3.7498009093471103`*^9, 3.7498012433708787`*^9, 
  3.7498016324618664`*^9, 3.749802389997748*^9, 3.749804301466601*^9, 
  3.7498064912369747`*^9, 3.749808260216567*^9, 3.7498096551672554`*^9, 
  3.749810915336132*^9, 3.7498117701607113`*^9, 3.749813378407594*^9, 
  3.7498716079316216`*^9, 3.749896936183275*^9, 3.749897415265686*^9, 
  3.7498985862658777`*^9},ExpressionUUID->"e0dc18c9-8688-4f94-9f30-\
31088b14cd43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"fracture", "[", 
   RowBox[{"[", 
    RowBox[{"Length", "[", "fracture", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7491974221179657`*^9, 
  3.749197458133196*^9}},ExpressionUUID->"f65e2b65-5517-439a-887c-\
0141621d0130"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"100"},
      {"0.26481`"},
      {"268.419`"},
      {"191.598`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.749197446862653*^9, 3.7491974583776913`*^9}, 
   3.749468831438899*^9, 3.749642273082124*^9, 3.749790026419055*^9, 
   3.7497902232124987`*^9, 3.749790649516148*^9, 3.7497907568538685`*^9, 
   3.7497909610038157`*^9, 3.7497910769899006`*^9, 3.7497921607313924`*^9, 
   3.749792407434499*^9, 3.749793003066772*^9, 3.749793532579465*^9, 
   3.749793644575616*^9, 3.7497937030974736`*^9, 3.749793762621681*^9, 
   3.7498003868174567`*^9, 3.749800528019763*^9, 3.749800909362114*^9, 
   3.7498012433828816`*^9, 3.7498016324768677`*^9, 3.7498023901697726`*^9, 
   3.749804301482603*^9, 3.7498064912539797`*^9, 3.749808260232561*^9, 
   3.749809655179271*^9, 3.7498109153511357`*^9, 3.7498117701787148`*^9, 
   3.7498133784225874`*^9, 3.749871607956614*^9, 3.7498969361989117`*^9, 
   3.749897415281157*^9, 
   3.7498985862815046`*^9},ExpressionUUID->"13739721-a6c9-4319-8bc4-\
7de43216771a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "openingDouble", "]"}]], "Input",
 CellChangeTimes->{{3.7491971747444353`*^9, 
  3.749197181424363*^9}},ExpressionUUID->"73417e23-f45e-4d2a-9b2e-\
51c7ab2150d3"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"openingDouble\\\"}]\\) at position \\!\\(\
\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,34,3,23143850626509275653,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7494688314558926`*^9, 3.7496422730931396`*^9, 
  3.7497900264420757`*^9, 3.7497902232385054`*^9, 3.749790649543174*^9, 
  3.7497907568808613`*^9, 3.749790961023821*^9, 3.749791077015907*^9, 
  3.749792160755398*^9, 3.7497924074594913`*^9, 3.7497930030957785`*^9, 
  3.7497935325954685`*^9, 3.7497936446036024`*^9, 3.74979370312848*^9, 
  3.749793762650688*^9, 3.749800386843463*^9, 3.749800528045768*^9, 
  3.7498009093911204`*^9, 3.749801243410901*^9, 3.7498016343242903`*^9, 
  3.7498023901949043`*^9, 3.749804301512602*^9, 3.749806491284004*^9, 
  3.749808260261568*^9, 3.7498096552083993`*^9, 3.7498109153704367`*^9, 
  3.749811770198101*^9, 3.7498133784475937`*^9, 3.7498716079788713`*^9, 
  3.7498969362085037`*^9, 3.7498974152967834`*^9, 
  3.7498985863127575`*^9},ExpressionUUID->"14274fde-e653-4a2e-8890-\
49ea3c102634"],

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "openingDouble", "]"}]], "Output",
 CellChangeTimes->{3.7491971821636353`*^9, 3.7494688314728975`*^9, 
  3.749642273109129*^9, 3.749790026458064*^9, 3.749790223254509*^9, 
  3.7497906495601597`*^9, 3.7497907569008665`*^9, 3.749790961039811*^9, 
  3.74979107703091*^9, 3.7497921607714014`*^9, 3.749792407475495*^9, 
  3.7497930031117826`*^9, 3.7497935326124725`*^9, 3.749793644618606*^9, 
  3.7497937031444836`*^9, 3.7497937626666913`*^9, 3.7498003868594666`*^9, 
  3.7498005280617723`*^9, 3.7498009094081244`*^9, 3.7498012434268913`*^9, 
  3.7498016344093094`*^9, 3.749802390274798*^9, 3.7498043015316057`*^9, 
  3.7498064913690243`*^9, 3.7498082602845736`*^9, 3.7498096552262683`*^9, 
  3.7498109153885765`*^9, 3.749811770215104*^9, 3.7498133784710627`*^9, 
  3.749871607996875*^9, 3.749896936224146*^9, 3.749897415312425*^9, 
  3.7498985863200145`*^9},ExpressionUUID->"bdc01f97-c709-47db-9673-\
5ec5c7f24895"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749195740626032*^9, 3.749195838422834*^9}, 
   3.749195875682662*^9, {3.749197001871498*^9, 3.749197045282043*^9}, {
   3.7491970763069763`*^9, 3.749197078351098*^9}, {3.749197140355348*^9, 
   3.7491971624982977`*^9}, {3.74919723567367*^9, 3.7491972371046257`*^9}, 
   3.7491972825243177`*^9},ExpressionUUID->"1d823a5c-ca71-4329-87cc-\
71462f01a4d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotMatrix", "[", 
  RowBox[{
   RowBox[{"openingAtTime", "[", "120", "]"}], ",", " ", 
   "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.749002583803192*^9, 
  3.749002626275002*^9}},ExpressionUUID->"c10fa637-f9da-414a-bb79-\
b71484ce19f5"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,36,4,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7490033287323*^9, 3.749468831511906*^9, 
  3.749642273145138*^9, 3.7497900282884817`*^9, 3.749790223290517*^9, 
  3.749790649603182*^9, 3.7497907569348726`*^9, 3.74979096107682*^9, 
  3.7497910770739217`*^9, 3.749792160803422*^9, 3.749792409494955*^9, 
  3.7497930049332113`*^9, 3.74979353264748*^9, 3.749793644660615*^9, 
  3.74979370500292*^9, 3.749793764529129*^9, 3.749800386899476*^9, 
  3.7498005281047955`*^9, 3.749800909442133*^9, 3.7498012434618993`*^9, 
  3.749801634616357*^9, 3.7498023903188076`*^9, 3.749804301573614*^9, 
  3.7498064914130487`*^9, 3.7498082603266115`*^9, 3.7498096552672787`*^9, 
  3.7498109154236326`*^9, 3.749811770259592*^9, 3.7498133785130625`*^9, 
  3.7498716080684195`*^9, 3.749896936260988*^9, 3.7498974153436613`*^9, 
  3.7498985863661366`*^9},ExpressionUUID->"d223ecde-35aa-4719-a1b7-\
f264e27f7f65"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,36,5,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7490033287323*^9, 3.749468831511906*^9, 
  3.749642273145138*^9, 3.7497900282884817`*^9, 3.749790223290517*^9, 
  3.749790649603182*^9, 3.7497907569348726`*^9, 3.74979096107682*^9, 
  3.7497910770739217`*^9, 3.749792160803422*^9, 3.749792409494955*^9, 
  3.7497930049332113`*^9, 3.74979353264748*^9, 3.749793644660615*^9, 
  3.74979370500292*^9, 3.749793764529129*^9, 3.749800386899476*^9, 
  3.7498005281047955`*^9, 3.749800909442133*^9, 3.7498012434618993`*^9, 
  3.749801634616357*^9, 3.7498023903188076`*^9, 3.749804301573614*^9, 
  3.7498064914130487`*^9, 3.7498082603266115`*^9, 3.7498096552672787`*^9, 
  3.7498109154236326`*^9, 3.749811770259592*^9, 3.7498133785130625`*^9, 
  3.7498716080684195`*^9, 3.749896936260988*^9, 3.7498974153436613`*^9, 
  3.7498985863817625`*^9},ExpressionUUID->"77abd51b-8668-486c-9057-\
833543c869b7"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\
\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\).\"",2,36,6,23143850626509275653,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7490033287323*^9, 3.749468831511906*^9, 
  3.749642273145138*^9, 3.7497900282884817`*^9, 3.749790223290517*^9, 
  3.749790649603182*^9, 3.7497907569348726`*^9, 3.74979096107682*^9, 
  3.7497910770739217`*^9, 3.749792160803422*^9, 3.749792409494955*^9, 
  3.7497930049332113`*^9, 3.74979353264748*^9, 3.749793644660615*^9, 
  3.74979370500292*^9, 3.749793764529129*^9, 3.749800386899476*^9, 
  3.7498005281047955`*^9, 3.749800909442133*^9, 3.7498012434618993`*^9, 
  3.749801634616357*^9, 3.7498023903188076`*^9, 3.749804301573614*^9, 
  3.7498064914130487`*^9, 3.7498082603266115`*^9, 3.7498096552672787`*^9, 
  3.7498109154236326`*^9, 3.749811770259592*^9, 3.7498133785130625`*^9, 
  3.7498716080684195`*^9, 3.749896936260988*^9, 3.7498974153436613`*^9, 
  3.74989858639752*^9},ExpressionUUID->"840ffbf7-64a7-448a-8f37-ce886f079703"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,36,7,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7490033287323*^9, 3.749468831511906*^9, 
  3.749642273145138*^9, 3.7497900282884817`*^9, 3.749790223290517*^9, 
  3.749790649603182*^9, 3.7497907569348726`*^9, 3.74979096107682*^9, 
  3.7497910770739217`*^9, 3.749792160803422*^9, 3.749792409494955*^9, 
  3.7497930049332113`*^9, 3.74979353264748*^9, 3.749793644660615*^9, 
  3.74979370500292*^9, 3.749793764529129*^9, 3.749800386899476*^9, 
  3.7498005281047955`*^9, 3.749800909442133*^9, 3.7498012434618993`*^9, 
  3.749801634616357*^9, 3.7498023903188076`*^9, 3.749804301573614*^9, 
  3.7498064914130487`*^9, 3.7498082603266115`*^9, 3.7498096552672787`*^9, 
  3.7498109154236326`*^9, 3.749811770259592*^9, 3.7498133785130625`*^9, 
  3.7498716080684195`*^9, 3.749896936260988*^9, 3.7498974153436613`*^9, 
  3.749898586413148*^9},ExpressionUUID->"d20cbbcf-4cf2-406e-9c9f-\
ff6dcca77591"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"MatrixPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotLabel\
\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\
\:0438\:0435\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"FrameTicks\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"350.31092500000005`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"85\\\", \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"19\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \\\"None\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"9\\\", \\\"\[RightSkeleton]\\\"}], \\\"\[Rule]\\\", \
RowBox[{\\\"\\\\\\\"\\\\\\\"\\\", \\\"\[Ellipsis]\\\", \
\\\"\\\\\\\"s\\\\\\\"\\\"}]}], \\\",\\\", RowBox[{\\\"PlotLegends\\\", \\\"\
\[Rule]\\\", \\\"Automatic\\\"}], \\\",\\\", RowBox[{\\\"ImageSize\\\", \\\"\
\[Rule]\\\", \\\"Large\\\"}]}], \\\"]\\\"}], \\\",\\\", \
GraphicsBox[List[LineBox[List[List[1, 52], List[85, 52]]], \
InsetBox[FormBox[\\\"\\\\\\\"+0.5 \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", \
TraditionalForm], List[2, 53]], LineBox[List[List[1, 34], List[85, 34]]], \
InsetBox[FormBox[\\\"\\\\\\\"+0.5 \\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", \
TraditionalForm], List[2, 35]]]]}], \\\"]\\\"}]\\).\"",2,36,8,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7490033287323*^9, 3.749468831511906*^9, 
  3.749642273145138*^9, 3.7497900282884817`*^9, 3.749790223290517*^9, 
  3.749790649603182*^9, 3.7497907569348726`*^9, 3.74979096107682*^9, 
  3.7497910770739217`*^9, 3.749792160803422*^9, 3.749792409494955*^9, 
  3.7497930049332113`*^9, 3.74979353264748*^9, 3.749793644660615*^9, 
  3.74979370500292*^9, 3.749793764529129*^9, 3.749800386899476*^9, 
  3.7498005281047955`*^9, 3.749800909442133*^9, 3.7498012434618993`*^9, 
  3.749801634616357*^9, 3.7498023903188076`*^9, 3.749804301573614*^9, 
  3.7498064914130487`*^9, 3.7498082603266115`*^9, 3.7498096552672787`*^9, 
  3.7498109154236326`*^9, 3.749811770259592*^9, 3.7498133785130625`*^9, 
  3.7498716080684195`*^9, 3.749896936260988*^9, 3.7498974153436613`*^9, 
  3.749898586428784*^9},ExpressionUUID->"1424a610-8e52-4573-8d04-\
3bcc98cb5ac8"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"\>"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"22", ",", 
              RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"43", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], "}"}], ",", 
          "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"22", ",", 
              RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"43", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], "}"}], ",", 
          "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", "84.5`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", "84.5`"}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "White", ",", "White", ",", "White", ",", "White", ",", "White", 
            ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                  {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                  {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.4, 0.4, 0.4],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0.6, 0.6, 0.6]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.6, 0.6, 0.6]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.6, 0.6, 0.6],
             Editable->False,
             Selectable->False], ",", "Yellow", ",", "Orange", ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                  {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                  {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.4, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0.6, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.6, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.6, 0, 0],
             Editable->False,
             Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
   GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
     InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
     LineBox[{{1, 34}, {85, 34}}], 
     InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.749002599905241*^9, 3.7490026267806168`*^9}, 
   3.749003290000227*^9, 3.74900332891006*^9, 3.749468831607942*^9, 
   3.749642273228157*^9, 3.749790028448535*^9, 3.7497902233725524`*^9, 
   3.7497906516376324`*^9, 3.7497907570159082`*^9, 3.749790961159852*^9, 
   3.7497910771689405`*^9, 3.7497921608874283`*^9, 3.749792409641002*^9, 
   3.7497930050772443`*^9, 3.7497935327365007`*^9, 3.7497936447406473`*^9, 
   3.7497937051509404`*^9, 3.749793764675163*^9, 3.7498003869895253`*^9, 
   3.7498005301132402`*^9, 3.7498009095271654`*^9, 3.749801243544932*^9, 
   3.749801634698388*^9, 3.749802390410842*^9, 3.7498043016986427`*^9, 
   3.7498064915240755`*^9, 3.749808260820753*^9, 3.7498096553843045`*^9, 
   3.7498109155196548`*^9, 3.7498117703476286`*^9, 3.7498133786400914`*^9, 
   3.749871608190448*^9, 3.749896936355752*^9, 3.7498974154218097`*^9, 
   3.7498985864442835`*^9},ExpressionUUID->"d07fc84d-4558-467b-82e1-\
b58ab5cd3702"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{".", 
      RowBox[{"/", 
       RowBox[{"run", ".", 
        RowBox[{"sh", " ", "--"}]}]}]}], "mesh"}], "-", "size"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"12", " ", "--"}], "barriers"}], "=."}], "/", 
       "InitialConditions"}], "/", 
      RowBox[{"barriers13", ".", 
       RowBox[{"txt", " ", "--"}]}]}], "E"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"25", " ", "--"}], "time"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"60", " ", "--"}], "save"}], "-", "steps"}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7489698394261713`*^9, 3.748969841467804*^9}, {
  3.748970164243572*^9, 
  3.748970177106476*^9}},ExpressionUUID->"a269eac1-fdb9-454d-a773-\
9b01eea3d0bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"upFlowAtTime", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folder", "<>", "\"\<Flows/up_\>\"", "<>", 
        RowBox[{"ToString", "[", "t", "]"}], "<>", "\"\<_m.txt\>\""}], ",", 
       " ", "\"\<Table\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"downFlowAtTime", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"folder", "<>", "\"\<Flows/down_\>\"", "<>", 
        RowBox[{"ToString", "[", "t", "]"}], "<>", "\"\<_m.txt\>\""}], ",", 
       " ", "\"\<Table\>\""}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.748968215198414*^9, 
  3.74896826937144*^9}},ExpressionUUID->"e8bed7d2-8b6c-4902-a2f3-\
e22f70ab2e97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"PlotMatrix", "[", 
      RowBox[{
       RowBox[{"openingAtTime", "[", "t", "]"}], ",", " ", 
       RowBox[{
       "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\
\:0430\:0434\:0440 \:2116\>\"", " ", "<>", 
        RowBox[{"ToString", "[", "t", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "587", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7489679795272503`*^9, 3.7489679806537457`*^9}, {
  3.748968055125259*^9, 3.748968100490901*^9}, {3.748968223926509*^9, 
  3.7489683358575497`*^9}, {3.748968379016979*^9, 3.748968427455415*^9}, {
  3.748968462519226*^9, 3.7489684794002657`*^9}, {3.74896851628974*^9, 
  3.7489685341061907`*^9}},ExpressionUUID->"f9703051-6979-4020-8c05-\
18f2a650a04f"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,40,9,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.7498985864840994`*^9},ExpressionUUID->"477fd401-1c2d-42da-9917-\
afa6c2043019"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,40,10,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586499729*^9},ExpressionUUID->"daaeedf7-998f-4023-b90d-\
776f76e5d5bd"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\
\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\).\"",2,40,11,23143850626509275653,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586515355*^9},ExpressionUUID->"9d9e3b0a-f4db-41b1-a105-\
86140a6b80c7"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,40,12,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586530981*^9},ExpressionUUID->"7a4b6c8e-b47c-4346-b461-\
12173bca5be4"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"MatrixPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotLabel\
\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\
\:0438\:0435, \:043a\:0430\:0434\:0440 \:21161\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"PlotLegends\\\", \\\"\[Rule]\\\", \\\"Automatic\\\"}], \
\\\",\\\", RowBox[{\\\"ImageSize\\\", \\\"\[Rule]\\\", \\\"Large\\\"}]}], \
\\\"]\\\"}], \\\",\\\", GraphicsBox[List[LineBox[List[List[1, 52], List[85, \
52]]], InsetBox[FormBox[\\\"\\\\\\\"+0.5 \
\\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", TraditionalForm], List[2, 53]], \
LineBox[List[List[1, 34], List[85, 34]]], InsetBox[FormBox[\\\"\\\\\\\"+0.5 \
\\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", TraditionalForm], List[2, 35]]]]}], \
\\\"]\\\"}]\\).\"",2,40,13,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586546621*^9},ExpressionUUID->"8436a190-0b70-4766-95c4-\
214616b90146"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,40,14,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.7498985865623655`*^9},ExpressionUUID->"5e868810-f444-4657-928d-\
ca73e35b9a74"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,40,15,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.74989858657786*^9},ExpressionUUID->"05ce677f-ff0a-48eb-b310-bd0acdd7995b"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\
\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\).\"",2,40,16,23143850626509275653,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586593485*^9},ExpressionUUID->"b1a47281-ff6c-4c50-8f71-\
ad4c1eb45f9c"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,40,17,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586609112*^9},ExpressionUUID->"0d480ea0-fbef-4126-b0c7-\
150ad278282b"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"MatrixPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotLabel\
\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\
\:0438\:0435, \:043a\:0430\:0434\:0440 \:211611\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"PlotLegends\\\", \\\"\[Rule]\\\", \\\"Automatic\\\"}], \
\\\",\\\", RowBox[{\\\"ImageSize\\\", \\\"\[Rule]\\\", \\\"Large\\\"}]}], \
\\\"]\\\"}], \\\",\\\", GraphicsBox[List[LineBox[List[List[1, 52], List[85, \
52]]], InsetBox[FormBox[\\\"\\\\\\\"+0.5 \
\\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", TraditionalForm], List[2, 53]], \
LineBox[List[List[1, 34], List[85, 34]]], InsetBox[FormBox[\\\"\\\\\\\"+0.5 \
\\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", TraditionalForm], List[2, 35]]]]}], \
\\\"]\\\"}]\\).\"",2,40,18,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.7498985866247377`*^9},ExpressionUUID->"ec99489f-929b-4cee-a03d-\
812a30d63e32"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,40,19,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.7498985866559896`*^9},ExpressionUUID->"6c3be7a3-54b9-4de6-98d2-\
ebbf35d1b789"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Import\\\", \\\"::\\\", \
\\\"nffil\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,40,20,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.7498985866716166`*^9},ExpressionUUID->"a84470bd-1c8a-40a4-b6bc-\
cb16494f0cac"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"$Failed\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,40,21,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586687256*^9},ExpressionUUID->"96787bc8-a673-4475-ae81-\
b9b927dcbf1d"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,40,22,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586702882*^9},ExpressionUUID->"e4cf351a-5207-4f1b-b26b-\
58e553e079dd"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\
\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\).\"",2,40,23,23143850626509275653,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586718511*^9},ExpressionUUID->"1723e181-8e0a-441a-8297-\
f8c37874cc5d"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"list\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,40,24,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.7498985867341375`*^9},ExpressionUUID->"5d291fcf-a3d0-4824-b4ab-\
43ca460fbdbb"],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a matrix.\"",2,40,25,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.7498985867497473`*^9},ExpressionUUID->"f8531aac-b1b3-4f52-b552-\
e167dfec77ee"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"MatrixPlot\\\", \
\\\"::\\\", \\\"mat0\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,40,26,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586765373*^9},ExpressionUUID->"6ef44fe6-b107-43f1-bd55-\
1c67c1d34091"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"MatrixPlot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"$Failed\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotLabel\
\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\
\:0438\:0435, \:043a\:0430\:0434\:0440 \:211621\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"PlotLegends\\\", \\\"\[Rule]\\\", \\\"Automatic\\\"}], \
\\\",\\\", RowBox[{\\\"ImageSize\\\", \\\"\[Rule]\\\", \\\"Large\\\"}]}], \
\\\"]\\\"}], \\\",\\\", GraphicsBox[List[LineBox[List[List[1, 52], List[85, \
52]]], InsetBox[FormBox[\\\"\\\\\\\"+0.5 \
\\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", TraditionalForm], List[2, 53]], \
LineBox[List[List[1, 34], List[85, 34]]], InsetBox[FormBox[\\\"\\\\\\\"+0.5 \
\\\\:041c\\\\:041f\\\\:0430\\\\\\\"\\\", TraditionalForm], List[2, 35]]]]}], \
\\\"]\\\"}]\\).\"",2,40,27,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.749898586780998*^9},ExpressionUUID->"83d613f1-24c1-499d-894e-\
6e0c40df7220"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Show\\\", \\\"::\\\", \
\\\"gcomb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,40,28,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7489694033814363`*^9, 3.749468831669951*^9, 
  3.749642273268166*^9, 3.749790028655566*^9, 3.749790223419547*^9, 
  3.749790651849712*^9, 3.749790757067904*^9, 3.749790961206849*^9, 
  3.749791077219974*^9, 3.74979216093944*^9, 3.7497924096869993`*^9, 
  3.7497930052972813`*^9, 3.7497935327875257`*^9, 3.7497936447906585`*^9, 
  3.7497937053589892`*^9, 3.749793764880195*^9, 3.749800387050522*^9, 
  3.7498005303502936`*^9, 3.749800909574176*^9, 3.749801243596944*^9, 
  3.749801634746386*^9, 3.7498023904548388`*^9, 3.7498043017546554`*^9, 
  3.7498064915831094`*^9, 3.749808260874756*^9, 3.7498096554323153`*^9, 
  3.7498109155716543`*^9, 3.7498117703966255`*^9, 3.7498133786971045`*^9, 
  3.749871608245767*^9, 3.7498969364099865`*^9, 3.7498974155468016`*^9, 
  3.7498985867966385`*^9},ExpressionUUID->"89d9c771-90d6-4529-9089-\
3eb07bd1bb71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animation", "=", 
  RowBox[{"ListAnimate", "[", "plots", "]"}]}]], "Input",
 CellChangeTimes->{{3.748968678556229*^9, 3.7489687086265507`*^9}, {
  3.748969224052269*^9, 
  3.748969235718738*^9}},ExpressionUUID->"e7ab9761-4b2d-4065-87fa-\
7177702c2c17"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i3$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i3$$ = 1}, 
     "\"max\"" :> {$CellContext`i3$$ = 59}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i3$$], 1, ""}, 1, 59, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i3$1727$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i3$$], {1, 59, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->0.,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:21161\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 2->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211611\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 3->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211621\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 4->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211631\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 5->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211641\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 6->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211651\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 7->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211661\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 8->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211671\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 9->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211681\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 10->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:211691\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 11->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116101\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 12->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116111\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 13->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116121\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 14->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116131\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 15->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116141\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 16->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116151\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 17->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116161\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 18->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116171\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 19->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116181\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 20->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116191\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 21->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116201\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 22->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116211\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 23->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116221\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 24->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116231\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 25->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116241\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 26->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116251\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 27->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116261\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 28->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116271\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 29->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116281\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 30->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116291\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 31->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116301\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 32->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116311\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 33->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116321\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 34->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116331\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 35->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116341\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 36->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116351\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 37->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116361\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 38->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116371\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 39->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116381\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 40->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116391\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 41->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116401\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 42->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116411\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 43->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116421\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 44->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116431\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 45->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116441\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 46->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116451\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 47->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116461\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 48->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116471\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 49->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116481\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 50->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116491\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 51->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116501\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 52->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116511\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 53->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116521\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 54->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116531\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 55->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116541\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 56->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116551\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 57->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116561\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 58->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116571\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}], 59->
                RowBox[{"Show", "[", 
                 RowBox[{
                  RowBox[{"MatrixPlot", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"$Failed", ",", "$Failed"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "PlotLabel", 
                    "\[Rule]", \
"\<\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435, \:043a\:0430\
\:0434\:0440 \:2116581\"\>"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "350.31092500000005`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"22", ",", 
                    RowBox[{"-", "175.15546250000003`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"43", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "175.15546250000003`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"85", ",", "350.31092500000005`"}], "}"}]}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.5`", ",", "21.5`", ",", "42.5`", ",", "63.5`", ",", 
                    "84.5`"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "White", ",", "White", ",", "White", ",", "White", ",", 
                    "White", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0.4, 0.4],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0.6, 0.6]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.6, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0.6, 0.6],
                    Editable->False,
                    Selectable->False], ",", "Yellow", ",", "Orange", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}, {
                    {GrayLevel[0], RectangleBox[{1, -1}]}}, {
                    {RGBColor[0.6, 0, 0], RectangleBox[{0, -1}, {2, 1}]}}},
                    AspectRatio->1,
                    Frame->True,
                    FrameStyle->RGBColor[0.4, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    "RGBColor[0.6, 0, 0]"],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.6, 0, 0],
                    Editable->False,
                    Selectable->False]}], "}"}], ",", "x"}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"PlotTheme", "\[Rule]", "\<\"Business\"\>"}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
                  
                  GraphicsBox[{LineBox[{{1, 52}, {85, 52}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 53}], 
                    LineBox[{{1, 34}, {85, 34}}], 
                    InsetBox["\<\"+0.5 \:041c\:041f\:0430\"\>", {2, 35}]}]}], 
                 "]"}]}, Dynamic[$CellContext`i3$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i3$$, \
$CellContext`i3$1727$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 59, 1}, 59, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{4560., {185.25, 193.25}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7494688333724546`*^9, 3.749642274644492*^9, 
  3.749790029939868*^9, 3.7497902242937465`*^9, 3.7497906525668755`*^9, 
  3.7497907577660637`*^9, 3.749790961908013*^9, 3.7497910779901543`*^9, 
  3.749792161792635*^9, 3.749792410410164*^9, 3.749793006006456*^9, 
  3.7497935335428696`*^9, 3.7497936456488543`*^9, 3.7497937060611486`*^9, 
  3.749793765581356*^9, 3.749800387944726*^9, 3.749800531094477*^9, 
  3.7498009103473387`*^9, 3.74980124438511*^9, 3.749801635473565*^9, 
  3.7498023911690025`*^9, 3.749804302616852*^9, 3.749806492466312*^9, 
  3.7498082617629576`*^9, 3.7498096563215675`*^9, 3.749810916348878*^9, 
  3.749811771277828*^9, 3.7498133796563234`*^9, 3.7498716089976673`*^9, 
  3.749896937746728*^9, 3.749897416218735*^9, 
  3.749898587202902*^9},ExpressionUUID->"36bcaea0-cd5c-4d7d-b61a-\
7423f2371570"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<~/Desktop/anim.gif\>\"", ",", "animation"}], "]"}]], "Input",
 CellChangeTimes->{{3.7489692410799913`*^9, 
  3.74896925680652*^9}},ExpressionUUID->"80303a9e-59cc-4161-93a4-\
8347d432ff85"],

Cell[BoxData[
 TemplateBox[{
  "Export","nodir",
   "\"Directory \
\\!\\(\\*RowBox[{\\\"\\\\\\\"C:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Nikita\\\\\
\\\\\\\\\\\\Documents\\\\\\\\\\\\\\\\~\\\\\\\\\\\\\\\\Desktop\\\\\\\\\\\\\\\\\
\\\\\\\"\\\"}]\\) does not exist.\"",2,42,29,23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.749468834002602*^9, 3.749642274928542*^9, 
  3.7497900302199183`*^9, 3.7497902245468044`*^9, 3.749790652834936*^9, 
  3.749790758042126*^9, 3.749790962246087*^9, 3.7497910783542233`*^9, 
  3.74979216203769*^9, 3.749792410687227*^9, 3.7497930062885065`*^9, 
  3.749793533872946*^9, 3.749793645937907*^9, 3.749793706339216*^9, 
  3.7497937658294125`*^9, 3.74980038822679*^9, 3.749800531364539*^9, 
  3.749800910723425*^9, 3.7498012447354617`*^9, 3.7498016357456136`*^9, 
  3.749802391461068*^9, 3.74980430295093*^9, 3.7498064927944016`*^9, 
  3.74980826203802*^9, 3.749809656612621*^9, 3.749810916574917*^9, 
  3.74981177151188*^9, 3.749813379919383*^9, 3.7498716092767315`*^9, 
  3.7498969380090876`*^9, 3.7498974164445715`*^9, 
  3.7498985874998145`*^9},ExpressionUUID->"b23d1e1c-7173-41cc-8d52-\
37a71a53e1ca"],

Cell[BoxData[
 TemplateBox[{
  "Export","noopen",
   "\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"~/Desktop/anim.gif\\\\\\\"\\\"}]\\).\"",2,42,30,
   23143850626509275653,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.749468834002602*^9, 3.749642274928542*^9, 
  3.7497900302199183`*^9, 3.7497902245468044`*^9, 3.749790652834936*^9, 
  3.749790758042126*^9, 3.749790962246087*^9, 3.7497910783542233`*^9, 
  3.74979216203769*^9, 3.749792410687227*^9, 3.7497930062885065`*^9, 
  3.749793533872946*^9, 3.749793645937907*^9, 3.749793706339216*^9, 
  3.7497937658294125`*^9, 3.74980038822679*^9, 3.749800531364539*^9, 
  3.749800910723425*^9, 3.7498012447354617`*^9, 3.7498016357456136`*^9, 
  3.749802391461068*^9, 3.74980430295093*^9, 3.7498064927944016`*^9, 
  3.74980826203802*^9, 3.749809656612621*^9, 3.749810916574917*^9, 
  3.74981177151188*^9, 3.749813379919383*^9, 3.7498716092767315`*^9, 
  3.7498969380090876`*^9, 3.7498974164445715`*^9, 
  3.749898587613267*^9},ExpressionUUID->"bbb03029-5161-4472-9d7c-\
1328c4b73463"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7489693868726883`*^9, 3.7489695727875147`*^9, 
  3.7494688342856674`*^9, 3.749642275039569*^9, 3.7497900303659515`*^9, 
  3.7497902246918364`*^9, 3.749790652970954*^9, 3.7497907581791573`*^9, 
  3.7497909624061227`*^9, 3.7497910784862537`*^9, 3.7497921621767216`*^9, 
  3.749792410829259*^9, 3.74979300643654*^9, 3.7497935340199776`*^9, 
  3.74979364608694*^9, 3.7497937064772434`*^9, 3.749793765964456*^9, 
  3.7498003884148335`*^9, 3.7498005315185738`*^9, 3.7498009109084663`*^9, 
  3.7498012448884964`*^9, 3.7498016358846455`*^9, 3.7498023916361074`*^9, 
  3.7498043031059637`*^9, 3.7498064929494476`*^9, 3.749808262185055*^9, 
  3.7498096567456503`*^9, 3.749810916717948*^9, 3.749811771666916*^9, 
  3.749813380108427*^9, 3.7498716094297657`*^9, 3.749896938154933*^9, 
  3.7498974165853105`*^9, 
  3.749898587628891*^9},ExpressionUUID->"8575625c-dd53-4cc4-afdb-\
4e11c8772f80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Create", " ", "gif"}]], "Input",
 CellChangeTimes->{{3.748968593828093*^9, 
  3.748968597348531*^9}},ExpressionUUID->"5c8cb16e-681b-42a8-a3dd-\
951107fca8e2"],

Cell[BoxData[
 RowBox[{"Create", " ", "gif"}]], "Output",
 CellChangeTimes->{3.748968777678638*^9, 3.748969573316867*^9, 
  3.7494688343006706`*^9, 3.7496422750505714`*^9, 3.7497900303779545`*^9, 
  3.749790224700838*^9, 3.7497906529819565`*^9, 3.749790758187256*^9, 
  3.7497909624191256`*^9, 3.7497910784942555`*^9, 3.7497921621867237`*^9, 
  3.7497924108402615`*^9, 3.7497930064455423`*^9, 3.7497935340289803`*^9, 
  3.7497936460969515`*^9, 3.7497937064884706`*^9, 3.749793766009454*^9, 
  3.7498003884558535`*^9, 3.749800531529563*^9, 3.749800910917469*^9, 
  3.7498012448984985`*^9, 3.7498016358986483`*^9, 3.7498023916481113`*^9, 
  3.7498043031179667`*^9, 3.7498064929614515`*^9, 3.749808262201058*^9, 
  3.749809656755653*^9, 3.749810916726959*^9, 3.749811771678918*^9, 
  3.7498133801215544`*^9, 3.749871609441782*^9, 3.749896938154933*^9, 
  3.7498974166383224`*^9, 
  3.7498985876445036`*^9},ExpressionUUID->"afb8b946-f766-4ddc-91ad-\
5b3cf66ad4f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GlueMatrix", "[", "opening", "]"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\>\""}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "myRainbow3D"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "Top"}], ",", 
   RowBox[{"BoxStyle", "\[Rule]", "Dotted"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.7489371445756407`*^9, 3.748937162680566*^9}, {
  3.748937202034412*^9, 3.74893720244944*^9}, {3.7489373439997063`*^9, 
  3.7489373477085943`*^9}, {3.748937469695712*^9, 3.748937471087284*^9}, {
  3.748937524866889*^9, 3.748937525870183*^9}, {3.748937559964671*^9, 
  3.74893756110515*^9}, {3.748937616146224*^9, 3.748937658960663*^9}, {
  3.748937801261128*^9, 
  3.748937882722713*^9}},ExpressionUUID->"f987d6a5-b232-4152-9026-\
93e3616b5fc3"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
QKl3xpQW/4P5G1QeKPWu223Ea6tv2qTyQKn3UcnUMS/O2azyQKn3z2k7prw/
YJst/xbrd75825Sd/oo78kCpd8Ufl+z4+6O94vXWf1ny2j5v7bFt/N/N8IcP
PfPUkhPiLtbzfu468qDzTL2f2MVPPA7ygPq5Yt35PZEH1N8l1p3tgDygtptY
d7Yz8oB6X8S68z4iD6j3Xaw78wR5QM0rse7Ow1Z40tYvIY48oOuJIw/oeuLI
A8o94kI8II48oMcnLsQD4sgDenziQjwgjjygxycuxAPiyAN6fOJCPCCOPKDH
Jy7EkQfKlJs8oD2ZeArxVOJpxNOJZxAPEc8knkU8m3gO8VziecTziRcQLyRe
RLyYeAnxUuJlxMuJVxCvJF5FvBr+1aBgVeV5F8XnZQ38o+Lsu/o8+3bca+F/
HnLj3wcv/1XlgTJvx99//M9nb/2u8kCZd9LlIwrPGbRR5YEy74qckose2OVf
lQfKvP1jnGaOX9bXHv1C4bef9or/uwF+ws03Pf/syb3j9dbP+Wq/PZ6a95/4
vxvhOTc1HfDwZ9vF662nLmz6bPWsPvF/N8H3ffSBL4cfHt8PxfrhJ1R90/4/
s382wze/O2xqV0rfeL31ybuU3HHVXnFHHlAufuJxkAfUzxXrzu+JPKD+LrHu
bAfkAbXdxLqznZEH1Psi1p33EXlAve9i3ZknyANqXol1dx62wp15K9bded4G
T9r6JcSRB3Q9ceQB5R5xIR4QRx7Q4xMX4gFx5AE9PnEhHhBHHtDjExfiAXHk
AT0+cSEeEEce0OMTF+LIA+XKTR7Qnkw8hXgq8TTi6cQziIeIZxLPIp5NPId4
LvE84vnEC4gXEi8iXky8hHgp8TLi5cQriFfCd/Kf+POM5UfE51kVPFPufuO6
K9+IezV88sPnDHyheIXKA+XexpPu3n3RwD9UHij3Tp5Y0if5pL9VHij3Dv1u
mxNHnmnmsQc/4uJ+sub9Xlv+Ldb7PFd05QfLzfGlHv7piFc+/+lNc7y2nj9i
Wj//RLM/NNjtcMjM4/deaI6n1v19xvW6K3n7+L8b4VO7Fq7cp/8O8Xrrh+06
+8OkJXFHHij3lkXyNu81oX+83vr45tXzbl0Rd+SBcq/m7oPuf3LojvF66+Oe
/XfBcbVxRx5QLn7icZAH1M8V687viTyg/i6x7mwH5AG13cS6s52RB9T7Itad
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
jjygxycuxJEH6pSb44Z2fd6WeaUQTyWeRjydeAbxEPFM4lnEs4nnEM8lnkc8
n3gBPPapbMw+5v5phfDd7zt6v/dS1qg8UOf9Oj62o/6l8kCd986QHar/XGL6
hCXwt/vU3H3QN+b7+lL4di8f9+VDk83n+jL45t677n/aavN5pBx+x4hdJg/r
p68nif6e/ZcOnSLm+F4JP+/AkvrFX5vP9VXwr/xtx2+fqb9PqvNSQ0tTnjjQ
rKs18LPO/+TMl88yx/da+MTJc0b3vWBX/Nv89+fpO84ZfKaZZx78+8HF69o7
zPHCeuzj6ddDzPGlHn7EPoemf/CVOR5Z7/58N8kcvxrgN9397XYX72mOp9bT
Jvzn1DcfMvO7Ed7+/oUFtwzcI15vPX31xuOuOCvuyAN13qLP31maPcfUW1+2
f6Ro0EpT3wzvvp5u+z3j9dYHLfkx9MrAuCMPKBc/8TjIA+rninXn90QeUH+X
WHe2A/KA2m5i3dnOyAPqfRHrzvuIPKDed7HuzBPkATWvxLo7D1vhzrwV6+48
b4M7+4VYd/ejdriz34l1dz/tgDv7tWfdWQfEurNuBNbddaYT7qxLnnVnHRPr
zroXWE9yXl2J3SMuxAPiyAN6fOJCPCCOPKDHJy7EA+LIA3p84kIcecBTrq/b
Nq9k4inEdb/WvPQ6bV7pxDOIh4hnEs8ink08h3gu8Tx4dnvmzr+cPyC+ffPh
83fpePyxGxfFvQCekbn9HcHQ31Ue8Lz96qavXzb+H5UHPK/308GUj4eafn4x
vOCYo2VCsbmPTQm8+vKr/u37m/m+vhS+/sPp+99/ovlcXwYve63/hk0L9X0l
PG/esWWnH3GgWZcq4GPXbZjbOs983qmEt28XfufJgWbdq4LPD8au+rbLHN+r
4d2nUU8w62oNfOcvzsl741bdV/K8hSv3uf7Du8y6XQefWrlN6xXX74Z/Y/zo
MrbnmeZ4Yf2I5ddd8WK1mX/18EUDbxvvbTTHI+tfZ2536a0Pm+NXA/y2vW4Y
d3aVOZ5a37zXP+vHBeZ42ggf3PvgHYcWDonXWz8oP2f6wClxRx7wvFVPfX3e
g5+beuv33fHHqOw+Zj9phrfcK1nzB8VdrPctOmPzu7uZej+xi594HOQB9XPF
uvN7Ig+ov0usO9sBeUBtN7HubGfkAfW+iHXnfUQeUO+7WHfmCfKAmldi3Z2H
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
3CvhI26oevTyN4xXwc8+Z15j57EqD0S9+3m4a3V/oMk7P9YenqDyQNQrZr19
3iubdX+gyTtmv/dS3rpQ5YGoj5ua1vvg33R/oMm74+upk648XOWBqP+4dshH
Y+bp/kCTF/3U+nYf9MMb4LGPoa1jVR6IevRg17LDfN0faPKOKzwoP6ev7U8Z
D8duUxexOdV47PBYMlHlAYkfr6erPBD12Nfv372l8kDUdwuOyKj/UOUB7eIn
Hgf9AfVzxbrze6I/oP4use5sB/QH1HYT6852Rn9AvS9i3Xkf0R9Q77tYd+YJ
+gNqXol1dx62wp15K9bded4Gd/YLse7uR+1wZ78T6+5+2gF39mvPurMOiHVn
3Qisu+tMJ9xZlzzrzjom1p11L7DurpNdcGdd9aw767BYd9btwLq7zo903RwX
POtJW7+EeEAc/QGSB3qMTzwgjv4AyQM9xieO/kCzcpObtCcTTyGeSjyNeDrx
DOIh4va6q4vHTRwSmXt5/O+051ttfCB2gvI61R9o9g4789SSzDN7xf+dA49d
jjzheHO9QC78xU927XvGBeY8gTz4LpOH/dr7XJUHon7nCT/krlim+wPNXux2
qptyzPcChfCkc+844ADPfC9QBP/+0btfz8D1+8Xwt/arvPm9zbo/0Ox1nPXc
Q9s9r/JA1E+KvbLM9i2Dr+2z7YK5P+v+QPOW+8Tep/sDzd7RD104+tjhofi/
K+G97h/iJ68yXgX/6M0Bo9dco/sDzV7s9KIrcJ1dDbz7dqeP6f5A85bjEc7r
q4Nfubzzv3s+qvsDzVu+j07T96Vq9tbfHjsw6P5AszfrsD/mfPGr7g80e83h
czbu1KLyQNTTYze4eUD3B5q9Jxd8fPCKVbo/0Ox93PeU0OnlKg9EfcKMF0dd
coHKA1GfFn3bn52p+wPNW75f/l73B5q9Oddvt3pQ8n7xeusnxi4g3DXu6A8o
Fz/xOOgPqJ8r1p3fE/0B9XeJdWc7oD+gtptYd7Yz+gPqfRHrzvuI/oB638W6
M0/QH1DzSqy787AV7sxbse7O8za4s1+IdXc/aoc7+51Yd/fTDrizX3vWnXVA
rDvrRmDdXWc64c665Fl31jGx7qx7gXV3neyCO+uqZ91Zh8W6s24H1t11fiTc
OS541p3jiFhP2voVEEd/QLlHXIgHxNEf0OMTF+LoD5A80MOTiacQTyWeRjyd
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
Qu5PGCH3J4yQ+xNGyP0JI95T6YefUNXj/oQRcn/CCLk/YYTcnzBC7k8YIfcn
jJD7E0bI/Qkj5P6EEXJ/wgi5P2GE3J8wQu5PGCH3J4yQ+xNGyP0JI+T+hBFy
f8IIuT9hhNyfMELuTxgh9yeMkPsTRsj9CSPk/oQRcn/CCLk/YYTcnzBC7k+o
52ErPPH9CfU8b4Mnvj+h3o/a4YnvT6j30w544vsTRsj9CSPk/oR6nemEJ74/
YYTcn1Cte4H1xPcnjJD7E0bI/Qkj5P6Eep0fCU98f0J1HBHiAXH0B5R7xIV4
QBz9AT0+cSGO/gDJAz08mXgK8VTiacTTiWcQDxHPJG7XoU+u/bJ/uMfzCyLk
+QUR8vyCCHl+QYQ8vyBCnl8QIc8viJDnF0TI8wsi5PkFEfL8ggh5fkGEPL8g
Qp5fECHPL4iQ5xdEyPMLIuT5BRHy/IIIeX5BhDy/IEKeXxAhzy+IkOcXRMjz
CyLk+QUR8vyCCHl+QYQ8vyBCnl8QIc8viJDnF0TI8wuUi594HPQHIuT5BRHy
/IIIeX5BhDy/IEKeXxAhzy+IkOcXRMjzCyLk+QUR8vyCCHl+gZ6HrfDEzy/Q
87wNnvj5BXo/aocnfn6B3k874ImfXxAhzy+IkOcX6HWmE574+QUR8vyCCHl+
gV4nu+CJn18QIc8viJDnF+h1fiTcOS541pO2fgnxgDj6AyQP9BifeEAc/QGS
B3qMTxz9gRbl5rinPZl4CvFU4mnE04lnEA8RzySuP3+Ylz2PacO0Zc9vO0M/
37CFPN+whTzfsIU837CFPN+whTzfsIU837CFPN+whTzfsMXbvFfsg5N+vmEL
eb5hC3m+YQt5vmELeb5hC3m+YQt5vmELeb5hC3m+YQt5vmELeb5hC3m+YQt5
vmELeb5hC3m+YQt5vmELeb5hC3m+YQt5vmELeb5hC3m+YQt5vmELeb5hC3m+
YQt5vmELeb5hC3m+YQt5vmELeb5hC3m+YQt5vmELeb5hC3m+YQt5vmELeb5h
C3m+oZ6HrfDEzzfU87wNnvj5hno/aocnfr6h3k874Imfb9hCnm+o1o3AeuLn
G7aQ5xu2kOcbtpDnG+p1sgue+PmGLeT5hi3k+YZ6nR8JT9r65REX4gFx9Af0
+MSFeEAc/QE9PnEhjv4AyQM9PJl4CvFU4mnE04lnEA8R1+uHeem+o3llwzOn
/XXFQ3gudg7ceY42+gMt7nO30R9ocZ/Tjf5Ai3qudwHceQ44+gMt7nPD0R9o
cZ8zjv5AdL84eI3/E55LXgJ/6c+z3jnbPMcc/YEW97nn6A9E/959xvW6yzwn
Hf2BFvVc9Qq48xx29Ada1HPbq+DOc97RH2hRz4WvgTvPkUd/oMVr/eTxSafg
ufN18Fte7Vz7q3lOPfoDLe5z7cX6n+OW3jPgxFC8vh6eGvs/vB53sT7Tr2l6
GJ8HG+DH9pr920+nmuOL9UMWtKza/RlT3wiPPY1+ya+m3nr39+O4Hq0JPumx
Q94tRL/a+ptnRD9JH2vvw2U8dvng7LPt/TiMbzm/zl6Xm9DFTzwO+gPq54p1
5/dEf0D9XWLd2Q5mndLbTaw72xn9AfW+iHXnfUR/QL3vYt2ZJ+gPqHkl1t15
2Ap35q1Yd+d5G9zZL8S6ux+1w539Tqy7+2kH3NmvPevOOiDWnXUjsO6uM51w
Z13yrDvrmFh31r3AurtOdsGdddWz7qzDYt1ZtwPr7jo/Ep609csjLsQD4ugP
kDzQY3ziAXH0B0ge6DE+cfQHhik3/QHtycRTiKcSTyOeTjyDeIi4/txgXvr7
RvPKJp4DH1u6aOyrC25Q/YFhXvHvP9zVa/AyNw9E/ZaBsQ8Yf8Y9H37v8LMP
+rzMXOdSAH/txeY7+6815ysWwruv96k35ycUwbvPx640+bkYfln6LfmL1pv3
owT+94zkf2fPNPmhFP7wuANL6g8071MZ/LBTu/q99LXpP5TDpw9c2PRZh/lc
UAF/6rovT0l6xryvlfDjrulzS+tGkyuq4AdO/r3sQdw/oRo+vNfixTMPMvOg
Br7Dj00v9zvVrIe18NvTzx/WZ7TJFXXwDx797xMrjjD9Ug9+WOyC5D3M+my9
+3PHlWae1cNjpx3VmD6tWD+m/q7nTqk0638DfKdLYkcGc7ywnpk9cfKc90x9
I3xAbGHdLhSvt35fn/NPXlkad/QHhnnv//bOaw1HmXrr/c+OvgPjTX0zfOIe
5Sc3XWPqrXevz9ebej+xi594HPQH1M8V687vif6A+rvEurMd8LlFbTex7mxn
7LfqfRHrzvuI/oB638W6M0/QH1DzSqy787AV7sxbse7O8za4s1+IdXc/aoc7
+51Yd/fTDrizX3vWnXVArDvrRmDdXWc64c665Fl31jGx7qx7gXV3neyCO+uq
Z91Zh8W6s24H1pOc18jE7hEX4gFx9Af0+MSFeEAc/QE9PnEhjv4AyQM9PJl4
CvFU4mnE04lnEA8R1/1C89LXIZlXNvEc4rnwrN3zX381ZYzqDwzzvpvS/5Hr
/rfUzQNRP/KdG673qs19EQvggx4ZfN205zfHvRA+9srz51w9xvQZimz9+lmv
HTPV5LNi+EP3nHLIXiea8xZKrF9y2XW7/GHObyyFr79kx99/fNT0H8rg9616
7M3hZeZ7inL49M+3fTp41uSHCnjbrCenrB1o+g+V8E1j9qkqHWXWpSr4+FGf
XPfgPSY/VMMnFc27a9vXzbpXA9/vgnE3bPO5+V6jFt6nYab0/crkijr41KSS
F07/n1lvPfj5u3RN7HrarM/WY7e3CS4y63k9fPGE2B3OzPpv/eujP0p7+nuT
Nxrg2y6YO2l4rZmv1t+oua323EvN8aUR3n0cednUW896YvZ2L/5q6pvgFXO+
eTA7xRzvrMc+9iXvb46PzfDbN0+Z+DeOj9a7P3fXmXo/sYufeBz0B9TPFevO
74n+gPq7xLqzHdAfUNtNrDvb2axr+n0R6877iP6Aet/FujNP0B9Q80qsu/Ow
Fe7MW7HuzvM2uLNfiHV3P2qHO/udWHf30w64s1971p11QKw760awlTvrTCfc
WZc86846JlvVb73uBdbddbIL7qyrnnVnHRbrSVu/AuLoD5A8oF2IB8TRHyB5
oMf4xAPi6A+QPNBjfOLoDwxXbvoD2pOJpxBPJZ5GPJ24zvXmFSKeSVxff2xe
2cRziOcSz4Mvvurl48aPH6D6A8O98S+Gx/z3xkVuHoh6Rub2dwRDf3fzQNT3
q5u+ftl4831EEbz308GUj4ea8xaK4ae9et0rlxWb8xtL4NWXX/Vv399Mn6EU
vv7D6fvff6LpM5TBy17rv2HTQvO+lsPnHVt2+hEHmj5DBXzsug1zW+eZ/FAJ
Hz37qFNmDDR9hip49/1Dukx+qIZnxC6smmDWvRr4lvOKzbyphS9cuc/1H95l
1tU6+DPLd11x1fUmP3jwjB2q/9zzTPP5y/oRy6+74sVqM//q4YsG3jbe22jW
f+tfZ2536a0Pm+NFA7z7Ougqc3yx3v09bGDyRiN8cO+DdxxaaI5f1g/Kz5k+
cIo5fjXBu+/T8rmpt37fHX+Myu5j9pNmeMu9kjV/kL7f93Cvb9EZm9/dTd/3
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
QvloHKi5OBeunV+24/syjfdfcjQXVnZYOeeisHrO33JJT7dFh5Ivp/lLND5Y
N+XC4yX998aVn9TiSczPuXDeAwlVz2K7fZJPetLSI3/I36PxweqXC6ueGvD+
qxSfVXx4ORceHXvmgkU4TnUoIj1n6l3e4TfqRxUHsnJhz40vbVvSmcWBjblw
6Rspy+KmRO3NWgik55kPdv17mPxLyY+MvPfQh+o9NhXt0xv9OzkXUjrZRXlT
mL8fyYUO/yyKLTraOPrv7rgPmwcTm73+VPERxVUcOLQlF7bu+Ljmo8OKYxxY
kQunM3vP3fU3yqtx/M1Iv0yfl/cK6sfxfV4u+NdN8X9E+n3uHMd3rgfjAP9d
FQeM58Q4wN+3A+7DsvfFcZy3G47jvJ3R33l/fYX7sLy/lF8b/a78kdmPNaiC
9Oj2o/yU2yGur3J7Vv5r2P909F9m52rd1fC7KDf9DtdjuV8/GSb9tf3Ryqki
rvt7dP+l5o88GHRodVI/zDf+xPqNfPgr6/uHdg9B+WjcsG7Lg/ov3rynY1c9
zliT86DZ5Q0ffQXjWM8c0vNJJN87WqrHh5gReRA77/xOK7DdLswj+VF3jdw2
hPIoNY+I6B8xcNIfn2G/dCog+T27b7shh/LAaBw40SQPmm9tMjVI/ajixpE8
qDnxXXoI7eSnItKzPn3gr62eQztUcWBsHmy6qX6SM84qnpAH/m8rVu94gcWH
XZH3mpg1oSn6SwDnBflwXcUdRX+SP3rpvd4qfLfNJvL3KI/pkQfzfvUn/0f+
ruJGyzy4reO0zZvJj/zuHMdZrgfX2fjvot/x589G/+LPHxLaIeTebuh3vP3V
eGr0VyP0R94vlfT8te3BGlhJ8ro9KL/g9jY6TPK6vUX9xbBntd/B7d+6tor0
6HYe3b/g/mXVqyZ53b+U372dD3eWt63jQf+arfZVI+Pn8E31v1of0P330I/5
UDTkw/vD6jlPbM0i+Q0r3nt6DOUVyh/z88Hbum7D1hUn9Txhfj4ce3pxYfop
1Q4jc0hPyvaLv59K46/y0/r5cPvd/3s7ndpN+fWbEf1bbv1mHrb/0DzSk/Vm
Uc8raX6n/PeKfHh5sefzXjRPVPOC3/Lh1KLYM8sxn9xWQP/d5xuXvjSA8mHl
v4Pyof7F/zbZ+Szz3yP5MPqjxo3a4Xi0q5j0fHn3PWknyO+U/IR8GL6zfYuO
5HdqfaBTPry1L2bNAean1pZ8SE16o4l1xWVR3spL+hu+FPy8L3L032n58OQV
FWsPNVdc5Qn24Hywbnk10IXk1bgfzIecf3dMjG+B8lFuR55n7vwLXr6H5NW4
n5AP0zaH648j/Yq3zIf5D3cJtECO+QDnmA9wPSofMH4X5wX8OVU+YLwXxive
DipeGe15I84LWHvi/J33C8Yl3o8Yl7g9TML8n9uDij+GXak4w+0T8wFuz5di
XOJ2q+IP9xfch2X+ZfnDpEf3IxV/uP/i/izzd6usivTofh2NSzye0L4ti0t1
G1STntpxBno5XI9XKo49UgCrh97/x4sDorwmhPWlhTDivR6jm5bq8dCaXgAr
43s+9y/mUaMzSf6Hvl81XYjrMCoe2v8UwHVJQ8tfx/c6lUXyjU8PvXolva/K
Z6oKAFLKJ/ajOKbymZ8LIKO62X+7VL/YW3NIz5yCjl9fSOOLim+lBdD3pudf
3+Vl8W1EAdxxdoKK4139fNKz8dtZvRtPZXHsuwI4svS2qfX+Unb4TiHJv5p6
XfmlNP6qODagAF57/KI37z2qx6uYxQWw86LsmneVv9RMBNIzdvPgAwnkR0r+
+gJ4r/6y4BcUT7zR925UAPGfXrMw6wo9XsUcK4DE/6s7LdbXLPrvfjivKYQj
B9OTZ3gVxzj2VQGMerVj6YwyxTGOLS+AtH2Lrr6D5FW8ml8A234Z1GEZySv+
WuS9qlM390OOcYxzjGNcD8Yx/rsYx/hz4ryGv29rnNew91X5ldFumF/xdsZ5
Desvz6Eg6df6C/Mo3u8Yr7j9zKsgPZr9YLzi9vlvJclr9olxybBzlRcxf6F8
ifmX57Iq0q/7UTRuGP6r4g+PA1adatKj+TXWk7A4Azc68rXjRuxCh+vxR9W/
/VIIm/Z8vfkZ3GfZi/XzRTDq4gb/jcD1GVUXZ+cXwoM7Cu/b7mNxr28h9Cz9
qWUI42piBuk5neK9dwnt16h4tbwQkq///clHcZ44K5Pkn5yw58jsE4pjXjeh
EF5LuHTDZX7Vnj2zSX7jwBbdP/eyeDWrEC5Iv/O/IPbvgFySf2LTW08sp7xd
xavzCqFV+4S1STRPx/WcQui703deU2WH1qf5pGd1k3f77qRxWcWx6wrhm4Wz
JrfkceynQkj7eFPvF65Udr66iPR8tnhfTB2yfxXHRhRCYrfz5w5HeZW/2Q0K
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
fOJwLe7h90d+LoVGy7b/8S7eD/np1aqdyqDzBzVbb/CreJvXlviWh6t3lat7
wg992I749I+zv1+m4rY1MYn4a68euWcP5p+LOhKP+79W1hRcZ7i8E/Fl+7eM
iaf17WicrPk+0r+vZ37eBMe7X1JI/mxd6CLMM4enEf9kdYeHH8T4mZRBvLDt
B0NPK3uwL88ivvihhY3rYTz05RD3tPrrjh40n1Lr1Z+XQssPl+/fjXa+Oo/k
S5rcuPYo2b+KY2tK4eb83VWVmOfMKiT5O+4d9eoCyuvUOvPEUohMc/dfjn76
JJB8x2PP/zCZ5W+HDpdC67eGD2yP8WG/l+THXrZjc/YiZ/w79/fiUqi55pk5
71Hc8LtzlQca+qf6Bf1B9+f/O0jy2vPjvJi3z9sVJK+3j1oX5e3fOkzyWvv3
qSJeux/j8qqJ1+53a6nDa9uJdVUX4ppdqfkpt0/PWEe+tn16fnB4bTuHpK7E
a/tF3BCH1/ajuq87vLbf0fcjmF/b2x352v77TP1uxDV/H6DiQGQ8fLhoUttA
X8W3OutAp+8uuHUOrkMOaEf8nYuGLfhUrYse6pRE/LVbGy3pj3GgvCPx4WcS
4weoc9/2vGTiv3d5r+VSnO+/mUK8rMucqnpY59Mhjbi9cOV982meqOaVJZHf
fW/+gekY/79PJ/mz40uI5okqDrQug1kDe7bGenjrw0ySv29+6ZB7aJ1ExYfu
ZdDi473Fr+D4tTub5JN/aFP/JeTBPOJFiy6+tBTnKY0Liduzr+jk7OMof29U
BvfOePmq+zDPSQeS//N3O7cJm9/F9CuDgZP+uL9Y+aPdz0vyze+/MS2T/D3g
Kg+egCAfcn0eqAiRvPY8xyuIa+91fZi41g44z2LtaT1TRfJae2J9PusvT3U1
yWv9hfMsZg/wsSNf2x4gswvx2nYFzzm8th3G/u7w2nbrye5KvLad1x3l8Np+
Yb/r8Np+NGevw2v7nd2kG3HNT/NxHO8MS/6xrzwP71ma6qzXjmrQpp1z/5vy
0/1l8OsbDd9vhucOEtuR/AtnCz5UvrH6WHvinz0bk+lH+Ys6Ei/esHNpPdzv
vi2ZeJsHUw6twvF9XArx2H2/Hs7HcbxuGvGbR33UuBHOdxalE3/8pj47faq/
ap7MJH7vVUc3/Y51Na9lE19wfWFbqtupn0f8UOjfVW/Qervyx+kR+zz7/Gi3
awtIvrrlZYMuVtyqA8R9y47+m4H2f7mXePIzc04MQz+6PeDKrTEhdz24vsGe
x2pZSfK1nyfmgTBx7b0WVhGv3Q6xfaqJ124362uH125nq7gL8dr9ArMcXrsf
PUcdXrvfraKuxDU7wfUEZoew0pGvZYfQ7iGH17ZD+MPhte18TtNuxDW/SMPx
rjOMHTvoYI66FyjmEWcf45X8x2fux3rgxu2IX+BZOr6J8tPTe9oTL1t5YXs/
1YEov8iPtOe3fzc4hvfFHe9A8t5nHmk8FtcTrk0mfvb7Kc2OqXYbnUI8ucfX
/b+jfbSovxy6oDNsu3d/YgmOg8dSSf7YbcVd62F9++x04kP+nvHXGRwf8f60
CI+/e3TgPIyfz2YT73171wudejblR806w3PLr5qxDPOug7kkP6jy6ASaD84v
IH7r8T033kh5nVoXjTz/kPVn3vmnmVo//LmY5Gekv7ykLfmFN/r3fZ1h3dvJ
Q65C//qvhOTP2pUzrw+4yz8UEORDrs8DE0Ikrz1Ph0ri2nvheiNrH+vxMMlr
7bO8injtdqb7qVi/wHaHa/2o1gm5PVjeLiRf2x48Lzm8tl1Zfzu8th3Sfjqz
Z09JV5Kvbc/2Bw6v5S9W/0ccXttf5hx0eG2/s5t1I675KY13Prhr1k+tzPHO
p493NK75hHHNp49r6L/rmf/SeOcTxjufMN759PFO+W/cMea/NA76hHHQJ4yD
PmEc9OnjINVrMf+l8dGnjyM0Dvr0cQf99xjzXxoffWxc86r2YP5I46ZPHzfR
f7k8jadcPuT+PDTO6s/jjKfsvajehrUPjbM+YZz1CeOsTxhn9X5E/+X24Iy/
PmH89QnjL7ND9F9mz864rNuzM/76hPHXJ4y/PmH8ZX5K802fMN/06fNNzFcv
9+n5Ks1DfcI81CfMQ33CPNQnzEN9wjzUp89Dab7p0+YXzrzSp89TaP7oE+aP
Pn3ehPnqLT49X6V5pQ/qTou9si/uM9L80afN15x5ok+b9znzQcZp3qfroXyV
Pw/NB/XnceaD+ns58z69HZz5nd5uzjzOJ8zjfMI8zifM43zCPE63E8pXmR06
8zufML/zCfM7nzC/0/3CWacth6+/fmdpX2Odthzqzm7l8xvrtOXCOm25sE5b
LqzTlmvrV856bLmwHluur5vh+sxqn74+Q+u05dr6G63P7PZp831n/bZcX7/F
9Zk3ffr6DK3rluvrurR+W66vH9I6bbm+DonrM4d92nqIs05bztY5vdG/X/Jp
6y3OOm25vo6K6zNcntZduXzI/Xlo3ZU9D62vsveidVTWDrg+w9uT1ldZe+L6
DOsvZ92V9ReuzzB7cNZjy4X1WN2unHXXcmHdtVxYdy0X1l3LhXVX3Y+c9VXd
75z1VeanuP/SohwS5y+vvwzvDaP963I4e733emP/uhy2/1DwnLl/XS7sX5cL
+9fl+v417VOX6/vUav/F06ZcW9929q/L9X0x2qcu1/bRnP3oSDtvXPHe0+jX
tO9cru/r0f5yOdsfVPsvaeXa+r+zv1zO9h/V/ktxuba/4Owvl+v7m7j/cle5
tn/h7C+Xs/3T6H5KXMNybX+E9lm6lGv7Kc6+cznbt/W7y9M+L5NX+zLm7wZd
n9/Z/2XPj/svrH2c/V/ePmHX9nf2f/X2d/Z59X509nP1fnf2bXU7cfZndbvC
/Rdun86+rW6fzv5subA/Wy7sz+p+5OzDMr/D/Rfm187+rObXtfZnmV9jfcsv
5Xp9C9UN+rV6GKc+0C/UB/r1+kCqA/TrdYBU7+fX63ywvuXNcr2+heoA/VA/
YifLsb6I6v38sOjy0txLmuv1LXGvlOv1LVTv52f1fipP/rxc29936v38rN5P
1bdsKNfrW6jez8/q/aLrVPVeKNfqE5x6Pz+r94vOf+GLcng0NufRFRhnqN7P
Dxck9/jaqfeLrl/BR+V6fQvV+/lZvV80zng2lWv1G05dn5/V0al6lcfKtfoQ
qmOZW+5ex7K03L2O5f1y9zoWzrGOhevBOhb+u1jHwp9T1asY70t1g/x9K1zb
06kP5O0ZjUtGf1F9IO+vaLzi9uDUB3J7UHkLtzeqD2T2hvUqzJ6d+kBuz2od
gPmLUx+o+4tTB8j8DutVmP869YG6/zr1fnoccOr6WNzAehUWr5x6P79Q7+cX
6v30+Oaci/HDkd2PfEt11LgOcLVfqz90zsv49fMyah3Pk+jX66LpHI1fr/fG
uujI82h1knS+xq+fr6FzNH79HA2dl/Gz8zKqXrqjX6+XpvMyfnZeRs2bBvi1
elHnvIyf1dureukhfr1ems7L+Nl5GZV39fbr9a50XsbPzguoeVNbv1ZP65yX
8bPzCGo+VezX63XpXIyfnYtR64oJfq0emOZfQ/1a/bBzLsbPzmV4o3oa+rX6
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
hly/M15nSAjOfpYZ70OzA17S3/jW784sZd8ft+JC+ve7MX9uHnL9zji0CYFv
+MlGJ9l3xj2JIdfvjBtc5c+GHsyf+e/ieprxnAHX94UsPM/I3zfo3m74nXHe
zip+Gv01LkT6tf5S+bDR71ifzO2nbSXp0e1HxU9mnxRvmT177g2THt1uVVw1
/ELVYzD/sqZUkR7Nv1T85H4d27ma5DX/VXGVxwdrkSNfOw5QvQeLPxRvWRzz
NOhCerS4hOs/LB5CN0dej3vR+FZvbgj255W2vdWrx8PYSSEoOTbq+Luofy/m
mRXw1aPZSx8geRXfDofgifGfb1zaDeOkim/rQ7Cl0VWPbsT3TcwgPadTvPcu
oXxb5Y0R++oYsee2uA81K5Pkn5yw58jsE9hu0XgY91MIfmh1sPt0ip8qn3w6
BBOyJvRqMEP1Y89s0jO7b/tPvyB5FT9/jPhjYdncfFxnG5BL8k9seuuJ5RRv
VZ3DhhBkhOp+PQXH8U/zSX51k3f77iQ7jOaZ1pQQJA0tz7mGxcmYrSH4Nrf+
zYvxfNnqItLz2eJ9MU5dh8onHwnBVTMuW/Ur+ZfiS0PQM2PmzKc6s/j5cwjW
3r7myTPIe+I+RQUsuWjYggakx0vtNuueE4OHUxxQeeMboXPneek+McwzPwzB
XS9uveXtO/W4GvNlCK6fssPThOqgFP8hBE0icak75WOqbmFvpH1iNqT/SvoV
/yUENzcoafgE7U/53DnWM3A9WP/GfxfPa/DnxHyYvxeuS/B2wLyXtxvGVd7+
7TGPZe2PeS/vR8xvjX5X+Sq3n9aYx3L7UXmsYYdqPZ/ZM0yrJD26Pas4yf1l
S5jkNX/BdQbujyoOc/+1vq4iPZqfYt7L4wPmtyzOWL2qSY8WNzDvZfHKWubI
63EpGj+NeKjiM4+fdv0upEePk2pd96KKc/fPTLtWj5+eARVwd2TisZf291Xc
61IBPUt/ahlSv1sTwnyyAm5b0j3QhtaxVd1XmwpIqXjtwrFYP0D3HVXA2YKS
dzDfPpVFvP/ZhIPO96n4mVsBN/daf2UzvzrXvzWH5L+b0mFVA7o3RuWNqRVw
Qfqd/wWnsjg5pgJatU9Ym4T3CeA8vWEF9N3pO68p5qX1cb23AjZ+O6t3Y9Kj
5undKuCK1596sBWuG7xTSPKvpl5Xfint16t8slEFpH28qfcLV+rx0/JVQGK3
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
8PSypPEHbtiv2Q+0rIa+KwIXPUz3w6j1zKRqSPvx+VPvU7up722nVUOv3CWb
jtG6TdRO5uRWn1uvW4j7dyoOzymqhstW/drh8TKN2yPrVMPmbi3SfjlWV7Wj
yqPqVUPLmSuO9MZ61OVl9PwH520ILadxLSofe341HGn11dC2ZA8+d475FdOP
cdt4zig3ntPa5BOep9y9HZT9G+2m7N9oZ1xH5f2i7N/oX2X/hj3MDNBz6v0e
lTfsCu3fsENvtD3Lq2FV2tBvvinT7cfuVg3b+nd4p23P/Zr9wPXVkHdP9fjB
vffr9nNj9bk6zyd67NfsBwZWQ+OXLrnjBnrOKLfvrIaOF1R3C6EeZSf2sGro
c1mT6RMDGreSSqohrv6s0W900e3EHl4NOx+Je2Yx5l1Rbv0TkZ/f/9qv+tC4
43OXj3JTXtmV8TxRbj6PsjfjvfC8GG8HtB/ebhg/eTsr+zH6RdkP78dDh9V3
t3/OgAlju+3boLjVO9q/Me9mwLufP73/AhXfrM8Vn54BX8CXP264RdX/eFX+
9lgGPDp3zzf3Kbs6sVx9x3ZoBiy75pM73sPzRB1VntY7A77KLV7/troPtuZl
1e+dMyDpn0Wxs6L5tufuf89x+PVUBlTs/SPnKeUvVnOV1+VmAHR/rP6AaLt5
6t1/jkPsiQzoNenLGx9X6+TWNCWfmQGROceBudH+nXPwn6j87uMZ4Fk6fmsT
JW9fofLAiPy2el2OPxRtH8h/INq/90Se587mb297Vj2PPVPJ52dATPruNVuq
VbslqvGxMgP+v6urDnPq+NrBFw9anCCLU3TdTrISXcEdFneKu1zcvVC8i0Nx
Z9EU1+Juwb0svlDkm2Tek9/O13/m6ftcZm/mHp8jTd8/rLaB/YhtwDvWpu1R
HecfxTm7TPju4jyn9b+dUpTP7TLsw7W1qeSN5n65QZ9aL/C7+I65c+/bsRp2
UWprqV9SDvtRytiT9WdiH+0M7Jb5frRzcbOpF5Bf4QxG3KyfHw18O/z2D9CP
9if0SIQfdagbWVTXQfYxy/RK4tmv+1H+C5ten4BcciVIOnEu9SNdNxrTGPJQ
Swb99PGjpj69Ew6hHk0rBzs/Vrznl9ZjUjjv6w/IjWp+VD9f1J3x2MeVHXTy
ix/tzVYxYqI8/+o5h3nwxCJf/aj0umYNVsDecI4CvWXyI5etf7cxMs6T+Pqz
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
yb8pZcjzXZ7LOGFK8TsePHVaD6LNYds6/cr3LN0lnzr9ieZcztrpAdvDa9EP
pz5R899vGOqxng3D/N8SRK++Ztrb2ubBtQ8fPDgNHkxUonet5l3Yz5oOPW4m
ejDrYVxnnjfkC/s2L9GzFZ+nvoGduUvWlW9uNoAoYdbGv739+aeCf2OIfo9N
PhQCPv1WUfLvj/xEyx5dCWL737lS8q+rLlHPkRmPsp+usyOe7yv2z2w+eZr1
7C34j92JUuzf963lvgfjoa8jibSst/f8x30S/BDPKSLO/+ugenVYb97HvXBP
IndZ7WPuQzU/wvt9O0wdPGEc811F8q5HWs32435ZzvGI52QhcpcnfmI65Dhk
b6JxOxfZ34L+UxGHTG1I5Crw988n6Fvogn3rCiOa9XpoRAvmr1XAyxGdKPJR
X5z5Ii/ikOK7bBX+11HmI86L04n30c/KxPMWnZz3JfA2VycvfYW/61wAXJyP
/urPIAc/Hwq7N5RIuB3rIxhH3NLZkWT/LuApue1YiW4MiE5ZiHNIvSXx1GZE
kcVePpjA52NF/ZSVPPMl67E9fx1+X2Oif7q+ygu5rUvEnEdnIlFI4WK+fK+n
yyXnDGqHif5YTw8LNeP4iZw74PqdaKnlc58uMq6iPXF4+Dcp6JLgl5A6yyLq
4/6oquRf51yi9LmW2nJK/ZvYcp8Hr17tLlGl6u3C/uX7nVjY4auIllTs2/Ih
6qzHP/Xg2uH3gr+enJ48ifXdCNjnB4kCk+8trWAHng/8O1HQle/xxXkRJynp
9OBabhdRgWf5kmty3+9m4OsNRDma3HkRxPgm8O818uSZ3OX6u3j0i1hN9K1v
aAcD4zvApzeJitS5WbQ51+k3C/Tu787vKgW+c6YDn2oktFezl4cln1LdCx7c
sPYZ0f0Wv1bqyfpuRLD39+bYPD1uMevHquBfcc4zPv81pyLzL+4XtDtENW9r
56Zz/7de4N/dRI6avQv25/5yFeGfiu+b3tL9wRjm33Pg36dEbrdmM/OLBfx7
gujHwE1Ng9CXXvuLvGu08MeDmU9zgk+niu9YdOTA78wv7+C3viMq1/Nlj1Xo
k+9sbpLrbaL51ao5Y3gezQmT9+/+9+zynE143uUv+dQl7P35l9rXeMz7rAb/
iu818GqPvSd4bmNR6OWFRLu3F8m7mvFZwGcRucPVXjwn6lDE+5+70vDVJryP
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
IQdmm8jsM90/F/P7NfjLLwUfnQy4tY/nXbaCvbHJRNFLyrY4zPMxk2FX3BZy
71llSyT7NVbJ764VJtocuOjLfub3K8iTeWGiXM93bXrP/BgMvt5joitPu1S+
ynw9CfcIk0yeucbBjH8Evwt6yCIEcSWmc9TDaudNNGRllcihjG8wedd5d2aP
b894zkjvOa9dEUfbGEf8X1tgolFzIidXYbwj9OZTIVdLTetXh/GK8HfWmqjE
2Jd1CuE9aRrsc0Gf7vtuzqOmPeAXQZ+DM+f8Phv9CpzX6nrPefq3v53vYZ+7
Dsu/k1o9kpKfTPsxQvKLocA+Dx9ZMv0W6Z4bbhzIeY8FYc9nivTMlTuNOtZP
7Tx8pIU1iaSEv4YF/8vxsTipN7V6kTQmZ/ym+hyf7yP1prN5JH2q0Hz6KL5f
+Af3fUKOrtEVOqdxfpQf+KJIJDmEm1uU+WI0+MIYSe/mjTyVynb105refWo2
qF6pM/tZkZIvXKUiqUzN9Q8+cvznKPiiTSTFft+3lv24b+UlX/zIF0nDxy9z
TuL74qOSL1zi+RnZ2mbPyvOtaoAvCkVSt2a/39AxX7wEX/SLpH3D/+6xxkv/
0I/VIinzdfPqJUz/2xAXEudZsNDWPZlYT6EPs/OXSKr/W85ur1muJkt9lyLO
81j32tpTpv9I8IX4vWfEfw6Wz/Whv+pHUu408jxlGfKiS0cS+bXc86Uw8P+Q
5zwk0h1X8au6EXK2LfRU20gKW9jgz3WMXwBeJ5LcbZP2MG6BnrJEkr+wV8cy
fgx4TKRnPns7xq3QU9ZIGjR4ZZXlwJ3XoNcaRdKj0UvONuXnB0FPDYqkjZ3v
9uoCPKkF5vSFRNKKewdy5eB5EDwvVRfpqY/jPodJDuCFI+Wccc4bmQg+EvTg
rvuujDpieg28aSTtqZUvx1PMq9JO+8rv8y6Sove7LjVHnpiuA/h7vtjnQPu4
P9BP5lZXz/s6P90U392SsG819FrqT8l3Pw5G0qqkW/YjXHd8S+op185IynBu
//jKXC/2WeqjlP2R1LxopWNbmL/iYZdeiqTz5yP+fsz3768lf7k+RZLPj12z
uM+8s4bkL9e8SPJN16UL55nrFoK/zopz6/3r0X4c3+iOOLB4n+/u+y+Ok3RE
/HZbpGd+5VK+b50o+SLlSCQ1fFVt72K2666hXuZlpKe+2yvnI+CH/hlJ1fPe
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
9262eM85bZ68frvE9bWtNKFT3yzevPTiVu+aNg+fxsJOyGRV8vYz9sLcHPGe
afP8DZhTbKhrVeoCtBqQJzWsSh2BfobE9XorDZ+S3JXrDqgz5ExnK/l8SepY
D/ZA+sMSTx9pVesaisKuKGpV6iDoGeRPJ6tSN/G/+3GrWmcxA7h4n7R1GVod
yJM6VqWOw2eZxH0E3U6JvnSD6z6oKuRDU6tSJ5JUD3KmvNVdH7q3LHDnOjzf
yEqL8qzcP1LaD5p2XuLpSlmVuhVnmTre75u2zsXQt47396apl0nIbPbgSTly
WZV6mQlz5PP6ylal7sbgwj5kVep0kspBngh+T1PvsyartEMS8umsSr2PsyPk
Rrw1bT2RljVK4vkE/6atJyLkt2gmK1XS6f9GvZJ2QcY/dcszWGnF5ifNvPVK
H6VdQd+tVNBWbrU/2+eTYFc8EPxYdeCFaxwX4ryUZCvZ3hRtFcL5LVlgt4+2
KnVYutWI81yyKnVbuiy1vM+P+To3yFvn9UDGfwxvBZ3vTvcn14XpaiAOP89K
l0f9Mmylt68O8nvfWZW6M11l5KXMsVJC1wUDbnM+zCHMkb9vVeradBlwHzrS
ShHFpxdmP47GSDlsOGRV6ubSpcr6Vt03q1Jnp1XH/E3xnmnq8nS62ZDbJ61K
HR/JelWd4ZOV8vcdYuW6P10p3KvOsHr6iXGck/whz3da6V/zpBPeusJr8I+u
WZU6RK0v7LoPVqVukaZizuZUq1LnaPA1yXWlVamL1GNujl589x0TZ//HdZQG
5I8ZxO9KW3epXYG+uGJV6jSpJeIbd61qXedD6IuHVqUOVGsP+1DYZUrd6OP/
4UqdaTvohUdWpS6V0EfI/d3T1rEamkn5b7hlVepe6SLmYV20KnWyXr1w3KrU
1Wp7gO+xqnW4laEX1gl9rT9zYRvXyX62etc09b/OuIVW76rU/7azeX9Xmvpi
S++sNrlOtKr1xefw/DkrRd3JYmjAdcpB0CPiO6ata/b5inulr9a09dGHei6z
Y7Uq9dGUCP3islJWw46JbaWcT/ok61iTPon3efei2HET0+FRxDmPCn23b2Or
zawXhkHvCPmTph5cW1dR1rGuW2tV6sG1e3j+njVtvbmWa2osVqtSb+5jlPrI
528hb3fc+vUY65e3sJOFnElT/+6sujQOq1Wpf9fi473nmba+/k/M0f5Tsyr1
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
WT8N+VHiO+6r+duVK+Lc/g/bXOR8
   "], {{{
      {RGBColor[0.409582, 0.542008, 0.909424], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
OnyWorR9ffIqSNvWsw/An2aMMmYL09YRDx+cucQYzBd/IOU0uWmXj8+SSDtv
1rdk2hKfKJW25D3YDzDOGHf494xL8i1Ne+4xR9lXbIw+YQ/BWCQNewLmOWnY
NzA/CbOfYB4SzqRdV9qC/QHvS31K0m4zyqibdjnYEvYlvAvp8Wc5z2VP+HHK
4xGbd7jifCb5uXBI2s8+SdluMYeZr7VpzytsADYMHXMR+8XcZr5iz9ARrklb
R5q2ac9zbMYeaUv6u13afc543Dftccac2CttHeN3n7THN8/2TltHuE3a70K+
+OD0J++6X9p5MIcOE/805bodkXb9vhAOTHt+MhcPTnt+UueD0tYR3j/tPJiX
R6ad7kuhfdp2gfF+QNrPyeuotJ9jA45OW2JLjklbYmOOTVuS/tC02/jTaGv6
YW68H2vkVVEeEpsyNO3xyrgelXYfcxZ1WtrjkvE4SMhLe/wOSXvck+b0tMco
c2Vk2mOR9MPTnm+MnSvTrg9tMyJ0xOud9ryijGFRPmn6RJnk2zfyZmz2C8l8
7R+SebxRGC2METaFHMvaF+9BmY+lXU/KeTwkzzZEnUm/LuJSj/UheTYgymG+
Do42oP4d07Zr2Lm5UT/6eX7afc9475a2fceWPxjvTX4npm1nsfed07at2L+L
0h7H2K1L0h7HjFnuGDEfGPuz0p4zjNPzQ0f4gtAxJ8alfV+Bs4Y5aY85+mB2
2mOdsX9p5E34stAxV65Ie6yT5vLQEb4w8ub9Lo53bBdt3SDK6552XVlbTk3b
ntLHXdOuK21xQtr2nTp3Srv9CJ+UdjrWolPStuOkPzlt+06Yvq0f5dFn9SLc
I+10+C8905asD73SlqTvknYb0+78Bs5dDe4XPCz9wLTH+NroY8b4nWmXzbus
SLufyOOu0FG/NWmPY+bK3aEjfE/oGMvL0q4n9b4u7fnMPL4q7bmKLZkXY4dx
c3XosJ0L07Yv2IlrQkf4jrTrxvstj7x5v9Vp159nx6VtS1gzO6QtfwibhZ86
P+zy/LALn4ad4NnxacdlfN8e7Uu+q6KP6avbQvLs5mgbxvXKkPT5LSGZB7eG
JP2CtOcH9X8k2p52vzbqShvdlPYco+1eTtvfxc99Ke3zEcKvhA6f94G0bQRz
7Pm0z78463ou7TMywi+mfRZG+q1pn81xDvdo9Dk24oVIR7zNaY9v5tOWtM/v
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
y7NtcZeRe47/u0fLs+1xl5Fnj8adS+5pboi7ldy7fDLuTXKfcX3cxST91rg3
yX3J/92/JM2WuENJmqfi3iRlPB13JQlzx5d7s9yV3RH3Jv93nxRJvGfjHiTP
no87lP+7s4nk2f/uU/Lsf3couVO5Nu6bclf0f/fIKY874NzFJcxdcO7iEub+
OndlCXP/kvcir01xf5S67VJbr4hxuTnud/JsSkv1d0Otb221N8+xz4qPeUyO
fUrC7XOsw/8aFHOacdEhx34JPkg38d8zLufoHPuvpD8ux+mId2KO+xx/HzvI
mCVexxz7NIyb43OcH+GuOY5LvifleF4xh9gHpoR0jvdJyEyO92x/x9xin8a8
Isw+DN2/Ge8P+eA/keO9Gbr/Mt7b/RlzkX0kOuKdFnGTOd57UQ5zun9I5uuA
kNiDPhGX9+ue4/bgvWe20TvUlX1t7vosj/74O+b9qng/7MHttJHSLhOW02bC
TRH+PXQreK+s97HsNXeF7mbKz1rHXvlXYWmk/1NYKdxCvYXbcryv/SPS8Yw/
hMAemHz/iri30h4Rl2eprPNmz53OWrIXL856v8TeNCfr/Tx790zWzwlns9ax
v8/Leq/LvjY3ax3h/Kx17PMKs94Hsv/7Rbgx6lMq/aM5Pj+om7XkHKJe1pLz
ifpZS84kirLOg/f7O+q0SijIuhzK+Cd0tMtzOV5jWJeuFA4QDhTmCPtHeJ5w
kHCwcH2Oxz3z5tkcr+WkX5zjecUcukLYL9JfJuwj7CssEA7J8VnD5aEj3nU5
nifkOzfKp7z5UeYh0WfMq67RV8huUb9uMQZpL+ZVx2i/DhG+KXTY7NnC3vFO
jC9sNzZ7SY7nMGluiHoQXhbpTog2o5yTou2QzCfGVJd4v0XRNrTFisibZy/k
eI3HF2DPwR6LPdXPUTbv+2O04w3RRuyLWGupP3sewvQH+zr2WLQv+z3CrPf4
vvi5tCv7LvZ8tB97JNLTrqRj/4ePxR6evTJtjY54+Fzo2DPhv7BfYp+Ef4SO
MD4NOvZM7XIs2XvtlWPJ3gu7wL6UfTN24s6Mw9gwdOxfsTHIe8I2YQ9WZ2yH
7sg4DbYJHWHWdvwUfHP6kHLYU9KXSOrMeKLetAs+AXsA2gWfgHSE8aXw6fHN
f4r2pg/ws9gb8Ay/jL0BPv7LOfa98AdfyrEvSPiV0OGvvZ5j/xV/9tXQ4Us+
n+O5Rd+/GP1P+jciLn7uWzn2QfEZX4t05PV26C6mXSMu8d4J3SXCtzn2uZlD
34Vkjn4fkvGI38nelT0rPiVnMZzT4Guyv+UZfiRjhzrjh9I2PMMPJi5jBZ+U
fQ7p8UPJj/3QD1EOY/fSHI+DveP92kWY990zwvivpCMvfF/amHbnDhTfRXAn
kn045w2c5V8YkvP7PlnbfWzzaVmvDYRPDx12+uSsbRy2/5SsJXa9Z9a2HrvY
O+s1gPQnZr32sBYtbyY/UXKt5KlZpyPeCVnPVWxzl6zXG9J0zlpHeFUz98dG
ya5Z58c61j3rdYv1p2XWYwJ70CJr+0u4MuvzYs50K7I+UybcKuu4jJ1uWedH
Xs2ztr+kr8o6HWfAJ2VdDmtgddY64vXIWkf9F7bUXKfP9J69sm4P2qtj1jaI
OdEpa0mdj8+6j3n2ntIsod3KZDPEbxLPiP8reZtwu5Cfq3WN9Sb+ANVq1m+h
INe6h2gbYZmwnDqFXMG7CzcLK+lDYVXk+2fobuF9hVvj2V+hI1yY67wfFopy
LR8RinMt1wpZ8XtZg3lv8TWs35Ge9qWvOmQ9f6jzyhgf9Gda8e/OOk1K/K6s
w0nxO7MO54nfn3X9/4v2oP65uS6TZzm5LpP3SOS6bUhflvXZPb8hNM76zJ0z
+N2zlpypN8lacpY/Mmv/AL9ggtAo63TDsvYD8FMGZe1/4GsMzNr/IDw4dPgF
oyIPfIpxWe9vGwqzhFqhjTA+dJQxOuLid4wVGkSaMaEjPCTyxq8ZGpJ3GiGU
xHtPyrpu1Glm1mOaOXFW1mOX8BlCU6GZMD3recJ4P1+oifc7T2gd4XOznjOE
+2ftn+GLTYy2obzJUSb5nh1lMi/PCUn6C6LebYVdWY9NxuWWZh4f7zZzuEuM
D+K+Eraf92CdYN0g/ath1/fMep3A9u+RtY5wu6x12PgrW9q+L2jmOjDvyYt3
pc/5jYU6kzfl0S7oGDd9s7Z/+KHlWY8j7Ajzg/HL+O4Xz2mXAdE2jAnmMfOf
ef+4yj6C+jTzHEV3QrRB56jz8tARvlo4TDhcuEo4NMK3qy77SN6lfNaIHyj+
gPg8yYOEg4UFwiGRZn7oCN/S0u1yu+JvEo4Vf1PyzBgLzJWSXM/pRxmP4o9L
PpH13pDvt/n+mz0j359fEN+souNbcPaYfCvON+ivho7w66EjDd9V8/0838q/
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
Lh3h/qHjjA3/gjMvzsMGhI4wfhB7dXzwQfGc80J8Cs4HOcMbGpIzvMHxnGf4
Fpzlse8fERK/G5+rbuQ7JvJmHzM2JPubcSHZ04wPyf6DOcdcZ/5PCB17EcYs
eyRswcTQEWYOYyfYA7HOp6L+U0PHPmlaSPZD00Oyp5kRkj3HWSGbR9sj8UWG
Rb2p59lq698YM5Jb4r15x23xTrzjbnn2WfE9G+XZ18QnLcnzHMVfq5tnnxUf
rTTPOsL18qzDzy3P81zFPpXluQzCu+fZP8ZfbpznvAk3ybOO92omvjXeq2me
dYQbiK/L9fs1zPM78n5FebYB2JHmebaz2LnqPNtZwi3yrMPWtsqz7cNetsyz
jnDrPOsYv/u2su0YhC3Ksz3F7lbkuU6Eq/Kso4wDFP9VxpriHyz+OuNL/DDx
N8VHlrkOE6Kt+fabv5XD7xN8C853+4T5Pvzt+I6/ukh5F+r9haPEv5T8SjhM
/FPJz4T9xd+TfF84pkb7UcnulYov/oF4V/EjFeeLQqc/Qvp3JbtIv7/4i+JH
ircX/1y8h/jeiv+W+NvCvuLvFDrN4TXWnaA4+4q/gE78IMX5UPwjoUr8mUK/
d6H4Q5IPC3sq3r2SIyQz0q8Rv0f4V7hNuF1ISX+X5N3CoeKfFLqe+1Y6n7GS
edLfL/6AUCn+dKHL26PGun0Up0L6pwr9bK9Kxx8lmS3yO9wntBB/TvJ5oXmR
25jwAcrnJdpb8RuInydeIF5P/BzxfPHdxM8XLxLfLjlJmCyUSD9TMiN9kfhZ
1Em8rvjZ4rni2yQnRpoC6YdIJir9vuRxBu0m/VDJpPR/Sq4UbhGeEIbThvHe
04UZUU/SnRltgZzCOFE+b0p2VD6Hir8u3kG8ner7RqGfHSj9y5JH04/ir4gf
K36I+Gvi7cX/kVwV/fRXvMut0ceUMzXGKHJatOO0eL8X4h1pi/Yq91vJ74TW
yne15CBJ/gMQ+B20RZHlnUJtpcfDEMkW+cqXuSrkiz+AbyRUi+9gzgvl4tuZ
n0KZ+LY8hyvyrXtaaJnvPF4QljLH8RU0N5tI/yS2Rlgm/SuSP0nfNN+6rcIN
0r8o+a30zfKto4zKfOf9jFCVb8k7Nc/3e/HeXwpXCVcLXwgLIvxV6K4RvhEW
CtcKX4eO8Lehuw7fSrheWCS8ofdYLJkq17xQWffnuV1yxe/Lczgrfm+ew78I
N1Jv4R2lvYm4Sru74mzOc/3/q/CYPFBtXiL9Wuy7UCT+ML4a7Vzkcc+YLSvy
mCbcWHyT5GahkfjGQofbaSw9InkQc0f69eIbhGbiWwudfvcip3tSaFtp+zBM
skmRdVuElpUehwMkDxYeZS5J7lljG3MAtqvG+kOZd0r7mPjjQr0iS+ZQXdXl
MdYqoV6+5RNCab7ryrNC8YfyXOeCfI81wo3EN7JuCY3zLWm7huIb8vysfpHL
WSc0KLKkzg2LXG/apYHir2OtJX6+yydcnO82pt2/iz6nv/9VvwxWuv0rXY9h
YQtGqr4DlO+10j8o2b/I4YeFgcIg+kEYLYyhfGFUhDeFbqywsNJp10mOqnG6
68XXS46MNPcLfYV+wgTFGSF5k+KMFh8svkh8DDZNfLH4ePHh4kvFN0c544Tn
henCDGGLMJ786Od4Tnhr6CZiy4XJwhmMtdBNwn4L0yKvp+P5mcI1lX7PxyVf
iHLOYi0VpghThRdDNxPbHzrymlhj3TKlHYsdFr9BfJz4MPEl4nMlDyzyunei
8Jv6YafQV89+lbxc8grp9yvy+ty7yDYO23ZKkde8/wrdZvlCgXCC8LN0v2Cv
xX+U/EnoJv675C6hU5F1xDu5yHaZvI4X/6HQaboW+V1Ic2KN8x6n9+la4/V4
vHg38SLat9J9yXqcwztIn5YcXukxxHqZyziqcT0ukL6D5PeFLu/0Iq/ZpOmk
OEnJoYpzWtSVcHfpi+kvxkal63ud5OCw+wsku9S4nNHinWv8LiPFn4n+pM/u
FfoUucyrK80fxU5E+1Im/s5ltD92SfnMltxNcZqLX4W9Ef9a8hphYaF9qasj
/E3orhWaKv4lkvUr7U/NEa6knWscrxc+hvgV2DnxKvG52LBK+1DzhQWF9s/m
RZgxcpOwLMYKcnn0E3JF2L5xwviwoWMjjO0YKYwKmzIiwlsi7oSws2MiDfZl
dIQ3RDrC1Xq/myX7Sf5RaI5vwZhdGu+3u+pyETZScRqJXyBeIn5ckddt+v4f
2aJBkvthcyT7Y5OFW4o8/hizg2o8Py5SnGskDxeOEOYLBwuHCENq7MteojgL
QofftzDi4rfeWOQxxxhfUuT3IHy9cLRwjDCsxv7xbOWzKHTHMm+L7HOQZnHo
CF8pHBBzeGnkzZxbVuQ5xlxcHrKzcGvUqbuwInRdhJUx/6nznErzByRvkzxJ
6CHcFHmT7+2h6ymsDtmL+VZjOV9p7yzy3MZO3BXyVGFEjeVV2J9K5/+Q5Puc
IbBeaR1Pae24iz25kM63XMMaVyBbyBoj1BV/LN/h+gXWrRNKxNey/gkNCqxb
L+xWYLlBKC3wc9I3ai0fSXKRyi0Xf0t8uXgD8ZfErxOvEf9YfDU+hvir4jeI
d1Y+v4j/KjSV/nXJpdIXS/9Ivt9jgcL34bdJNpf+Wfw/YXfxzfhqQosC654X
6imfFyUXKn6p+AviV4sXKs5D+C5CwwLXY6NQVGAd5eUWuKz78SuV5jfJ3/Gp
CkInFIg/mO+88gusI1ylst6RvFnxW4i/L36r+LR8+534hms461c/fBB91UU4
EZ9M4e6SH5XZR+sjnB591ls4LXyRocIw4Y4yn6m9y1lUnvPsJtwpnCycgu8q
dBJOyPNYQHdqjIlTI98Hlb6H5Cdl9n3Ie3j4QMgR4YsgR4bfM0AYmGc/qH+E
8VMGCYOFqfn2v6nzlHz73+Xhp/eLNPijfSN8X9S1b/hAlDMqfM0hUed7og36
hD80OJ49HO9C2dXqix35Hh+NxTfle3xUiT+T72cV4k/howtjCjzuGeODCtzH
9OfY0DHeJwiNCpzfuNAxdiaGjjH4TLnHTbFsYQ/JP5X3X5QhfVbhQukfE/9b
un8lT5XuP/5TRca4wn8QX/IJ4V/0ij+6wHOV9xtY4Px5v1EFnrc8u0Lx76aO
kukC8zXCLUJXoZtwgp71kLxQsqPQXXyW5FzhHvYtkiMLPJ/Jd3iB5x42YERI
ng2OtmHsDwnJfBoakjk0LCTpNyrfhGRadVlb5jH5JWe20ueQl/RPYqfEc8Q7
ab60En9Rum6Sv+vddgkdpG+p8PPoxWvFX8NuiLcWf1n82Nae/8+KzxfuZb+H
LZJue777u0mB7cQW5mGB+58x0bTAuq2MU/Ft+U7TrMA6wlMK/Iz8poZkHE0L
SX5nFDgv0g3U++wr+YHeYXKBy+bZaQVuk6QwKcYOz05X/L0k31X8YeIHiH8s
fmbkR9nToxzG8oyQjPeeit9W8g3Glfie4m+JjxE/RPxz8S0xPrJq50fUB73U
F5+XeX8yWhgTexjkWGS+9yHsS0ble4/E3ohx9Kee/5XncbRL8g+hpNz6TpIH
S/+R+MfM43zvo0g/PN/7GfaRdZkLet5ZckToiDeONSbf+6dh+d5nkmZ0lM87
rdG++0P2pnr/28TfEt8lfof4u7yb+CDxPcTniQ8X30d8Ief24m3E54if1spn
fJeKn5Pnsz/OAodI307yKukXiM8Tf078zHzv87FlJwq/Sb+T/aDq8LtkB+Z6
uffVx0h2UpyfxH8WOor/mOfw+Kgfe8fTlX+NdJcp/zPyfb5AGZPyvQ/nHOJT
6sm6HW12q7BK+EL61ZINpL9Z+bwm/ot0n0vOz/OZwq3SvyH5G/dpY50oVvyv
aC/x3cQz+V5jsK//5rms24WcfOtYi6jfcmGF8HWZ15hGStsv3+mJ2zfffgbh
/qHjvGFIvvfM7KEH5/u8hvDQ0NHHE/O9f6bOE6JtCA/K91kGaRpjTxiDkg35
jybFu0sOzPcZB/EGRJmET8+3D8Q7NQl/6GTJ+uWu54nMzWhj2n1gnG3Nk7xc
z/cV9hNuENoLx+X5/GaqMC3P5zjI6Xk+Q0LOyPNZEvKsPJ8PIWfm+QxoSqTn
rKVjntfmCXk+W28c869+ns+2J+X5fLxJzEl0nMePz/N5N2nGhY4w50xnRhmc
P50R4S2RhnIu1ni4CJ36cLb4JeLb+P2O38vE15f5/GJs5H2B9LOwDWU+DxoX
ec1p5TZ6mt/7xM8Vf6LMZ2CUMzHPZ2ETox7bQ07O89nb5Hi/s1t57j1W5riN
o86cYx0b7T452qBppEHymwBrP7+J8rsfvkB+hIeGjt8B8Av4zYzfyoaFjt8Y
h4fkd4xB8Tw/+orfCfjd4Ow8/07QMvqzKp6NbuXfLxeVuV+bRzzsxEHCwXn2
h7JRNv4Nv5nxOyH+Fr/PJaKf+C2kPPqpWYSnho7fFhhTlVH2tNARxjfidxd+
YxkR9eC3l1Xxm+ubZfaVKIff4vqE5PfA00Pye13fkLxf/3hH3ntk5EcZx5Xb
3p1b7j0KZ75/F3rPwb6RM+kv9OwzxWmrNedb8a/F9xb/Tvwb8X3EPy23/88+
4DPxT8Xb4COLvyfeXPwbbJP4XuJfiX8hvqf4KcJFWr9qtX59Lf2X0reTrodw
gfQtpf9S+s+l36O11znWuyPF+wiXiO8p3Yfl9snxzT8R/0i8tfjP4j+KHyj+
k/gP4geI/yL+k/hB4rvEd4ofKv6r+M/iB4t/JP6heKvW3iewXziktf05/LrD
xL8X/1Z8X/EfxL8T30/8R/HvxfdvbZ8P3++I1vYR8RUPF+8qnM96r+ddxM/D
/xA/Rnwm/qh4mWzWEeqHjPaFTTivF0+Kf9favzXkSPeR4n2LTyLdh+LfiL/P
nkz8O/EPxRtzlqr4CaVtKn64eFq8krMY8VzxhuIHcGal+M05PxLPk76c35Yo
S7xC/ATxrPgnyv975f8RY0D8B3wb8Q/oS/H3GDPif+Kr0O/iO8U/o63E/xH/
Qvw46oLPLV1H8XPwqcQ/F34S/5Q9pfh74q+Ivy3+Kb4Q4038R/FPxN8T/wpf
S/xd8c/E3xZ/g/Eh/jr7V/GP8KnEZ1W43OvF24nvLd5PfEiF/fjLxAeJnyI+
W/x48WPFp4h3oJ/EzxTvKN4e/1F8Db8ZFcumV6mdpO+Af4efq3B36R/W8+Ok
Pxq/UvpO4sfhb4qfxDgQP1e8vfhR4pPFu9Au4meJdxY/Hj9R/BjxI8QnMiY5
8+I8Q/n/wfkUZxL81ideqnI/ldxP7zBcfIv0J4rfJf6W+F7ig8U3ir8a557n
ireRvo/0j4tPFv9X/FfxieJ/iv/MWYX4E+QvvkCoFf9WeewUPuQsh7Eq/irn
eeI/ib/J2aB4a6XtpfhrxbtV+LzgHNWlAb87cv7EHJH+BOnPFj9W/Ej8a/FR
4n3E54j3Fe8pfrH4GPHTxa8UX8hZgfj50l3NWQFtK34dZxfiF5BH7Osuku5U
8e7oxUdU2Ke/Qvw08ZPELxQfJt5b/HLx/uK9xC8RHyB+svil4hPE+4nPFZ8k
3l98nvgZ4gPE54vvJ74fey/xg8UPFB8hPlSYI34QY0Q4XHwC+QuXie/LuBAO
Ex/PPkD8IPGR4keKHyo+TnxqhfeWC8RPrvC+a5Z4L/GutIl4T/ETxc8THy3M
Fz8CHXs28ZnUXX2xRH3RRn1Uj99dxP/ClgrnFvp30mOba1zVVflt1Ffio8U7
iPcWny/eSXyc+GrxnuJjxG8X7yE+XvwO8V7iHcVHibcXP058hPhR4l9Uy/aI
76zV2Jd+pPgx0jcTP0q8iXgX8THix4ufLD5XvKP4p0qbFv9FaUdKf5N4d+mH
iS8RP1F8D/Hu4q3E24p3E28pvqf4SeKtxduJ9xCvEa8R7yJeLT5CfKl4N/E2
4l3FW4hP19jOK9E8Ubv1l36h9CdIXyt+onhz8UHi14t3Fh8ufqN4V/HB4ovE
u4h/rPdPif+k9/9IPCn+g/jn4hnxX8XfFP+rVDrxH8ULpP9P/C3xv6X/Qvwd
8X/FvxJ/W/wf8S/F3xX/T/wb8VyV21BpG6rcn6UvFE+I15G+vnipeI74buK7
iafEG4jXFy8W31+8kXhD8UPFG4u/oXz+VP6fKf/Xxf8Q/1T8VfHfxT8W/0Y8
V/H/EP9QPCH+vfi34nnif4l/JZ4V3yX+vXi++D/i74vzH89/J95Y5R4uvrvK
fU36Xcr/E+lfEP9Z/D3xF8V/EX9f/CXxX8U/EH9Z/DfxD8VfEd8p/pF4a+XZ
WXlWKc+W4p3EK8QrxI8VbypeKd5evJn4tZo78zR37tT8uFr8SvHV4svEF4k/
JL5C/AbxR8SXiy8Wf1j8ZvEl4mvFXxZ/R/wl8Ysr7BssYY6KXy6+SvxS8Vni
S8WvEr9C/DbshPiF4svErxC/WHyF+ErxG8UfFb9J/HrxB7GT4nPF7xAv1nze
g98rxF+X/n3pXxUv5T6B9H+wdrf2HYlc6QqFNvzuId0NrNPYQ8oRrhW/H734
NeL3ii/F/oo/IL5EfKH4feLXiS8Qv1t8kfhV4mvEF2O7xe8Rnyc+W/wW8TyV
25rfyMSvlP5S6VeK3yp+k/jj4keoXwapXw5WvxwuPlD8IPGjxAeLHyJ+iHg/
8f3E9xbvJd5GfF/xU8T3ED9UfID4AeJ7ifcUrxVvLn68eJn4PuIni7cVbyHe
Ubxc/GjxoeKHibcSP0G8Unw/8d7i7cQPED9NfC/xA8X7iO8t/qzq8prqsoN1
TPwt8RfEbxdfIf6E+DPir4g/Lf6UUKs22SHd88Ib0j8n3ZP4H9JvlW6zUMjv
RawbKquvytpXZb1X7vNtzrlX69nNSrtO/C7xW8XXi98jfrv4BvFbxJeKPybe
R31xo/JsK1t3BvcJivx7/cxK3y3hjklRrIOshwWxPrJOlsSayNr4T7nXYtbk
0li/WMdyY01nbWccXxw+/874jQHf4drwmfEh/4xzRta9Rwt8pslZ5iMFPgvm
vHNtSJ5do7Rnhb+diXWf9T8VfiD+4EThfuaOZF6h+QPCcIXvZh5JjhbuYS5L
pgutXyMkwjfAR5giPEjfUfdCv8ejMaZnx/peXOh35dlZCj9c4P7a2Np8pvh0
4SH6iLnS2ueG9ej3Ap8nEn6uwOeYhLcV+Fybs8kt+A4FPv9+qsDnmJxxbi7w
+Thn4dsjLs82Ffg8nWdbIx15bW7t8s6psL3Abrwg3lzy2Sgfe4HdeKnC97P6
8rtk+BD4Eq9QrwKfiVPG4wU+a+as+omQI8L2YQPZK2HXsG/sGR+LviXN9bGP
YO+wGP+kwPsp7CN2kr0k7zU12mVHgc9/Ca+LcjgvXx+S8/gNIXm/p6OdOLt9
JiTpcwrd7/fSrirjPvqOMVzovuUd6xZaUj/uO3Bvhns03IFoGGHuL3CvjvuA
3E3gvhr3184KHeEeNdZNqfQdit0iPfc7uI/CPRTuN3A3jntzY0NHPO5NNC3y
fZyJUT73cSaF5A7O6TW+N3YudwZqfEfwPO4J1PiO4PmVviPCnRvu2lwotBX2
KPL9kdJ41j9+e75ScnKl9TdKnsoegTqJnyJeQ73FT2Y/ID690ndW6kV9Tqtx
3udI35s9ifjZ4j3FW4pPFe8l3op6V/qOSGW0I2sSa9NzFb73UR7twj2Dsggn
9fxO9cldQlmh5wljv1mhxzrhBoUeH4yLJvx+H3Not0LrGCPVhR5PjK/KQo8V
xki9Qvc5Y7mq0Dri1S+0jnwrCj0PSVNe6PIJNyx03syPRoWWzMXGhZbMV/bT
y4TlQr+wz9jpHrFGsFbk1/h3+7/F/6jw7/h7V3r/vUq4Tegddh57z359JTaJ
uVToutIWgyvcVvdL1pF+tfgdBfY58D3Ys+D34P+wjzgzxhpt/Yv0NbE2sa9j
f/dahe9THCgcJNxW4fpwTtCF+wrivxX4HOJ3yV3CAxXus18luxda94fQp9D6
FP0ZdeDs4b54158r/L0h97e5z90TG6Q4fwtrKtwWnEn0LnT8hHCK8K/0/wkP
hU3fWWEbBs8U+m4W9rok7kdgC7LY7wrzXdgo1jDO0yp8n4L1I59xEWvJX5Jf
trZuvfgmoYj3iLOZXwrcFiOiHOzKyJB1494HkrE2OiTji7tjRfF+JzdWHRup
PsJXKquA8VTxf9/Qcn/9tkrPfWzAIeJrC30/sDjuDx8hPqvS92+4d9yt0v3H
vZjjKn2HhLskJ1X6Hg73cY6p9N1a7tieLH69eCvx3uI3iNeKl8Zd3CM5o4i5
zLw+hXse0rfmnEF8sXiNeE/x68Rbco5R6fs53NPpXOm7QNwJujTuAHUQvzju
63D3+bJK3+3hjs+dlbZp2LbL405XR/Gp2rtltXfbhT/DXVnF2aHnTwvnip8p
3fGVvj/DPZpOlb5HxH2iC+MuEXe076n0vRfuv9xX6bsr3GFZXWm7in3lngjn
rJy9cq72c4H7G78f/39uhdvyUOGwQt+Z7UV/FvockPPAdyp87xYbxNrLPdyq
CH/T2rotivN9hcd9q0rfr2T+nFTou7eM9VMLffcXXQ/hpwrra2izCs9DzgW5
w9sz3uNb5d+i0L7l9+FnbqvwneDKeA/uNmErsWfcHcbGYfPw3fHhn67wmSNn
j29WuD/3E/Yv9B1nbDG2mbvPTSPMHeomEf5RaVtJbq/wfeSKKHtKpKM87k5h
Q7Gd3MnePdL/HvO5XaV9a3zsORW+P45NOb3Qd1SxC6cV+hz0C8X5ssBniJwl
XlPhfvhY/JMCn9d+XuB4nD9yDnm94myJMyjOo8bEHGVt2c5+T/qLKrzXYs+1
oMI+Pb49+yn8ePz5y8W3xrkW51fsDdgjzK7wnbAG0dbjo72pM755B8Z8oeff
0YzPQs+hoyLMHTFs7onCL2EH21T63hi6roU+/6X+71d4XpLHsYWel8j2hT4r
Oi7KWxpldhS+rPD45vz4ptB1KrQNaB9pfqtwm+9R+X//fzZ//3GF9iWdhS7C
EuE4oYPQnrNGzZ/vhGPFvyly+Lhi674Xjhf/QfJHoUOxdYTfxD+R/EeyY7Gf
/yScwLkm65XQudjyV+51Ffs5z04U/01yp9C12PJ3oVux5S6hS7HTEe+kYpf1
p9BT/C/Jv/FtxBNCUjhdSAlpzmRZm/X8P2ygwv/ChZOLrSfco9j5kRdnvpz9
vqH4t4jn6dkH3AEUz4i/J9438ibcX8gRssJAIbfYaVbWWPe+4jcr9t1c7uE2
KfadXe7wDhEvEAqF6TX2/1bFme4F4Q/O4G6h5O3S717sO8GkP4v7lpJ3SP+Z
5Lwi3xOcJv0syVulf0fy4iLH+1iYU+R7fFM5V5e8hX0ldz7F7xJ/T/LSIoc5
s+bseg1rTo3vGt5b6X7jjuCS6D8k9w1pM+4scg/xK+HqCJ9fY939lR4v3EFc
FGPrWuE64UvhqkjzXeiuj7FF3MUxhihnaYwh5E0xJpDLYlwujvf7PNqD9z61
2H1eR3JFjeU7ep93Kz1Oklqjjir2e/Dud2q9Olk4RahfK9sseQZn/KE7VWgi
/SDJmdLvJt5b/EzxtZKDhSHCPcJpQh9hd8UZIDlDcRqL9xOfJt5I/HTxKeL3
S/Yt8bOHhYElLuNBoX+J0zetdd5nK/4WyfHCBGFryIlCJeezkucrToX4CPHz
xKvER4nPEr9dsofQU2gh/RjJC6UvFx8ufq54mfgw8XPEm4uPFr9AfFuUM0nY
HnKy8FTIM4QnhXHxfpuFsRH+Ve28VLhJOLvGd77vVj/8ovCN8Wxxjcfiy9I3
L/Zdc+6ttyz2PXjup5eLby/yPffKYt9l5+5zRbF1hKuKreMO+zXK8zXyqfRv
J/yG8iy/xSnOFzEGWxU7b+65z62x3K4488VfJn/xefhXlCteXey8eb8WxX5H
3q9psec3c/56xX+LPPk9EHsg/oGwj/jbRZ6j+4m/W+Q6L6qx7qVK/97D7z6v
8Huj4nwU8/j//xYl+br0C8Vfp9xK/w6E7XiBM6Qax31N/FCl/UT8U+GwYkts
xs/iS6Ldb1PfnBRjgjIvL3Lf7Iy5xd3ejxVvjnAl7yJcEeFvhWuF61gThOuF
RcJrNda10Jj5IXSLhZfxESXLpH+92L/xzULPmBDOweYKlxU73tM11tVV/B3i
54nXF39G/FzxeuLP1jiPhuI/Rjk3CC8JMyPfF4WzIvyq4l8tWa34L0jOiGfr
a2zHc6R/Hrscz74RFkY9vxAWCFcJlYo3X/J4ya8lr4l4nxdbT7wvIy7lfSrM
FeYJr9S4LSuU9jnujYs3olzWAvHG4u9JXirMFu6Rvq3kD5WO26bY4XvZ10v+
iO8s2U7YS/i50nx35fN9pePvVuU6MWeYH2OFBuiFEUJJsX/jnFrsOcZ8ur3G
On7/vIPfrqgTvqt4XdpDfFrEJd+7OYugzaS/s8bz6it8QvYP4k3i91LWY2zz
28JFxX72Uo3r2kxxXqxxfZpW+XdNft+sI76KM1Dxj5XnXZx1iH9d6X6iTtXR
l8jm0d/IFjEOkC1jnCF5P36v5XfbXOW/qcZrc574ZvGh4vniD0kOKPb4YG3n
+4r7iuxDcH+du+oX11j3BH0h/oD4+kr7BHwLRJj2Xlfk74QuUJxVkg9X2v/g
ewDuzuPL3FHku+1/h454j1Ra/3alfZaVkea/KJ878vQlefPdUsNiS75nalRs
yTdMl6vctZKblc9l4o+gZ/8n/pj4lkr7X8x77u/vCnmzMLvG30ptrLTv8lCR
w5fW+HuqDdI3LnY5+CtXSv+E5Db2vDXO40HxOeKPYyfFn6x0ufy2jl/FNyr3
hK28LOzRRTXWPVZpP4+24b4/v8HzW3yh+ujOYvt2jK3t0o9kTGMrJM8UpghP
CZOFM4QdoWO8PyD0K7ZPx+/0/F6fUtp1NdZlxO8rtn+JD/hETfiC0q+R7F1s
P/TRGo/rBHYp8mZ+PBeS+bddmBTv8VOxbRW2eKswQZgo3Frj9v1I9b2wxnVd
K/5hpf3GrPJ/UnKcMF7YHPOZ8CZhTIS31XhuF7N2R96UvSXSUd5TijOKua84
GyVHR3r83LuL3B915QN0Z71XnNHCIeILJBeUmB8aa39ToVn4BbvjK+FPCK2E
1vg4SlMreZHkeaGrETK11ver8m+9/OZ7EnclxIvFe4n/J16CfyZeR/FL8cnE
/5a+gPWryj5LUYnT/EMb4udIn1D8uuK9xXPE2+BXVdlnaRLvfaz0j0veLv1M
yeb4R8LxJV7DWFs6lbjPWD87llhH+BzxllHPGUKVUI2fJ1Tgl+G3RX7Emx46
4p0VcSlvilAmlONTRluWhc/VONo0qfesh39ZZb+vUTz7UPV9VO+yL3XEB8VO
MYaY15L7S/+Z+Drxg6p814Q7JweKf4BNEN9HPK20dxd7XL8u/S3YSel3Si4T
lgs/1Ngn6CD976FbIfwh3CysFHaFjvDbNc6vbZX75pFil/dejW1rO+lTqld9
fGbWcek/o415H+kbSH96lX3KhlFnfMrdInxYiddX0jAWPyl2+H3sleTecRZF
ezCP36mx3CPuF9wfNuDdGss9qzymHiz2+51Q4j7HV+1cYok/26HEfg/jo0v4
uL9hJ1Kqj5AW+gjJCPcNXSbl/6+9VKgr9AtdTsr/fzu6evyfrfxfr9q7/yl0
4/935f9YEHryf7HytxuF7inriNcj5bg86yq+M+k0J/L/siYdHh1510/5/xVH
Nkj5/xdH7pby/0NfJBSn/H/OFwiFQmfhF+Xxq9BJ/CfJn4UTUpY84/+uz480
g4S8CA8UciPM/1dfEvXvknJ+vN/wKJNnQ6NM3mOAkI30vVKu9z9Jt/VNMS57
S19HSAinCv8lHeb8kb7vzl0y4Ttsn+SJJU7PuP5NcRIKd5W+W4nHNOOX/VtS
SAnHlNjPwx/spHhfYWMljytxnoyDo0usJ96xJY6Lj3xkiX1H/MEjSuwjEj49
8mbO7ayx7FblfWCmxPOY70L4WzP87Rm+T0LyN2kuLrP+Yb4dSbk9/hVOSVlS
f+6Zcd+sS5X3sn+L/1Psvd9fxQ6zf61TEvUvcXtQf/a6/xX7GbZ/V8xv7qtx
b62z8jwt2pvx/WfM+1si31uFVcW+G4fPV6v4R2suP6q8bmPfXes9863ih9V6
r7tS/IBa77eXif8keYOwhDYqlV2SXCMcUet98i2sBdKvFr+D+pGfsIr6lFrH
nv6f0LHX2a/We+ClSrtIuFF8m+RBtd63r8BWKO294vcJh9R6f34za5f4JeJz
xFuKny9+sfhrJV7PCD8f9p114JUSrw2sge8Qt8TpL68yf0iyRvlcKH4Zdk9y
cdT5B2FRhL8Xro9wK8WfJXmp4rcWv0B8tvg+4itJy74mymdt+Yt2inZ5JtYV
1pl8xd9bcojiXyq5V4nDlwn7CPsKV9Bewv5CQa11wxT/SskDhAOFwlo/HyH9
whKPb8b7VSW2xdjmolrHHaU4Y4TDxa+WnCd5kHCwcE2J9aR/usT+BO96beR3
VLTB0TEXJ8Tcu67KbcR8a1/i/sQus24PrnK9rpC8qcRrdqdox2MizdKIy7Nl
8Rx7v6LEth67fnNIbMbKkMyV5RGXeOOq/G4L2dOVeO1nHHxS6b1VAfua6BP8
i5dL7BMwPo7Tsw8VZ2SV2/X9Yu+DaRv07Lnph3eLvS+kvdCxBrP2bwofsH2V
0w6X/KLG++pDquxH4F/iA37JbzGsk1X2LdDhk+KHsWcmDX4Ze2bCx1a53KFV
Hh9vFXvf9hVnKZKHS/+G+O3kUWV7c1uxw9iO1ZJ3hN1ZFc+wNejw2T9X2vXU
qcpr+YZi+6Gs8Ujq9jVnONhOxfmmxmcHR4p/K/6G+FHYdc5AsMHseWv8jsdU
2bfD36X+L0Xb0+74ffjQPMPfog3YH1xb5XG2hfxj/F0nfBlj+mrhixL7voTf
Z/7FvPmsxGN6vvBNiecD6a+p8vjeLPlqie0B9uLrGPfEe1aYGuNmruJdLvkY
c63K+a9ljJRYz7ycp/AcySckPy4xZ17ig3KuQf/hb7L34DwDvxPJM3zPp4u9
N8IHRbIfwg9FsnfBH0WSPqv521bhAZx5CHPF1+NDlphT56tiP7ARn0rx9xQf
JJ4rvof4wCr7r4xT2n15vuZO/CbBfqN+sffH7MnKin0G8YjSPiJb3L1atreu
xqb4K8IPwiJhMXcuhYXCtcKBineD5DTJB5T2AfEu4q2V9kXxl4SW4s9LviC0
qev8XhVa1bWOeDV1HZfyWog/V+o01eI7JJ8VHmUtk+yh/B8Sf0i8q/jd4neL
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
q+04cSu2ut/s7V8v4TXcQ/3aVbRRKAg/ST4PdlLyw0TbW61Thwpt4YdEht59
r/RNhJV+yVbPA/X9lTm/UthL8mahRfg7MvRmiVbbFebvn+gRdmRoymYdHx7K
WAwWWtOO1Vrtc3+MHrR6XOBXb7XsE2EuZw3Gn7271f3Gl1ml1X4MeVZutQx+
wX7W4zVF/8WvVtyiCv+NX61wX4V/UXhehRdS+A98bIV7K/wPd7kK91d4+Vbr
FHrWpjXzgPgHGTOFH2KtCr0Ufho7jj3Omhtbti8zXjiWsRF/jDBOeLFTuiUc
LbwUOlZ4OfSYTvtVY4VjWu07jBGObrUfRHkT4k8cnXT4E+NSH37KUcmD/zI6
/GxhpDCK9KpjnDBeeEE4Km16XThWmCC8lnj4NyI7TvhYOE04XXgzsonCK2k7
5c4WRgqjhGeEI4QjheeF0anv2chI91zSEve0MCJ5nhKGh38j/T6u1X7EicJJ
rfYvTgj/XmSTWu1HnCycwr7dal1EB59s9ZrEj3giMvinIsPXmBobid0cLD24
VLLp6I/olcJVwp/C5cIVwoGKu1D0HPRK9GLhEuGvxJPn6ZSNX/NY1t7Q6A2y
I4XnMj/M2bORMWdvpt8TW+2vHJ8+vxUZ/PvpN31+pNXr/LDo6CFZc49GRt2z
IiNdX/m9B4rurPb3U/gghXftZx0/OPk/yZyfIXwaeqbwWehZwuehU4S7hX2F
gcL/hH3C3xPZfsK9wv7CAcLMyODvFwYJBwr3JR7+TmEvYW9hljBYOFR4IGkP
Eh6J7DDhwcgOFh6NbIhwhbClsJXwpTBVOFv4WjhHOFfoXnX7qH/BqtsH36Nq
GW1sq7pu6mmtWgbfXrXsIaFcNX1Y6Kia0vbOqttKuypVy+CrVcseE+oKPy76
hFCrWvZ4yjok/W+Qjl6n+bm+1fUcnLg7hD0zXu8JJwmThHeFE8PPEU4RJqfc
ocLhqQ86LO0Ykrh3hBOS/61Or/vjhY+EUzttF96OjHRPpgzW8Pup/2Thw9RJ
npuEnYVdhJtDdxVuCd1NuEbYVthOuFrYJvy1kW0vfNFpvWMurxd2EHYUrhK2
Tp4rM+fw1yUf6W5NPbsLt4XuIdwo7JT23R4ZY3pDyiburk7rI/r9n+bg2lbP
x7/CNeH/Ea4Of3ybz7qca09u83mPc9IJkXH2PanNZ0LOKCdGBj8pMvJMbvOZ
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
1K9ia9lHv4wNZj0h+6bNvssrsU/4NS/GbuGLvBybhG+CDJ799bmsb3ylF7K+
8ZOej01irVL2t8KG7abftXk/Zz+gHey1s2Mz8AOw9dj+Q9IP7PoFWfeUcWi7
7Xt7/APsBfsGPsHHbebZmz9qM4/vyNgwFvgilE3d+B3koz72bMbpwzbv5VDy
40+9Fnt/Yepnn8BfZC9k3PEf32kzv5PC/4r+12bfZK7oP8KO7abEde3f0PAr
ZYt2E/5QeFnRndudr0F021pDw5/ylf8Stlf4b9G53Ktp3stNnvvtao4n7mHJ
O5oc92jJuoPezCpZd4jbpd1lN7bbR4MWhDs5n4ou2t9+Ivscexr9ZK6+b7Pv
iIy9ET8a/4A+L5v9Eh47Tdof2myvoT8KN3HvgQ+k8geJdhMWEA4MXVA4KBTd
bVa6n9A70ds4u+GP9bdfyzy8kbnhDui0zAH+yKSsASj3TL+0e//An/253Xs8
/K+R4c/+3m7/9TLht8jgf2r3fJPny3b7r/iqn7fbB8U/fafd5w386y8iI927
kXFG+azd/iJ53ouMc8zb7fbXyf+mcFy7/frv2+0fs9e92u5zCOeM10I5HzyQ
sWPM+A2YNc9aeTAy+B+zZujD68nHGeW7dvvZ1PFV+oSf/kPqJM/XkeH7f9tu
/5s830QG/1baSx/eT584Y30QyrnqhrL0XthJuF7YIfyNke0sXCxsLGwiXCNs
K2wnXC1sE/46YfvkvyRpNxWmCKsLawjXJh/pzhbWFNYSLhI2Sh2nCisKKwlX
ClsJWwuXprzNhBmhmwsft/ssil//YbvPk5xHP22338+8zklfifskaYn7KGnJ
v17ZY824rl82ZSwvSz1bCJeHbilcEUr7rkobGYsNys7HnDycOefMOisUu8jv
7oOiH49ExllnYeV9SvRpYRGFXxB9UVi27LlEHxmzT6Ozy5et3+gy4/hZdL+f
ws+JPi/0UfhZ0dnComWX95LQt2wZ6fqXnZb6eiv8TLvz9Cq7LfBrl102a2id
silrbt2yKWO3WtljypysUva4MyecG9aK/1ov+xkH7t0WKvvujT6vXLZekoe5
fz96ii68F/1Fhz7J3C5X9njQ/9WjB8StWnadtGOFsseG/MuUvYYZx7PKbiv5
Fit7PF4Wlix7DbMWaSNnb87ij2Z+hmSMOHOOyThyjh2beRoT/uXIuPP4o912
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
Z6T5kp+zFGuYNT0080+e/SIj3UGpE53YN/WQZ1Dqp03HpGzWyrhQ1tD4UNbf
KGFhoZcwUlgo/FFCb6FPxWe/lvSne6fsquh9wpFCz+Q5ouI1DD8ifYU/NvWw
Lo8W+qbPwzIGjMuY1EPc6LSFujeqWKcYd9KxJzEf5GPfgmdcsDfw0yrWV3T/
/Ir1Hn56ZOj4hRXrK2VfEBn8xRXPMfN/UeLhz614vbG2Lq9Yv9G1S5KWtXJF
ZOj7pZGxVq6MDB0/vmK7gD14OmPEmD2bcWTsf0r7qP/HtA/+58ho46+pm3p+
iQz+t8hmCL+HXib8EUrb/0pbadefkcH/HdlVwj/C1cI1wtzIrk4Zm6f//yb+
2tSzWeLOqdgeMV4PVqyj2K0HKl4n8A9XvLcNTrnYgm1THnS71Ll14u6vWKfJ
j96xTlhnj1RsN7GX90U2KG2iDOzHQ6mf+malTvKcUfG+xT5/Zih78lmh7NUn
C8tVvI+dVLHtZh87JTL2qKcqXtvM5akV723sjSdWvCeR54TMOfzk5CPdlNTD
/j81FHt8esV7Le07OzLG9LSUTdx5Fesj+o0fh6+ML/xf+s8dSWOn70e4X/k8
faPObyrWacp4N22lf5+kbsbms4wLeT7IWNDvrzPH5P8y7aaNz1Ssy+jxV5GR
7p30nzq+SP3keV+YlHLnpGzG5sNQxvKjUPqNXeAcxRka2wHFJ8BO4YPie2J3
8B3wf7FHUOKwK/ig5MeukBb/FPsCJe7j1EP/P80Y0P+JFe/rrNvjKvYn4CdU
bM/gX67YjmNrGzo99oz7ixXbNWze8xXbNWxqS6fvubjPm6fT933cvRU6PVfc
jZU6fV/GvVex0zL4pk7LuBv7oWK7ho1YoNN3cNy3zdvpOzvu8Lp2umz4+Tot
496uW6fv8sgzf6dl8M2dLpv2del0G2nf9xXbVup7JX1lP3m7YrvGHL+UvjIW
z1W8r9Dn2RXbNvhXk4/9562ML/nfzPjCf1ex7aa+byvWU/jXko/95PVQ5uGN
UPK/kDFm3Beu+rcIfofgPMP5kHPhYaGcC3kfj37Ok/fzWsLvG1nXvOfHHDAn
vHvK+DKWvD/aJrR3+v3J5uQfmHyk4x3LHkJr3glsSjreVWXcmYf9Ux784KSl
XN7R7J78vFtZFjo6/V50b6FPp9+/rAidnX73siP8sMiqnX4vuibUO/2OZTU8
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
z/zgT6CXPAuzQuLOyBjwHBB+/IZZY/j1G4TnfLCOsG7VZ4a1w3PmWUlYuepz
xprCWlWfD9ZP/vOTb72qbSE2ABsxLTLSXZy1xFo8PeWtUvU5ChuzYtVnM2Sr
Vn32g65W9TkJunrVz/WsnfnjWRaeK+JZrXNCiTszfeX5prNCee5pSijPfE0N
JT93ENyTcZc8JfWsUfV5Y430+Zz0m3HhOS/ec+C9B+5iuGvGbp4SPWXcWXP4
Z8wH65B1D8+4Yw+wKeWabfrDQnvN9hq+o2bZLKFT4UdEHxUqNcvg22q26eRZ
suZzJmeXpWven9iXNqz57Md5cama44nbqGYZZ8FNaz7jcf7buGYZ579qzXVy
vm+teV+hvu417zfsP4vWfG7nfN+z5jM5Z/HFapZxf7BEzedhztyL1yyDr9Vc
NvcEXWve/9gPe9RcNvXNV/NeyB41f82UfbVbzZR9ZoGaKXvsgjVT2rdBzedh
+j+g5voZo/VrPhsTt1nN/eYsu1bN9xGcy9eo+b6Ae4g1a6bErVzzGZ47gFUV
/rDqu4GVar5rIG61mmXcH8xbc5/ow9tV76PsY6vXHE8d71a9z7E3zlOzf3BH
5vuwqu9Wlq3Zt6CM5Wqm3FssXzOljK1rPntz5t6q5jM5/DY1yzgfL1OzXlDW
5jX3mzuALWs+25Nni5pl8OvVfL/AeK1Qcz3ckaxYM6XPa9c8ZpzR16mZclex
bs2U/JvUrFPo2YjYSJ4nW6Tm+yB0qH/Ndz3w3OvwbbvO9J9v4fENPPYizrSc
Qdmv2GM5T7NfQYljjfJtQb4pyPi1J//gqr+1x7f32M8ogzPxoZGRbljq5Ft6
+Fg9kmdo6qdNrH/K5rtx2Eco3wLE/kE5u2O3+FYd37fDnvG9PHjsCt/B5JuI
2E3OdfgH3GfxfDw+B3bxg07nwSbyDT6+gYeN5E4OHptKPXx3ENvEdxXpM3YW
GeVit6iHOGwnbaHu4ekf3wWs17z+WLfcqy2cdnCfxTeGeH5/VsaOcXoklHF9
OGNEHL4j9xTcZwwM5V5kv1DOoP1qvr9jjnvXfHfGPWLfmu8WietTswx+oZpt
Cfd5vWq+WyTPwjXL4PF3Oetytt4/9cDjz3ZJm/B3+Q4j32XE/10g/MGRMcfc
4dXT5xH/f2yq9qO7JQ++Ofc43P3gN5fC46e3pL69Eg+/a/SLu5DdQrkT2j2U
/CMzxoz7b338n1/899e1Jb8/8a8wtuRvPfAdiKk12yZs0vk1rzHW6Oiax4hx
PbNm24QdmlKzrSHPKTXbC9bxeTWvVfKfU7PtYx2fVLONwN6cGxnpJkWG7Tk7
9ZPn5Mgo98Sa9x7yT0492InTaraP2M59a7Zx2Pt9ar4zhR8YGfZyv1Bs/541
39lxV3dqyqOsvWu++yP/kTXvPejLGcIq6f9eyUe6szIejMXIpEWPRoUydsfU
bIOwSWNr1lf4o2vWUfiN6to3Rb9nDBT+VPQzYQOFvxH9lvFS+AtsH+On8Oc1
8+vWLftK2LjuMn4QNlf4Z2wuY1p3eeTZom7Zr8Imdaf9UdhM4Z9qzrNp3TL4
9eou+2th/bopbdqw7nbR7vE179nsz8eGsiePS7+JG1PzOqTPR9WsU/DH1+xn
4EecEMp8T6x5fyXucNVVETqFD6MHzNsH0RV08LiafQLyTEj98HvUfFfLfO9W
8z0v97g71nwPzh3tTjVT7pJfTFuZnxfSVvi301ba+G7NeolevxMZ/HuRodfP
17x+yP+YMEQYKjwsHCIMFp6LrpBuVmSHCo8KhyXPI5HBv5+y6fNbGSPa9JBw
cMp9QDhQOEh4MJS4+4VBibu65v2b71hcVfMeD/9Gxo6xfC3zyny+mrmEfzPx
1P164snzUsYMHX85FN1/JZT8j2cMDhfW0Fx+UrOuPxHZMOHZmtfeyPD4qdXE
V8IPjwxf74ia9xvW6ojI6qmnI3noN74dPt20mm0b/trONc85v43sX7NtwB/c
pWYZvyfsXrO+oEO7RoYOHZC03TJP5dTHXOFD43c/nTbRxgtr9pvxkZ9KH4ib
nb6iB88kLf2fnjbib86pWccnRw/aU9+B6dOCmWdo98w3FJ/3kFB87cGhtO/J
jC/tuKZmXeCbJYvXPX/M2zJ1zze61qTwzaK3CM1101sZF4VvqjkOW3B+xhjb
cF747yOjTwvX3X/Gpl63TjD/C9XdJuJ61i2DZ82zBlgTtbrXEnmqdcvge9Vd
HuP3Q+q5oGY7dW7agQ1jj2Ffwm6yh7HvLVr3mkd/sYmXCJfWbAcvEi6u2RZe
kDnEhp6V/OguewN740+JJ89nkZHu69RJO9D305Pny9RPm1rqHsvbhN5194N1
sEjdNoj2dVf4XtH7hIZG6aiws7Cg5DNrjmure/2z7nvUnZZ131o3Ja5ReXZN
/hMKsl/C28KxwuvCa0JRcbsLuwkTxL+RuInCW8KbwnGhxC2g8u+puR3dFL67
Zn5+hf9XM9+n7j6h79hy7B3z2rduGbawf912kz73q1sG31G33SRPuW57B99e
d1/hu9Q9frcL89RN7xC61k3vFOatm94lzFc3pX3/CdcK1zG2ddPrGau66Q1C
oW56o7Bf3WVRxsC664DfPzL6PajusWBsDogM/qC654z5PDDx8NsIf6jsP4XD
6u4bfT04aZnPIZExHodExtwOjYxx3Vr4veaytlL4t5r5LevWb/gBddt0bPyy
da9v9rcl65Zh15euez9g/S9Vtwx++br3PPbA1RX+OHq9Qt0y9sAV66bsVyvV
TdmrV66bYs9WqZuyn6+aff0j4dC69Zj+L1d3u6hvcPpK3D51zzfzzHhdLlyR
Pl8W/q/Irky5+Av4jHNr3vPYAxere92/nDGakfx/Jx/pinXP+U0Zu0uT7t+a
7SZ680/Kg8e3wmZgR5ao244y1rvVrUOUt2vdugW/Q91toozt664bfse6ZdSz
d902gj7vVbf9hd+u7n6SZ9uMBfxOdedDr3dPndjpPeu24+TfIzL4XerWe9q0
c9354PfNGKPf9JP9YfusE+gOGSfuBfAh+Nuwg4WD/PdhDYeEbxUGh+cTWoeG
53MGh4VfMPkOFIYLTwlPCkcIzwhPCy8Ji8kmLSqMiIx0LwuLNzruNYWXFB0g
vKLwEo2Oe7HB+RYRFkg9g/x3rg37CvsIfYWjhTH++aphmHC4/1qoYWziFhHG
CccI/UOJ65byDvCj3f+Xb6g/AdAwJP3sKgxMfR2JJ25eYb/EzZ8y9hfmCyXu
hQa3vb/waoP7R99eV3ipRveZceot2qvRYwNdWHic6RStCY81mFaFZ/lb80bn
eYQ+i1YaPabkW0h4QuGejc7/h8LbiG7d6LkhnrgPFF5ZdCXhPYVXFF1BeL/B
MvgHmHvRVuFB5r7R/EOMUaP5dxReXnQ54e0G02WFdxtcHnHPMR+ifYU3FF66
0f1/q8FplxHebDAl7vkGjxl5HmbcG13frAb3Ff7RBo8H/b8P3RXtLsxucD2M
0aIKj8/c94mOHCV0ie7szdhHNlo4pW5biV08ObYM/tS67SN2kb/KOU6YgP6G
HsvcChMTN6luG03+E+u2y/hlp9dtT7GjJ0VGuuPrtuPY7Mmpn/pOS53k2V3l
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
KjwmfkPRR0X/aHadWwvfNzvfRsKPzU5LWV2EfVLHPMK+4Uupf/cWPz/F98t4
V60gfjdhV+E4/oe7yf+D3pB+0+djm/y/6K8hV7pdhJ2F/5pNdxL+bTbdUfir
2WPAGBVTJ3U0ph7yz1WaHVo8Xv80Ox/8L0XP+ebCz0XTzUr2EfBF2KtZt+xh
8BsKFwoXCBsJF4VfRzhPOFdYT5gmnC+sG0rc+sL0xG0sXJz81H+5cJlQLXk/
H5Y2IZshbCpcKlyS9s0Iv0lklLVB2jU9unVFykXXrgzPGPPf7djftdPec6Jn
2GPWP2uUdY//uG3o1dHNW5Kf9X1nyf9Rv2fo7SWv0atS3zbJd1X0+9bkR99v
C79H8sFXSt7Ph5a8vrFD2CDsLv4Q/tGXRY8p440tx59g/8dOQ0mHHccPII59
Hj8M/wsbDyUOPxHfFB8THwFKOvZ2/BL8EWw2fgxzjx+Jz0oe9nx8FOLwI9ER
4vAJyEdcR/qBXfioaN+Icj8p2sfCb/q0aD8M/qui9Ya+fVa030bcF0X3lbn6
vGhK3DdFzzc69XHR5VHHt0XrKHHfFa2j8N8XrXPwPxStN/A/Fq1b8D8VrVvw
XxddNm3Cr8XvZJ/Az8VnhccPxneE31Jr9QrhcmFz4TJhhrCzcJNwo7CrcItw
M/8VHkrcbsKtiVtNOEs4U1hHOE84V1hDmCpMyf/ZTxPOF9YUzk7c2kl7jrBW
KHHrJi1l7S7clvq2SHtp64/0W3QTYQfheuE64YeSZRs32bf9nPlhPEuWbSTs
lP7dwH+mC9cK1wjbCFcLVwk7Jp5yt008cdunHvJsnbRXCluFMqbrC9PT580y
rpcKGwgXJO4Y4RXhZWFs6EvCOOHVxI0RXhReEMbHvhK3t3CXcKdwdPKR7nDh
CeFxYX/hXmGmMEx4MnEHCPclbmjSPiYMCX1UOCp1Pi+MEp4TZgvDhadSFuN4
kXChsGHoBRn3ixO3afp9SebpksTtIdyeed1TuCP8XukT/Ajh6dR3hPBM+COF
Z8OPTLvgR6e9tPXMzPmnJZ91vogecH76CptU8pnpy8ThF9wv3FeyfwC9t+S9
/4HE4aM8LDxUsl/wYOKwl5zX55bsl5BvZsn+x6zkwUY+ITxesn/xUPKzZzyZ
OPaQp8LjvzyS/Jzlnk4c57dnhWdKPju+Jrxa8nnrOdZ6yeeu2UnHuev5xHEG
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
o+ujhVFZAyOFI6NDzOkE5jP5DmY+hYOEA7OWSHuE0D3xxJWFIal7gaQdxDyn
LbTjMo3LRNEnNE5P1a17V/b3eqLOY1t894GfznMDrKXxmYf50naejeCcyv0B
zzR0bfGzEv+PprOOs6r62rhI3RmmqDszwMQdmJkLo5goBoqEdHd3t6SCoIKK
lHRJIy3dqYCEKBJ2ICYtIALSvN/nXev3x/PZz157nX322Wd3al2C8tsQ/4fF
3Hwtt5UFMpV+U/y79c1hf6fekeHv0fPKn4M8jtL8OdnjQU//znmeHq/ntjym
+Hglt+XXPqB3biuvtabhntcDWpegdQrb+fbncd9axPqm+gatrVC/VOsttKZD
/ciCHn+L/LnbXo5qPYTWjKj+lK7SwYfufsvrCqWF+17mSveG1yv3PBzq4wY9
vagfHO//UOMlCf6t6g/H+f9UvzrG05H6vfn8/yf6t/bKbc/18jhSvzza/5v6
5zK1tkVjD3n8v2n8JdGfU5+5gKdZ9dEVH4oL9avze3pU3zuvp8fCHt+K6wB5
7JriDfNDzNu5Lf8vAnfcrvlJtQnURtC8n0y1gzQXqjaB2gjqI6rNpPaU5g5V
F6qeVB9YdZvaVpov1HNq72geMc3rSc2/qq2jNoXmGOUuN6Vl+ae2m+Zc9R6F
Q/O30tW71e9Sf0Btf/XD1GeQXf1RtfVlV39J/QS1I9RnfcrrT/Wl1I6Um+p4
jbVpbEh9OLUj1a5U/7aU17Hq08vU96iPJ3c9r/68+gl6n/r36kvIrr6iwqV2
qMYIFAeKI/UpJdM7lFf1fWqTqm3xn4dD634kU9tTc9FqF6q9pnEQtZ/UblIf
WqbaQRoTUXtUbuoDa0xH41gRbmq8R33gtu6mPqWeU/tIYwZq66jto7EKtQvU
3tH4hEy5aTxA7SS1oTSWIF21oTSmIFNu6m9rrEdjQup/d3B7wN+vsTSNL6h9
pj6ZxuQ0pqZxJo1BSKZ+nubd9a1KExqnkExxqvE/jUNpjCq7m2oLP+imxh01
ZqEw6h25/Z16R05/j57XmJHaxIqvbP6c7FpXpfh+yNOBxlw13qp22A3/N1q/
pTpG9eEJyqCZmD8VsfLuS3A4t81pKP8oP2nd1RKwOLetF1vsblqTtdTdngHj
wfugtJvjcls5NwlMBE+7bCx4zmUTwLNu6vkfCMc0zO+K2FquZf6OGh4W1e3V
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
/D1fgJ7Kb/5MU7AWrAH9/F/p35TzsCuud4TNv4cIc3/343PQFxzSN4FeYL/7
2xsccHsfcNDt/fy5Q55Gx4GxoDKY63FaFcwH88B7pLlfwUkwEZyNtnw5CZxz
+0h3Vx59LWzmcZVpmCeiLb+OBr9HW/4YHDbzK9WhYXM/Bh8Wtvz/nebTwpbH
vlEdF215WG7zwH/gOvjAy2blmangb9eb5nlF9tngqpfjI1QuR1v9NAdcc7f5
4Ib7+wbvvam6ivcu9PpE9rn+Tj0zNGxlx7cqczw+ZH8fnAJ/gUbE3SqwEmxD
fzVmFv+uvdfz/1/3h829OPIGmB+BFWBB0Ob/NE/Yy/Or8nx9d1+u9OZlgMrN
Kv6v9P824+cyzDB+1sZcAhaDavLX/6vipYLnj3EeXpVVbfBri9epir+Knn5V
z6veiI+xcuhlz2dtvf2iZ6pjX+jvqAE+dPtGwrMIM4Pw1MFc6mE6QfttPu23
ARnWbggiKwhGqy+HeZq4PaYxQNqBBWkH/qhxV3hSps0rLgIfgp+QP4o8Bfmv
GrOFF4X/An8CnpZp83LzwTxwQuOxyFMzba5OsrngK41DIg9m2lzfAn/ma41V
Ik/ItDm/OWC2j+F+BFaAK3zLt3zLG3zLVfj38LcybKx3peu1xp83I8m3yNvC
h8O/hH+rcW/8L4T/38NLwotk2jzwUrAk3uaBZS6OtzlMvXN5vM2jLvSw7taY
MM/GaG5RY+bwdI0l8m/+An+C98Ept/+BztPoZKBzX3M08Ofhd+C14c/Bb8Cr
w5+B34TXgD8LH8Xzv4FfwVj3+w+1I9H5j++KROdzeDr6sfDRuP3uz9Ty79D/
q+H/UN+wS5cOoh+tvoDG8PEnCv530MZxy4MLQTPLaczX3yl/j2jsl2fzo38+
aO4vgcMac0aeF/l7Ht6T4DL/6Gv+0VCNFcO/gg+B74WPgLeBH4KPhnfKsLHk
WeADcBD5KOQdNT+CfQqYDA4gfxd5e82RYR/nY9PPg0lgItiHzjvotNN8ivdX
9Hxp8L4/U8HfM9O/WeYM/57p3s/5AX9m4U8//PkRPhveH/4F/H14V/jn8DHw
zhkWHzP8+Y+Rv4G8OfJP4G/CW8L3wN+Ct4LvhA+DN8uw+XKltWXgd+SLkQ/U
/BH28R7u/5D/iPztDJszn+3xdRP5T8jfQX4d/gN8OPxv+HH4a/Dz8GPwV+F/
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
22uvPfcFvN2tflFChPWpVCclRlifSvZCEdankj0pwvp76kemRFgfT32+nBHW
d2mmugwM9vomPcL7tiDV6yI9UzjC+vzyN97jrIfi2f2WWw73r2mEjfW+jFkR
xKLX0b9fY/OVIsxtsY9jazw7DrdOrpcXdHZ7dvevCXjQTcVRPu8XSi/Zv0nf
ud3H1ZsSbzmJt0aqH1MsTtUPVx8ikGL/NFeK7cnX3vzP9O98P6n2lep/LgQL
Iqzvqr6T+mTq26mfpn6b+oHqL2m8RP3CrW5v5+6yR+Bfa9Aqj/Uppas+utqA
48DYCNt7r779YcIQy7tbKF2k2PkVP6gfR175JcnakToDQ2cN6MyBT+HR6DVH
PxIzDrSEx2BGehrUu3V2gM4Q2J9ke/k1t9Iiw+a+3gMjI6y/vsO/Tf3nXf7N
6teq7bjB88xHYAU4iz/LME95nlgEPvQ0pTblOs9LK/2ZZi5b6/9vtf8P/c81
bm/q7rKrnNC/awj+TLL2rs4SyO57e7XH93SS9Q91BoDaZBqb2Ov5YZ/bNUag
/rP6uN3dXX3otAhrW6m91c1l6oO28v+jbz6Hv8sxz2iOIsnSw8kk6+dv8O/s
6s/pHfsoB/9WfRiyeyfUplNbT/dRFPL+hM6I11nx3xP+EN8xCAwEKWCAjzHp
rN9n0CkdZefi6uyRFpmWf3aA7SCYYmdlVESemGJnVlTOtPMGdf5Jdfij8MeV
9uD54cXg5TKtT7ZVff1IO3tQ55+0Rd5c/QG1973PJvfNkXZGbE6d+QlaqP/g
ejrTT+cSdObZlupjuFtrf24TKIVOKZV36LRymfSeQ/6MyrFM63du8zDprMKi
yMtm2tmkOqOjKryLn1WrM2t1Fr/O5P8pxc7H1zn5X6XYuctl4M+DMyl2T8Rp
P7e1KrwKeNXPxR3g5+xWizK3gX5Grs7K1Vn5OjP/WIqdmaizE/PBe/h5qjpX
tZ+f16pzW7NS7JyZppl2PqTOfqkNT0mx82FqZtoZwqrvGsMz4Q8rbWfaecg6
y6V+pp3FrzP5j6TYfQC6F+AbxYfegU5dZL38PFidC9ve08I2Lzd3evoYT7mx
hrgch7kixc5k1tnMOndA5w/MS7azpJXOJum71CdWXzzSzt38D1wHS1Ls7Gid
Id3d3fcoPfjZjyv9fM3b4JbXt4fAZ3nszOZ74K7XyZ+7m9L4YfCF12N7wG6v
Sz4Fe71u2ef2ru7+iZf3Mj/OY/X2ftdT/vnS/X3F338wj9X3Mg94vvrCw9HZ
/diVx85Czk48Pxhl5/Vm0xm2oJnng7UaNyG+VmOOwRzu+9m1r13jKDvURwAd
Nb7m9k5gl9vbu7vSdxe1gcDHoLOb0tNY9SLwofJVioVhnc4T9f31Q33MewGY
H2nj3MvBMtDN/8luhdXPAtWZoO8mm847yXbvwUdgBRiVbHxksp21L//mgbHe
n9Q5AW/7GQU6q0DnmCtfTUuxdorS2tY81l6RuSWPnX3+QpTlvWvoNdbZuSkW
r01BE/BfivHrmIUw+4DeoDB4xe1FQF+36x+mYqZEWT4YBd6Lsv+XhhmKsjKp
uf5VlKUV+SW/b6aY/AZmbsyWKrei7P8XjbLnFU8NMRuA8yl2L8w5T9f14HW1
Nj3F7pTR3TJKgwnwePBvij17RedAp9j9LJc9n9WG14qyf6h4aKQzhVMsDLdS
LL0W8e/WWcM6c7hgqn3PIJVDHr5X3a6zj3UGcmyqxYfcB0TZ/UEZem+mxZFk
/RU27MMw8+B+Hv6aznCGJ7t7vyg7A15hrBlleSjJ415nHOus47ypllcVJr1T
5z7r/Of4VDsrWWcm50+1fCV/9bzqtLFgjNv7+b/UedA6Fzox1crsCWB8lJ0r
rfOli6RaHtU3yC+Vr/pnuVSG8642ej/xVgCzG+iq+ALd3a70F4sZE2V5Ouju
dfwMYZ0l/An+RCPbDd/maWIL5nYQgG9VekmxMkvnze9S+wn5Di/jxSOiLL3H
Rdn7PsEtD+ZOzDYpVnbozO8OKVam6Jx13QGju2AOp9i9RxoL+CXF2mUK9+Y8
dtfScZVRmZa38kbZO1Su54syu8p1fX/+KCvfZcrttRQ7p13ntass03dLT/4q
PvTNjbyMbuBlefUoq/P0jk6gIzirNoHyRIrdCdVO6TfV3tEFdAZ3cWuFeTvF
3t/V3RTfPfx/KG/0dHtilOXvXuDBVPPzgVQLVwfQPsrul9I9U5+lWJx2dDfV
AYXcD5X38f6ejV6mbEix+6h0L9WnKdb3O+D1ge6rUl2wB/dUrxsGeLx29m/e
pzoY8wC6n2ZaPtoP35xiZcqmFLszrLCPKXbyukL/Qef2vEHZ+C916daAzW9p
7mtDwOaHNI+0PGB9OfUptwTMXXNimwNmao5oU8BMzVMtC5iu+qYrAtbP0fMb
A+Yuf9cHzG/NTWmOpGek1dtrAzZHpTmolQHrg6nP1NLXD2gdQYkkm1fQ2jHN
8XT3eqM2siU+nh50/+S2LmDvkb+rAtZXlL+rAzbvJfuagL1T9o8C9k6FW3NN
fTQmD1739U5a96S5nV4e7vd8zUOpDFv39S28NHxnwObqNL+n9VHHsT+eYWuk
1Kd7B9nRgPWLM9RHCdh8np4ZhL9HwJdgiJ9vo3NutmvsOMLmBgcnWZ9c67O2
BUym//cW9lvY38AckGR91P4+r3IF/BOw+bPe/g2az3vFv1NzUDc07guWBuwf
atxiRJKtE9N6sSUuuwuGJZn+UJ+n0ntvBmyd1feYz/GtJZNsvkpr9/J5u0Ht
hYZ8TxPM+qrTk+2OFd21onvpivpYtebH1HZpGml3EDZAVj9g9xTWw6wbsDuM
9e81l6I7TesEzK47TeUuu+670xi3/NVdyNKtGbD5ALX11Q/QXYYa+5ae7jkM
+/i67s/TfIDmAXRXXoqPr+suPYVRbroTMdPH5nUvYoaPo8d5+0ntqUjvh6g/
EesytbkiXKb+hOZX+/r/0H2M+lZ9p+Y8mntcaC50AOgfaXOiMvuBx5JsnaTW
S2pucqDraa5ykNs1T/mq23V+QAX0yyusSTYnp/WPSe6fwvG4xoKQP5pk90A2
DNg/0L2+ir8aAZvf7ezfqTunm4GmAbuDurnbdZdko4A9n93dmwTs/kmZjQN2
52Rj19P6iNmRNpcZ8LjRf8rl/0pxoXnfrp6eBnpeORxp56zpvLWJybYWVuMC
k33N0QVwPmBrUk6DUwGbGzkMvgjYOiO5nwvYuh6ZZwO2bkXmmYDFyyHwmf8n
mQcjbf3LGff3fff7r4Ctexyh9ONzhn+CPwKW3/TcgUibszkEPvP4Upm11uNv
vds1l/O56/X38Mo+zt8jf3u7f/s9b8vc5//zcw+31jVqHq5nks1NbvB3aL5H
ZdSxgM0RqWw6ErD7SHQvyegUu19E94y8l2L3suh+luEpdn+K7u+bkmnn9+kc
v0XJVj7q/eqP6U4d3a0zNsXOgNNZcAuS7Q4e3cUzPsXufNH9HTMybS7qmIdD
d8Pojph3ca/LMw15tlayrS3TGrPWSTZH96X/y0Eedtl1Dp3Oo5uebOvTNF+W
mGHrOLWes5PGPr1foXvVtO5W6287JNlZdrrH7XKGnc2nM/qWJds830aPO837
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
/+OI+6tyax1YG2t7WuT3wVjbCyTzQKzdWXTJy6N76r8jG4I/d8OWnwaHbP+V
dPfH2t6UfeDTWNubInNvrO1l2e9u2t+yB+yOtb0re90eIpwfY67Qvp+wlbM1
1W9FvgY+P2Rl8IZY+07trzoF/pJfIeOfhGyvlMa/Tsfa/iu5/6n3+LjenpDt
j9K45PlY2/em8S+Nq2nv1N/upv092ht0PNb2XZ11f1V+rwarYm3flfw4F2t7
b44pXYNChHkz5ofql8F3wpeFrB7bFGv/Jln5FHNpyNZ43gI3tZ5B+RT5kpDt
3Tnq/0x13ZZY87cwOlsxF4Vs389xf7fuBc0Ra/WJ7g7NFWvx+BPxGcCshf5X
YcsDFUN2h6vSruy60/Uvt6sP83uMlWej3Pw1xu4BveH1wR9qvyo+QnZn5y1w
M8bu8rzpesfD9lwFjd/C86LfAF4pZO96OWRjFSorf46xe21VP2hv33ivW5QX
vw5bHVVZ5QD8F9WF8KNhe64c/EjYyqaXVA7Av1eeh38ZtnxeNmR90R9jzK5x
EZXF8utXtbV4Z32Vz2qDwevBN+MWE2t1iO4fvQfugu/CVjdXC9m9qarLZV/s
7mp3LHJT7QvdvZot1vR0X2/uWPs3U72eV1vk+7C1FWqE7M7eiFj7Zz+rDYlZ
O2R99TyxZj+BPAqzjuISXgDeBP47PB+8EfyXsIW9LvzbsIWlasjGoD/zOuNU
2PaeNQ3ZncTat6n9Z+rPa4+Z3NS/194z2XXGktxl173F+ld6RmPbh9zfnl5H
fRpnc+1az58G/lE9iOxyyPJ9IXhinO0jlPyJONvD9yzmM+AaeqU1Dh2y/Xzi
T2tsmvT/EOZfIds7+BS8lMauQ8avqJ5C/jj8sTjb15fl7cqqPPsw5mnVL6Ck
6reQ7a99QGPjsbZ3Lluc2Z8sbvMZx0JW7sbDg3FWfiXEmV3ll75D9gvoPYJ5
DrNacXv/32qnhSw8F1UOhSwMp0J2F28h+hOJ8VbeKIzF46wMTvE5hJ7U2acx
e6SZ3++At2UvbmZIY/LyT3ECumH/E7Mr5tg443/E2d2/hePtfaOx/w5+A13S
jHfG7I6fI+CpaVauKCzhOKsz0n2+QuWR5jBkV5muuY3CcVbGJ8WZXXWCwi67
6gG563+rnkmNs29Tnaf5Fc2fqPzSezS+qzJPpt6hulDzLtJTXaj3y646LQdm
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
/NzhWxM/m9i8wS8nz3koftbKXAeElBUffNhdwTcf/i7xu4f/SuqmeZnT4McT
Wzf49MTXJzZv8OmJv8tNwscW/E8+rMxp+EdST8Q/T3uNivFTZbSvzrH2TdhJ
9FbG6wisMSzPeB2B+NusjVU4/g5rmRWOL8tYlvnoStZBGVszd2GNs8Jyq4SL
Fb72bMbrVqxRrWPtjTEf85+M05FmfsbrI6yjsM7KvJf58aMZz4eJo/dizs8a
xoKM8yNNhfr5u1jnr7Euizkw6x+TIg/iz2ScN+sxD8V18mKteqBoQInnEBM5
wy56L+MyNhO9nPGaF2tgz2W87sbzPJ/xOh3xFzJeCyO+MOO1M9Isznj9jnW+
VzJej+Pa6xmv93Etp3Lfx3qswhczXkcjr5cyvidx5gcT0CmzRi1+fYXrdw3P
UOH42ozLS/zNjN8Pa43Md+8WjWMdU/cYz9qpwjcyXqOkHEsyXqMkvjTjdMQf
y3htgnfwQNQ960noCVkzYg0JfSPrEayX7KZ8hyr/XRRuTVuHgF50S9ohOkbW
8pEZgi5Hcnegr1H4bdr6V3SVm9OWRVd5arxL3u13afOQ2y/yGCz6Ju106Gz3
Dd6gEutsbxeNFX2a9hwCPQq61jGi0aLyGuOEwj1Fw4UbKtxdNEx4V4Vfp503
+tWv0g7RhTSL+9CGTo/2Svt9LeN3znrq+oz1bLT7GRmvJ7K+iL6WtSTWliZn
vE5EXU/NeH2QtaKnM15zZG1yYtQ99Y7ulnUx1n7ui/dAHP3ulngfE+I68dkZ
r1eS15yM1yiJz814DZT4tIzXhVkPfiLjdWTi0zMuL/HHM75O+Z7MeD2X55mZ
8Zova73zMv7OyHdWxmXn2pR4Jp7zqYxlSb8o47Vpvo36+Bb7o4PLuP64ht6C
9TXW29BnsH7Heh76VXSZ1DG69A0RR29Km6aNo/f4NNKjG+wgurnE+nnWXlnz
Q3//VcTRNW6MvNC1fBDxoXFP4ugieDaeu3W8J+KXRF0Tvyiu86wXRkidobtd
HG0E/cxH8Twdo7z0DR0iRG5slJF1ygsiD9rRmOCx1jgg6oD+tSL69VtC90nY
scT7Leg76Jv3ifkEYw72PayJa+jy6Zfpy3uHLH08+u+zs14v6BU85HqGLP+H
HhHy3+geIf8T9hCsjXug030v4v2jvMS7hSz/oq4R8p/pEiH9GfrvpfFeOweP
OHqsHjFHGh31wftGh8+85Jys9Wxz4t2ge6R9097ZX0L7o29GR/5qxNvH+yHO
fhb+AfTHN4QsfTx7R/iv0N7bBQ+5YrTffiXenzI37n15yBK/LvKjv2dPDP8P
/ifoeulz6UfYu0HfgB6A/Rz0r/QXbSMdaa6JdPyXro6Q/y17W+ZH+dgLsyDi
V8V14nVRxr4l1pvSpvjWd9V47Hrx/s3p/yp8g3CDGuvDeot6hY6T8NYS6947
xneVjG+rfYl1aH0iTZO4z22h370trtVEHj1LrOueHM//S53qjn49Zz35lLiG
7nxqxM+L8vIuS1TOGyW/U433u1BnfM/nxHum3zo7QtLvKPm2kv9L+f+re10l
/JPwn8JXCG8V3k4y1wj/JtxQuJ3wtjVeX58ca1WszaPTQM+B/gR9CHsiumvs
9bZouagHY9aIv11tH08H6T7d4vpbos6iN0VLRWurfUbmSMl0Ct4S0U3MnZhL
iW4J3hui9qLX4tq71fbdc4jSrqz2OZfmwqN17TPRpzEH6yC6OeYk7SPvLqJl
UQ7mc/jzxb/vB8rneeVzrPLpGuVFbnW1zx8dLv7yavuEOkD4/Wqfc2lV53ss
jvJxz9cjPoR8RRtFe6h+d2NfouRHMn4VfSwaEeFHohvjuV8RDY50G5g3Km2p
0l6rtLcxd6VcooGi90XrRXtJZnf2RkpmeOT3oaiU83XsnRS/J3UX76lj1Ctl
XVft8z4tJHOr4itCrpdoZcT7xD1XiYZF3ptEf1b7XNHpSjs0eB/EXPemeKZE
hDeIyiJsV+b54s3xbq7UvGK8wjasS1T7jNXJdZ5DjCpznR0cIXV2jeQmKLxK
YU2Zy83zXa74OIWX5j2vGB3pmf/dKbqjzHMn8qCeDoyQZ6oT9RP1FdWKekcd
PKHvYXvNN27T9zFF+B++Z+FpwtuJ30e4cZnfDfU0VfxtWeMRv0nkx7W3ct6D
ukHP9TY2ktjXWuf5zJgoK7Jr4x0ztxkb146Ist9e5jk97ZjvKRsh31BFhHw3
f9O/KbxI9VBV5jZNmkxc5/3vU+bvk2vp4NF+/yza1/YF+PcW3Sd8bd7rSfj1
xgf5d5K5WOFJ4leX+funP8jFeyB+Sd51frHCRnGd+/1UtE/k/4n/S9E+js/K
ey0TP+b4L/9e/MsVnsb6XtG+qs/Ne853e9QL7+q9qK/+tOOIp3PeJ99Odbsi
oXdQrvcj+lb4WPzQi74WPlphK9FXCYctRe8mLFsQPSdconAv0TsJ82pFLwiX
KSwVPZ9wiNyXCefRQvRFwuFRos8TDo8UbRU+UeEJoi0Jh8eLPkv4+hGi74VP
KrfcD8Inlzu+OWHZ40TfJPwcPMN3CfN4tpXCdeV+5vvr1e/w7LXqExPO+3DR
i8KJcj/DPZLZTWGNZF4Tv0I4g5/phMO0aFHCYUr0SsJhUrRYOFvuNM2U/lSF
9QrfEL9KuJJ8RbeKeoryol4Rfz3h66RfIrxPudO8LLy3wnLRwoTvQ/ylhHmU
+y6VeWeF++heb4pfLdxItEw4V+74Wwnfm/jShK9zj7cTfoeUZXnCIXI9q31m
7e8m+u/p+/2b/7Xa3ScJ19lhonXC+ynct9zrkfiIx5d8g5zPnpyj9rZ9zudH
zhY+Ja7jY37nnM8BXSj+Tjmf2zqfvc85n986T/itavsN3L/O39Ys0UzRP9W2
CXoG51SqbRP0f5zj0ffwIH2pwkFl/lfwP0jmfA7lOskMKPP/YV30u/xbFooa
SmYX9szXuS+G97Jo25zPvpzFmZWcz5JcXOe+hOsv0W/U2zf9UPrqhOumOXUt
/ov0reJnhZ8VHiT8vmQO0PX9RRuEDyx3/EPhQxUeIvoo4TyIr09YlrpeI9yU
diVaJVwsd/t+L+H30Ey0NuEQuU0J53cw7aHaPhj3U/k3in9Que+dVtnm02eo
bEnhefTPwmXCT/MvofyS7yzqJJpYbfsMZcqnSvGuoi6iDxK+D/neW+3z/ntJ
5v5q2wQoER5fbRsDe9S53fWObyAf/xb+W4+pvf3F+L7o/vJr0Vf8A8Q/Rf+R
e4vu++F9SX8n/qni3yf+SuEThCcU/f/cTN/MP0PP8I3CUYSSuUIyM4v+h9dT
j6KGuvaA+IvEf08yp6G/Eh6LzoD/Ef9Y0U/C9yi8W/S98F0KD+AbVB6P5d0f
U64vyvxP3iraIlqhPI9Xnvcoz3XCpwtP5FnyLuft0X5/Ef0s2oV/jWRekczO
rDMKLxSermvb6V7biibzbxP9Rb1F+Kfo0Qj/ED2gtL8rnKhwCt9PpNmqMlyj
POcqzx+ErxV+RniL8NXCc4Qfl9x/on+5J2MJ8V8Sf2rwyGuaaJuE5XbnGSTz
qmSaqk62F/8h8RownhH/ZfG/U/5XCT8t/ESZn4P0e7AGLf5r4pcIT2ctmHMK
wjOE3xBOCD+JDrHo8WiO/i7h8XIj+k3RYuV/hGTGFT1ehkc7vVn86WpX5xU9
Nq2gTxf9nfPZjd2KHk/DSyc8dq+lTxR1UNoZzJmKHi8WEr7GWLAJ/8iEx4iE
XGPcSh6phPsYwiR9A/8ghdP1HH/qvnuxblZ0P1LOfyjhPoOwLOF+iHR7J9zf
ECL3T87nQXZX2oP5Z4n3uPI8Qngv4SdZ+xcuEZ4p/InKf4HqZIrkfxRuK7xA
+CPh84QfE94kfA76tKLnA9QrdbpQ/Obi3yX+euEzhB8oek5Qk/A7eFv8Y8Qf
X/QYujLhPoNxPyF1vUQyR0nm7qLH2rwT5DaIf6b4D4n/uXBr9ITCXwhfIvyE
8Ebhs4QfLnrMzfdaR58j/tno6MT/WPh84clFz7F4b5TvfeZv6CXE/1L4MuEZ
wl8LXy78JLpC4YvRSQp/KHwuOsaix1V8x5/zTYp/nfjPiv+H8GjhF4V/Y+ym
+5whmiX+ruhDxF+oej+d96bwafF3E3+I+HOF90AfIvyCrp0smecVPiP+XuKP
Ev9Z9GviL8i7n2vFWEo0RzIN0f8W3Q+dKt4p9Mni/8AaUNHjv2b8J0Q9xZ8v
/hXi9xV+Xrit8G3CzwlfK9xb+Fnhq4vut7hPC9H94n/PWlLRffDRCZejl/gL
xL+q6D71mISvMdc5hH+AaB76F4WzFT4v+TKV+Q7JP4LemnUo4UeF/2QNhz5N
eEfJ9Cta/8ncifli0zLP6/hvPyyZ39BnSGaS8O+sZQk/JPwrug3h+pBl/Puk
+Dspz/5F62KHRb77Rd7MKZ+TTKlkxhbdRvm/3ZJwv36SwhMTnm/w/plLL5B8
ieRHFz2PYm7N3LVZmccclHXfyJv4U5LfRfIDJT9fdXGc8pursBhlZMzOvPYg
xgEJj1cO4H8vGqi0L+m5biy6T6JcHaNvIuwQ/QvhzaIRkv+YdZii+48bRTdE
f3FTxPujb5BMO8mUKt5OdL1osPgvi39T0f0N+bWPfqd9pP9NMu30LC8UPa/Y
N+F2xtyMtsZ/9FfJXC+Z5yVzpvqfS8R7izNnwm3oI4UvEL5KeJVwR8k/pfte
WPS/orXoYtFFkrlG4dq8x3HUDfXSWvxrFa7Pu2+j7NeJuiif2crnkqLn4ocm
3Bb5dmnLR4m6SWaOZC4tek5OO6XeO4s/S/yLix4X7pfws3USf6b4FxU9ZuSd
cK17nKe7vOh1heYJ3+9F8RN69juLXsM4LOFr/HvPTLiPKIt3Qr2PQ8fAGlrR
bejwhNPQpo5IOE67o+xHJtz+CLl2p9J+ybqb0k4Q/o71uKLnareJ+sScrU+M
sXIx5+jBnCdnO8Gd67xm9xrr7rz7CBeVeF2N8JVY21sccoflbG+4k9IekLOt
4g7M2XO2bXxLndcEX480x9MPoidRGQ8Vfka4pfC+OZ+zv5l5Qc42rgcKH5+z
/em+wkfmbMe4q3AzpX1SaQ9W2pNytoc9QPyjcraH3E34xJztV/djbSfnM84P
CB+Rsy3kLsJHF/1Nnax8Ds7ZvnVHZIruA4+pcdkr0fGX+pkr2Lsg6pzzOe57
6/xsXOfaEuF9FFaVuv6QTTNeKTGPvKjHFHsCSl2vXCfeLecz1vcpz+45n7m+
X7hHzuezJ1KfOZ8zvkf4dM70Cg8VPpWzvsKDhW/K+czxeOqk6H7+OD1LC/4x
wicId8r5DPoEybRB90YbVnhs0d/+qfzDc7bP3VsyLXK2Qd1duGXO9r97CLfK
2R54zzrv1/ukxP0OuuU3RUtpNzmf318tmYvYeybeBQpfjfPCa+qsx2PPE3vb
l8YZ/PXiv57zueP3hJcIb+b8c531vd+U+Ju5VHl9xfceukQw3wN6pPWidbG+
/K7oHdHzOdvYeFf5LMjZtsY7ddbhvR9pFuZsb2CV+K3ZI0efUGO9ImXcUGK9
34ZIgz5zUzzDOUrbVmnH0DZyPjO9Vnh+zjY83haembO9gTeFZ8T56KXCc3K2
5/GW8Kw4Q71MuLfww8IPsw4p/KDwg8IHM4bQPY9U2Y7O2cb7reIfl7N99T58
m5J5mu+1xuv0b8Q3+XjOZ8eXSOYcXftIvLMYQ4k+ZD1e4dyc7Yosl8zkOGP+
hvD5NX7X59ZY18R7pu1PivPmiyXzaJw3f73OOqglce8za1xXZzCGKno8MIAx
neSvkfxI5tRF95+DaqyHZ0/5oNChDok4OtWhEefs4rCIsxees4icO+TsJvof
dFcnx9o85xc5m8FeYfYgczaDfb3sF+a84vDIq1nckz3vnB8YEdfY08C+9r6h
d2fvO3vhT4q8uXeTuM5e8sYRsue6EGHv0NMPjPTFyIN8a+M6+8TbRBnZO8+5
hZFRjsuDx95kztawR5/92q2ZH6reutb4XBD7qtl/zTmhlyPOWZ2FEW8b19m/
fG2E7NG+QPk0UD631PjcC+dsObNxSdyHs7bXhCz7oNtIfnfJ31rjszJPR5p2
iv+id329wiklXh9m/ejKqG/ewdXsFWAMWeN9EIxdGWuyT2Fzif9nlxU9Zu5R
4/M0z8U7Y28fe/xurPG5nblRF+gC3xYtL/HZDPbxsy+ecxuca+U86xpda6o8
60VrhZuVOs43zdmaA0r9bRPuL1olXFRYV+p+pKCwttT3yCusEa0QbqKwcan7
G0Lk6FPIY79S90eE+4reK3HIvc/L2d7LWNav9FzlzBGYr4h/lfjD6T9ztoEz
rs7/Uv4he5f6+2tU6n/PWyUuS060rMRhdan7Y0LkVpb4OSjrMVEfnLHeUGX/
wo0a6/0WPb7tpzI8XOLxNmPryfEOWZd5LELG7o9GyJieczWjor2eEN8iZ3+P
jvtwTpqzK/fF+zg+rhNvFdc5M/1I5Mf4nnM5nBnm/PRREXImu2XIcm3RTvbR
ndrZ52+4zhnQK/Use6KPqPGZHHic25sUefNsnNsZG23l8LhOfHWJ2wjvvlu0
Ker4hZztNa3Qu3gpZ/tOK+s89h3A+DrhuSlhv5ijEvaNOdI9ovExNxsYaVgz
uE3UJ8bTg+Lam9V6B3uqrdR5PDo4rjHfmhB5Mce6N+KdNDaezTg95p2Pih4R
PVxtO6XJOs+3WatjLe9LyU1ijKzwI9H9zOEUfsYajvAnCj/IO/8NCnsq/wXC
/wl3ZZ1Q+C/hpcr/IeXfTPnvqfFlW9G15V4H4Zl6J7wG0y3htcIp1bbtWSn5
gug94dnVHqePE90V43XCOxOej94d1xj73iG6PeG56Pi4dnjwxiY8Th8qGhLj
5jsjDfOHYXFtv7hOnS7RvR9UGZrWec2jB2P8hNc+uke5WePoGdfekPwD2Car
8/rCrXGtd711JNvVem2I5+4lel3yE7ERVuc1iV6RhrnBGNFo0SylvRKdRa31
K9dFPaKjuEN0e+gqCMfG+jvhmFhrJhwda8ejRCNjzZdwROgwbhF1jDXiQaKB
sf47XDQs1ppHR/qmcX1ArDUT9g/dRqfICx1Cd1G30DH0iDg6jM4hh06jS8TR
Z3SNOGvW/UR9y62b6Rvzln0iv66hVxgcZd0j2tQ1sQ4+JK4dEGUfWm79zQ2i
duXWQRFeL/pH9XuewnNFD1bbfm95nXUnN0YadCrtRTeVW69yU1ybofdyucKW
tdZpXR/v5gDFz6AsCg8VnUPdK/xX9zq/3PdDL9RBdHO59UUdI35QvBPqPRnX
ufc2ogtFF4i2FV0U8f8S5pHvDip3P5V/sJ5jqsp2MW2h1vqBoVEvq+n3WL/L
e948PNo9892RohHRJ6EzQFcwXv3Y8+rHXqjz97o6Yd1C7wjRod2HrRnJLGRf
gfBs4dnCE3K2W/uicC/hh4QfEh4lPEt4Vp3bO3msiHZPiF5xrGTmSGZOnb8z
dFHLo09E57EuvlV0GOgWxmFbR/LPSv5Ozn0Jz69zX7sunqdn5I1+8nbJzJPM
vDr3vzwr+pOBOduImlrnPoC80Yf0F3+y+JORx0aJ8KN13svCOID/J3tn+H8z
dpiYsw2rRXXe+7MurvUKWcYF7L1dFvOiW4PHGKFr/E+49mDOdrFeq/N+GfJm
nMJemdVx7yGSmS6Z6eiwhKcIT+F9CU8SnsReCOFHhB8RHpSzLazHhUcIzxSe
KTw4Z9tZ04SH5WwneAZ7JHK2G/xknffprIl79xP/MfEfq/NayYhoT4OjztBf
8a96P94Z/S+63s+jbyP8LPo4QvSuoyL8JPrsLyPNjrXW7zao9T8HvS/64RnY
7MOGYJ3bL+k+jj79q0hPH/91xPlvfBPxw6JMlOXQKAf3PyRC8mubsA4YPTb/
EvTH6MbHRUhe/GvRT6NznhDlIj4+eKTZVeX+WeHOtf5Pb4h62UPx3xQ2rHXd
odtD18d6HLpkdMg3RIiOt12E6H6vjxB9L+tw6KTRRV8b5UXfvixnO17v1/n/
9E58S93ie0L3e13kwXPeyLwXGwc5r+u9GuVgfRHdM/rqjhGilx4W5eU7ZH10
acgxhngz4owplkWctcPFUdaucX+udYj8uDYi3iF1MVHjz/4af/5S0LdX6vNG
nPP5XuW7knEnc2p8f6X0/xH9LHyawlNFPyUdniL6BV8LKV/7Tfh/Cs9Iub/C
Bhe2uH5MWvZk0a9JXyfNq9jXVJhOuV/apcT9G30INsewPXa3ZL4TfZv094j9
sSfiO9quxN/m6kZq27urz2jib+2//+8bxK4X9r3uUfot+P7C9qLud5XoypT7
zB1L/J3yPW5f4m/zh6TLe1LK9z5W4TGiXURXiNqIGoguEbUWLVUZVqkMnVSG
b5KWPVq0fVy/WLRzpLtc9LdkzlV4jmhb0UWiC0U7xfXLRDtGeKlohwi5H89x
gsLjU34ewuNSridCyvp90mU/UbQ16ZA0f+ATReGZot+TDnlnfyVdlrNFfyYd
Ijcu6p5nov/HBhq20O4K3teivqK1ojWifvgDi3h/0bqI0+5p/9jHG6D4+rjG
PAtbQtgyXJR0W0iJBgtvFG0Q3RZ5rxYNFL0f6YeIPgg5+uTfYt2GPvn36J/5
p/wR/fMYyX0u+kw0VLQp0neM9bF7Yv3n1/ifjg7ZT5O2J/tlrPXdrviXoi9E
9yXdVqjv+5Nu68SxocP+e9Zn+NfsLfxK/CP+jf/g2MiDMk1I+j3xbu8QfRX3
GB9tlnfLvxg7eNjDuzPqHrl/ROel3J4YM+AfED+B40PHip08/r//xP+Lf9nf
8c/l//tX/GvujeegHPxnsb+HHb4Hkv7++e4nRshzTgh9KHbyHky6L0DuX9H5
KZfpP+ELUo5vE22c+LRG9rmJ782pjeyXE/+crdPqM0SzRNMb2XcnPjwvDt5M
0eWieaK52DcSPSGaJroorj8laiN6JuQuC9k5oktEs+Me96scP4p+EH2och6q
8JCU28TBCg/iGShH3AOfIwsaak7QyP5G8QWDT5iJ9ImR16VxH+7xAP1mXDtf
8RmR19ON7I8Vv6wzG9kvLf5p26Vt6wfbPzembd8Hez/nxPM9LropbZs+XDsr
fKB0wqeJ4i+InhddEyG2Eq9L2zbQi6K2ESLHN8PzHSi6JW1bV9jT6pC2nSBs
CF0hmh/1eGHU65PYf4qQ5+kY6UhzpWhBpLk67v+s6KoIuXZz5I3NofYR8jyM
ef6Msd+tjew3EP+BQxrZXy1+a99WmWtV3nzKfUG9wqJoedK8Gt4lvl72UP1K
fpn4OfGqRauSlq0TvSFcpbBS9HrSIf85/F5yvUnK/i8JG4veTTospPzN0a+3
4l+GL0Pd6z7skUcfTz++hP4u5XvwfSLbkj6WZ5H8Q5L/Q/gofB0Iv5N03jwb
3zyyLfinCDdKOa83k34O4m8l/aw824BG9qWK71/6M9ovbfcj4eYpt2n64mYK
m4oGNbLfYfwP04fuL95+KffFhPuKhjWyb+YTmthXIj4TT2rivpj2coCoXyP7
psRHJX0Y5T0q5b6ePLgffTb35D29lvQ4gv/9x8KHpVy+zcqniI+UJu5njxDv
cNEnSYfI0T+S95Ep98eEyDH3+SXW51mr/zl0T6OizyaPTtQj7yTl+RvzuJkK
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
2x4cz8Y3MCTifMNjIg19zTDR0LS/laEh16HafpPxn8w5XHyI4jf7qLjnnbST
avtVxcf1LdX2nY0P7TPTft+0hYOiLMNF3avtxxS/3IcrfrtobNr9ytgo05GR
9x2iIyJE7pB4Pp6tU7RH1uhbiu6Oung4fK3h95U9Nvj5w4ftveGXbs86nwOd
HGdCj0m7TVDf7AfDdyo+VI+N9vF/16rt55WzosdF3XPthLS/Q97HifF+iJ8c
3wnv7LS0vze+v1Mj5Fs/Ou45Pu1zrPiPLGV9Ke3vijT/i/rjuzwjQq61inQ8
8ymRH/c7O+3vim+xb9o+JPCx0D9tPwr4VVjMGRj1SyczJhQ+W/hE4UXCZwmf
UO93gO02bN++HHv4jq/3O8APB/4HXhP/HPFPYtwifJrwcfR1wpcJny38Tt5n
bThzQ3vCL8LGeE/Y28Ju1grJXCGZ85iz5H0eh3M5rzMeED6l3s/5XaTZFPsD
2/A/zXvPxKX1biNfRfmom82RZrlkLpXMWYzPGVcInyq8LO8zQZwNwrYFZ3S3
qbd9CuxU/Kf/+4V5n6/GZkMx6rGf6Py87TBgj+F65h3C29d77Zu+vDptuwzY
Z9iu3mvo8Bijr2beofteWO//xoDId2zUK/W+VDIXSuZ00gpfJHxGvb8f/L7g
74X/z8BIv4Qxv2ROq/e3gb+Wj+Ob+zjSjI73+Wl8Q5+GXL9oF//XVvI+68SZ
p7vi/WB7bEbeZzk509kjbd8V+KN4Iu8zpJwl7Zm23xGuTRO/ofiHit89ZPFx
MSvvs14txH8qzk1xNjTFPIK9w6rP31mD1dy/gfAvOdvAwRbObdGWV8dz41dj
fTz/+mjfU/M+f8o51IS+qb741VbYJ9LhO4V+cEOk7xbl4j/XK21/KvhLuTVC
nqd3pOPa3Dg3d3S9+6evo809mveZa85eP5j3+THOHE8W3kX4QOFHhHcU3k/4
YeEGws2EJwnvILxvvc9ecgbz2Hqft+Tc5TGMQ/LeZ8OZM85Oc46rvt7nvTkf
WKh3n74xno2zjuzHbSV+l7T/4fy/7xP/V8nXMb4V3lUyBwnfn/fZ0WK9+/5N
8a2OF/9HzhLX+5w55zyb1Fs/wVr7M6KfG6sNNdQ/rpHtG+BXFP+i+KS6UHRB
1r6pCM/P2vcVIXZ7l9XYbvWbNfaX1Vp0cdZ+rS6K9Nhnv1p0Vda+uy4VXZK1
/6uLQ65B8FqH7fVrIg221LuIOoc99w6im0VLa2wL+40a++66LPLNhmynrO2+
3yLqGHbYO0Uc2+ttRddmbRe+Y+S7R/C4925R3ivDbjvhFdhG58x9qc+f36H4
0B31fdTar0gPUXfRnaJh4veotW2Su5hjltuO+wjR8KxtmdwtGlduWybjQg57
6yNDDvvroyKO74LREcc/2eXxzNjWbxPxXaKMxFtyNrrUZ+yxSd816rFRlLFb
1v5OusU1/CSMiXuMFQ1R+bup/L1FnwhPyNpWPnXfPmvb9DeJbhS9gf31nfQN
SXaxcFPhR4RfqbHd7ZcVLsWOu/hTan12AXuv2HmdrPhg8d/M+gwDdpCxJ71M
8f3Fn1rrcw9DI81K6kL8p8RfJdxCeKbwZ8IDhJ8X/kJ4oPALtbZzjS3yEXFW
Afvs2G7H7vWouPax5PtJfgFzF9E64c/FW009Cs8Sb41wK+GnhZfXuG7fqvEZ
iH6RL/v7+0f8pFLbLsAGBHb9bxC1y9q+P+H1ondrbBv6HYWvicZwnq/GPgxu
jDT4Brgu2mtJpCO+usa2v1fV2FdA+3gfx5XazsO9cS5lQJRpBe1J5X9S5X9X
+GDhGax9ioYJvy3eO6KDhKfX+kzJ4HgfTeOdkNfrut9YziYqXC75AyX/hOTH
0WbVTm4Vvos2Ltyz1n4LaO/DRCdjd3dn9QcF1Q82coV3Ez4RW7jCuxa8n+5h
0UMp7/9iLwt6TvbhPSKaJDpB8odJfpeC935NDDl0+MNFw0SnYHdXMrtL5lhs
WQvvKHyM8EHCOxS8F4x1HNaHTsVmsvh7FLyn7IHItyU2t8XfruC9fY9GOY4S
fz/xtxW/lfCBwg2EjxRuJvwfc33sXQvvVfCetQcj35Pj+YizLwwdPPrtQwu2
Fz0Sm/GiVUp7cMF7C24JuYMKtuM9TNf7iyZLZv+CdSfoxdEhsx+hU6TpLpmJ
kmlWsK6D+6BP7iH+A+LvS/6iNcJXV3oPBPU3NOW9kJPifRyna80ls3PB+ymG
iAaLrhK/r/gVBe+PgDcodCo3R5lulcxDktlPMq2FzxDeu+B9eNQ96zRnRjg5
ZR8bt4n6ZL0f4g7R7SnvmyAcm7Lvjb4hh++NfhHH/1PP6IsPC9kxKfuHGES/
kLU/p1tDjj0pd4vGpbyfZXzE8TkxRDQ4ax8UQyN+QLRl4vvGdfItRHl7Z+0z
qlfcozZ4xFvEfe5Kea/HnfFsTaNcA7L2JdI/nqc+eMSPi+/g3pT3QRJOSHk/
JuE9Ke/fuSeegb2oj0V7vUh1frrqvFx1fho224X3LHh/5OSQayN+H849Fewz
gP4SG9vNo/5Gp7wHZ5RoZMp7rEbE9/ZV1n34y2rzL4k2CH+d9R6d0ZHmAnw6
KP9Ewft4Rkb6c8U/Sfwy8c8UPk64hLYhfLxwacFn6SgLfiQ2Kt8TlP+8Wp+r
Gxb/Bs6k4W+jW5xV6xFxzq71jPjpVRq76Nt5peBz1PiNwL/EQeJ/Jv7TBZ+3
xh8G/jGycb1TnIsjb3xoDJf8hbvquSX/Mv4jhPfQGGqu8MPCu+LLW3iS8G7C
C/AnItywsc/k3SS6kf5UY+I2CmfS9xfDHgI2FSQ/TfK7N/aZ765R1tslc4PC
lyTTV/hS4Rk1Pr/XPvLlHDh2z28WXVJlfxlLVM4xkjuMfx79t+hw4dFxlvrI
Utu44Yxyi1LbVRnJGXvqt8ZnAW+NenxDefVRnpdiR7/GaW9XuKXEtpKwSXR3
jccfdynsxRxM+PEan2/vFPWbjjqmrMkoL89wqvL9W+9ioe5zT43HW+M5U4yv
FN13EXbRa/yfuzfOnR9bansxnDfFxgs2XwbpvlcqnI2NDdVjYTf946rs4wV7
GdgjxHcIdvqw4fez8n1P+T+ATw9RX+EfC/bZgiy2BvEXsl/Y5PiBPlMy91XZ
50qhzHYN71a8t/hbCvY9sm/Y88AHSbOwQfIe9jKQ13h8LWckhWuEvy3Yh/u4
KvsywfYftv3WF23bsXHePk/gUW78tVB2bBbib4a8sVmCTxpCnhO/KNgNJC98
omDPkfhT+NrQvXZU3azGv4ZwWvhp4QeEdxEeVrRNp3mqwxVV3uOxt/j7iPZX
fW7Ex0Ix7NhIZp3i6yRTqesjirYLNF/8tfj7EL+isc/pnljqtkJ7xZfDonj/
2OnHT0JKckXlv0bpZokmKu3O4s3En4jwTo3dVl6L9Ph7weYXz4a/Hd4D8XLJ
NVE+K5WuTLix8LtV9sHD+8SuJPsjO8f/knPA2PzBhtF/JbZxRPw59Tlfajxz
P2vzwh8K34HeUvgD4bHoioXvEh4qPEn4DuHBwi8IfyU8kbFl0f4qfledPCT+
7eIPEv9F4a+FH6D/FP5G+EHhBcJfCN+HbkH4M8bhwiMq/b9urvZyOH4d9L2M
qXTfgG8P/EXMzXrcPh4dhfCnwvcwNhM1V/85R7ynRJvEv128+cKfC98rfIPq
6CDV81r8QTAfEH8gunHhO4WHCG8SPlH5PIMOQc+1QPfcrOd6n3+V+HMZRwsf
y71qbX+RORDnDxeJv1n5PCz+yaW208VYea34R0t+tvgLhb+TzEPoirH1oevf
Kv+p4q8XfwRlFv9F8X8Rf7r4G8UfI/5jwuOEh9W6n10U9TJd8nMUfoW9pVqP
XWdIdh52LcT/Sfxpir+vtCPRmYj/nPjfY4dGdXKg6mSN6qS9cHPh9cI3Ch8q
vI6xpfBPehcvCv9UYjty2JjDdzr234hzlh1bbcRbSn6r5F9gjCr8s/BL+Owo
uP9pI14L0Rbxn8dXhfBm4eeEH6xx3T1AHyz+d+I/K/5hwl8LPyN8hPC3wgsY
Jwv/JvxywWfO8XeFT6rm4n8l/jzxDxH+QniO8KHCXwrPpY0JfyM8n3+38OfC
s4Uvr7Ifq2XCPYVPEv5UuJvwscKfCN8sfJjw+/jjED5KeKPwLTyb8Af8T4RP
F/6c/k80WLiteFeI6oWXi3eVcDPhd4SvE95feJXwtcL7Ca8UXlxw39tavKl6
dzP1fJ/V+P/zVKltvXXRtaMl85FkuwofI/xxwWfs+0S99BP/TPG/EL+zcCvh
Dws+i39byHUSv6X4m8QfIHy28JfCtwqfLPxZwXueGI+zD/SoGPcx5vuD9qm2
9w76TPoK4beE6/CBJfwzOs9Kz0M/EO6Tso5qVYyt0S+ih8zgK0QyX0nmtpR1
WqtjjPyl6IsYG24VbRH9zLfMXLvW+627i7qJ9kaXp2dapjprj+8q9S2Fgsv6
NeM7Ue+4/8oYe34f+TJW/k70reg3+gflv7zWe75J0yvlMxLsD50e8wr2rLCH
pRK/JJL/Fv2q0o4XXiH8DWNt4YW1PvuBPntajJ25zzeiDko7QuVsXPA4Er3m
RzGu/CTi7I1i3yr7Q2+R/CjJ10l+L/zXKP9NtZ6vbIw6Lcd/ivifondVGSYI
r6z1eHpzPGcW/ynifyN+ed7taqnqLY1fGPG/FL8gvEX4R+F6fNwI/yJcgT8X
xsbkLxqA3xbx9sHHjfibaz1e/kz0acp75/tEPf7C/0Iyy2p9JoB6vVW0PfM7
8degwxe+X3i1cDv8eSn/XMFzgi3xDIfjn0j8fyVTWumx+sfok5X/vcKrKFfK
Old0ywn8BIn/Sa336feIdlOFnyDxvxO/mfDPwr8Kp4Q/Ev5C+BrmqLpXZcH7
+ilvT1Fj8bdK5if6Z+EhkqkpeN9/z7jH8HifH8b84dN4r5xXuC3qBVn2JLHP
q7PymaB86gveG8g3x57rfinrgNEb/6BnHKX7vqH75vDDJfy9cCfhe5S2WPBZ
Mdoa6wLVim8Q/wZdv4k5uXBevGr8dintVvYdKM+7hd+t9bfE/h50wpyHY22V
PdBbWRuRzGLJbGE9RPg14e+yXnt5Vfgj5jPMg5R3jehb8X+o9f7Ka6Mdl8Uz
sX/8J6UdI5mlkvlReLTwEuHvhUcKvy78O2MS1nZqvdewbeTF/kL2zbOv/474
vukv+kY90Y+Uxn2QW8T/nvap/LqobPeqnE0L3sN4XeTLHPHzaLsDU+6f1kdb
eTvqpVf0H+w72035rFWe79f6bEq/uD/22K/fS99snftLvnX6IM649A85zl0M
iHjTuB9xzqVwhoFzDxtZw2Keq/u0FQ0U3qfgsy99ow1xlmNQpO8R7Yiyrq/1
N9Kw0vdYF23oD/H7Me4Sf2/Rh6wT0pfi60p4S63b+Ipol5xv6RZlqoxyMdZk
TeKLqC/sad+g521b53UX2jv94w7K80HluVZ5dhQeqfs2Ufn/H4gvhsA=
           "]], 
          Polygon3DBox[CompressedData["
1:eJw0nXWcncX5txdLspbdGC00u3t2N3vO7lnc3V2SENzdrS20UNwJDsEtEFyD
u5eWluLuENzd/b2u33feP+7Pub9n5plnHpu557bp3mbPSXvM3NDQ8FZLQ8Os
/F5Rb2i4fmRDw3XQ270NDZeAr4a/CpoBvm2woeHSMfwPrdbX0PAH8BajGhq2
hA4c19DwWbWh4ZmmhoanodM7Gxr+y/GzUjYLNJrye8Ef09ZH0MzgPw7m2K2g
g8EPUT4z/EzQCPDD4NlGpY0x4Duofznnvgxak/M/Bb4C/kpoB/CvnH8G534D
uoTzP0v5VZRdDe1CeRN4Im2tA/2F9h4v12N721K+Ani10Q0Nq0J3Uv7EYMo8
53aUN4InjEobf6b8RfA1lF0L7UH5LOBVKFsV2onyv9H/CVzreGga9+9Wyi+m
7kXQKtRfEbwm51oDuof6K4HXGp3/7gV/y/W8yLW8AJ3H9TxZrt9r3p7jv6L8
ecqeg86mvJfzXTyC9qEBzvcz5a9T9hp0MeW/g9+CfxO6HHwp9a8ZmWf8JvWf
H8y98pp2o/3fqqnrPb2M+pdR/9qROeYt6s9Ua2h4h7K3oSsoH8Pxm3Htm0MH
0P//1PPsfaajwM2DufeToL+ClwevzLWuBN0K7qP+pfT9EmiQ9j8ZaGjYEH4D
6LWehoaWwRy7LrQX9ZcFr8Cxy0M3gK/k+BtG5h1+l+MfAH8J/wXUSPmj4GEc
OxT6I3gLcAtlzdA+1L+9PG/fiTW4/lnBU6l7fnmem1G/ybagv1P/n5RfR93p
0PrUv5vy+ym7D/qe8vsG8254P9elfBLlDZT9zvXsRvnnXN/G8BtBb3J9d1B+
L+X3QN9Q/iz4dvg7oArn/x/t3UJbN0Ob095VlN84Mtf8HvU3radvw6C9wRPA
39L2N9CO4H9x/PVj0ueNOP4aym+m7k3Q+5S/Us+57UM/5/sNvLPXDm0I3go8
nLJW6B++L+A74e+CeihfG/w15/oK2p7yO8v36Tu7Fue7oZ5r8Zo+ofxDrn99
6q4HvcL1PwFeEn4J6HbwzfW07Tk+78338S19+Q66j/PdU95Xv/GJtH9v+R79
bxL4HI6fxrEXQs9z/NPgW+Fvg7o4fhbe3/d4d9+Fru7M/dmYYzeBNub4t3n/
p1J2PvQPyq/l+FtG5p59SHt3DWbs8RrXpv5a9Vz7l9B2lD9ez721/pycb3w9
z8J7tAPla4I/h/8M2hp8XT19s48fgZ8oz8dzjuX4x3y+o/IOzwE+F3zRyFzj
C9Sf7PvLt3A5NIr+bEz5UMqGQHv5vVJ+Fsee6ZjL8TODz4E/G9oWvKHjLXVn
hf5M/fPBl8BfDL0EbqD+GdQ93W+c+lP9XkemzsuU/w4+jbJToU0oP6+eY+3j
i5T/h+Nv4l7dCG1K/+6v59v83HeW+v+m/IYxeUe9/8d5f7mWq6DZwY/U8+0O
gWan/gXgy0amD6/Q/kODads2NqH+/uBtOHZbqAF8cT1z2ZXQG9SfBr4C/nLo
NfBnA/kWHXNm8P79SPkOnGt7xyzOdx/4U99d7xH4onraso3X/Z7rGf82hVan
/GPwhvAbQCuD16nn2/8N2sXxw/eBY7+GWij/FLwJdTeGVgH/C/wdZd9Cw8EP
1sN7TKvzbT3n8pjVwMcM5tlfAY3mer+sZ351jl6D8u/A2/msoQng9ZxvaWsm
aA/6c8tg5qZp0Mocv77j98jU2ZPyC+u5V97zV8Hr1nOsY9ru4GMHc26f2Rjn
p3rmdvuwFufbqJ530Xfsr9T/BrwNZVtDa1O+F3htytaCLqD8Xb6/i/n2LoIO
5Ps7n/Zvp+07oH7a3wa8epk/3+X4wz0fx24JTe/N+O1cvBq0M+UXcsxKQ5l3
oX+OZcygfDaOHQI9RvkhHL85x27mnMjx79Uz3zhnLTcu8/U3ozIGOT+/W0+Z
8sCyvo99aXsF6H7aP8rro62tHaNpbyrly1O2HHQv5QvQXiPnHgZdzPG7gzeA
3xD6CrwreD349aEvwHMwXg02NzTUoWe5H/NRPrT0/yLKq+Av6Mvn0BRwP/hr
+K+gM8C1wfBfQqeBn+N9X553cTnoQd73R5THePZbSfT1Tfq/hu8ytHiZf7YY
kzpbUv5OPdeuTLQM5StT/iP8T9A/wasMhv8ZehA872D66j2fBp6n3P9ZoQvB
dfD3ZXw/BzyD610J2XRF6K0u5EFwHX4A+h/4NfDy8MtBb4BfB6/Qkv9mgOce
TNuzQFNpbwr93ZVnsYtzLM9j68HIesp8b1F+KOVbjMw7cC3lb4HH+25CS1H+
dj3X6n9LgwcG01ffh7PLeLoi/EqOGeATqL8Tbe3onEd7Zzj+ca6boW7u32rg
X6j7K/Rv6g+CfxiVe3Cu8hD4I/gPoePAr9ZyrctCr3F9b9D+yuV8C1O+C/XX
HZ135nPwloORrZSxXgcvCm6Fb/EbBS8yGL7ZOcP3mfbXpu21oA9pf3HK2ygb
7hhM+XbgteHHQx+CZ1N+9duGdgPvoHxM2UToY+dn3q9RvFsjobN4v+Zyfqbu
taPyPJQ3RisbQlXlC+XnIn+/CV53MN+G38gT4GXAo+BHQtc7fpXvpwl6yvmr
XI/X+Cx408H03Wt4EfwV13cQ13Yg1FjhGQ6mrRHQ9HGRD1rpSwvU4f0GjxmV
PioP/Vn5gLqbQN+CZ6e9Ab7Ffugpvsd1yvvtN/m48/Vg1krKk9vwvHcczL1Z
B/qE8t0G8237zX8J3mMw3/5G0Nfg7Qdzr72nH/k91PMtOp4tBj4avO3IjDE3
8X7tNJi2J0GfUr7zYHjfic+cH6i/PXW3Uyah/p6DOZfX9A3lCw7mXnpPLwVv
O5ix1fXIe+C/gjeF3wz6DjxkMM/e72N310M875V41itC/+V5vwJeFX4V6FHw
sMF8O35De1J/6GCO9b89wHuDN6ftLaAfnQ8Gcy7/+wH8wkDaXgF6iPZeBa82
Iud4HHy68//ofGMV7vcbtYwdjglv8j6fQ/mtlN0G9VG+H/djPe7Fus5pvRm/
Jpb7/UAZv9Yp77Pj2T/qqTtJmYP6Q2n/K+amL6HreP73UP6Oa2foR8pfon8r
j8g9edjrp/7XTTnmeuq/w/x2QVNkzP3A+9bT9jrKVBy/BeffkXPvAL3s/ad8
NcpWhc6jfHfwYvCLQseC16D+b9zL36H/+D5RvgxlS0NTKN+X8q1oa2voV8cn
5Wf4a6A/cj9WLe+L1+x4vdlgzr099AL4JNczfivQnNQ/cTDH+t8cro+5vm+a
co03cD0zuP61uPY1oad9HwazVnL98Wfq71PPtU5UxuzN/HPrmKxxnF+aaO97
2voOupn2htRyr7+ApoMfpf5tY3KM89Xa4Jnoy8zQ/+jvT9WsfV+FplF/Lcob
RqfOw5T/QPkrlL0MXUD5moO5d9b5L+UnD+Zar4P+5PtU5Etl2L3Brxd51f/2
Ar9He5fR1qXQIbT393quTR3ARVzfX+p5dqtA54Lfp/4VrsWhw6j/allPKv/+
pS/yfzP9aRqV9cPe9egSlJEu5PjXynrOPvyV+h/Q3nTauhY6pjPzn2Pt9FGZ
X/9J+UaUbQitQ/mEMj86Bz9Sxk9lZWXmp8GrD2Zu8p16aFzeD+dy56x/gfdR
Xhidd+oX8Es8nyX51paAXuZ7ewI8H/y80JPgx8DzwM8NPQ6eYv9du0Md9P8A
rm8jrm1DZXKu70DwxiPz35Xglzl+qZac41Xnf99v52JoLudnylelbBXoXcrf
qoVfGXoH/Ah4LvhB6FHwm7WUKWO8DT5I+XtkznkV5zvb9fbojBnj1DfxPi/N
u7wUdDfv8zscv1pLzvme8gfHL6csCM3rfEL9ZUbkmHup/+xAZK1loQfAe1qf
cy0Lncb5nqK9BWhrfuhp2jtlMO+e92hsX97PDYo86Pe9Rpk/nO8fKs9rvTLe
K0+sVeaTDcr7vF75/rcs8+n6gxkLtirz5xsD+VbXgJ6yv/RnYfqyEPQ8/Xke
vCj8ItALXZFf1i3zje/Dd7xfLzVFZzW1M9/jRkWe9Xv7M9e7Ite6AnSW7y/n
W31ExvAnON8z6hdGZQ52fT6xjP+blvfzmVr6siD0bFfm283LfKT8/vpA+m6b
T9Le8YNZOzrG/YH79wLHL9aSa3iJ4ycNZq7ZvMzX48v8vlEZP5y/f+bb+gna
ui/z16X07ZIyX30wEN3FutDLnG91+v8x/EfQ5lzfaeAluNYlof+AF1efQ9lt
vgPgU+sZux3D/6m+VfmZc/8ELcj5DqtHl9NY1jPqX8fTlwlFPzVI+dW0dRU0
f2/WP9ZVR3V9b9Yf6rZainxw6WDa/hlaiOMfo/+Lc+xi0M09kW+uL+Od8sCe
5f2bXuSRPcp46Hjv+uSywbT1C7Qw7S0BvoN7cyd0DeXvD+TeTIJe6ol+zb5P
LPrbxRy/qXv7qMiXS/F81kWWmgT91pn10LVlfvqyrM9cPw4t8nm9nmu/EpoP
/EfwKfAnQ7ODB+opuwKaFzwH+FT4KdAfXa+C22irXZ1Lb/TL9m2doq9yfpsF
fuYxmR8vHwzvf4uCb1LehG+FVgIfBL6Lvt7pHKO+QXl+dJ7pAuDJ9ejOhhf5
6yLXD5R9D81L+YWu17z30CD4Atdro/NfHXxw0c8MKetT1+tr2teiT1a/LL82
tGoZT2cq63fHz/3rWavPVMbXadT/dnT6ME9fxlvrzlLGv/567t3l0Dy9kVev
Kd/TF0U+U9a6sciD6nc2UzcJbUZ7FZ7n/DzL+aBXeJ7djm/N+e+1zqwnLuHY
i6EPXJ/6fVK2KPR2Z+Rl9RnqtD4u8vClo3OM6495qL8sdZeBPurM+sO6lxZ5
WX2Uc4NzxGZF3vH5zTQm48E4xzeOXQiawfFLuP6BXwv6oTPyzqzleSvfuF64
i7buHpX1R28txy4IvU79xWs5dk3oe/C8rtea08ePwfO7PoVfHvoUXK3lWheB
3gR3gOeFnwd6EfyXwcyNfpPfFnl8GvyFo6PvmLuWa18a+rAz87FzlXPWT8qv
XP8DPLv7lcF6o0/w2Tkmfl7Wi/JXlvWB8uFtZb5zPld/pq5Fnctv4DNob/ky
fj9Be6eDlyry5f96I7/fXORv5fV++rd4c57pO51Zj3gudUSuT+rKC5QtAb1L
+WL1jI23Omf2Zv16LnXPgV4dF32P134B9Pa4rHdsy3fkk7J+PB/+POgN19PK
C805x/u0P1ct98r/PuiMftpvfVLR36oPmDo6bbj+vBm8nbah8n3X6vkWLoPm
pn83Ut48JmPAipS/X49tQp3R8uNiP3N9sf7I2Fc+EBf7xQquZ+nPpvRlE2ho
V/Stynbjiz5VfciF1J1W9AHqe9cs+jH1qeq31xiZ/9T/nu36cGT+U9+t/nWt
Ii+qv51a5McJRV96cVnP2Efte9of1FWos/gO/BXj96Zc6ybQ24zfD4MXhl8I
ugb8IfXXH5VrWnFc9LETijz/atGvrlPWS68X/eHEsr5R37o0178+174e1NAV
feqksh5TP/sI51uUcy0CXc/5zqR8JcpWhp7ujf7lglG5R+cU/Yn36iLoPPDV
9ejy1Odo31Afdt6o2HPOHBd7kfLepiNjP1nV9ZvXqk2iN/qyc0flmDOKfk1d
uTrzU8fFfvjLmMgIru+1F/46Jv9pT9S+5rPfYGTsZVcUedZzap9q5fobuPbf
kZfu6Yx9xLW8a/rPKJ+N8g8oe1+ZnvLr69ElWkf7yXDKZ+b4maD7OmMvcW3v
Gv/L3th3vHZ1WtorptejG1VHqn2hheN/pu2foNs5/vIif9tH7b9zga8ZERlj
gd7oo9Ttq+M/flzsL+tp+yr2lqOKPKCM0Q4+ejCygf+N6Is85tjbMCb6fPX7
8r+Pjr74iCL/OGe2gs+q51m7XnqG8x86mLnR+XCo8lGZP53DGrWHgWejvSHQ
kuDDBzO3Wqe5L/ppz/Xb6OjHtZf8WuSXkdqzOd9xXOux0HDtRfZvdo4p9mX1
eSPoy0jozt7o223LNrS3TAcPo24jtKzzNfhL50poFvAVRZ5wTlkcfEiZ753j
ZwNfWeYbr2GJvth7fxuTd0r7893gdcfknmvvunow1zoUWqrYv3wWGxR7o/bs
L4v+9y6e13LgT+A/hW4eF/ukdTe0TeovyPXdxLXfCC3O9S1QD38DtGhv7LWf
Ff3y7Rw/H+XXU3ad3yjlnYOxLWhjOJLyI4u86TNto/0HBnOujewj+N983/Mp
m0HTemLP917/VuzbC9P+Lcqm2gRpfx7wdPhroQXB89Zzbv9bGPw97W2h7A19
QHvfgDcbkTHsPXD3YGw52nQm07/rBvOsmqDllAfqsT1rQ6/3Rr5z7N+mjO9L
8r1M5FubAP3cmfHfsq2h5cv7ep5r+zI+OV7JnwM91Rv90AnwJ0I/lfX7UN6v
IbNnva/9R3v5rMWeo31HXh8I7Umf1GNLt472oW3rkV2VYQ+gveeUb2hrJmjn
Ij+uTt9WgwbAo6m/G9e2KzQb9WcH7z4i/w3rjf+FvgDa97XX/7see5n/6Y/x
I/dzyxG5xx+rz3K+0JYJ/dgTe7/H6iOgv4f2qqnwF4yM/Up/EMumj4w/h+sf
74X35P4yf11Y6j8H/qge25lzzErq//x+Zs817sr1vMp681TGrinQnjyPt+jf
ePqyNvRsT+xf2kobi/1pBvXPpO4Z0N7U/6Iee6J1tI99XY+uRZ2L9qi3qH82
dc+C/l7sT23cy+FQlfO/RPmJlJ0A7U75m9XU9Rx/A78OPh3+NOivnZkvf+Pa
fh+Z63mjmr5YZ6/O2JN+ouznkbE3veR4MHuuefe+3A+PbRgVe6LyxK8j06bz
r/Yqj/1lZOSPNwdyL9TBPdMT+cQyj1H+eK2avnkP/8L5Xwaf1JRr2gP8YjXX
djy0a2fskT4bn1Gb+m/lPfpy06j4e+ifcSX8FaPi3zFiMPbPjaB9x8X/w7LL
R8X/pn0wz9c6+4BblUdHpQ39O9oGYy+4GvobePhgeOvsXY5Xv2Wdv4+Lf49t
XzYq/jn668hfWvTN/6vHt0n/kNlL+75bG5TjZ4CbuNeNs0e/995A1q7rQC/2
xH6+vLIbtM242KNtS/8L/UlGDcYWq032H+V61i3ykf3V/8S6+mzMUa5nvfJ+
e33qFz33sNmjT9Q+fP7IfEOtRV+u7uHiom/Xv+WcMt40jYt/1Wnwp7uGA4+j
/r3UvQc6BvwL17M117IV9GkZD13LuKY5ivKR4OuKvtDnpX/WrfC3jIp/158G
s1Z3zX7IuPj7+OxvhPYHjx4Mf0O5fu37Z5fxT/+bBvC2nHsbfSQ4/6zg7fWV
gL7tiT3h4iK/aU/SvnRRkX93HRf7+xm0daZr4HGZb9Q1qHM4HLwa5e/R1rva
8Hvz/nkt15b3S/+s84s8t+O46G+9147B6k/1b1B3pw5vS8qngtvH5JvX3uz6
56xy/sdp/23u54QRGXOe68n90ZatTfuwcZnPNy3+JIuX+f//fEuK/mDmWnxP
9KG6qjPyi+vnTcv8v0Y9viGf+sx6Y3/4Bf7XEbFXqF9Qn6JOaD79lWqRFfVp
uYb2nhnMXKAMs2Nf7H0+S5+p9r+K4y1tXQBVaa/D9w3+PKgX3Ex7PzRFB3+L
49NAvoWJ0Atcb1c9x06F+nqj//xwZPz75qf9bvC0ETlHjfKeenzT/K+/N/bL
z0bG/2ORcZGXXOu55puV/j7D+HM05z4K2tH1If1Znbl3Neibzuiz1in6JPVl
C2jvac4a+zPKO+vpm9c0jvMtqD25OXU+74y/ySblfusv8lB5XpsV/xTlg62K
vVt5btFazr0q9LX291rW8q7xPwEvyfnu5Fx3QMsVfd7Eoq9T/7PBYGyt2ijV
ry+sfppjV4a+7Iw+Rv2NOp25qF+tZ62pT9xcvdG3TSr6KfV3C9VyrNf0RWfk
wc1L/5cs8uV5ZT07tMinXos2/KV9H2q5FvvwFccvy/nuUbetzUr5t5p7fyS0
PeXPg4+FPwbapTP2Qr9/54DLuJ5v67Gdqr/Vv0R91hpjIoOov1Kf7lrZNXMP
+L+0dxBtHQht2hn/FI9VB7wOx+9Qj6ytzH1wb/xx2ihrd0wdF/v895T9MDL2
eO3z8j+OjD+C64mLin5J+VP7e1ORz7UPPsL5D+HcB0NbFPuLsthss8c+pb1K
3jl4z77oc0+h7ZOhf/fG3mhbyvyd6lNp7zDaOhTaqjP+EfbFOV3/EO2PrUVf
oD1B+8fQsl5Rv39KkeeV/7U3qV85lWOnQP/tjb/IjWW+vbTI1xcXfZjrLe0h
71P3A2geyp+gP0fQl8OhbejPnI6fPNvTobFlPeW7oc5jWF/sy1+NjD+S/h76
f8jrb7QE+Llqnv1kaCfaG+v8Q1tnQxXae2cgY4Nj4vM98e9w/HVO0d/D9doF
RX/lemzeMt9cPyr+K64XLy36PtdjJ5f1nGuiOcv68pKi33M9qf507aL/nKes
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
D/grY/dv7clnpH/YD/A/tscfwni4X9pTx3hB/VW/b08d/ceMl3c++7I98ezG
t8t/1Z74SOOpv4X/rj3+nPon/tyeNo2v0z/rp/b8p7+i/hie2//01zJ+3vnw
0/bE5z8Jfrc9MqnxrI+D326PTGn+pf+B32iPjGv8xaPgN9sjgxovaPymffu6
PfGWL4M/b881GO9vPgDP9Vl74t+Nn/Vc77cnHtZ4TY/9pj3xpvqrem3eE/13
zWe2VvHn1R9b/+y1i7/dYPEnW7P4t5rvzPxh44v/if5S+rcZC7pG8T/Tn11f
cH3C9W83nmdi8e80vk1/NeuuWfzT9L+aUPzd5i7xcNbVJ9R4wh1ZD77I2v8w
qLOaeETjHY0JNR7T+Ex5c1wZPzF3PbnMzC+0YPFnlzfnkP7rxt96L3zGxsvr
326ZOcIWKfGMnttzGO/4vHJRe56p+RD+Rn/OoS9fQn/vSLyx8s1H7cnvsmM9
vl36eB3K8ZvX41uvj735zzZU/8OxF0Ebw28FPQ1/APQH157go+Hnh2ZR9wQ+
An4eqAG8GXg8/KXQFh3xT9cXTp+4g7TH8d9qlF0Ard+RfGLGexkTu39v4uVd
6/00IvkAzHdgLi1zap3fm/jhT0bEH/Ls3sTTfzEidcyHsA5trkzb50GT4FdS
Zwm/CDSU/m1ZT2yZ5zR/2dqUL0fZmdD4jshwzSOyXlK2m4X6rSOy/vquJzJX
44isR5TFDurIvfoROhh+e+h5+EOgsfomaNMeFpvMER2RYX8v6w9lW/OfOVb4
36s9yT81E2Uzj0g+uGfAH7TnGRovflRHdNlP+Qyq8dfT914f/FX0D6V8KmXf
QvurT4cugf/Zd7Qj/vvDRuQaPulJ/jnPNYs2257ImPKuD5U9jZ+YDX4I9H5P
ZEx511/KngfQ5oW0/T10IHxrPbleXI830J+h4LYRWX//RP091IFSdzLUp66y
Ht9ffYBXoP789cSa+Y0ab9LYE/8C7W+H+Gx64g+hf87hA3km+g3PXC/Pqif+
F/rzHEn5iJ74U+g/dYzrw574W+ifdDR4VE/8MfQ/Og48T098V1yjfc94Xu/J
2to11tfgl7pjf9dfY3Pqz9WTtbxrpG8pe6479nv9NTam/BnwbO3xedgQ/BR4
5vb4UKwPfrU7ax/9Qbb23tLeBu2xwR4IfqU7/gT6g2wJfqE79n79SzYFL9oT
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
E99SfUz1R9S/VduWNi5jh9ftiS1Lm5axxr6jvqt+k8d2JUZd+5A2+r/1xF9W
+4U+rvqb6X+qbcMY26178o75rjmGHdUVf1Z16fqobgV/YC19M+fpJHU3PdG9
6/O6RU/eWd9dx8TJXfFn1famDc7Y54NqOdacq+tSvl8t+VXM8bI2+ORaxip1
NOpqjq9lbaCOSF3R4bXo5swXvCn4iFp4cwhvDp5ci+5wQ2g78LG1rDU2hnYC
H1WLrs8clFuBD60lt5s53jZybKwlN4o5UtYE/72WXCvmXFkdfEgtukOP2QD8
j1rqeg1rgfeppa5trAH+ay25YswZszJ4r1p489Ws4vzTGV91Y+KMjftbLblq
POdqPr9a6vrfql2JAde+pw/AX3oSc6/9UpvxHj3xX57cHh+O7Xvyzvvum0P9
T5X4GPs85yn2LGOq9T3UhnQtfGN/5kq/Ib+lmfqTP9sxYM5K/ImNFTVG3Fhx
/WuN1Tbm29jvYdRfoyXfqN/q0P7M1f5X8dsDL92SMaOzkv1cPuLaPm7O/i3m
G5/RnDHTfN3uf/Jhc+q434tjkGPRO83JN2/+eXnnDPPD6z+srVibsbH0s/bn
2j1nRyVjlGOVbbqfiv7F2pq1ORvbrv3XuevE9vhXax9yrju+Pf7X/xfz256c
EPqfOqc4t7jGaq8kptTYUnM26H+qP7a2aW3U5grQf9u29cHZtSdzlHOVa7Dh
lfiXH9sen5sde+L/7bn10dm5J2so11KPQw92Zc5w7nDNNrKSMdSx1Gf2x0rs
Xcoqtqm/uvZLfXV9R/Rv197l3O+YoP+8c4hzSb34m2nvdu43x4P+647Jjs3O
oaMridE1VtccBfrTOkY7VjunzF5JPv7P6esXzcnP75zo3KjMcjx4OvgU+CnQ
2b7fteQ3Nn/yiuA9a8nf638rgJdTp9SS/SsPo/09aonNss7ylJ/H+P0UY/fT
UBff1inV5Bo4B5q1MzESxkoY4/En41HUkTn/6WNHeyuA34V/DzrC910dh3MV
NBlcB58Lf54yNfiP6ghbImOsAp69P756yiArgUf1Z+8Z5+Tl1a30x173HLQf
eEo1fTsXmo3+rKQOqiXnPEpdCvhx19vQXuB+8Nnw5yjDgk+t5lhjUoxNmQZ+
tjExK+PAN4Hfa4xNcBHwtdXYAo25mc94KGNAGlNn4c7EiBgros1w7s7EfBj7
8QpUN7alGt4Ynbk6E0NiLMlLUD/4BvA7jWlzIfD1xow05r8FO5NjxFwj/jc/
+HTwBY2JeTH25axqYo+MWTN27YxqYtOMaTG25cxqYo2MuTH2xv0tjKUxx465
dk6rJnbNNhvBD1QTm2LOHHPn3F9NrI45dcytU3MOb8k93cDvBXxmS/5bH9wH
PqMl/60HvrLYR06ATlO3UOTvo6ETuyLjKetZZ4r6CvCZrqWgC8D3gi9tjg5E
Xcg94Iuao6NQV3Er+Gz4c6Bp6kqK/eVY6JSuyJjKmv53kvqNWvpyInQ6+Lpa
vqVTbUN9Ry38adC56kZq4U9XnlR/Ugt/BnS+upViL/KbPAt8Sy19t08XdkUm
Vza3zhngm2o51mucCr4bPK0513Ql+LZaruVc/wPfXgt/ntcM7lFv2RIZbSL3
txN8TEtkvrXAc4KPaImMvJrynDaWlsiIa6h77c+3eD60CbgCPr4lMuV48Djw
6S15hpPUtfbn2/Eb3gh8H/25ojk6IXVDW1O+hL7O0HWUr6pOk7rf2ifwHbX0
/XzoEurfWQs/FboUfFctvGtw1+J/qWUsUwZYSXmpP77U80FX0t624GX0xdYH
XNt7f3y754EuB2/eH1/sBaCrK9m/5LPmjKnub+J+aZ825z/3M3H/o0+a85/7
py3LMU/R9/2hEbS1HPhp+AOcL/rjz6Nt3RwSxqvoT/BMS8Ysx675Kll764M+
fyU+6/JbuAZ1Lgcv5ZoAfnh/4kn03VUn+ceB+Nto2zVnhfEu+ged0BabrvEw
+1fiu+CY6Ni4r2Nca/q4iPYxn2FrxkDHQuNZjmhLfImxJ3/3m6X8SdcIlC9Y
ydpSH3x98f/hM2/NNekfsY/66tbck4X7E6NiW0e2JX5ioUr0Efr069u/YiVj
tWusMf3xn3eu8B31XT0cvGhr5iTnJv3pX23JO+q7aryMvunaEOYciD/zpq3x
odaXWv/tzVtjf7nXtWAl755zkHOR8UD6smvj+NNA/PNfbsk34bdhPI22ZGPU
jFW7uehjtDnoj7VOJXOZ35jf2k1lfacNUH8u4wec2/xG/FYmVDK3+g35LRmP
cAf8tsoD/YkHeLElc55zn/EI+vs75zn36T99dFt0BMYLHUr5Qq2ZY51rD67k
XfYeGW+wInVeGx6bz1N+C92xbR4CPWr73bGdHa+NBLxsd2yp2kAeAy/fHdvh
EdAT4BV8nsWe9KTve3dss9psH1cW7I4t8iDoEfAq4JO0lUGrwq/dHVvr1eAX
KR8AXzM8PhR3eD+6Y0vV5+F/ytbgg4enz0vDrwZ9AD8FelbZF/wJ/BnaiMAr
gd8YHp+Pp31fwL8Njw3qBWVn8E/D41PyfH/8841tOrk18XT652ubMWbK2Kmd
KvHlaTS+AX6LSta+v0JbKh9VEovi92B8yp8riVXx/Z63P/7tx7RFZ2M82QGV
xG74TI0v2ayStfaP0ObqFioZu3wHjQ85sJKxynfC+BDjC3yXtyjxCY7Jjs2O
ocaj6I+o74c+G8bL7VCJr9FQ68PvUsm13NSSeJfdwS3gW1sST2P8zC0t+W83
+O0q8S2aDbx9Jf75x7VFZ2X82laVrO0bKN8afptKdJ+zgLetJP5E2+RWJf7i
gUpsg1uXeBHjfzZuTUyYsWHGDxhf0KZPjnNPJbE6xjRMrSSe4MDWjDHr9Sf+
YL/WjGHrgKdVEu/gmLVuf+JZjD9wzFu/P/EQxiv0QZP6E29pvItj2Ab9iV8x
/sFnOr4/8SvGYzqGbujcV8mzmtiaeCPjJYx/8X6t3Z/4CONffAcm9Ce+87DW
PPON+hMfarync5Bz0ak98Y02ptRcf1c5RrVmDnMuq5T1/9zF3+79Wmw76pTV
LZ/SE99pYzrNvXd6T3yrjXE116H7O73WHB2a+01po9JWpc7N/cPUcavrVif9
367YoLRFqRNzPy9tVtqu1Jm5v5g6PXV7tul+Ue4P6trSOdH9ANVxqetyjel+
VsZf6uuqjbV3IDYvbV/q8NyPy/2+vmyOzlnd85k98W02xthchu/VYltSx62u
+8Se+Eobs2ouQvfXVBevDlpd9Lk9JXa5PbkW3b/MtZHncD+xo7XTjEjMqrmb
juuJb7YxvOZmmq87vhj6xOobe3V3dOnapP/PX7cSWcI1hGsJ4920tW9f4l2e
qCTW0WduPO+DlcTS+E4ZD/VkJbZj3wHjg43n0XZ8dGvid40HMvb12NbE7z5V
ia3Xd8J44emVxHI6J27Vn5gfY3/WbU282E3gtVoTA2Us1D8rsc37jhrPY/yi
vgYbtCb+y/g532Vjroy9ur6SsVAZTVnN+FJjnbShzjGQeD5t734TxnMZn6mv
qT55xvsar6ztXZlL2cv4Q2PB/CaMF3qsElu+35zxzcZvahvQRm58sPFXjm3G
7K3p2qCS2DzHC2O5Tq5krDGG7ZRK4s8sM+ZvLeqfWMnYbAzdSZXEbBm7NQRa
oz/xvupOD4b6BiJzKnt6z46r5B3tGUicqe+uMVHGRs0Krd6feGuflTKjsuND
lfhiGPNkvJXxnvo2OCYZD/XfSmz3jjnGXxmfqu1BH0Ljq42Z/B/0F8r+2p8Y
SGMhZ4ZW6088t++Cc/yW/Yn/NJbKMW3vIm8qezl+Kc/VB+K7aYzbfzjXMpXI
Yo6Xym/myzK3vzmH3AtlpnrD/+UQN+bW+IwdOpPv0XxS7uW4WWdyLZr/6LNq
8muZ69F8Vu5N556R5n8yp7/5x4xxM9ZNH0rjhY1pM7ZNn0zjuY1JNDZRn03j
fc23ZX4P80X9Xk3+RHMlms/BfK7u4Xh5yZdg/jP3YDR3pDkkzedqPklzh6zf
lHyt5oc1t8e6Tcnnan6GhZqSs8Rcy+aXNDejORrNZ2p+zsWbkjPEXP3mYzDf
ijnDzJXtHvXmB1mlKfnh9AUxVtd4On1CjIHVH0Qfmy99N/p4Z4bw3kGXjOV4
8DHwx/qf+1ebo3hI6lwMPsIcgPCnQNPA+7uHC/zxQ5IncHJf2jKH2qUlz9oJ
8CcOSR428wha1//Mw2ZMsL4r+tR96tzYl3Pb5umU7+MeMvCToSljE5Pn+6R/
zMPlXfTanEN9J80ZYO4AYxaNH7/VOY22Lx0ef+rbfafhrxwef/F9+9K213wq
7f/dHMNDcs5TxibHobkO/e+kkkfOazkJOn9s9iQ3F82aTcn35x6l5kdxT1fz
173dkXwY5kgxv8wsncn3dFZj8l2an+2koh85uZp8K+YDMUeJ+dvMV2L+EHOo
mK/NfKxHFX3L0dS/tyO5SP4vJwn4gY7kMvm/nCbV2Cu1XWrDNJ+v+U2PLfqe
46rJ16IuZa3G5N8xf86ijcnJtDPlr3ZEF7N6Y/L7vNgR/dJKjclnNKwz+a7O
b0x+oBM7kq/L/F5bcfybHdHNjG9Mvp9TOpK/y3xq21STP2eBxuSY2r6aPVPN
5TO+Kfl5z+lM/jnznbn3uflk1Y2rI3cvOfcIVN/vHkbmE3YPKfX5+vCab1j7
rbZUbarmP3aPLe0H+hiZ/1h/I20B7qFkvmT3bNOe4R625jM2v62+tvrcupeZ
/kraEtyzyXzN53cmf5752swl7Z4w2gLMmW9+ZPMpe+8dI8yv6h5P+jO756v5
H+8q/sbuGWu+wNuLv7F73psv0D2d9I9yjDB/tPmb7btjiPlozcerL7E+xe5l
Zz5n7dOOGeajNf+z1+6esOZzrXYmH5A5B81Vfnhf3mW/6Qt4n+9yztGXbHji
ZYzB0Xf2x7bEMxvfLP9DW+KZjW+W/74t8czGN8t/15Z4aWN69LU1Jsd8A+aY
0NfXmCjjc80XbCyoMaHmRjEmR19iY6SM7zbfrbGLxr+Zq8GcCtrn9ec2XsQc
Es3FH9j4ZvNhGvtkTg1za5j/0tiolduTD9OYrW2K/cl8qcZc7VDsZeZrNcZq
u2JPM7+qOTAai3+x8cfmuND/W39r48vNyaH/tv7kxpebf9NzmfPD3B/mhzb2
1RhY8zWbP9p4XuNjzV1h/k3j74z5Mx+n+a6NBTb+1XzP5n+WNybWfNjmx5Y3
PtT80eaTljdm1HzR5u80fs82zedpPmrjf23T/Nnml7auMbfmszaftH0zftRc
GeaEUb60DfN/mjNH+dYYPvOPm2/aeF+vwfzX5ss2ltCYQvNrm5NFedcYQfNl
mj9T3hhC84eaw0X532PMr21OG+V/YyzNF26+bfvmOcxnbc4a1xvGZJqf+8i+
zD3OSReNTQzcVsWeYr5cY+62KPYe8+uqv/0MeeLToq/tBX/QkhwF6hfV51r2
SdEHuv/2zyOyx4b7e/+pP7qJV4q+sas/up0ZRR+pfexS+Eug3krsWxfCXwB1
VWL/mtaS/7R3dTs/tSQHg/pI9c2ft6SP6pfv7489+bbhiW/7V3/8j/XHNr5N
33l1Fc7p+tCr7zS3w1ctsT9oj5D/sugzO/qja3mt6EfVd1r2RbEXaD+Q/7zo
u41R3LTYv8w3qi5PW4M2enV6c/RnrW8OCO0b5owwd8TCrbGXqB9dszU5J46p
JL+ttkFjGs1/a0zeesU+aH5b893KT2pPfltzRLj2HGyNPcQYyY2KfdH8uObD
ta4xgeabHd0ffZz6wuUryWlhbovFWmMP0l6zPPxyrbGf/KE/uglzZmiP2aQ/
axVzIKlf3aw/8rI5j65Utgcf05qcRepbt1HmbU1OI/XB5tgw14bnmFxJzgtz
XyzVGnvRdspcrcmJpD7XfPDG4vtNmh++pTO5Iac1Jt/eyp3JvfVdY/J9rV9N
bLE56sxVp/7lh5a8U/o7bFBNbK85Xc3tupxzNvxr0OnmOqsmFtgce+baUx/0
S0veWf0h1qkmVvwr6IqO+Fcc15J33Hd9UjVl5vgz15/6Y3Wx6ifUl06g/BPK
PoUuoXwV7Tvw70Dnej3ad4blv3PAy1fTN2OAz+hIjj5z9b0JnWm8djW8x5xt
brlq2jaHorkUx4M/HpZzXmyuOfBHw/LfReBVqzn3u9B5HfEfmdySb8BvYWnK
X6LsZWhKR/xFZ6LsKubIrbvir6O+QHume3Hr7+P6X3uqe5kvyvHPDUuM9/Ed
8c9RP6G9173NH+mKvVT9sP42C1H/Geo+Cx1j/jzwC8OSM+CkjuQMNHegz+zU
jvjXav/VXvht8VdSt+s357fXVIku3jWU+vphlejufSbq89uhtv74tAwppK7f
NZVl+gPZN78Zvx39o9Td+k34beh/pK7aMc+xr7USXe7zRd+t/5H6Fe3T7qW+
pjIrff8QupD+r2G84bD8dwF4kUp0i+rQ9e1Tn67uUZ28vmvq59Xl6Q+k/5c+
QfLq9LQnaG9Q97dZS/z95qkkN84mLfHv059Ze7f2oB9rGXMde92TXX9AcxaY
u+BAaMuO+Cct2xL99pD++D9e7dzQEn/HejW5AM6C9qL+YDX82dDe4Lmq4c2x
YK6FOsdf69jZEv/B+arJfWDMv7H/c1F+nWNxS/wtnSOcK9Zuif+h/kZXwK/T
En/Itaq5l77T0zj+j9X03RjPrTvij629XXvXz16vMtyw5GDYifIe8JHwR0G7
gnur4c3ZsFtH/KtObMkc5FxUpfwYyo6F9uxITL6x+f63u7kaqvmW3oPOB69e
De8zntoRf3H9HbR3f09/atW0dRz0Z8r7q+HNwfCXjvjbuXe79pJfa/EnW6Il
9oiZ++N/5t7y2ht+ryWHgrGxxshu15EcG+ba8Jp36Ig/15SWzOnO7fqg6Ytm
ziTtEzNVYqvQZtHsXNCZ3INfNSZf45Fd0R/q3/BwLTkVzK1gzosjaX90NbHI
5sQwN4Y5L8x9sQC0LHjWavgFoeXBs1XDGxO8QkdyTph7YlFoxY7kezQXpGs6
808as2vs7oBtgGei/rzw80HLgH/oS5kx48aJD+9MLkfXbObXNL+ktuwrGpNf
U/9OfVNdA7ifyw8dsdebs/HyavJdap835+Ol1eTX1L5vTsirwLNXE1tsDg9z
eZjPUdv4ZY3J7/mHztjXXaOaD9R8nW82Jj/tdN9d32Hf9eb4G7sfy8bFHm++
WXOEmCvEa1zKfBHgpeCXhtaw/9Xwy3jPwW3V8MtCa/k+dyZ/qTnj3btprc7s
hWMfzTfZwn9LDkubq3ckH726mB8bk/9yjc7kovy5Mfk5f+P+zkXduaElqd/M
8UsMSxurgRvBi8EvDq0CXqcz+Tt9hubrHFbNs7XOypQ3VVPXNlYFj6gm9nsl
aKL3sxreHCXmKmmv5trMQWIuklHVxI6bI8VcKe4HpO7IZ2z+UP1H32qOP88L
2nbBEx37mhPP8F1fYv2NMTfW/OCu+LLr0258xoPQP2uJkTywkLEbxnBYpr/t
e83xkXq5lpgLfa/1wdYf+9Cu6N/1Odc//ucyXuvTabyGMRnNZbzXH1l/T23D
Q1sSf2GMpbGW+ozeX0v8xizw1/Df9l3xn1Ufr7/Qs7X4t+u7qr/MV+D7Sn+M
CflHV+JB9H2+Cbx3V+JH7IsxH8aP3lP6Y8zIPl2Jh5kNPB28c1fiQ+zb9eDd
4T+H1gX/0px4FP3NnXs8xviZz7m/H3JvP4J6uL8fuv8F/DvQWPBHfeHfhTqM
/XcPSfj3oa6O+Js7V/zenHiTryn/fGhyBpg74APwW0PT5p/MFQD+amhyIpgb
4Zu+5Fbwv8GOxNO415R7Tuk/+z7lbw5NG3NS/nFf+mIfOsFf9KXvH0O94C/7
wpujwFwF+s87t/pMjKcxXsC5SxnJeJrPqP/B0NyDbvVT7hk2NOecA/xpX67V
OhWvty+5L7zGmrqhanLznA/t25H9j8xVpUzs/kjm5NTeYT4c93vRP+aXYk+5
pvjH+K7/UPxJ9C/5odhTrij+L/r/6ROoP47+HL8X+9N1XfHXscxvaErx1/gG
/uviv6G/hmPXN8V/Q/+Or4u9R/+Uy2vxRdRepP/NmbXYovwmDgFfUIutSplQ
f9fza7FFKTPpP3tuLbYq55wjwNNqsS0pY+qfq3+PbfsN6M/jd6pvnz76xjRf
XOxjyqj6y11Si63M//Q30r9J3bJjomOj/jVfFXuS/jbXqZ/lWZwKPTM2/j/a
w/Sn1B/oxuIv4n/6A93knn1Dsz/Ni2Pjj6R9Sn8T/X9uK/Yw/9M/Sf8i29Kf
Un+jm4o/im3qT6T/kMfqn6L/k/5J1tUHU3+/6eqLOdfx0NOc7xr1y/DHQk+C
r3ffi6G5hmftv3v6Dc1/z4Fv7Eu+Ff97fmz8CW37/eb4L+nPJO8Yp7/StX05
l+d4ivpX9+Vcx0BPiGvxJfWd0p9K/y377jXp3/SnatYCrgm26Yg85tripSKf
+L0sW+azSvk+linzXVf5PlYu80O1fO+rl/F/sHzv8s4JAx0Zf5Yr86Hf3wrV
5Pt3DwDXU44nq5T5pVbk18+HZf20V/n+ly/zjeOX84WyjTLO3GW8WKrMf/9/
/Fq6zKeOH+r/3x/C/Sv6QvUxHwzJf9OKveDDIflP/YzjywrDck7HG+0D7qfz
UbE3aH+Q/7DYFzqqWRu9UOS9ecDfDMv60/Fi3mrWsq5p9yvypWvFN4u8WSvr
xxlFnq2W9eUbRZ4dV83a87UiD/eW9eirRV4eKOvXt4q8qvzt2s013JZFvrau
a7ady3hm31wj79OR9YP32jXrXzuy3nQ/CnXeJ3dkfeBa3TX7oR1ZH7oXhXtS
HN2R9aV7UbgnxbFlvejeF+rUTyjrZ5+1e0ScXtYjXwzLM3Z9skw1+eg955Si
D7CuOvZTy/y0ZJFPnK9u7ku+Hr/xl7n/t4DPG5r9ql7VfsP7fklz/BH1z9e/
Xt84feT0tz8MfHlz/Bf1l9d/Xl6fRv3hz6C9xYdmz5ybx8bf37b0BzRe4Cz7
Q9kS0K3mSuoL7zG3uFeP7+PQ1LltbOINPFafQuMh9LfXv06fO/3zHy/zm/PT
D9S/XPsR/FHQI+DL+sIfCT3s+1eL7GHMqP7/R9aiC/AajR/Q/9+29fHTf9/4
BH35PKf+/fuDL2zOf8YrPFrmR+fA72j/FHM8wS8MXQc+Fjwf/LzQ5WPjj35q
S9Yw+uO7BnItdFJL/Ov1t5d3zab/tmtc17rqBPQvd83l2ss1vP7irgldG7qG
1//7Ys53BOc6HPoP57uoL/xh0L/BJ4EXgl8QunZs1mSuzdSZ6M99nuMXZctA
d1N+nHtqDs01XAk+sS/HLgBdDT65L9dqm9PHxv/DtbUylbKV/hGudZVZlV3P
dzwbmnPc415NfTnX0tCdY7MGdC2oTkr/cffj0BdVf9NlOP6RIm8o33xL/YeL
vKMM9vXY7Begr6z+sQt2ZX8AfXP10Z1HXUZfZGVl5tk6El+hb6s+rsZjGH+h
v6r/GW+h/7n+svrQ6l/+XF9kM+WxWToSH6I/q8cYr/Fskd+U2WbqiD+7/rW2
of+68SD6yuozqz/orX3J1+U3+PrY7P+jL68+ve4v4n4j8voTL6a805e5ajL0
2NjsT6K/r/fI/Ur0N7Vtz6n/vPEmXpvnNP5Ef3mvxWPcz+R/RV71Hn7j865F
NjaG3HiZ+yl/zbEB+ojyp4v8qoz3K/iZvsiy/vc7+Mm+yJbKmD+BHyryrfLi
F+AnivzpN/sj+Cnwp0NzzM/g/xZ5Wnn4K/BjRf72G/sefF9f+vKK/4H/U+Rx
z/Hl2MTf+O36TIzXeZDyN4YmX9cnlN8Nfhn+Jd8h8L+KPGudz7SH9aXsRd8p
8O3gF+Cf9xrA/y7ytsd8Dj6hlrWIMex7cL5jallrGKNu/JH7GSrbmvPR/Upd
PyxR1pfK+9q/32QunDEk9nf319GXX5urtlf3s5kCf0pj9sdx/5qTG2NDdr8a
9z9y7x1txO6PpI1VW6t7WLl/kvtjaau1Tffrcf8j917SZnx/R2y22m79z/2Q
tMlqm7VN91Nyfx7P7TndL8f9dE5tTJ/cX2cE13dZG+N/W/Ltu5+AufTOgc7o
js5N3dtpLYn3cX+fM5VdGrM/kfsVyZ/emP183O9HW7l13P/H/X1Oa8w53b/H
/X+s63/u9zOK813VlpyC7g+hDVtbtvsPuR+S+yW5H5E2cPdXUn/p3kHuF3RB
0W+5N5B7BJ1f9F/y7iGkPln9srz7BanfVt8t735B6rfVp6/WmD1zLu+IPtS2
bVN9mfpw67rHkPpt92uyb/bJ/ZvUt2trtw318er/9R1wv5zrO7LfmbYCbfLa
5o2f8l46hxjP5H5p6oL0OdD3wP3S1N1og9cW7/5X7q2lz8A9HbEf6Fvg/jc3
dcReoC+AewBdDV6vGtu9e7pc2xH9pPsxec/U97q/gs/anI3ut9AxEP8q8125
P4b7k7q/rXvgul+g+wfKu0eu++W5f6K5+41JNHel+/GZq9+YNnNXuv+fufmN
aTM3p/uXuleubbrfqXswuBeDe3hs1JM9AYyv1J9uvZ7sf+r+hvrPuf+o+5O6
v6htuP+p+/fZF/fXdX9C9xP22zQ/s/uPut+wuZVdo7o/r/uTWuZ/7j/sfoPu
z+t+vu4/6P6E7t1rTk5zc5qz0tyVntP9UN0P0XN5jPsTun+hx3qM+xmOGUhu
FHNUuh+IOUmN59S/0P1gzYFqfJp7Err/6k/98SXfEtqH+j/0x/dtc+hv4K/A
68BPhPY0ths8i7lqoLW643/1dVtyXpr78pf++JZvDf0D/IeB5DZzjwj3EzEn
qLlB3dPgmu7kVDX+VP9N96/9huPXp2w96C/dyZf+Lfw3bclf7v6x9l3/RfeT
NcepuU59Ru5P6/6w7r+sv6T7yZrj1fg9/3O/WHO2Gj+q/6n765of3ba/Lv5j
5mvX98Bzmp/dHLDG2+lv6v65+ve8xtj66pD482g/cj8x32n17dqzVmzM/mLa
l8aALx6WHL8bdUQfPG1Yct5uUPR3Z8CfXvST6ivlTyv6S/WZ8qcW/ab6valF
/7FuR/TF6svVty9f9KHWnVL0l7MW/bw6+WWLPlHbgzaICepf+6L7P7zoL40f
+7Ix+8nNWuLd5PU5mqXEQ7k3nT47w0o8lbpRbZAtJf5K26N1jJdSX3nusJxT
/aX6Us+lDn7xjtjrHMv0GdJ+Z/yZunX7YPzazNXYHrRBqM8eUo09wGteoei7
Fi/6U/VV6q/k1anOUfRL8urQ/wh+ty/8wtDsHfHfeoNn+fqQ+Ie93Rfduzr4
MR3xZ3Mutc6pxZ/Mur4D+nepb7dv2kzUR7/Vl2PV6Y8Gv9YXXbU66+Ed0Q+f
An/ysOh31Tf7rPxPfbH6X8tOGhZ9sfrhE+FPGBb9v/pky/xPffHLfdE9q4Nu
Br/eF92/52wHv9mXvmhzGNkRe6i+V76j2luNf1OXrU1A24A+YPqCGfP3RUfy
fbqfnD6Fc5d4N30N1YGrC3f/QX0FV27Kfofufyi/UlP2O3T/Q3n3o3K/Q/cz
1DdLG/XKJZ5viab4JBq/5/6I1nU/Kvcr1CagbcA97IwvdL/ENZpig9EWo81B
24P7xRk/qH3Xb89vUnuu8ZvuTecedR2diWd07zJtAD2dsWlo23CPOeMNtWlo
23C/M+P13Y9R3zzP6f6Mxit6Ln0mjV80vt+6+kT1dSbeUFuFNg5tHcZH2nfv
oflSjY90Lz331DOe0f0njV00htH9Dd3P0NhG/3M/Sn369O3zP/c3dD9R4yW1
yXzfkf0wjZXUJuP+l/r06dtnHfcb1YdPXz5zELgfpvs1GstqTKv7NxpfaV98
BsZTun+jsZradNx/UR8/ff2M8XT/RuM/3RvQazC+0/0k3T/MPcXcf8v9Jn12
/uf+ku7PZZn7Fbpfpflk3WvQNowfdX9I2/ac7hfpfo/eC21C7g/pfpce6zHm
n1V/c0EZPw8o8oW5w90T8Lryfb9R5Gm/9w/GMf6OZmyF7jcXrusp+HOhGeCX
oO3h74IOGuT7cj0HPxV6h7KZwXfCt4/hP8pbwT+Ap0HvUz6gfo2yL8FD4Lfr
TS75c0p+r1lcz1B2NvQa9d+GLoBfDbobfhfKd4aeoe1nod3gd4Weg38eepQ6
m1L3Bugv4D0o2901BPyL0NbwP3H+i6HV1ZVBW8PfBj1K+Qbg9aH74R+A5oMf
T9n3tDccfquS/+SMkj9ofMlvNrnkozqh5Fd6q+QTOrY3udBmlPxFU0o+p/dK
/qPJJX/aGyXf0MklX9M7Jf/RaSW/0QclH5P51BYGv17yEZmfzdxW5rhav578
bOY2McfJxuANS76xE0s+qaHmcIJ/AFqlnvxGtnV0yWe1XskfdnzJR2X+pRkl
31ZbyZfktR1X8ldtWvIfnVLyT21e8pGdWvIvnVvyQX1e8qXNpf6T+/kN97MJ
vgYNB28H3cz9fmVcnv0K0C3w10Ej4HeEtqD8VfA58CtCt8HfA60B//UoxhLf
FXOIgTeGxlN/Cvhzy6Dt4B+AJlD2A/h8+JOhT+HPgLaGvwQa5rmgSRx/BbgZ
fmtoffCt4JVG55hT4G+Algd/BD4R/kXoBWgT6m4K3Qm/KuVfUH46/GnQl/Dn
QDvA72cb8EOpMx/1zwZ/C54K7QK/GvfnEu7N2tD86ur572PKToO28DzQqfBL
QXPDHwd9CD8F2hR+I2gn+HuhcbS/K3ga/BrQkvBrmmMN/mZodsrfAJ/3/1q6
8xi76jKM47GBDmCZsa2gkalzOnNvpr3TAqVCaaGbpVRlESJCC23BEoEi+IeJ
MTFYKBgQaFhlq5UKIRhAIqtQiLSCCiaCJIBYNrGlbG1ZWtZAqO+H9/3jl/zO
nDt3ztzlnHuf3/N8nziWuTHWxHxu/M0b4m9/J8bEmM/D8MLHjjEqbr8Iry3m
M2LsG/OvxxgR8yUx3uskT3t4zBfGeDu2F7Ty2A6KMRTzwRijY740xmexf6/Y
3i3mJ8XYFtsn4YfFfFaM/WJ+stdHzL8Z4xut5P19IebHxdgctz/V8cd8bowp
Mb+2+F+bix93eIx1Md8zfnZG3H7GQLKHMIgWx/ZdA8kywzT7Yyd5Z5/F/mNi
++exfX5s7xHzH2GqdZInhH2DgbO8k3w1/MADi2/4t4FkrU0tHh8e3U4xPz7G
sk7ygI7Dp4txcyd5iitG5XscLxEfCVsJY+mC2N9p5XO9qfiE41v5WL5SvMR1
A8liPKD4ix/FWBvzPeI2L8TvvxPbD2AhxvYzsf2LgWQ7YTxd2Eme2/0x7479
T8X2hLj/6aOTh4h/iPeDFYcZd3vsf2Ig+W6zij9ojctaFw35wZivi/HNrlyD
0O9+d292uVtzsvYkH7hjRHpyBpvUtGhb1pTW96ZGSCuk0b3cm5oebY+G/mJv
8pWw/DD9bu2khk5LPyTGX3szbygrw3M0vkleHL7gjOK1PTaQbLyDisdozc3a
2+wYf6GPxc9Wxr45xbs6pcmsEI/RxCbzj7I/PElDsktxm9Vx228VH+rgePyO
iMfvg+JP7hNjZmy/XvzJya18LW8u3uFXB5K/h+n35/j+1Bfb1+I7xniUP7k/
uzPP9BqO/7d3IPmIM2I83J9MQGzA4Z3sAsEcxB4c0cmuEPxC5/p9Y9zcn4xE
rMSRneQc4g+6VkyJcW9/8g2d+zEXb+tPXic2F0bXwrj93IFkcWFyndJJPqNr
IUbiLfzT3nOx7/3iB44s3h4G4p2yiAPJ95tc/Js9B5IPODXGmv5kLmIvdneS
ozgQ81Wxb26Mx2P/m/3JDsUQndxJfqf3BoYofunHrmej8j2FT4rn6bV8afEP
H4pxeszXYYq5fjrnxvPxbvEo93e+j+2txS/Ej7w75rvGzx73+Lbyuby8+IrD
YvvNmF9ZvMadWsmyvKr4hJv6k52Kobpv/P6H/ckyxTQ9qJPrb76r+s6qW+a/
/clexWCdEPtHxP1tj/taVXzFi1wD41hGx/l6xlDyK3UX6DD4R9x+F9e/2L62
+IfPxW3WD+VnIp+Nlsf+++K2u8fvTxlKxrZs97OV/5bXxrbGq8aPnlb5bUxp
POsZlQfH2MbDnlr5bMxrfGS8aCxkTGR85OmVL8fjxcvGm14b23v0JC95ZuXF
Mb3xunGhsZXxdzeOSz72iMrj007ktT/pTs2F9oJvPacnM9+y33jPM3syEy4b
jp+9W/EAaDl42T2VT8Q3xtvevfL8eMb42l+q/KE+AXnxHd2pudBeZNZl1zH0
8aMxYLFgu0oPwhunzdBIaaX44rQhmi3tFl98fk9qULQoPGmPFeY13jC+smNZ
U/wBPGRa0X3FM8AvP6EnNSPaEYYtlu2upU/NH5uPnXwtXjI++cjKF+INy+ev
784OB/x0ef+N3dkRgJeNTz6q8q36DPC1dQnI0MvS43HripD5l/2fXfn/ST3J
E8fn1uWAMYA1gLdLO7u38qKYzp6PL5b+hb+9c0/+T3jsy5v0ul9c+UaZcdnx
BZV/PKvJrPR5lZ/Gg+BFv6Tyrxc06UXnCecNx3fgFecp5y2Xh8XiPqzynRjs
vP8yAMeOzXz9PpWv5V0/u8muRh51XvXJMfYbl7796TWwMOTL7VvWZBaUx53X
fUWTXZQ85fL8GAdYBxgH9EH5Vdlb18QfNJlXld3lIT+xST4CLdFrBo8ev4N3
X4ei/Dl+x/jKz8qz43PIdsrEy7vjebQrbyoP/9Mmj1WeT979pSa7BRd3Z/8E
/rf3Bo2Z1oyHvkvlfWmf+jl0A2GYv9wk76NT+V95ebwDWX35Z3n3M5vMzss7
y8PjgYyrvKq8/hlNZuWXVF73x01m5eWD5e3lfbECMApOb5JZgF2wqPK7GARY
BCdUHndpk7c9sfLCeM20Wn0R+CjWSKyVOGfg4esE0A2ACUFPxSeXXdxRfAh9
I7KNnxQfAp/i9u7UeGm9OkZ0jWwt3gS+Bba8jhBdIfjisl5e4/jyOkR0ibxR
vAq8/Lu68zHGm9f/gr2PwY+XrwMF+1BmRXZlS5P8cgwM/Q547lgcGOFY4fpX
sPbXFC/xnSb3nded/Qn6FbA+3MdbTd6HnMvmJu/77SZ56vgdeOfbm+x6Pb87
+1Hw/B2bc6T+Afl4WRrnUH0FOm1OqfeTbI1+EuwO1wh9AXprdAk4x+sBGFV5
m6eL74FJjyXinIIvgr/uWFwj8Ef0QfhfnMPwRfAh/a/O6foP9OH4G+5bn4A+
laXdec3Rb4AvKc/vmqJvAS/1nu48J+lX0LejC8E1TN+BzhjdMc6ReCh4+b/q
zg4C/BT9MR4bHQX4J/plLurOTgK8kTebzBL5H/W1vN5kF7Bj0u+yoUlevudc
349+HWwc10NdFzoNdBtg+Ohz0W9hHyaPPh/9LrrGdB7oPtDv4FyMCaPfR2eC
7gTMEf0+OhN0J2B26NvRv+Ca61r7yrjsu3Bt1xmEn3/e2MzG60DQhaAfSBeZ
a6w+BZ0ZujMwVKx/6ENwbddxpr9B34zuL50Luhf0U/hsgYejr0Nfhs8WOjx2
Hp/9Gj4r4Onoy/hfk/0BXtP6hHQA6QKSMZY1/qzJrh4ZZFlk/RXO5655+jje
aJKX7zWoHwcvX3eq51DfwWtN9id4zvUrbWqyL8FrVM+SvibdZ56jjbHv1SZv
Y5++Jf1CWDkY/1j/On50/ch4ynrq+9HF6z2uD0M/ETaNToVPm+wXwq7B/Mf+
1wegCxYjR7+QPiHdzM45eDj6BXS9eo3pL/plfJ5bE5/neuLz3NSh7BNyLvea
xv/VH4Rd4TWPp0oTo43R0Ghp2/uTpY+pP7WTGhut7dTYd1o7/QG+u11Sfg/+
D/NLy7/w9/IPrig/gPV/XokLa31/XfmBeIQ296Z/yPfFX5cfgd/giq78GT8R
f8/lXfmzD8sfcG75a14tP4E5z81r5U/gNTq//BL8FY7tsvKr8K+Yu88Pyn/g
2C4qP8Eu7dQy3y99it/AvovLP/FUK7UgmtCx8bjs1E5tdFvpmfwXvJFXl5/i
w1ZqkTTJnwzlegN/Aw/EyFrv+E/5Iaw/bGil1rm69FR65vEx3ynGd+P318b2
B/H8HlH67JOt1KpoVt+jx8RYOJQaFC3qpVZqOatKv6Wv0c5Wlr7KD+Kxv6r8
IvwcK+r7+bbyX5wT8+U8IbF9X2yf3ZU/48f4WSe7Q2U4bxpIfcL3q+mlR02L
8V5sH1Z6E33HdyffoZ7wfa6VWgRN4t+xPbaV2gMN4ulO6hu+zx1cetHe9X1r
ZulNk+r71uzSh+h/w+J/+0NsTxhKPY+2RmObFNtL6/vd6tLXDqjvR4eWXjS5
vq/NKX1pYSu1ratKb1tQ+suVpa+d2Ept6prSD39Y3xd/U/reiHZq3x+VfrxP
O7XkI0vPm9dObe+m0qMPjDE/5sNi/D6Od//Y/tRzG9sHtFPjpnXTwGnh1que
L3+Q9bOhdmqrh5Ved3/pn4eWnrek9IbrSg+l582P+bAYWzqpBy6iR8Z4J7aP
aqWWR9N7P7aPbKU2R6PbHtsPxva2mH+79Hnra7w6PDu7W0+kMca+G0v/18Go
i/GZGLuOSf8vPxv/2pPlPzbnaeMP5rfidXObf5WfkJePH46/kN9uYsz3jvFY
bC8ejOMfzA6sSeU3dl88gfzNR8e+owaT6Y7tviDm8wez8wu/nd/uueHxmMa4
NW5/ofdnzNcPT//g9+O2xwwm4x1vnb/QPr9zS/kfHRvP3j9je95gcvsx3b9W
fnBeO547fupDBpOTj/GP9X9D7B+KfRO60i94ROw7fDAZ9lj2J8d8yWB2fun+
Whrz0wazU0y3mE7El8pPZb2Wn5z+Nqcr/aZX1Posz9Od5d+eVXrXs+X3dmz8
gfzds+O+Zw0m0//L5Zc7NPbN8zfK3+hYPQePlp91blfehp+O33VO6XHPl3/c
ffub/OKr4jVxY7x+Pi49/vJaX3aMd5Rf8sVab+Zv3FD+M544681j+5KXzePP
6/+72L81bvtWjEfi9qtje8vw/NnDvekR4xXDs8b736sv+eEyBbIF/HBXl/6o
S5Rf8fqu7PzU/fmnMckK4SnWL8yPRy/k591RfrzrSp/UzcmPSI/kL+RX5F80
p2fqCr2+nX5s+uja+P12X/K7ZRhkGVa20/vN7/1A+TXN+b35Qyf2Jc9XpkG2
YUpf8k9lJmQnpvclL5SnnrdeJkM2g4d4YV/6SV+o9Xl+1P36km8q4yDrcFmt
33tO+Gn5izfEfOPw9AvLgMiC8OQe3Zf+VcfGX85fym9q7n98KLbH9yUfXWZD
doMf+ZXYt2l4+o1lTmRPeKCP60t/sr/lNp/7leM18ltrC7Xeszj23xPnut32
jNfMUHo86Gc8+fpA9WfzcvCg86KvaOXayeZar7H+ckfMj6ehDaWHnJecx0Q/
NU8ZbxnPt35vHi1eLR55fc9be/P9xgPBC7GslWsp1lS+MpTrNa4dW2Jc2koP
Oi+6jmh93cvayejB5lkZ49x2Mm+wbq7vTY87rztPiH5t/dKy6Twyi8akJ583
n16o3/uyWi95q9an9GVb6+Wh0S9+TjsZQdhAq3rTg8aL5j71VfOc8Z7x/OuX
1n+qO5VnV99tz5j0ZvDA8MLIUMhS8JDq2+XZ4d2RcdC3yjPDOyOToI/143Zm
LGUr9a/y9FiblsHQP8tzx3vnmPV7y2DIYvC46rcdPSa9GTwuvC6PxGP88FCu
2Vq7PX1MZgV48nnzZSxkLXiG9fHqj+Vl4YnhjZk2Jr01MhCyEFPGZP5VxkTW
RH+2LIPMh+zH7a38bO0z9rSh7DvnNZFhkGW4rZVaKk31wNh/ZTvPuZ+fa50P
W7l2eEitX57VTqYTltM11k5auTb4bq0X/h8RYD/S
           "]], 
          Polygon3DBox[CompressedData["
1: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
S+E7D98g2smuNqFawnPKA1PtfOmcHdYbDt9LtLtjfzdQ6vbmYegS1m5jrOXb
rZWXRy3+URx0GT8fYY0i+GIO4+Ndnqr6lOpUEeYb6eK0dszZPtXuE90re3RP
MW8O7ZqqZdHuBJ1M/xSQiPznWMv6rtajmk+JOz/fqA6gtyJodZdhrj6juonq
J2vcvbIXvpPw5QXt/dNbV+izmE+xn/ID5QkL0b+MNT3mt1i6D3Y0C1muo5yn
h8u39a7p3tf9rzqK6im6B+ui56Oqs6DDPlfzUr1LdS/FdorxospNkJHlt32p
/an84hhnIp6xG9wdp7dY77Xe7XHoUg5dvoOexZZzIJP1yUi3+6M/a3QIOoX/
leE7A70KzzUwT36lr0LIag41wAz6qrlah6faguI92jEuRr7JuFtRq92pnhcH
baH4yNXuVM+rGbB4/Qlwr6vn3RWwuO8pMBE5FZF3GvqLYnDQPWjx3KyovfV6
8xVXv+PiykPYHcQvb9Ef52qaldGtSprtBe2Jzq4+0CFouYBygknMt5z5/x6w
eoHqBnOcjDeDdm/r/ta7WYkz7YtYrKiYcRx+K+aeLAzb+6h38h7G5Lm3VLG2
Yu4xzLGYOXrQHgG+cXVO1ThV65wFb6yrg92GvhXTLE89wpmJRC3uUPyxhHmq
uzOl9dM6jqI/H75PoUF4Q1GrPaoGqXrwF8z1z4C9y3qfU9G/GnZEIlYfftnV
UVfB9y/VNhmfG7UaWL57/1XnUb1nJHyL4Ovqaq2quU5NtVzxNVcbVY10LH1L
6OurO0NvGT76KGzvpt5PxReKM+5W/MQciUGLffXGVlYugf2JaVaDUS3mLOu7
n/X1+S13VA55weUSyrEUwyiW0bvUE9uaqhaAP+5Ddpuo5f3K//MVo3LOcn2W
1yi/2Ux7JHI2+iwWVkysumQ2ujwRsnxeef06F48U+SzuVfzbBJmHq3MP8X4k
KF5KtvxAeUKB4iLsHh22Gq9qvePxy1L8khWw+pfqYAvcGZsLra/6MP/rQXuq
tp1qMYJihceQeQZ5b4Qtj1A+MYr2avpGhG0vltD+LGx5Q1MX9yv+b4k/+uCX
FtB1fH/i3mLlDcofcly9ewLzLWP+PNp/AYCOzMc=
           "]]}],
        Lighting->"Neutral"]}}, {}, {}, {}, {}}, {{
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1OWaVmUABdCNDN3dMXR3d3cO3TB0zdDd3VeiYEso2NIoaQAK3ohrHn+s
75zvOf/evfdbWFxaVFIuyRw/H3iWvS/gI8r7s4hrVPBxCZ9QqXyyjM+oUpCs
4AuqVUhW8RU1KiaruUGtSslablGncrKeb6hXJdnIHRpUTTbzHY2qJVv5gSbV
k1J+olmNZDu/0KJmspN7tKqV7OYBhbWTvTyibZ1kP09oXzc5yG90rJcc5hmd
6ydHeUHXBslxXtG9YXKSP+jZKDnNX/RunJzlDX2bJOf5m/5Nk4u8Y2Cz5DL/
Mrh5MoShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmU8Qc5jKP+Sxg
IYtYzBKWsozlrGAlqyhmNWtYyzrWs4GNbGIzW9hKCaVsYzs72MkudrOHvexj
Pwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFQbx3vpcYwD/O/QL9eCuP
c/ThtZzO0Is/5XeKHvwu1xN046W8j9GF53pwhE481Y9DdOBXvTlAOx7r0z7a
8FDP9tCa+/q3i5bc1csdNOdnfd1GU37U4xIa871+b6Eh3+r9Jupz2x42UJev
7WQdtblpP2uoyXW7KqY6X9rbSqryuR0upzKf2udSKvKx3S6mgKv2vLBs73xo
5/OZx9yye4AiZjOLmcxgOtOYyhQmM4mJTGA84xjLGEYzipGMYDjDGMoQBjOI
gQygP/3oSx9604ue9KA73ehKFzrTiY50oD3taEsbCmlNK1rSApWJqkRFohpR
iahCVCCij8gj6og4oo1II8qIMKKLyCKqiCiiiUgiioggjj4FZXdm/r9H/wPI
e47R
        "],
        VertexColors->None]}}, {
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl1GdslWUYgOGXJeCiVQKCBaV20pgASuIAUWSEgCEaQ0upZQkGVCpLoQUJ
dmBZtmUEVOhgqAha0ZYRVmmBylDBaK2AIDgY8psRYry++OM+1/ec8++8z/v1
mJDz0rQWIYQ8H7MTQyiJC2Ept3AJP+NifsJifsqNbOQGHmEVD7GSh7mLF7mT
v3MHL/AXtu8WQhPv5C325Q0+xut8nF2SQhjPBziWnTmOfVjI3ixiBncxnbuZ
x2vM5VXO5T/8kA92D2Et49jAdNYzg1dYysssY0xyCMfYgcc5kPc/FMKzjOUA
3sdSzuNB1rOODbzKVg+HcE9KCP3YhzPZm7P4IsuZwyNcxsv8nLE9QviWT/Jv
jmG+CpSYGkI1h/FPdosPobtWmbNYqUOeq7hZ7R8J4S69oJFapGLtV51uam9P
58DbSk0IIU2jNUZLlJhmH7hcX2mAeTtrdFpn1cq5LfB9a96hVJWbe7KCaXxU
g1VjHsJaDuUwjdcJ8wR+x4n8nq/yB07iSU7mKb7GHzmFP/F1NvFNNjOHp/kW
z3A6z3IGf+NMnuMsnmd2tM98hUc5lsc4jsc5kNV8jtv5PL/mIH7DZH7EJK5j
CtezJeexBd9ls/8qk03M4q/M5pd8ml+wP6v5DBcznsVMYAZvO690/stkNjMp
Ogum8AxvOMvdvM493McS7mUZiziVhXyDIziIwzmEbRnLNuzIduzECjtVb79G
s4wZXMk4TuUfdnIotzGeW5nA99iamfzLTj/BRsZwCy/Z/aU8zGlcz481Xb3M
T/FutmRQnTt2wB3L5RyVeJ7NGN2ro+5so0q0XKP0srqqi9a4552je+/dcEk7
VasC5auX3xcyW1nqZM6M3j/Rb2qntvrZubbhee+2c6qN9os10d6xQfWqMB9k
OQ9wszbpffNGLuIGFrGKhaxkQXSPmB/tFRdGe8YFXMv5XM08rmIuV3IuV3AO
y/gOS/k2P4j7/z3/H7OG9cg=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1GtsjXccwPF/R1ncGs0qy1y6aovZELGNGJuRJlaXaKXWnpYlvGnYEAuJ
0KWMqZgWlbi1LruwZnVLScepoWvr7hVm3SW2jGLCGySbuXyeePE9n/yec96c
5/n9n7SZ83LnJoQQPvWxNDOEzb1C2MiD3MADXM/9XMd9rOBelvN7rmUtv+N5
7uE57uYZfsuzPMY2NvAG4/ybR3mdv7Jr7xBa2Zm/sAv/5wg+4tv8l8PZs18I
M/kKZ/EtruabXMVhLGOMcRawgSW8y6W8x2qm9gmhir25jX3YwgI2M8Y7rOQ/
3Mjk/iFcYHdeZBZ7pIYwji/xfaawkku4gSX8ic28w8RXQ0gaEMI77MbRHMaF
zOVOzudplvM2a5mc5p5yJG+yiImvhbCS+3VQ2eY2zmFq3xAKNUNfq8W1b1ij
TunuuyYrR2VaoxOqHBhCI5v0SE80MCOEQYrpqe+LOENrVaE6jXk9hEOs12/6
yPwHrynR8ys1d+QyvshOekO7zIP5FYdwqMar3pzNHziBRziRRzmJcU5mjop1
yTybV/gxr3IuW/khTzCPjcxnEwvYzBhbWMhTLIr2mO9Ge87R0Tnge9G54Jjo
vDCdm9iXW5jBrcxkFZ/674v5hEsYXC/hFXM+L7OQVzmdezmStRzFVUzlF0xj
GdM5jf95Dnl8zEz+zAy28oFnVs/7PMKHjLOB5YxzPVewmJ9zDrM5lh8wi+3Z
jS8wmR2Ywh126KR92s4mxljJnizmX3Ywi39yPPcxncvYjgW8boeH8xSTWMM2
u76GzfyE1ZzCBZynEepsTuBtZ6nRmTquxVqkCtcWMElddCY606rQl8rTVDU6
zzl8WSm65Z1wQ/U6rGm+r+NylWq6CpXiej6Haogeep6D2EHtddncjpeYwN+j
d5wORXvIumgveVLHtd38I6t5jFVs4LZoz7k12n/ujH6r5dFesTTaM34W7V+v
5+/xZ6NI8ks=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1HtsjWccwPGHiWTUZakwUnUOm80lJi7VImKZ4L/KYe2ExiU2kZhLFpf4
g42RaOcWaxG3yHSdnnWzzqXdtHXvWIa1rokR6lYyYSwLVmefk/3xPZ/83vfN
Sd73fZ43On1ubE6zEMJMPxvfDOHHtBC+Yx3L+Du/5TnGeZal/I17eIZH+ICH
eZ81vMdqNvI6X+sawjW25x9sy6tsxwSH8SWz2MSh7NozhBlM44fM5Bccwnxm
sIB5rOFkVnESq7mMj7iUj7mTkfQQdjDKU8zjL5zEWk7mQxbyTxaxw1vum6k8
x7Hs3C2E0ezEUXydhVzKL7mMx3mSD9ki4v/Yku3fDmEEB3Ehx3MX5/M01/EB
y5gaDeFXDmcj89iyVwir2JPlvJM8p9nmSHfXaKqKVetYCeNK6eF5a5xiytfH
vT1TrtUxnVSTEur7hnflfD/2V55CnxCmcJrWa4MO6F3HK1ip65pqvpG8jjd5
S696r8vNrbmCKcl1oP76yjyAuzmQxRzErzmYGcrWIfM4VjHGao5nDSfwCHN4
jJks4RB+wyzu4VCWchjjHM4yduNGprOQERYxys184R4W8DkX8V8uZhOXsJ45
rGMuz3Mi48xkKbP4OdO4gulcyUjyPviP5x3jM07gC/bgRXbnZT7xbvbzL1aw
kgWs4Br+xHVczpn8jLM4liM5hu+xGVOYsDba8RVzKreba6ybbTzKXG5gF37E
zpzFBmtuNOOM8lM25wdssFYH8wTbsIS3rel8HudsbmU25/EdZjFDCXum0V45
zCot0ida69g8tlEr1dqLJ7RGBbpnv65mTNnqmNy7umvv39Zi5xu4T+V637w3
+Z1IfiM0Ubnq4HgO+6mv/vb++/Ape7G5gurNCd+3Ojbxii6p3HyRP/AC9/I8
v2c9f1altpgPcjMPcBP3s4j7WMjytP+/y/8BWRzuQw==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1FlsjWkcwOG3biwTVBdFW1o1rSUhxBJMCcGESBltzYWkqIZJJiqWkAjR
CoNSrWWYcENvlASZISSIUKqqtlpuxVJLbK2WKmaaeU5c/M6T/3uSk/N93/t+
qfnL5hRGhRDm+aj6MYR3SSE8Y3xyCE8ZxyeM4WPGskN6CBMYxZ8YmMkU/sZ+
XMy+XMLxLOM4lnIsd3IBqzifl5jHyyxmM4vYwgoO6BvCYfbnIaaxjnm8wfls
4n428i8mZIRwnz1Zz3je4wwm9QthOvvwZyZyP4u4j8WsZg2b2DHF77ITewwM
YSJHcQ1zWMGVrOUK1rGcb3mCcanugzL12pzHjoNC2MIMnuIrvdFSc2p/16SF
qtR1a8d4XN3SXNvgEKIZo2zlqlRlqtZe39ewVmGAZ6VhemR9OEdoQWR9SAj5
LNBupZv38E+d02TzeV7QM+Wbn3MRX/ClutoXm8zduZnR/IM9uIUx3MpYbmMc
SxjP7ezJHUxgKXtxJ3uzjH1YzkTuYhJ3M5l7+dl/WMFWrmQbV/ELV/Mus3mH
OaxnLis5kkc4mkc5hsXszSImciOTOZuf3L9ZbOUvbGMqHzCFD9nknv/DRp7m
B57hWZbwDHewiAXcwMWcykxO4URO4yS2e+Zd+B+7MliP5kHzRfviAC9xLsvZ
iwVM4BI+tqemRPYPU7iBUfyVT+3FuWzgaF5jN1byhb3boCv63XyAWSzkUI7h
SLU7I6+cjYu8oFVarlJrhfxBnTUhco541RmsUom2araydNm5nclYxagh8g7S
GutP+LdOKsd8nOu1TsPMa5kb+U6x5mwO1kC12CcZbGY6273j/lW9+Rvv8ivv
8Atvs423+Jk32co6fuINfmQtW3idzazhB15jE6vZyKt8zyt8m/T9Pfs/oBXf
4A==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1GtoTnEcwPE/Y80lGZm5PHt2MRuiGF4xlyllZswl79hmLjNGKYQp5FLE
hG28HEokwgvJdXLdJJfXyH03dqGE8llefM+n3+l5Tp3/Of+TUlResL5bCCHX
4UN6CIMjIcSODGEme3IGe3AaYzidI1jGNK5lKtcwhaXM5lFO5RFOYSWLWMdC
3uce/uRudnIXf/AMM5JCOM101nIkG7ic9SxkB0+xnTVs40kOyQjhFRP5mvMY
jYYwlxHmMok13MVq7uZDPuIDPmY7eyW7LntzQKb752Ru4WLWchPreZQtrGQr
B6WEkKB6czabuIxxo0LYz0xeZaOalZpqbVWkFbqgx35zkZcVnxbCQC3S7NEh
LOFSHVGlHum480/4VN1HhHDLHMOeytJEFav7mBBKuFLHlGE+wUxWsVo3lWO+
xVm8zTv6ohXmryxhY9d12MRVbOZqtnANW1nKb1zL7yxjG9exnevZwXJ2cgN/
cCPrmc+nnM8GLuAzFvA0x7OWE3im6155lpNYwcHcwUTu5FDOY4f1yWMnk/ic
Eb5glC/ZYi0vsZmX2corvMb9vMoD3MFCbmcxK1jCHE7hTGbzt2cZy1+M4x/2
YQ1veN7VvMnFPMRFPMwEFnMQS/jGO5PDc4yygqHrf3znXZvIOmbxPvuyj957
Nw+Y77GUNczjOo7lJGbprz3wWzd0XeUq00H7oZRxilWdPXZX/Zy/zX3aqzzl
6o59OYfx6q8qcz++tdff6KIuaKHz57lNWzXOvIVjuZkFWqAB5vmMZz7Tu75J
avP9SuN3pvIbU9jKZLYwymYmsYkRNnI4v3IYv3AoP3MIPzGRH5kQ+f+d/Aex
98/D
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1Edsj2EcwPEHpVoz0ZLYVaPLiAQJB1qr0yghXEhr1agtqXGR1o6DUntG
KAc1QkTs0VZpceGiiIvEiD0j4SMO3/eT3/P+L+/7Ps8/Lm9hbmGDEMIQl8ie
IYzoFEIiFzOBi9iLC9mTC9iDhUxjGVO5g8NYyqHczpms4gzeYT4ruZ4/uY7f
WcIfPM6EziEcYyIfcgYfMI91zOc3HuBX7uMX7meHXiE8Zns+YS7ju4Qwjt04
ll2ZwzjuZTH3sIR3WcNq3uNnNusaQkyCZ2QbpnEQiziJR7mctSzle1awXZw1
DuVbTmdUYggbeV4XlGV+x/hu3qnyNVMVqnHvNO/xLM8rJj6EWE1WelIIUzhV
21RoLuUO3VetIrqHcM16E0ZqgJ6bB3KQZqtRcghzGMECztVuJZr3MIl7mcx9
3K8bGmm+yVG8xdG8zXTeYQYrmckqZrGa2bzLHNZwDA8yhQfYm4fYh4fZl0fY
jyvZhkWM4SrGcjXbMosfPF8mPzKbn9iBdWzPB+zIR3zjHZ3ia1bwLIt5hut4
juu5ktNYxOlcxTymcjCHcQi/+0YN+ZUR/MFI/mIUd/KS71nGy5zALczlVsYw
j8/siVTWM43l7Mw1/GMvTeQL9udNRvMYX9p7G3iDBdzFbM7nPPVXtPm3vf1L
l3RRCzRPm+33OdzEWWysCF13lq6qhfUrLFGxXjl3a5mhdLX69xuVWW/OZ850
vVaYn/KkTijXXM7xPP7vvpYrxbyMyVzKJC7hGOWotTmbrZjFlsxkC2awOdPZ
jKMZzVGM4kg25fBO///n/gKJbr02
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1FdsTXEcwPE/grbUjCJpa7dGH3iRlqAJWnuHByMIHUZra/BgxGpfq7Vq
114JMUKCNzrMlyoJfTESVWLP+Nx4+N5PfufenHvPOf//7TY/f0peoxBCspfh
SSHsTgghl5XMYQWzeZdZvMci/mEhf3Mnf3IHf/E0UxJDOMW+PMl+fMJsPuZC
PmIWv/Mgv/EQE5NDqGUCaxjPp5zO5C4hTGMSp7InJ7MXy7iN+7mdlaxiBav5
hS27hvCZsezQ2zUzjeuYyvWcwXKu4X0W8wMvslM3x5jOes5joYrUp08IV/le
DUrq7vcqS9m6pCqfucxqXuF1xfVw3r4hdGRnzdQsFSvf8RKW6r5KzA/4UFE9
Q7htjuYdxrCFUvXSnMY6DuJgLVbTfiEsYTMuZXPmMYr5jOYyxnB55HxcwZZc
yViuYiuuZmuuYRuuZVsWsB0z+c73Z7Ceo/ieo9kQuV5WMI6V7MQqdmY137jG
M3zNs3zLc7zAzTzPLbzIrSzgbK7lHA7lQA5hKocxjZ/c87/u/0cG82c24Vc2
5S5e835x5PlwMgs5iUVsz7lsx3l87lmn8wTjeZwJ3MC/1shUvuAA3mE0y1ln
TW3nbeawlCVapJTI59lfP6zd77qqK8pVtnZaxwu4g/PZRI01xBx40565oS3a
pFf210ZmKkO3zCPZQjHaZY5mMaP4zF6u1WrzU65iDY+rXJPMxziRRzmBRzie
hzkusp85NrK/OYYHOJplHMX9zOQ+ZnAvR3IPR7A04f//0j/JB7fX
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1FdsjWEcwOH32BFqz4YqQhGtCyKhSocLkZA0EWKUVERrVO0Lo9wUiS21
LghiFldG28SILake2iKxIqpmjLogZj3i4nee/M938uXL977vic9ekJkXCSF0
8jGnTwh3uoWwlQ26h7CFEW5m4Cb+cX0j63mag3x/ikk8yYEsZiIfcA7vM4fV
zOVPHuIPHuB3HmR83xCesgcfM45POJkD4kKYxP6cyAROYD/u53ru4wbeYQXL
GeU3xvQI4StbsVNCCBnsyNEcxpWcxCNczih3so5F/MIu8SF0VdScyo/MZvN+
3glLVKrPqlNCT8+nHOXqvCr8toRRlvGCOvdy7/7uzVhN0xhzFqdrt/LNe7hX
97TLXPnvGqtYrRa9Q7hibsmrjOE1tmJrJeuFeQRrmMKXHMlajuIrpvI10/iG
6XzLDL7jaL5nW15nG95gO95ke95iB97mS892lDU8xloe5yue4EkWsJhreIpr
uZSTuYRTuIxTOZyDOYxDmMyh/ORd/vBeP/AXP7OeXxhxfQfPmbf/WwuO53qO
4wa2YRZbczofW8MUPuJIHmYsV/C3tc/kMw7iJSbxMpuxqZ7bM4XmS5zNIo5l
LnOUpER9s0e/6qzOaJZmap39OoOFzGJE9c5DsvkPy1SqFuYSFmi1ap2nVcxQ
ui6a03iBqWyqJtphbsztbMRtbMiHzvYDLTbf5yJWcyGrmM9KLuA95vEu5zPK
eazgXJZ3+/+/8hddcrix
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl09tPz2EcwPHHjQttDneEUOaQ5JBDSZgLtnDBBVKNYmwi4kaJG2JjNjab
oQi/DtzQySmy+QMoGx1QOVwY5kIaLeH1m4v3Xvt89+z73Z7v80zJ37ehcFgI
4a9uTwthflwIXSxkJ/eygwVs5x7+ZQ3/sJpDjPA3qzh1egi9TGA349nDrZw7
KYRczmEOk5nNJGZxNq/xFCt5ms/Zymds4wBHTw7hF8dw3IwQVnEsVzOdR7iF
NcxiLQ+xlRfYxzqOn+IZV3K7dihmZghn+FDN+q4+JcaHMEu7VaBmtVr7iG1s
4Qs+4VNNSAghNjGEiYzTNmWa87iG+dyuyyoyl/MAK3hFL3XR/IqX2B5dyw6W
s5MV7Iqu52te5RtW8i2vsZvX2cMb7GWE71jF96xmLQ+zhqW8ySO8xaMs4kbu
5yYe4GYeZBZTOY+LOZ9pTOFne9FvXz7xJ79wgF85yG8c4jk28iybuI4nuJYn
OYo5HMlcdvonS9nBDEYYyxIO+qfF/M31fMtktnA4I+xxBsrYwsc6r0zzLu7U
bCWp35n7oQbVK09bVeb85fI4s3mMWRyK3gWlmwd5T3cVY27iCDayVIf10b0p
4QcWc4WW65F5GZuZwYdcygdM530uib6fadFvMJVNXMxGLmIDF7KeC1jHFN7h
vLj/9/4fsi6xmg==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl01tMj2EcwPEn5LDlhiu0TqYSOVU2cedGjknMqhmtcuqAzi4My524sJk7
9I8pp/51KcPY3EoOFxKVw8yNJVRufJqL7z77vXv37n3e53mTS2sKqmNCCN/1
LjWEYwkhxKaFcJczeIfTeZvT2MkY3mJgB9P5iWkcYSqHuITDLGNOYgilzOYB
ZnE/V3Mf17CdFxjhebaxlX18yRfs51/OSwphkvO5KD2ETVzIPG7gKZawg8Xs
ZDP7eIVj7GZ8smvcyHJVKG6p92CvHmpMv7Q8JYRMVeqye6pYrcfqNz/hKz7l
az7jcyUu9o4ZISQxnslMUZm2msu5jRXczoPcwUM8rKuqNV9jHa+znm1sYISN
bGcTb7CZN3mSR5nPI9zJShawirtYzULWcDezmcksrmAOV3ItV/GzNf2wvhGO
8gvH+JW/+Y3jU9+QUbaymxfZwy1s4Wae41wWMY7FfOtb5/IN1zPCBWzihL1q
5CTzOcDMqX1iLCMctLct7OUDXVKeuZxlWqYM/XSWRhVVlx45T/dZoiKdNe/l
Ge7haRZy0pmeUK55nOv4hz3q1hxzlLPZxVlTz+VM3mOTGjXsf2vgEOv5kXX8
wFoO8gTf8zgHWJPw/z/9BwDomcQ=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0z9IlGEcwPEnaCraChry9Dz1/np3aulZtAVZQYUR1VCDUkqD2lBDVFJu
FfRniVahGjILmoqwqaigRU8rQvpDaZmpl2kNBX2k4cuH3/sOz8PzPm+0rbu1
a1kIYUTJeAgTkRCOclN5CJ3cyA428wgLPMxGtrOJt3iFN3mJN3iZRY5xhEUO
c5R/uboihD9cw7JECNu5jju4mb08xNs8yAGe5DCvc4H3WRb1jFvYoU6tStoH
h/RYi/qlbGUIXd7lmFe3rpl7eExPNGZ+yld8xtd8zjd8wZeKxaybCqGKEVaz
nDWsYJxRJljJJGNMsYppVjPDGtYyziwTzDHJPFOsY5r1zPCdPUzZzzin+Z4z
/MBZfmSJnzjPCxzked7lRd5jC89yK89xG/u4kvu5ggc46uwKLLKZ/VzLE0vn
6uyP8zd38S0zfMTl7Oe4b9XHh3ygq2oxt7NNSSVUcjfmNOlezHJQdzRkHuA+
7VWveQ/PsJWnuZunuJOL7vCCCuafbOI8G/mDG1jies6xYWk91nOGdfzOPKeZ
4zdmOcVafmWGX5jmJFP8HPn/H/0DOuiIvw==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0rlPlEEYwOFRG/0HoHPFQgQqNZFGwYPlRoOFlqKFCVFZ5fIg4SpQOvBI
PBrsOKQ3oInWElFXWFhWVFCECNoBNurzxeKXJ28xX+abmZzziVMNW0II46rP
DeFwLIQR3ucw73GIdzjIu0xxltNMcYoz/MusXSH8YTZje0Oo5k7WsJidLGIX
z3KUbUzyMdf5iBvRuhzfUNIc5y/Ws0/9eqlX2tRv7dsdQiIvhP08oEY9MDfx
IZvZotdKmyc4xzfMcJIf+ZbzfMdPfM/PTPILP3CBU1zkNL8yxW+c4RJn+Z1p
LnOOK8zwB+e5xlscZg9HeJtP2ctRxtnOEnawlJ3cwdPczjPR/pzBwWi/LOQT
ZnGA2dH/c90ZnmCaBRxjPse5jVuVcfbd5me8wH726ZzqlKs9+unO17Tkvlej
dxO9Gb0wD/E5B1mrk2oz1/Amq3mDVbzOSl5jBVtZzhaWsZmlbGKcjSzhVR7n
FR5jgkfZwCO8zGJeYhEv8lDs/zv/B8AehMA=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0r9L1HEcx/H3BSXtBtbinRbpns2pYIsa9GPVEFwaLBAs887y16pQYKXn
nedvQc3KH1lb/gMFCnq2NphLSxDl4CMcnjx48Z2+n88n1fbwdkciIvJauhrx
qjyiyO/cZ5F7POCZqohLyYgEyxi8yBSbmeQt1rKfNzjA+1xhhjtMc5dZ/uEa
k6mIBt3UL/sBX+ilvmhbf9VYHfGPx7pWEfHIruF1dWnMfsxxPmGW3ZzgU+bY
wzzTnGSGBfZyis84zeecYR9n2c85DnCeg1zgEBdZxx7WMs16ZniOd3iWd1nC
e/z2/x/4lTXMs5Q5XmAnfzuLJu6xkfus5hYTLPDAGRa1qXZ7hMNqVYuu6LLO
+1bJI3f5Uz/c6yHnNafP9iw/cYZbnOZHTnGTBW5wkuvMc405fuAE3zPLdxzn
Ksf4lm+4wtdc5mj56bs7AVCCbP0=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0bkv5GEYwPFn3PUqHWNsYbSrcC5CI9lYTL1b7LSEuI+CbGK71dHhX6Cx
/AG7LY2siGMYZ09D4viI4ptPnuTN75f3fVLZkcxwIiIWdFQXcZqMKElHVNdE
FLOKRaxgISv5kf2s5QC7ucgu/mKWG/zBTc7zP9f5wDU+MpXyDe2bezioIS1r
RX/1T0/qrY945le+MGojGjVqbuIYmznOFk6wlZNs4xQ/c5rtnGEHZ9nJORaw
jwn2s5ADLGKGe/77ibts4Bo/cJXlHOOdu4zynl94wDS3WccdBl/c/1A/zX+4
pSX91nd9e3vftzdSmTM1LGWSt3Z0o0v7uuYFr5jnJc95wTPmmeM5T3nGE+Z4
zJPk+95fAaixUaA=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0DdSglEYhtGPDQDuAEZBgqLuwTBaAopCB7aCO9DKgL2x0C0Yl2BALQ3b
0NYwnhmLZ868t7j3nz/b7lW7iYhoaKQQUctEzHKHM9ziNLe5ynN2eMENvvGM
XzzlN4ez7tKLPc81dbWvZDHigIe6Vcm+Y5n3HOMDxzlghY+c4BMn+cwpHjPF
I6Z5wiGu88PbPX5yga/M85o53vDXt/7oXZv2FS+1p77mnO2ypabK9gpLXGaR
DRa4xFEuMs86c6xm/v/rHyexNhI=
        "],
        VertexColors->None]}}, {}, {}}},
   VertexColors->CompressedData["
1:eJzsvflXjW///h8SkqlkKCRzg5IhUTqMlSRSKiFDKqIBFZIpmWUsZGpCISmh
Oc1z7b2bp117HmoTDRTKd7/+gPO9Puv7udf9cb/v6ydrPax1Xdf5fB7H8bzO
Vl2n+l7PLc6DZWRkWFoyMkOk/34zSzd6otUC/bdtsRPq08D9cyNmM5MFilOc
4hSnOMUpTnGKU5ziFKc4xSlOcYpTnOIUpzjFKU5xilOc4hSnOMUpTnGKU5zi
FKc4xSlOcYpTnOIUpzjFKU5xilOc4hSnOMUpTnGKU5ziFKc4xSlOcYpTnOIU
pzjFKU5xilOc4hSnOMUpTnGKU5ziFKc4xSlOcYpTnOIUpzjFKU5xilOc4hSn
OMUpTnGKU5ziFKc4xSlOcYpTnOIUpzjFKU5xilOc4hSnOMUpTnGKU5ziFKc4
xSlOcYpTnOIUpzjFKU5xilOc4hSnOMUpTnGKU5zi//f84ik3rcVFTGjcshrX
+TkNV5+PUZQMY2NCzvrHNWHNWB2x6oiqbjrO2ifLdl5k46jaohcNI5uQHHpt
8JdL6VhglXR34mIOpqxPWqa+tgG5TU9DpkvSodB3M+7ADw7uzD8R7tNch96C
98LFhhnoiQ1RvH2bi7QHn2bUttVi5oO0OhuvDKgxC/Sm93GhtbLxoGNCLU7b
fD76wz8Dqwr/hGaP4xE56Tqk+5Kek7QuUh1Idfvb+ktxilOc4hT/38G/bxk7
/b6YiaMF1uyHgjS8H3qI+biPhZlfpiQqLWlGyTTHXcEm6VBzNr6R+J6N+3qj
Ht0dU48XARsyfuhmoJqffDTmJBde0Ro/et2rcDB8XfyBnCww2hfeuv6Gj721
7y9YGlaC53UnZ4d8PsIz4w6HJgngqv7K9P1RBqrnL7yaUFWIb7ojp+ftE2Li
uYDBqRw6Yn/k/KxoKMZL5AuucoTgGvzc+OcIHYnfFs1SOVAKnxdTXE+sESHl
zt3vF9Tp+Lzd3Hjd9TLcEexwmHdVhJjtWWuLh9NRy7pWXbutHF1rS1b+ihZh
rarti+3D6ChVL1LTDy5HbFV7xdA3ZE66Dum+pOckrYtUB1LdSHUm9YXUR1Lf
/zZ9UpziFKc4xf9nzne5fEZ7TgvmmG7imTWk4dfijSHPW1mIrDj1fvGHZkwX
+F3Zr5mOxjlx04pPsTF9pu+bKcJaSAybT8w5nIHLA1r1yT+5WJxtO2xmSiXs
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
SDlGyj1STpJylZTDpNwm5TxpLvxt84vi/1re4jXH2Li5Dusi5ZVXGWbg2Os9
tJjbXOQtiKxnNNHQN4lxZW4lHS4adXsa5KTvk+/iJgWa0cHwHP5xGrcRIyRL
V6wQi7H+lFDJckklqjq9Bw0awcaNwb+H+GaJUDbC78r49Gq8NgxNsj/JxXem
zbbAWAF29g9irbxdB7dxN+oN5vBR/uaQ/Bcz6fu6Ve4I3bRGWBgt/rh5kQBd
/kOuprKl+bR40Pa4CS0wMBt9+ABPgHXieZ+Dz7VicpBKz4iPLGxeu6lirIsQ
Hoo5Vb4fm9Bwq8vbypOD9w0S+psXQhzL+BT58EM9Lmtq+PIVeWDOu/cqtkSI
WZtHcB7r1GJwwkXJihd8aB5Syxwk3Rfc2l5nu391NQoe7pYoThTiT7Hzek6k
EJcK5j+9lVCJ50rR43h7RLilcbfptbUQUallY3XvMZBht3uI7S0xBn+xcmzp
EyBFv+pc4ANp/bKsp17zboN/2d04dWvp+/2rnaKGDhom7I8/6G3RjlVZivzd
H/gICd6k1PdJum96PCbHg9OOss/Tj4S28qAwMWwkP6McOlvSxmCDBOWWo9+W
i7nwzl7HHd1ShiezR/8aHifBFtXIzzMGc+HU+PX+hJFlmHXm7uRP0v3g856D
Y658ZmN6Y8d8umYpRu+ZP0G2WYL7Iaeu7MxhYdCzsVeGm5ZgK42+Tka6D/WN
2nbb2LYVyVE1TYeOFCPC7s7s99J960TV7On2m5gYUzlNmRtbhKD5txwvpkvn
Ql6lV6R8E+gTfX5UFxfi/Nuuqst3JFBOG75ISVwPiV5kXXlXARwFj6PDD0lg
bGTBvf27FutXHB92f2EBZqpeHDpCuq4212Mb1MxqUNC+RN3xUj5yqya5TNSR
4PZPT944ehWODM0rqe3Kw1wtp7WMCRKsOsy7k/mwErZr2DQj/zx4ae1Wyhsm
wWGZiH1BbxkYnGMd8V0jD3ZWl6J3D7SDu2SpXOMUBsxi8tWff8+F/Gczffav
djC4ocsre+hQOnCzpl9E5qTrkO5Lek7Sukh1INWNVGdSX0h9JPWdpBOSrkg6
JOmWpHOSL0g+IvmO5FOSr0k5QMoNUs6QcomUY6TcI+UkKVdJOUzKbVLOk+bC
3za/KP6v5btj7W65+1bBP660Q+9ZFg72zXyhL/VDmZHk0ZvHNMhP50dtsavC
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
nTDc47/w+4Surqpzt29vx6+I5PenXvHxNLlqpgz1fULq+4T/y75PSNL5f9v3
CUm5R32fkOL/Tq7k8qbin+9UPwhvvfTPd6rtPVbrUecXUOcXUOcXUOcXUOcX
/PeeX0CaC3/b/KL4v4fPUb92alp3PeJWaSgk96ejxlT2yvv/Becb6u1jjh2v
ysKg1zLZ/5xTFi4c2/GMOt+QOt+QOt+QOt/wfzjfkJQb/+nnG5Jy/m+bRxT/
f8sZuttf/HMudof/8Kx/zsVebGkycmQvi3iONuncbdI53aRzvUnngJPODSed
M947waZ37YcGOHvtr9nQzEeG9fqe1zEcDKj1N/w2bMZcucfGCcECbKs2VMpp
YhHPPW/0rrjyksbCFiNlU4Z0//FFIa6IcaWJeK466Rx20rntpHPeSefCk86R
r1ies3SFSATZ/eZ3zy4SYveoZzcmz2Tg0F2ZUxpvxXjepH/DniuAcM0kvaoA
OvFc+0OLS7daMdugenaofbCcAIMtsjOcdtCw1NItlrO3HScyMvf2P+OD0ehg
6RpeAdzp1yuU7gfDyhZjvnQ/mL0v43DEkAocWRCZsa6/HTdHDpyICedh/0DQ
o7uB5bDo037P1pPAr3XcpPWzeRh/o4m9bHw5dg9btGPTLgk6ZN69yUrlYr7Z
qV9LEsug+XP9iCUXJMibt/cCew8Xrtf3HTDdW4aab5yxS6Mk0InsDQlQ5cJN
p/uz3owyCGo6mnjJElQkxwlfizioXv3xJ7+rFDUWoXR6vgSVzavOOpZw4BUv
H7axvhRK04UJGsXSeap4a9SFHA5WD/J7N5dB5qTrEO9LeE7Sukh1INWNVGdS
X0h9JPWdqBOCrkg6JOmWpHOSL0g+IvmO5FOSr0k5QMoNUs6QcomUY6TcI+Uk
KVdJOUzKbVLO/23ziOJ/Jz9TGbvkah8TvifzZ0/mpkHm0WpmQScLd4s9xRp9
VdhySYE/YkIm6KnpX2Yb8TEscJSPnycd20WuQW98SuHuFvn1ookIa0Z0NgWd
oEHhWkiEfmY1vLNu95m8F8P5uu2KGHM6atKuJ2/saETI7mHvgkViDGGcVej2
YGAK88vh84osvJD0m03bKcakXJ1C4xFV0HZ7d2rPWA46l7tYKkrfn19behhc
ZlejJc9queddLhQ3Pghdc12AYrsLQ33LaqF/eO0hXRoPN+x+yPnzeeAJA248
kZX62tPy3cMIPlQCk70adbhI9byiWz2/CSrsk5mu2wRIeWqX/PwqG6rTq39r
32bCuDAttb9cgIL5n/N3jWXhQr21jyOnFWsmXw58rCfE6RELfK/sZKKId6cp
fQob6j8W7VPxEaLg4CSFS0OaEK+z7IqSCQfnN53hR4ULIVM9W8O3vx6dPil6
P3dyofLi/2Pvz7+pfr/4f5xChVRoklkSIZlKhi1lqKSJSsYGDaLBVCGVBqWk
GaWQBiSUosypDBnOMc/jcc5xEFGKSJ99/oDrtb7W97u+6/l+fx6/3tZe1+N6
7H3f931d5zjl+zkK7zW7+H3lCufWwZ8VdmJz3bugupbuH4OcPaLTcyOvBug+
Ru/fH2ECc+dByeQCvL/c9eapvFoNC3jvDZ3Bff9gHn3X/4kN0nPdOhIOVgHr
yIsjE0vZELGyqTrsMRusl0Of7pNKqF/9ojS1iw1dPM4vn51gg92427cjvJWw
g2/Aru5mNwjV53e5W7CBL9dK77d7BTxmTvBrqHGgt+Plsgl5NsgJwNsZ3XQw
2ipSQHvBAbkAn0Pp3Szwtm9x+hdEh/tfjKOHBXpg5annMZqxLFjyYUeAoCkd
VokaLKPt6gGZAltVl4MsaJP8bnJCiA6yO5uXVET2QPI7r4K3OixIsTXfuSyd
BkWj6coHK3sgWP9gW4gICzZ4RG/NO0KD6+47h/+M9IB49Q5DxyEmzD5UwfHS
oYHS6QHL3lm9YKqSkPSwgwmRH17PVJ1Lg3tuS2Y3z+2F1zySN9a1MIFHbnEq
TZjMSeuQnkvaJ+m9SHkg5Y2UZ1JdSHUk1Z2kE5KuSDok6Zakc1JfkPqI1Hek
PiX1NckHSL5B8hmSL5F8jOR7JJ8k+SrJh0m+/V+bLxT/v4P3uM0XnZBuhciE
xwtbGjOhfO/RoA+d7eC+dlNxz846UDMzULLdlQ300rI8p68MCDZNTawxq4Ad
DYVdQl5FsF3I+8jra+grIzsq3sfhvSR1Hs/a5kqQEBAbm7aHAx+v+Ec97qbB
Zc/c56NTG+DGDPdrclN7oFv4gKVYBx1mhu9W1jZvheFFw2etMziw5vBtzp+N
lZAXWx6rrtgBT/jL94QkdcP25B+HL36tgiWOjTxjbZ0wcNqO97o/GzY/UplQ
iq0BjbDPmb9ndcHJgNiki0wm5Pk8VB/xrANaqK1sgCQTlCJ8tqs6dcHme277
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
nOIUpzjFKU5xilOc4hSnOMUpTnGKU5ziFKc4xSlOcYpTnOIUpzjFKU5xilOc
4hSnOMUpTnGKU5ziFKc4xSlOcYpTnOIUpzjFKU5xilOc4hSnOMUpTnGKU5zi
FKc4xSlOcYpTnOIUpzjFKU5xilOc4hSnOMUpTnGKU5ziFKc4xSlOcYpTnOIU
pzjFKU5xilOc4hSnOMUpTnGKU5ziFKc4xSlOcYpTnOIUpzjFKU5xilOc4hSn
OMUp/n8TL4yc4sbfXQUbxPfO95PMAc/LURoJa5mgnD6Nb2dXFfDcfvzzq24O
3DZdXNRkxoRgrT1nVzGrYK7uxNazGjlgN1GivAC51tSw+haMN9jZazxNKweE
r06jHUBu/W68wwrjVTqct7Utz4EZ1co5fMirPDeeOYLx53eHPV6F64s8EuT/
inyNi3lxF/LV0rzPazRz4Lvc82Jn5J8+lR62ZFfBZtGwE8/kcuDEbfE3G9Yx
QW/ek+5DQnRQHPWZHdlfCu06xoHvH3dDBrucxkG+R908dlpjKYgEbQ4cjOyG
6zsuPGHgOnF02j03qRwIGww9V4jv6yodPVaM8QO7H16SbCuF+WdjmvY8mnz8
ZPdJel/S/kl5I+WZVBdSHSerh4NJdcf58H3X3V7f+kIhBz78KJG/iu9rJPN3
Rwyuf7TKffiWWg6wl3RqZ5sygcd53Xgmqwp0/l7LeaWYAzST/IlCbrz6VnFJ
fG6scphiw6IcaDp16cp9fK73ypMDqZiHj1GHY2I6S8GiakNSMua5k6MW34Rc
XS+SZ0NzKdzuPuitgDzj1sbI58iLv6oZ5HeVgvjq8bRW5IdHr0vXI39He5bb
iPHPqh8OL0c+S9QoNQI57Wshs4JVCjOmLFovjHUJCNQbpiEfmzGxZWlrKXBk
fD9bYrzt++AljcjnX/uVEYTrxPArfV2KfNviBFcbYxqIyfG91FCsA5eNnW08
Uj2wf89I+EwjGnTNjI1Pla4D9nB4zG7kSSv2ZmkBDabZRJ8fkasD1kX+w2rI
fXyO3VyF8f/cWtlqMnUw69IVAev/wUnrTHafpPcl7Z+UN1KeSXUh1ZekB1Ld
SbqarD7L3vALTkfebHT2VcOKHKj3VdY2QZ3nnVU58BzXeT/7yzp5mRzgMUyN
Hsf9xI8MzvzGqII/lgVb8vRyoKvn/ruV5kwQMEmrTsB1znZ/l7bC9euNhkfe
4vrHMr8/TcP9L7Qw6tHE9+2b5yv9HPef9qh7y3vkndOe3+/vwDwcrVsZjfyN
ruKOWuQpz84+UmgphYftj411kcussC/uRZ5cmNOX1lAK645UXu1Bf5DdmbFh
K9aLNmd8jRfq5LLPZr0tWC+753/TBFEnrSUnSi+gTlKmXUjXQl7yqEotHPWQ
9Cc4sh/18H6XeeQvyR7YJiWgL4XxnuXKvu8x3ievoFUD4wOf0U9k4/o7+p8O
v5CtgznHk8IB+fb1Un8aMb4uMmprtUIdPDKmvxH7H5y0Dum5pH2S3peUH1Ie
SHkm1YtUX1IdSTqZrN6CpzZVnUSdl5Q4sO8q5cAoY63sVHxuisfUN6uwX5r+
CD8Sxn6x2Cny7gzGv1fknT+M65juXVE1gH4+bQXD7j1yuxn6t7jz60XCgkA1
nF9rzqpv34f7NIw7fYPLV7mkDXG5vU23PZe7j085VorcV+GG3Xv0h7i++Tq2
XB32n7lRiby17LVEDubNYcPq8LXIY74GexljXb7x6Nqtw7oEjA/TtmGeFy3y
s3yOXPJF/KIDWHebzc+U1iI/FBuh4Ib8Y19BbB7GLy94ucAS+bwXd3Ic1uA6
0c1vZJfWgaztXYN6rPvuVdKn46ZXgJfpyvCiJW1wJeiTNOcVBz4WvBVQQZ7A
WLb9hmIbfMkuGLdM4sAqLZUUXcEKEM812/JcpQ0MJe5FJiVywIhxt6wF4wvz
GQqblNrAecMinlxcR+tb7BFDjF9lUiSUjvEWIfs2xmP88zdz2O0zKsCxzE2i
QrkNTMLsHYaQO+5zXh+A6zwVSMhxwv1s9N59XBCfG627VvEJ8mvDRq3vkf/e
Jy3dj+tXCYVnO+M6LcYKt28vbYPNvIr3d/4PTlqH9FzSPknvRcoDKW+k/JPq
RaoLqe4k/ZD0RtIVSbck/ZP6hdQXk+1HHb6WWS7IjX9EnaMtzAGbep+VO5Ez
fEtOqSB/P/eDmQfGb1kgIByM/ODiViPuOTC1RrVQGs+Bnzf1nv+BPhaZl22Z
zD0f8m9Z4MQohe0aqkJ5uJ81D6bKyCLnXLg9tvpPKUTUMY5+iEIfU8hMPom+
p9Nwt/qDfB3U3nz+Sx7zc87+Zpo85k2srjdrAOf7gsqre3ci33zTSb8N4yU/
xrq1o2+nP7MV4vp28OOBY3cxfvk97w1amOcZcTEsU+754WPbCk2s754lV6Of
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
dtTbCyOFI++QH+fbmqqG3Dl0ME8Y+XntmvUWl5rgqlaX1RQ8D7xpC/d4ieeQ
sPlfde6j/jMqilxvoP6zHtwrN0P959WyXKZj/O2q+Xd/I5fe5HWlAuPXm4u2
mWEf9Rm2zU1ELtUTcrYF+yj1V1z0Zuxr3aePJJuwT8WPtOn/XN4M+kvOb3+J
/RumNnTrEfID18Wv0TWbQcbwysgx9JMLO/kcMpC7HknvPb2iGWQ3TTv7DnnW
Aplrn5FLyEYV8SA/0T+z4Cmuo2dqHRmJ3NiiYLhJk8xJ65CeO9n9k/JAyttk
80+qI0kPJP2QdDJZfU5W/6T+IvUpqe9I/U7q68n6SYl9+Pf9yBttpZzpyN12
hW3jfg5sb+1x5QELfTs8oj5ySQ4k2TjyMbmf66ZJhHM/T+77+StodmMplPb2
mw3h/qNH/15gIz+6eaa/C/KwR6qPRpEzxaSYO5DP0B+38h8sBb+zPfNH8Hwo
9vrfWKYxDSKN+n2tl+D5kzV70SC+r/ft/V6uyMtUiy65KdbBwykdsX+R04Xq
I97huVek08bPBc+90eVuN8XR/xd/PGNmiflnpF7yYOC9/usRvu8rMP/rZg+c
NefWZebEnTrkF8/cf6eD/Gn43kTziCpIVxGbuiWvE75FT5kYes4GNUmBpelY
95TUYS9nrPubV7ctO7DurPRZPHNQJ3evJHcZoU7yhRp90lEnUkPR/LvF8F4w
ELhvP+pqumPyh1DUoSl99rwDqLdT7MKdYshvHlCZuh71tqGjOrGZq3MFI+MH
qPMhb9cySdS5j93+V53IFwVtMHmIXK3ER28h8s2FeimVV5rg4SX1oAfYL/62
FgqhZh1Q+tLDKwD7d1bid78s7MerDONkZ+xfD22XHZe555Omw7HZ3HNF7sYf
25BfVOU9JoLnCqWCauHfyKcm5Be9UG+GgN9iFv7I35m7yE/D84Zoksb+bjxv
nFH188zzYsCiN0mq50vZcCnKfErEQC2U9cvyCXswYE+zoMZV5A+ze/8yh2rh
CV1sfhTylHxr/yDkLhKrLmoiV8lfGjmB68xkXvE6h/zYWL/SJlwni1cr3cWT
AUeimcsvIc/w75UzHqyF+i0nRWO8GfBnm8GdAOQ+NF725f5auB0xVroa43/F
TE/mxud9P3XOC+MNnzKPtOJzGYXv8i4jX5ryUJ/5PzhpHdJzSfskvRcpD5PN
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
gpiE9bwduZ1wTfxkdNALNtxyaCpcjboSln7tOsH9O2FrG/501FWz+3LJCdSn
neL0RlPU1YHHU4NrUFdhnxXVKpAvmWHQp4t8rfThl7+RF6q8fGiO94vvo2Fa
dajbnfIFXutQ540/Gy25f1+dLhllyv376uHlNUncv6+eIbZ43kfsuw6FRx+5
32s8WSEdk4B9t3KnnYAR9pd3ULVwKvfvJO2jB+noA98EpSNNsK9bQ61ucPt6
08A3x1js66aw07fcPBlQERS+iPs9e9d+lS8rB2thYiKZdfMOC/55G/s4oV9t
LdJeu1K+CsQl0pa+Ql9K0Rm/Pxt9qekkrT8FfclBLlRQH/1tjl/no36Mn9u0
1GUl8p6HvVLruXPBaMFmrm9fWX+xWh39M+GVcZQ1cjN7GfYJ5EPNjZlLkPcv
n/eKD3n3DP8ticiFd0lNcP1WffrBBVNxLvAHHI95iXNh2Xa6+CmcIxt2usey
cL4oxxo79COfq2vf+BZ5zgz5Nwcx3uLflPRcnKeLF/AbxeAcWZyzPGEW8ivx
AUo3MH7nML+hA8Y/uHZHX6amD3TbJP4ee9YJB2zOFFenlYBWxuwNksgvCv8y
MHreCb/bGytOpJfA/TatZmnku49ILgjGeNbu3PhujF9ydecZLr+hsGzWU+Qu
4U+OjiMvHEu+uwy5ncLRLJEnnXAroIvX5G0JHP6mcEQWea1YLVMS42tSZS/f
w3j51EAWl2vNmiM39rQT3kYa0P2QS+kd91BGzlsuuuYprrPMMak+FddRb19V
poi8d+mK17GxnaBg7Wnt847MSeuQnkvaJ+m9SHkg5W2y+SfVkVT3yeqHpMPJ
6pnUF5Ptr8n272T9YbL+Q/I3kk+SfI/knyR/Jvk8ybdJ84U0FyY7dwb7Wlqv
satg2co3HW0yOaBy8dpTMZyDN42jVRKRa+nmCo1K50DY4uKo37jOXuYVYe6/
R3Togn3zF+7fDa7YTHvD/Vxi78kiW5zjWvrVefvl6yDC5k6oEvd3WL+Yt3vw
vWItD3e4KbWBXtzUnrevOLCTXWm44z7qyMXB/QjmTcEjo8Yvng2s5J97/yB3
GlnAU4N8qnzD6X7M54EVptJXMf/BSgfGpDH/X/uWHlTH89LUffPtt4nXwT6H
Z8w05M39hguq8NwllDzLeRnqIXWoxLsS6/7EWWO9DdZdxyyjLAD1sHD7Fd93
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
r11/bdXu5xXM+t9ta7yAnyw4MyQInLV1ZT0/q4L5ffrzt8vBdJw2Du257M6f
Xf2wq3927csuf9jlJ7v8Z9e/aH7Krr/T4gYtztDiGy1esRv35rpqjJ1AXP1S
r+23Xo7FJKsZqo5B3ji4UMQX44iXGXE7S7IYxxrdQWngky2efHDFOCYjF8el
P5Uw7tHB0vfie5kPaiGrpmA+QXKaJfGI21t0tQs3Yz4/bjyOc0Ye4V0386PM
ghZm1YqV8+cij5gG1DwsQx0+1Ur03BOiB8c52oKo2x8djlx5C3qrF3s2Lg+9
KVaIBAqTfS8rls54dLKBSVPpeh6JfCef0lqx2LSNkQuqfpqL9cJ2/hlt+cDd
5PboXEYePK5yyFMWefNB79RfZL+oba7JmyfImwWfXyVZIf9W2pY7ku9gy8s1
ys5j/SIbEWFUf76bievwm0XOO/js44zciXXQ49yf5rxYTzFfgzP6sZ6afNjH
9ybqBFHRnZ+mgueu4nqm18DzWwV/C/aB53w+GyYLk/Vdw9aeI8APyx8MMgee
/ZnzPfk+mfdrfLPRzXambMChPgv1zOz9rxykgSut17a1QJ2z+Nc7vV9ZxUzy
vV3G4vDTw/nqst/gp8vlctSvwk9776uLNaO+qjkrbFmM+srcMNnQAfXV58TM
Y/sRByLn2b+9jHgilsw5cBpxQMXJ2n038G6RcPllwHsCXct3AreO4V21CPik
48NXPuZXMCzt+Ls6IXSc3fHZnT+7+mFX/zQ70uxO4wmNV+zyk8Zzml/Q/Ijm
dzS/pvkvzd9Tm6/Iz+usZIL3TVu0aSmL0dF5osNr1MXIug813MU4I+vPjVzp
KGG0Nb9JvkRcunm2z+o75uNcbTJntRTqwMrn8ktIn8YpJ33UMf/sxVWV11BP
CvNfFDMifY+VUqR4EA83V172voR6cnGt8lg04mHeW74FUtDPTXcHd7If+06h
uBPZj+05ZH/cHHXvEbtitQ/k+4D/1K+60Ke8bvExC9hld4juKKmTK+47mhyE
XYqMDLd+Q/w/LD7Vl8T/1Z5LZkxC/OeR0Au7Rv5Tm4x7k+8bWdu256jBvkVe
favJfvjjoso9ZD/8UZ/T7WQ//Kj83in6yEdbMmatVABetsg9kxd4yHjzCkHk
L50noXcTkb8CnULyNyB/Pb4T9mQGcDvPL79uAL82UNNvC7yrWNJyPfjJcjXy
/+zZxXisN3peYviO0a/03UX+jyiEx3bPBf+5ZRJNLoH/njvkA/rhL2LDFcd8
uZuYOL/omET4y5J5vxMl4F+CfZp3ZyK/fx+ZpJQM/3rV4625E/44xVQ6fQr8
8ZFH0sIN8MdF2d4he4CndvlbmgI3s5CtcAXOrjy786G9F00P7OqTXXuxywca
r2g8pPGWxnOaX9D8iOZ3ND81CD91bwv8+vrRnsdiUizm06nU0WXw60YnhW2k
L5NguJsz6cskHCX4sz+2lwkLG5tzBPOpkG0234Q4o6r5TYGXxJm4oDlrMZ94
vmOc++fVMrOXs86TPva/kl99CIN8ScOSnmDI906aYz+O9d0bn4pW+ehKZtXP
stDL+e3M98R7I323epgZ+zcIRKFeuvizKc0bcW/y167E7aiXStIL+UYRP9+x
rqsmQJ9CBj+MeRA/51+VFkhCPRal5PXhGfSvuZy/Q1K9kRnpXyQSC3txPFQP
JPY6sr1SQQv2cvOuXfkCfPgVJWlvDLvLLP540Ad2T/owYZTs22kV3HmS7NsZ
vFtiTfbtTODasSmR7BfqEfFfCh5GHw8QXwAecguris0Fbyv5k/9OQt3buWGZ
jiHq3rl5K/cTvGH77lWfwGcB/vpBDeDNoxMypoP/9y1E4jWR7wbe6dWuBf8P
WGuOroUflYa3Duagbo+7FSPWinxKw2njsDsf2nvR9EDTG03PNLvQ7EizO40n
/xYPaTyn+UXaPl7RwI5KRu5aoeUtbRaTMvFb5wX4kVOF7aRM8v/ut6RZfHsJ
03z6yg5yD0iGf/j065hPw/W1UzehDt/0OP8d6eseud4oQg7z0flmvCyY9JPn
Exsk/SovX1hapRdVyQw3V/0RIv1sgzptDO/0MFf1Ja+kIT5I/1hv+Qe4yMOi
wemID7PWNstYzKllum8feMT1p5PReX7sWMmNTmaC1kvPKYg/Vd5P9EvIuf6H
YaauiD/zA/f39GFd4/zuNkPWNYlVs0OlsK6Z+F26xP9AKzNsIzdE+hIo7+ss
alZuZEIKjSWtYd/Xdw7Zkjrn2jefV+dg35NavBfqwIf15qp6pC4SuG+v6gw+
FDo4/ST/tR+kfRYl/7UzF515S/5rO81IDe7FenBkjl1/H+ou6xLxd+mou6Qa
yh6S9eAn4/i3ZD3oMzZeTdaDSbvPnCd5gSdw8WcB8Da3TeZLKPLCnZBpbgrg
f9fK+Rx3kEduDZywagf/992RtBcCPrKlWuMc/MIsxKvsAPCjq4w5D8CPXrc9
E8hHnnJQ6U2NQp7KW7Z4IlkXe2Ywjp1YF/d1qMobA2dXnt350N6LXf3Q9Eyz
C82O7PKBxisaD9nlM7v+QvM7mp8+aG+/S/zaabZrHvHrN681x/4p37EbT2jv
+6/lO4q9/lfnQRo/aXmElndo/kLLazR/pOVHduXZnQ/tvdjVz7+WZ9nkA7v5
l10+/1v5l+an7K43aXXC/23rUNr6grZOYXf9SKsPlxoYuJN8pFKy8ZgY+Hyu
Y69HFPIRbb1GW/fRcNo47M6H9l40PdD09n9qHUfj4f/q9Z3XJ9H3PvCjZyE5
c3ZLshi3hXLKMvCj8YnLq8l3Ho/QwHMyn0qYnJetqv87vtOy+z2Wth6nfX+j
rfdp3/Go3xMo3wNp3w9p3yFp30No3zlp31to31HZlWd3PrT3oumBXX2yay92
+UDj1f+p7640v6P56Wa/+ankO+3e59UvrOVYzOYgXy/ynXbjjaNG5D/On301
jgXzWAzD6VxO/uO4O+RcJP9xEo58tCP/cT6Jx+n/m/+vaf+taN+3af/FaP/R
XhkH2HfBvkWDYdeJfbdqxCycBfvS/uvR/g/Svv/T/j/S/i/Q/m/S/l/Q/p/S
/o9Q/7NQ/tuyK097LrvzZ1c/7OqfZkea3Wk8ofGKXX7+W/9naX73b/k17f8v
bT8Mu/tqaPtzaPt8aP+7U5q7B74J1TI9O7wiyf6iUiZ9i92tTob71OkZs043
MJvcHTPIfqR5enbbyH4k2v932n4n2v992n4q2v4B2n4t2v4E2n4woYOdJ/qx
HvzIc/Z7O3g+d/klr9vg+U0bV/MvwAMXhT2sBX705G+ta/+wv4W2n422f4O2
j462P+T/lX0s7L4vu/pk117s8oFdvrHLZ3b9heZ37PovLQ7Q4gYtXv1b+/3C
lMbkyD7qe0nJEmQf9fxzQtfJPmra/kPafmza/kbafm/aPknavnHaPnPavnTa
fk7afnjaflHafnvaflTafn7aflfaeQHaflraeQTafl3aOQjafmDa/mHauQza
/mR290XTzo+wK8/uPmp235emN3b1z6592eUPu/xkl//s+hfNT2lxgObvtDhD
ixu0OEaLS7T4RouTL3y5z5NzK2uGdMXbUX+eOFTSR86t3J5oGG/dW8lMLBlp
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
Q2hfCeP04GwuuZ/3XsYZjmiMo5t78vO9BSxGI9FLqwfj0O75nZph4EHuQ2+M
OfNnF9Y1/odSq8h96GUWHWZXkXcEF7/8tUqylvF81/J39T/cM067n/32vjXL
LCBvJ7DStBfyy/35ndXu0e8fp90vT7tP+YNLpYA+1rMzzxidIfcyO+XlTCT3
Mrtxh+4vxjq6LLtvE7nHuSLnrRC5x7kgYO46Z/DtuP5MV0HwUyZOoNYYfFu3
gdVlBT6Pp3WL3oP8DE/bDTXgs1bXaokejPMzcsmEWOB9v59Hzjal3z/eVd89
bWRfKxNQVuVF9i+ZeCupTdVoZC6tPeh7GvIKT86m5JF9TQHLHlmp0+8fp92X
vVCL8xLphzbI0XCD4KZxtWL/6Ye2rkl8OuKGkFKxEsEjjWxudX6l3z9Ou+9b
/5u76XvEw/ccr3zJ/eApC3yl/mfuGaeNw+494+y+L7v3jLNrL5rd2eUPjZ80
PtN4S/MLdv2L5tc0/6XFB1ocoMUfWhyjxSVaPKTFvXMeOX7bUN8WLRP52SbC
YuyOc3luRH27OnB2RB/Gn3Gk8ehMjO/rpWj/FeO71A61OkL+h0h4xhjkmcbc
KHvIdwnO7bKBPNeK3xZHhkqYw8c/Cv/CPAUf/B17iveNXfnJbwPq8O3d/GJD
eF/x4fR3WZAXON4sYU329VXmCKQi/jucv3IlG3mnx5k55IJ8xDFj5W8B5J3Z
Pz3ui+uVMTcTeq7skqtlrufI6rRjnMbYuxIm0L8jd/HVBujf1mTKfg3o/0b0
tjSjK5VMtoLgxHUF7czgNc4/X5N7GKHSsHuOkG92r1GfifVF8YmDztKQ787m
45h5qZKJCr7fuRJ5s5Cn3isbeZOX+2tlGviwXc7x/UbwISc1Rv0j+DCafPju
ZuRxMx/rLzvAN8OYXO8w5HHt42ut7cDDYkeuV+S7399rbp7rwcNprllz28Dn
S2qKf8l3y/Rb2XKi4PPaomXpFcENTEygStBVrMuObDSWPm/YxlwWfqtJ/sPm
lL92If9hc69iYQz5kjsHPY7Bv/jSvhzOhX+FdOjed4Lfvdy1w4cP9cyqhPTF
w8CFVB1Gb6o0MseGBY2PAM8y2jmf9MEQuKe2oxd1zooF/uvvoJ65rPz1Qhzk
nc8JnX0PPz2qdPhQgUcHI5ZxT8kfcSAwwYjzCuLAaWXTOnLuWPCPxH/OHSsd
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
nXAB3pQT9Wgr8G8Kx9U3QL7e0GynEL5HyzBYfgNwyXcde/sxfrHrhMM3yHv0
Fw+mgiduB9vCLoMnvyRbbumBJ6aSXfNJnUPPmwMhpM7h4I/iB6TOYf/VRddW
gLf2uc6+heCtTFFBvj7p5yI17+cUgwpm9LZCv5l8HbMt8MV+PtIfQeqZCsmH
avh7fuN5JRajFl7yk+RDmZ0rEvOF3klUmM44IMNidtYafJ1n1MmUW8hyTnRU
MSE7DK1ltVgM53udLnOciwfdeSQqST7jnx1Sci1lTPBmdz1Sh8Tvc6kRL/ap
sAfv2zKxTyXu7qwheX8jxx6YniF1q+a8VzpE8vVs849Pw3f+uueRlIb/q75N
94UN/q9Q08KhfvxfBnrHPN9hf8l+1VFA4hUluDpm6MBuTGaOzSV15me/knxL
4sBj9vp4kjrzCQkcXiTO3P+0VwV5L/5o3WRF4sxFwjpS+KFf3vaLHe6Qc+jS
KRPS0COJAx/kvEhcRFbqDxJHseiJ7vF92Ef6LzSqHCTvnkVPW2TIu+fHGtU+
6EUbh5b0DOgFl0HnplToxfhzfuXt0Ivnv4pmEjsvmrdglNh5p0xtjtvguc/2
r7PEwP+fRg2SPsBPZNovWA28bEZOHjnHtfkosS3BuWbmosTHnbDz4UmflQn/
k9b7VnuA/45eEr4fwX+ph+te9oP/G4zdPwbDbqvsTJmaCv5f39HV3gF8YYiO
wzzgXDKpNSeAZ/2c52MMXu0+4ZwvDF4dDjXISAavRJdLpjoCt7oYXbkderG7
nu2bG3hYsu7KgDbw6b/r1wuCt7vPjRmvgfy5E+1KLsDnij08Fg75330uAoGQ
b3vK/+Y3zssPXilXkn7T3yOPGuzHPFSuOLOjBHamhMtCzhTzdm2vOr8Heac+
sSiJ2CXvpzfTiV1abR3iT+xS88zMMBvYtxtmQpYkHiNSLOrYHvj5VqvOl47A
fhbnPS9ciXVvzF9/ownrHi2vMWhM4lovvU4UAU/O6Xx4txJ2uHYoR47kIy/6
Lqq2ALz68KlWfi54NZk5J04CflGNc1J+nmwdc7a8+yep+7TG5UQTuRfKnv9d
/HprGePSsesTyU9Pa7k6Xxo8P+c8XWubDotZvvzxcl7TTsb9SUg1idPIqNSQ
GoT83dcPeDwg/0B83JnkBW/ndl3yWqaOsQ7c3EPygmU7rLeux/eMzvkU8h36
+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
J0mrS/ljdP0FZ+jdXddPfelqrcycc2dEH0PvHo9PrSX1LXWuah8n9S2T309+
jST9rdY13I4k9+o/Fq+/QvorPdd4PQa9ptXV/Nf6nN8G2Dx5e6qYgSPPy80k
WIyu3nzhWzh3a7a4K5G+9uV806efqC9jXA1n55G+9k8qQpwC4A+84efVvKPP
Yub8tPEPhz9AqztKq1N6aObKuJmwq9ZcjknkncU6ZoSL1DXNnfa2gdRB7d/L
OUjiMX4uucSxndT5p9RNXRSmzrEJvDI6tG834dVhI83AjeAVrS7rhvUWtaSO
KyP1pI/UlX15YZ4PqeNKq/tKqxN7+p5XnBLk+5seXyJ1ZVd9FNpA6srS6tDS
6tbS6tzybdmwRR3/LxNq8/b/6kXfFHuK/9fV9IqcKfa1qCyhSOLnJ1st5lMb
otfdpdXp3Za29Fs+qe9tXsJ2E/PclpF8JQf6xcHTcPk89rU3m0LsSR3g/Psn
a1bjPGJlcXw1qRt8x3RsAakb7Kz1MP8r9keVdbNzo+HnHxoT9id+/iP2GEsh
rONnnWuVclhf7qsPuZKBv1Ru//sd+L/WNz49pP1oLfx2rvJ5a3eBP3IxXQJX
4bfT6irT6jDPd/50XR76Vd4n20jqNh88eJyb1G2m1Xn+13rRtf6dCRbg/7yn
P5T2Sdcx+uN8oqTutICwbR6pX530PPHEYHcZ47vLd5jUr04RjLxG6lebbZjy
gtSvjhk0/kTqVztasF6chJ/PszB52iYlFrOifa/db+yPvby6kySuT2eG1YZ7
0Ee1p9mlpD42rc42rS73B1W1uyRuRMhePJnEjfh7nL9L4kZodb9Lesd382Nd
QmU2fCV1wtepb9i1H+tivuqvGakrfirq0WNyflySPvE7BnpKq0NOq1v+bPjI
Fn/ob8+3hn7iv136sytA/hu9Ljqtjjqt7nrdrHmvSZ12SemFW8k4esW88tb/
UdedVgfe79nvClI33szD9yMZh/PF3vDAb/Q687S69LQ69hWbtjSMYHwv1fog
8q5tP8bjdRl6TauTT6urr/j5inIk5p9D6I4aifdYUjq1e+w/6vbT6vyPhfWc
H8a6a79LnDOCdY+s9/zZDD/2mtLljeLwb+MGRaJIHwHN/ojl6sALu3jP1ELf
pwqsX1wMecUVUa1B4MktvR+LZKDv6859lSb6fmGSXZT0KZi3qZ5XCfgF7nUH
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
VgJ/RvlhyrsH8GdGow8xomk437yOjtuG/7dt5s0hefy/czed/rsQ/+87dufM
XyT+lpeXOU/60T93Yid9mRWWdzUxmE+Bn2MxxZhPJaf0Aj3St1Hxaznp7zyx
PUCa9HcuzFx2lvR3pvWJpvWVlj/5Z34o+NZeHuEiC749W5/ZTPpQH1506rYK
cG5G2GoaeFvdvkaFnC9W6hUlkj7XUw6YyxxsBg+/uRrqg4e8syf0Z8HOi0yv
1UnWZDEeO0x/6Jl0Mma2xwJJv+yBeK5YTZzrzV9yrOCB/I+rU/VI3+0cw33r
nmJfyLdea0L6buv53NExBa8kRptKboFXz7S7xd3AK1lfPce9wOfvWW7SKMZi
bHsMbm8B/vpyWhm5P1TLCcvix/dYTJjGkT7g2Zq71pD+sPlLwjxJf9hRozw7
si9cHyizuon53G7tbpWLfcG6rvPSIOaB1pf8zFKDs6XAC+bFhJI+5hn+C4oq
sC60vue0Pum0vuq0Puy0vu20Pu+0vvC0PvK0vvO0PvXVrwLML2AeDCxlP5O+
9lOvFi8hfe2NavtzHwD//sT0rB3wA4rzL7RjftZtfONuCTsZPXpbgAd28tfw
UcFk2Mm/awdK04HbnjLzMgF+RfHvxc3AeVMCGsh+vc/wfCXZr68tKLlL9utX
Dzk1poO3LyRGfPJwnp0aZRR0A+sVkyW+Wp4H9nNpa80IzsWNmy1/fM+Ancl6
zl2Cdf+5NeHbG1K/+tLeSpLflyxyM6wB+MXSFWXjwCWdn0jpAbfnTtKNAn/Y
BsTKznWXMVLbPgpKkHrU87yliN0u8ROsDQB/lI3HNhC7PfFM+6cn/BOzV3bL
E5VYzNXtKSxO8NbBd/X8GIyT6CY2wo9xnrovyRfAOFy7M7fexrmgpFYuugvn
AoM94xwbcS44b3l5+knILxm2//rlSxlzRUKl/QDkL9yxfTQG+c4pf7PDDVjM
QMLYPR7IK6rl+pP7NMW4N8ovYJ8PfzsQ0wf7nFD68YILvnNBa/uJ1/jOgy6v
HlvgO9+7dEraAr/3R2FmBOkrN2IUZgk87Lm8WDLm+dNr5awizPOO40MTX8i7
W772yyzgUompOa3A/Tl/v2oDvn7J6dfB2B+dlm/v7yb74+D0Lwuwvo2qVfIu
5By33OaEJvDN8yTVZMAHEWYwzRfyIiq9oc3ANyb1vNWFvF70SOFyyG8xPLqL
vEfs3+T7kbxHZDi8PZAJ/NRUKZ/txO691RnvJvnpXkJvCd+K5qotNgYetLT3
zVTIG2yas1MN+B6dyhou4HcbOn7YADfhD+Stxu9mXB65LwJ7K9K4baQP9vap
7srqrcBdo8yESiA/X9V48SaM7728zeME+U67bLM24OObPrzTBj5l2+6Nd4h9
3rr++Fbgujze8V+Ar628HscN+f5dqcejgIs+PW4WC7xr3g7RK5BfMMRdS971
dl9u6fkDfNv2P7nesP/+2aeGT+J7ThfWTLHD93ic+ViVj3lOcUnKHsM82wWE
1NRjnrkDNNn3AE/dNukuBvydW9wrGfC/+5ykIRf4P43vjnIu+J+VorwqDvJy
SnqBs7G+NetVMgpxfkyR/dhK8iPW3yyQc8U4wR3sEfoYJ6b5+A0hjPOn4aRd
FfyExQ92Z7LgJyiqCrcIQt51anJHMvCInkk5A4JvfpA7F/j36k2lDSS/ezLZ
ybmpjKlP8Q5QhF0tiV2ppkz6FS6/LcMBXqX+lN9H9oUGs4YlxH8oZB5rjIKf
K6dHCw+R/vU99W8T26oYb2uDRClzFjPz17YN2qs7mTGDX7kkDsSU95KUGcbP
MH9lQeJAzD23m5tCv5aXV30YnM9ipl4U11eDfs16J9bIDvu/Z7FTZKQEi6kZ
jTe7C/u/gHmXmIVxdrjWXp9sL2OsORXLHmKc6i7jvZ3AX/buc3+Kc/pUiS/S
7MCvG1q84MT3T900JSgW83ZC2Orvdny/h21JN8kLrgmeuETsht/e6zXEbnx3
fthXifmcNdNRWg3zf5zvmWoJ5t9AKP4TqfOgbTH5+xz2ZWcJvUxL0m9Ra54S
6Tv5aOqRXfnAV155k0H6Trbtkt+xE/jCr/72/FiXLUXPkucBT9j6Wp7cb8vz
im94DnkLe2Ox5cBbv3+6FoF1578cPsmP/XpYedFBDfzuT2evUE3gPYvL10jC
z0yqXNjgD7yKJ6ZgF/Bmg3nh4cCt2BWibYCn761u2Y3xJQWvSBFeRe8qaiO8
qv56R1CR5EfbNQQE4HdLA46LrwPuOyLQR/KUnx8TllaD/IDQlbPiwOuafswm
85A8cJ9zAebhrO9QHZmH3qg5M1Xxu5tXO92chd/NUgnSOgXcTGX9Xz3gSr/7
ly0Fvl686LoH8I5CqzYjjONnqS/wHr87ZfaK10sx/osfO8vJfaZm/d3Z7OAV
E5F/hPDqyN3I8SjIs7bwJcTie3xZgk9GSbzTnwhXb8gLbznx9hPkg+S6t5N7
yy0b4uJXgs+/XtQ3yclhHz4hKL0A+MKZaQdJvl7RBRmD/eDJgaot3ungg/oS
z5unCZ+PucSxYd2PPbmWZAb5ncHs2SzIb40cbOz9VMbIRNrmBEM+98yjwTbS
JyjQ+Mxq+DMjyWmWfMBnDemZXumoYnqTtydNarOYU0YvuW7B/+FQWLCExCHP
SorULiP+ifffChKHrNQ5YRQGv3rqpcPRr6VZzIRzahY/zrmJoc5PNwD/aJci
7ibLYrbZ59sYAdfJ2vh2Gvjf3eZp5Qb+C8rlsKWB/wldc7R+Ql8MKq5m8smz
mDzfiONRkOcdSg8k+enVumWjaa1lzLnUltku+N3Cs8s2EL3W8AuLOQm9q/vt
qDofuLKZ0TctzMOOxk29kphPjvy3n4m/ZPRF9coQ8JT3ir66snXM3g05+UuB
D55/PLwR+HGh8ozjkO8PNEwj++OGUcsYIeA9mzwc30K/fNJqD/zPLtXldfRj
XSpdKs255OuYhKfp30g9B1PLlI++kD+1zCSpG+Pc/6zxdzXw3jiRy0IGFUzC
UhaHH+Q3JTTdnwF8o5FlBOmD/INrTTjpg2z1ZkES4UmZjL7CKuBxL6I51mCc
TTmCB8g93lJvP6Ne/L+ut3LaJGEHxpvEXIZhlySPSE1fAPmT2cn2XJCvSZ83
l4zD+9jAxQnyb1Yu/Ks9UMb8PrTtWib2Za1FMl9IfYCUoWl3+jCf9bPOPnPH
vGn32YtxYP7juN13tqiwmAPCkqsOwl6FvTVaQeySucmztFmfy5g1shwajyHv
uEZDQB1+77QXhq0lC1mMmvOWJbLgySNZnqHtWPfbWTf8lmDdR7M0ly3HOj51
aZ8mD3mtmMBEAfjVhi+X9StDfodyrctjyO8VMdGNxblMxX6XZD/4YCFsWx4A
fIPO9F2zZVjMrfCgl2IYx1T/hnoPvudL2ZkV5piH9NVfVo5iHvRUfhTfB35v
SRvXPHznlReLG5/gOx0WqwoSfVm5Q7LrCPRlaYzYbZLfetQt5wHJ0ynIflPd
0VPGDI6cn7cM83PXwj6F+Cd5ujFbnsL+szzvsRP/ZFl5sOpBrHtKSGzIJehj
d0yVpgLmeUnbuafVwMM3H7hUhH3n3TznVLIfeXkdvkTucyYPtXSrYV1mBZ6b
Rni40SBp8D34kKS9cDBcEfudh1j+V4kvzBPPg7nP8Ltafpdin0NPLeJWzDuL
74xV9223x/gjjedbL+B3d80P30d+V03hyJN6yO8dH/8TA/7HLX1gqgL5RHMB
7k78bu1b2aui4PnQer/TupAP5+WVek/iIf8e+zoG/b0sVnTHjNSFKPgU1A1c
nk2/eR/ms9rSM+wX/l/R7MhXPsBlC2+GzekvY+6FeZw8ifn5ZOnvTuyA3dyj
jkUY59eni6OrMM5vl+dBA/D3onXnnGuEv/fXVeSsIPw9B7mkV7mQV08QMj2B
+f929k3eHchfG562cQ74MGPlvL/nwIfl+7846IAPJSP+53Ow7joxs62KwYf0
DGHdb+ADI53J0obdKDp6vn7+XBaTvNVN7hRwm/oh/3DIv5E0iboP+6N/vLaL
Dzz5G+/ENQa86uzq9w2wM0KB0hUPIP+79tMcE4zDcz3+5x2cy6Zf7BM9Arwr
JSggHN9zwHVv12817MsvSvnfgv8HyyNNNkNeb+mEhi7ks20cefZBvpe7Ul8V
+jIebqKRpcxiVs10zDWC/Pk/D8/wQT4kq4IxxO92frBYkAT5zW9XCZP1kr27
alEO1mumkd55VcyDQuGPhjZ8p2JE+1pfSRbT0fuapwTy9jxbN5H4Lo3jJ95F
YV2mHHAr+UvqIzkryzrAPkt02yeuW8JiKtINB8swb5ttjziQ8+lvU77lS2DP
rz84e4ucT7vYp6fbkHcrL4dVGvj+7oIZdXswvouHpxX5Hs7cOwLp+J7btlsL
F0A+s6qbxY3/a9+QxsMU2IGVkS039+D/KnXm5VXHOP5eA4+2YP7PTP75dhbj
cOs43b9P7HavoP+EAou58Sy29D3m/3OxV+8v8IF9p5F6CPiQOcc0eQb48OVQ
W/9dzLPrny42Hcxzd27u6myMb9UYOW8Kxm8cjnE4j3nrlUhecAfj/z9ziS1N

    "],
   VertexNormals->CompressedData["
1:eJzs3HlUje/7OPpUpiYNiESUZgpNvCtXSpoUUoqKiiRFolASEiKkJDQYojQh
zZqu5knzPO3drt2wpwY0oHCez/m91/njrHXWOb911jnn9z2/p3/utV7rWdd9
P/dz7+e6rl2rDc6eli7cXFxcNGUuLh6u/6OfSSCddNJJJ5100kknnXTSSSed
dNJJJ5100kknnXTSSSeddNJJJ5100kknnXTSSSeddNJJJ5100kknnXTSSSed
dNJJJ5100kknnXTSSSeddNJJJ5100kknnXTSSSeddNJJJ5100kknnXTSSSed
dNJJJ5100kknnXTSSSeddNJJJ5100kknnXTSSSeddNJJJ5100kknnXTSSSed
dNJJJ5100kknnXTSSSeddNJJJ5100kknnXTSSSeddNL/r7td6LUny5y9UfXf
kfO1Xbju7wTcSX/ASDF/iOUbLPIjHF7gi5M/+a7PTcADHcOQp7ciUFi3qFJh
TSY+q93qwT88Aepvnm8tr4nEu5NTQbxJJWg+cEIp+uMETJZrOqXcCsP+De3n
WO3VWKg282rV8Qm4aJryjxz9NrKTvnic6qjHLvkveV/WTkB3gN2MhrELnhpZ
IKS4swnD6s45FH8f/9/WX72g9Nvem02YyTgw/oo1DqqXltVtkHEBh659hqmO
Tejrmq+mPjEOgUHCCaaGt8GdKjZVw9uIq6Z/WFryT8BhnZ4ZQcYjEOXKk0vK
r8Wr7lJVaqYTYGmRNHCYOxI0Pp8842RUjoNRsRYvIyfg+dVX112lI8C9+67d
X5HPeFzDdNmSzgloKfHudpJ6CMdi9lpdy0zAXpenrYKzE6CS0qo2fswbXs2G
Jok7BeHDhvLtAcR+/o/23EknnXTSSf+v5X8PU3K8lrvjP0f+23i0/fQKJpFf
Xq578k4WIvGPh+v9hfKvsORBA2v+5wSMvOW9dl0uGbU+qRvEKSMKdnhl7Mmd
gCqxAMlNHz+ikrnBY9+UJnxoHqrzs20cFk39zD+qEY/Ww5/NFdM7cVgtqGdn
+hiI3e2nWWmmIvPa7SzPoh40qF4iW8k7Bkf2mvzcciQD9zofv73PhIJ+Dhcm
Yw5zoGtFhGNkXBYedlzl7bCYhjdcJYxtHrEh422KuOaFDFwI2SLnPAbw/djB
k9/zWBC1IXTKKzwFudr+uoo9GETbhPhPR3lZUFcDZz72Pkf1TC/xT+Z0/BP+
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
zp+QaPYk9vmx2W6+VCbCxuGXvhuI55JlpO25aQkTbDvMrVSSSiAx9gRkEM/x
Sv326tULmKCaedUkxLIMTBRG3y0knvvS7wGPRX8woHOUDrTv5dDrIlGoR5wT
OaMjRt84RA6yu7zrf2HvzcOpfKN3cUKRDIkIRagQoiKprEpKohCiUMY0ydg8
iChUlIpKRSpDIlPGLGPmeZ7nedubNCqcl3fv8+fv39/3nPP5y3U9177e/e7n
Wet+1rrXfVer/1egSoQJXjvci0XLKr2COofg0/XTO5lkiuDDVgwu0OrFDq7L
tR2VQzAkdcRtIqcYeo9vNJSEXmS1vrXz5Zch8HoqHXvAvBRUE7M2vlHpxVHW
vtCnkUOgPbH/nfN0GbjUn72ovaEX614Y9fgEDEFtWtD49ncVME174qUg04tp
OkE+Qm5D0N6i0Z69vgpkn8jfPSXVi2jz8ki50RCIhSvl53NWw5Out3dXr+7F
1m9RVdwbhyDHe4ai/r0ahlisTfzEerHGyHuRFAcR51W0c7aDNXD8q5JLM7Gu
L9oGoi2DYGL4lqI8RNQPIm523BLE+//YfLI9fBCWrnqd8+pfHez5XPJ5isAB
Jod/9U9tBuFIjavvvg0NoJdgtL58fS9edtGMDBYaBPUjjlUu/o1QLq9bY0X8
XnWPTbbVKQMgzJIXbSHTDCvf01beOdSL1lTLRKFNxLqtounoeAtsbv1V8Nmn
FxNshQwdL/bDrGGfQWNyG1xT39v6na8Pt5qqfuqy6IPOzlOjs+faYbNkVBPz
JWIfysvW9SX0wWkRXW333zXAzInoJl6PO6Kf+775SIHhnJpqpyh3uNxyc/zH
6C1k85nVPv1fnfD/7PqSL3c//MqPR4OPj04cWxqHboOnV4m202D5q75cZbdm
DD3k45gaVIiu/Htff82lQILzUJUqXzdSLePTT7G0Yy5T+cX3zQNgqKBT+/xf
J8qeWLvY+mY3ntdlZi2+0Q9XA3cNsWxux6BkpzUlk90ouyXy2HrhAfid9Fq/
l6gH2vt6YgKW9aDiwJfrohEDMPD4dZL00Wa8KTO9IUGiBz08XdgFVg2C1YuF
E81FjWip+XTqilIP/jFeF2p8bRCmPoXvNT3VgH171U7t2NmDL6bXRzV/HQT3
LUVnLTbW45fTPYcv6/bglywzqQ/EPe7npUi5u6IO7RZ+X15k0oObVroyK20Z
AtHnAlGDArUo3/e+NdWqB2MKuF4w2wzB5MKfCuWra3BxuNePkTM9uPIkS6i7
3xBU5y3s2LO1GtVYWpO/u/ZgVUnu5NXYIfgcqLK5zLQKW0LW/ZC80YNnm/eI
3i0fAg3O/a3jCyrxtoXHxvd3etB6zV8ZkeEheEFNlNIzL0e3/G1hLx724C1W
lt+BBD4fs/6y8CGWok9P7HupkB5036/qukNwGD7f9HNkW1eCL4QyrxtH9KBR
mbDWYdlhcMqpCf8XUIQPEnnNDyT24N8a3mSmbcOQ8vvC8wV/v2Lxt0Uu3Nk9
OC1VYXZ2/zAYVb98zGFVgD+Hn7xOKe9BO1vDp5+MhmHpz5PpN/PyUDn/RKte
Ww8+Yk5/1XF8GApaAt3dRHMxatwgvXmUWFdzk2C3J+53240vzE9l44UkcxWd
fz2Y+zx60XaHYShpi2Ez1f2CXlfOUD24iDpn9tU/f+dhqPTx+30wLA2jVI74
SxB4Kxe0WGujG/F7ObosC4uScXhCcuKjInF/vbzOZHBhGB622ailZcYjNfTQ
tOeuXpS/femwHLG+VyI29eD3aGwOTbnprteLiZOrbPcQz5H7vupl7u8wvLSp
dMzFrBcPfd3sttJ1GNZsCz2170MACralwXdr4v7V5fCzchmGmdNOz6oop1HN
+LO4jV0vSu/l39JAvKdj4nixhO05+EB7UShDrCubNf2YJdZze1/Nrrj+EBTL
140rEc9pn/WwqCWe0+cX+LPF8A1oZbLtEj/Wiz6bu0Q6iO/9JbWCyWX3BxiJ
3iLQdpB4/5i1AorE+1NC4j02d8TDjG8LewpxPzq7FCmvvzgMLxuvH7zalwzL
z55znVDoxVDfn927iHWuUAWhy+lpcGymNvfJyl4ct/RJ/0n83h0SM39Zrb+A
w4X1S8WW9OJrudbTKsT7aPRb86x1yQaVbaJCEn97kM+E2yGZOJd/unb37qzJ
hTrNXfUDIz24NfWPixFxjreW3PJeXZYHEyaJ3f6tPWiebGe54MQwrMoKqjp2
ugAuRcoJSRFxcnhP/KuPRJxoXbc/LcBSCDl3tqm/xB5MlPas1SbiqkfraNmf
4CLgSBYcmUjowYFgzotf1YahlpJS26dQAod1Yi0FiLhVUAvxZyLiVnD68ePr
haVwmrpZ4tuLHpyV+xDasHwYXtf0G263LYfxF2cojkRemD1al7WKyIvoM0fY
eDkr4V+mx+eLRB7Vuyl1vxgagscqmzpGzatAzDr3Xe/1HrRov/GPg8i7Rp4S
t+Ad1SBTPqjzmMhTkxmFlAVEnkomWxSdWFsD4etYxw8Tee2+o/7KCiKvX1lx
rF0sUgtGazjPlln24E/piTsJ1gQ+jN7dulasDlxdi1kvH+lBjWcWZ1gJ3Pjp
pnXdRLUeZM/+Wx5xgMAxntjgTAJnXAa3ZNc6NIDkJ3PFdzt6cPfafyn3CgfB
snkmeEd5I/xyPuq1Q57AB7nEkx43BqExvVTg7PFmiO9sUU4Q7sGFZz+qDEkM
QlazkJHdplYIGv1r6Mbag+vZb0wrxg5AXmLO4een20FwicSgfHs3ykzoHLMh
cHVzQgDLauiC3BdZxRvsuzHowtY2yol+iBVZL5Aq3gslM//8/sh04oZlvL4K
ln1wJbGQ88uZWlA4w+2iLlmGyepN0+s+jMHTmv5mh8DLMPLRtq710Sl088rp
L/uvTvi/Zj08+RGrsYEtRtH/0oSESuf8sANcuVzp56twZEKlxD40A5kEV2im
ZVDhauGEoXpdJ7rs+3RrRqgB+x+IrvtN4JJK6TgXz9J+lHK1l9t3rR4TJg6W
CPv3w+m1Cwtj67qx9Fbyq6G0JixS5Vqr4TUISVK8DwaXdmEJ56rBg/XN2O7J
fY/j8hDYWTqer45px/1/0pilj7dgxsseX5cVw5Ckv+RMZWIrllKWhfvFt2CQ
t+3lhkfD4CLUGN/G1oL3lFekP6K0oFuC0AL/yWGQKC1leXG/CUXeWYsbi7Qi
820mlse7R+COVlv19I5G7H6+s951VyvKy/02z7o9AgbHvsXu5GpAmfQEuewT
rTiem2rt8WUELt7c991lsg7rojZeErjaipe/nVTaShuBb4vr3o+O1GKL1vAV
xUet6POCKn5UZBReO1Mb0mg1+O1Yd55bRCtmzGyxq9s9CjvdFv2LnKnGeD2H
72syW1HGmz3hoN0oPD9EjfESqEbeCwFyC6pb8bClI/Nu71HgOJy2w3FjFfII
mrb7DLTis6eGuXzho3A//NzW8IgKbF6yt2TrNPGe19y12L+MAjVXTnqaVob9
IqWR9wTa8M7LZjXzulEo3nL4it62UmT+uw3LNrShYWxD+o7hUXj6UONzoHcx
7tHKuu2o04ZvztxfUPB3FDhTYMq2ohCNPII1o8+04ZrWbe3Ll1Cg4FPTfUve
r6ha+P5FzP02dHKqWrNdmAKJ7pscQrTycfr6uC1TIrH+UfOOwloKDB7zVv/s
nItOTTx7X7W2oddUVMzsBgr4qV18fM83G3+Z/154fFE79l3wYkvcQoGOtY17
1fi/oK3jdKicSjvys31N2L2DAuy0hrf+Lako1Jx+8L5dO2pXL/vTtJMCrxZk
fvM2S8KGV8cXXnrajvcGLd1Sd1NgZluSmJpkHEbbhF5+nduOtSd9F+lrUOD9
deXHFwbfovbu6YW8g0Qdeu2WvRix/uHbmT6RB4EY1EI5Wz7Tjkwuuzw6iefw
ea0dNGBxxEUPLrcEL+zA5pzHL88S62I/OB1LRh3BNGHJjRvE+mlOLXcnYv1J
EsIm2ccQtCROTnW6Hd+f03u+gXg+T6hZV6zYO/Cd/XPqV287qjbxqRQS6+en
mn2f68TBm4vypVLYjp+WVaRz7aFAl9WDwIVnkuCO/b5/04/a8fRbIc+LxOeF
NzxcVdyTCgaraePa1u34ykeU7ckuClCGC/errfgCk2O24Rc3tWPOyTWa3cS+
XQpQYaH4ZcP187LSAWztKH4rZv1KVQq8ZD9s3uGSCypSqqzbWtrw8BfmKwcV
KXA/SlbEYH8+hBs98+yPb8OlQTudHIhztDXe1/2d9yvsfTio0XuvDafPdXHb
E+f+94eSn3VlIbS0B/pPnW7DyOxvo8pEnIh5iy51uVMM6t8dBUsOtGF3/S7T
HiKuxAYiWQy3lwL3D06f7UQcPqcYHTIg4nB334PA3RNloHT1yfp+/jaciQIj
ZyJuww0y7rJGVUA8B+dHl39EHl2ob15NxPmPbyvP626qgjcG1KsB/a24isdY
S4nIC8UzEf5ey6vh06FO0+zKVtQYjQ8+Q+SRwZpqy5rZakgq0jvzJL0VHzpI
KnsSeVcxdOLiyokaGD3LZHrpXSuyQ0+5oMYozJZWBH2m1EJFKrP6a/9WnCpS
HIgh8jpmgI325kcdsL/7d7H7YiuG6jA/fkngwHRym3YLTwMMsbX4Vpm1YqTt
2d9TBG6IupXM0HYS/f6JpmXR21txuF9W3tBrBH5ocke/DWiC2Scz3qYCrVi1
X9bzlMYIxLryRopxtMC+eq67cX0EvjEbsRd/H4aLnv+eHExtheYRlmG7iBbc
PyuRoPGYqFdTw/YdSmqHER4H7xmjFiys+rv0LYGTF58NMtsJdMGC/j0+np3N
OPzhlQun6xBEb+L46f61GxxvPIjm2diMxafizvA7DkJiLHf0NY8+kFteNmUV
1YT/HgxdcVDvh78/J2ve2faCsJfyPvPtdSiZzPH08tFBOPNMOfqKbzaIHn7J
btoUh/+2P5zQ+/BfPfB/y/rEcU1d/phQtH3J3r3F+RkKHdkyJPaHBto+Uudy
j7Zi9Ho+zsTnKXjI4ODgyUICJ5kDFe9c7sM7i91bOIn7UFpVMcHn2gAIrW69
V2fTh4fksk8d9apDhRgWjdNnB+DTK1671bt78NX95xe1wmrx+t8rxvUnhkBn
Iji2P7wLAxrTohZw12GhyRDTuXPDkOVvv1m8qAM/XskQdvGsw+7R47oCK0dg
TfbukE1ZbXjq4xYZx646rIlY6iH+agTuMrdd6GNuxYTl4+pcMvXYfnz5RXOW
UTBlk88Zv9aMtI3Xywes6pFaZMzzy2gUmG/pftFd3YTrvcP9Ch/W4/cVN8W1
X4yCn1OYnGx/AxocNUrVSq1Hlj1u2hUNo8DXLJfEk1OPV9f+enqrqR5lmVj9
OxdT4AqfRr19XB2mjS7oMflej7o6/I+5t1LgwfmfyzfH1GLEi3+jukR9IWjE
z2lvRYHNyrr/tiXVYFhZ+/QTqQZc2Lp7Ou4OBaKHLPJH86uxrOUY8+5tDfgj
pTfbKYoCd1Z9FdzUVoXDTWd4Vxk04NRejkGBIgqkzr4vmBmvRJbSlxY5c/zH
b1/roV4KBF4/XM6lWIEDtxd/LPBowCXqpXJy0xTovvYotsK5DN/dnbn75mUD
UlecbODiH4PW++r7HnwuQfEVNfFd6Q2YKzepGiU9Bvp+xm2jP4twJrNBbV9r
A17dG7RqxbYxiFy+ZNErpUJsyikT/TnTgGfvnWI5e2AM1O1X5nPYFOBPI6tw
z7WNGH+xo+CR6RiwzqZ2pHjnochZ3Zhxg0bse66RFmA7BgbSHWIiQTl4veWl
+aLbjag9S91vfH4MNE/G1KmuQOSU/SQslt6I5b4p8u0XxmBtbV5hfE46rtn0
5hnn90acZWvX3XhtDELHpLdpLP+MJjcfBx5WbELVFzwS5jfHoGj4W3k/Szwe
0PArp51uwpsf2Goz3cdg4m+z+k62CLzux81ZGdKEtncoxWy3xqBydmjrvzdP
0GHzlI5KVhPKXVjFzkGsy43cXLEh1QljwpS23i9uQskVzYcfEM+pY3vIYpbp
DB9D3pnUFDWhYS6VN5FYr1oRO/768FOIWRx/qjujCf9YuoIt8RwJFqO2iB0R
oHa171FEcBOeepe5N4VYX8onmXeLPx6cBoaXsto14fKll38/J9Y9p95v2yr6
GRTu3/Q/JNeEyYp7JlYSz1fQaMmazU2HX9curnGcaMQU00TBZGIfTh0U9Vgj
hLBaq45JKLURObfKbNa+SHy+s+jhwOMc2GlwYMLeoxFrHX3Fs4h9/vRmqfY9
rzyIk6e2/9FvRFNrDtEK4ly6ZLJzV8zpBr8nTHAS5/jCpOhnNnGOYev7tP0V
C+HJdKRKOHHu0nvNPvoQ525nsrSP/2cRpO3Uu8lCxIm/4Yl6JSJO2NNfCpQk
l4Df8DrpIiKuwh5kbU8j4kpMzeWvm3MZdFr9veNAxOEhdoPjK4k4DNeV9hZU
rICFPtTnV4i4fb3k4Uo1Im697qjZKE9UQrOZVLEeEefdf9hcpog4f328uPZG
WxUIHS939tZvwM2UE5ulibxo3CsaY1NQDd9LWMRvqjVgyXBn2W0ij3T2PXs1
mFQDFKtXtnclG3Cs8LRMEZF3b/vHfq37WAunp+OH+jkb0P7ynQRPIk91fmf5
vPtUByUFW73efqvH6S/51jJEXsckrhENz62H4BhVC6+Genz+vELzO4EDS5q2
xAoNNsAxMcOnP5PrUVnozIU2AjfkqpgGL0k2wZPhK0uk/Ovx/hO/JEMCZw7L
K1zSutkMn4o+PJs8Xo/6Tj+GZghcemK6eYMuayvU/HzU1rOmHlMPL/5mSeBY
99Lzouey20CXJ/JVWnsdOl843cdN4B5rd61QVVEHvPg64cZP4OTvLwe5vouO
gEBFeTl/aBcc4On5LchXh9Sj1JyV54chflT3+DuFHvizwEjv5aNalF2tPqHv
PASKhvu8KmX74FxG4ZasDbXIifGnREYHQCG00pRSOABt7utn+RRqsXuE1XDE
oA/OW7/7ZtPaAPySQfoHgrLxgODW0uRnBJ4ExHHwGLhBtqFfe5q+LQ6E1V9r
+483+D9ufc/oy4UJrtmY9VG4ynZdNF7tchfaHk8Dx5kXhV+jO1E2ie+P6Zt8
pE7yqx49PArsR/8G+GoMokcWX90tniLUXxJydIVEP2QfTmk+YdaHns8TgnTP
lOPGZamXawIGoUKxf9bItQdLJg9v+3WxAi2MQltFFwxDfzWE/fvWhRv6JO6E
767EJTtcVfbNDIPqCIsHr0sn5mhdp7CxVKH2mh6JmfgR4ArV3OxH9IcLqteI
Dh2pQp0fPqXqW0dhjCOf2z28Fbff3Owf9KoK85PO7Wwj+oWtFlIG5ctbMD0z
w6i/qQrdLoYO906Nwj6VkvMGiU34vL0tQYijGr1tHnh1E/1Xpsr6k1HnG9Er
xodXSakajyYvlXPyIPqs7Ht7svY0oOxKU4W/BtVYesfuysI0CrD+okisk69H
V5aW+1KO1ThhHa6sP0wB/7EmjnapOlRRqm/k9q3Gqnu/uq4RuDftfTvpnnQt
Vkrpnv8WVo0BnmredgR+Knaa6L9RrsGJf8a5mFqN0bGZHnEWY2B46GbMr/3V
6Gn/UEq7shpFbqppV90Yg4oDElb11sS+PLDs0B6oRqNTgyfEQsaABXQ3/VpQ
iWY8H1XsZ6pxgGPfroHPY9DH3bKftrscPwkYKhwVqsGNu/g3GFSOwbcDTImv
b5eizepatvebazBKppLzXv8Y+Mr7ncvKL0aLBK9FcYdrcD37+vG0P8Q9e3Vj
ettsIe76yaZIu1CDkkdcDpRyUmHFIh+ek5u+ogu/sFzlqxqMeDxwOFuEClxn
7obpmObj7qKNsT9KiTroqWVElAwVTH6/VH1zNheVdKsrg2drUPME9dAxZSo8
ndp7etAmG8fq8kU+qNWixP0nEunqVAjgquZSP5+JxYtEj8pcr0Vbdsv0ZE0q
rP7nsflzcgq26bff/p1fiwWf7dRMtKlAW/ryCs+1BNSK7Pzyj6gzeSX2eGbq
UGF8QcCNHK0oVBLU64g5XIetZZltB3SpcMSqPzNlMAj9DDlGOW4TuJrxos2Y
WC8OZjt0/IkLFr4tedb9uA6P/bLhyiKeEy97TOzeQjc4XXP1ZEtgHQ7r3Oka
INZn5b3rdxYHw+71lyrP3qzDg/rllhPEcwLGpWKWeUSB3gHe76M6dbg6r8t/
x0EqMFMnLd29EuCOLLfBc446XK7h6eJDfH772loW0+QUkDJlP9KcXYvn/P3c
2A5QIc+lptjoVCZcSEhR7r9ci07u/I4Ge6lgu/kd30bLbLhi5bt109ZabD4k
y7ocqFD3e1VArn0u1D+TWKdK7LPQTp0DAcQ+P6nTUmkxyocbfW9bJolz2RIx
sbqSOJe4Hy4XRhW/QlxIbMAgcY5M/FaNzcQ5fpPKDzKdLoTLdzBW6mINwiCT
fC9x7vzdkvd6covhddV2ZT3DGvTlu96eTsQJzVZz9o1nKZyN+XRyhoirgvUu
4veJuLL8Pj1K3VUOvCJ3jwQScXjJ/NZ2UyIOy0tPZJxbUAm8Oy5df0PErfs9
Ubu5uOWN/TtQaF0Fo8WXzE4ScW4oJDYuSsR5coiH2RLtapAJePNqE5EXXyq9
I+fygnZCYeOocg3s7hQIukrkkRPXjpuxRB5JjvtqcsjUwnhc2eh9Iu9ytkho
WhJ5d1nPpuLRmjr4ZCT5/KFPNbouktNyJPIURK66rVSoh+KHJRM3z1dj8D2n
0e1EXl8aHvejajaAafGXcjUCBwZdD7gPpVLgQ/ZHybVOjfD6ncoxJ8Vq7G6K
qgICN2jVMoa0pCbgmk16c5q9GmO8r94JI3BmVyn1lINQC4hfknntSOCSpmPI
jscELv223czz+20rpNhw8zwkcGzjz6eqN+dwzIrPXPNkO+zbWdgYYlKFvxtH
7CZUR8HkgXp9r1MnNHKXB8WwVuHyPv4Dggkj8KchWVdtvAsm2+rzVDUqUW9c
+Rg70wiIH+suNTjfA7fRei27RQX+cYgyKlw0DEUH2IVuWPWBmFYBb8n2cjy3
y9p1nf8gdCssDlt1ahC+7zVwG2cvxYW3TCvWZPWBiFWYA59DN0CQIb99Xz7q
rFx+O89gBI56266VV/8I9rtPe45KPsOwWU23deP/1QP/p60nrsz7FDBUhasp
vqs02GLxYlnGJ/0KKox0nt3b5NiDjvDWr1GyFFlSB3M/7xqGU46RVzkuDKK7
yIeBVKkCDOlpYFES7YcbhdH3s+/2YcshCfbpDV8xOTSr8sTQIPw4ZsAa9qoH
s5gaNoqsLkRB2dHu4ePDIKt4auXltd3Y3R4U0F9fiIlrPdwLTUdA0SJNR7yv
E/8sCY7MdC1CoVUzrQM8o3BWPy5+d3M7Rqi2PU1gLsYu00Dt+0S93fzOzTN0
WRuOLjFdcOVqMXI9DT0XT9TtT89xrHP1aMFtE3V/J3uKMYfDJajClgImgSm7
aSua8aHx7osqaiVoydp2SzeBAmUiFR2rqxuR+8zCK9OeJfg24fJY/SQFGspW
q18Pa0C1kjjHjNwSNH+8cvWA3BiM7rvDmupVj7opT1+o/ilBvcv3FfYeH4Mt
sMW39XIdvmo6sN1LphTznktXb7s3Bkn+DYZvr9Ti96GssVCjUjxd+S4pNWkM
uHyTSh29anDH6clsx5ul6Oy8YuBc8xh8L3WQ+hNE1BM/rl67G1mK++8uSe6f
IvpTsSVDHp+qcHth0N4f1aU48OF+nPcKKrg6p8nYv6jEsCt+TgbTpTh2nv/I
QwL/q6Z/T3xsKUdn41+XlsqVYbXi20jjQ8S93GNj5riyDJcc9hQ6aFGGD6XD
Bf/ZUUFH++754uMl6K8VUWUdVIaP/pyIenSNCqn1C7IXvi7CwwfNjyU3luGm
ex/WqgZQYZOHE6276StGP7fk0Ftdjmh4tqkrjAq/mPkHjy4swAO7nex+XyzH
V8IWf/zjqVCSVjR4SzIPLSRY/8S2l2P4WVXftUgFMaf3KR+kc7A28K+4u1EF
3nj/8qRHCRUcys+X1nFnoYLCjp5LvRVoHi2TfqOWClfuLOv2tklD/bEl+yx8
KjHp8701hc3Ee1pc8MsXT8I1xZ/7Nq2uwhH1N6uOtVNBaI1FadiyGLwZL/Xy
+PUqPGnidDyqgwqm7yXd+WnP8aFtmduKgips1hYWrifWjfvZXa/xXUBZgfIH
Cd1VOPaocwSJ5+hfLtqV634JnMcCTNo7qrDUZEGyCPH5OjHF40f5QuB787+6
lC8Ezt/aE/q4kwqBZsO2TXtjwHCPUZSOaxXevux9/ROx/vHEu9BbYknw68hC
93MrqjCh/5GiFfGcMgMhZymTNHD7sSh86a1KVE6n+V1sIZ7PN+U5ypwFD2k5
Yw7dFVipFZFWTezDdb7aiKerc0DFcc+WA8S+SQyuzM0n9i3RICTGdlUeWFKz
eOM6yrHl7aa2/cQ+a7lr26QzF0DA1gbZxMvlmLb8mmAkcS5ephtGNtd/hbOT
Rdc2SpWjsGha2dw5OvUmB/eFFEHn5qORW1rKcOsVsRx54txDEg3vbjEvgbuN
G0SCgstwd/0XlbdEnLxWPLetVqQMeHxuzAafKMPlksKZE0RcPdTk4VFvKYdQ
k5LNpfJlmKhX3q1BxCFNsOrGxueVUKLCFW85U4ry53Z1PyHiFsp/nD37qQqW
3Xoitba2FOsm3RQvEXFuUcsfwhRcDXpJ7eddo0pR+vJN5kYiL8a3nSx+4lUD
Fh6jM5vcS/E4p8yoGZFHOcskfGeu1BLfI07dZlyKSyeDmcKIvGtyVhm1uVIH
oq/WVEwQefrDaWHhSiJPVb3EV172roevG4QKY4i8/pThJClK5PW4heZe8zcN
4Ml8wdUirwQj9NuM4gkciExbwKVW0winbjWW990uwRUHmXn8CdzYXnKtjEek
GR4fnIyP21aCND6hlt/xFOCdWkH19myBDZPcVyX7i5HP/kCgA4FLC3folpjw
t4GYRad2641iPNLXJGlA4Njd60HHVZrbQUCkcmvzwmKUfho0rkng3k8lJjXj
nk6Y7X28R/9aET7W9RVj4h2FH/dqj8tKdYPjx0eDGd2FqNUcYhVydARCFwuL
TT/rgST+lGuroBBZLGzVn1sSOFyxY3Hq1T6IqmTtPpX0FU8u3eZWPDoIUsby
tsfWDEKr2aSNlEYhGrGsVTfW7wedX5iZs6gfIKEkk+NXEequafoorTMI0l/r
f9IOf4VbC/oztm2IxIUd+X9WXv6vHvg/bT3BqP6ZaXkjHrZedi9W8A3mzgQM
d8SOwe9+0z6qTD9G++olbT1UiG1Xs9gjtAbh3MSwrk/5AEYVF0qvtM1Dt3s6
Ysmj/bBrWCD87tU+vLrp4YGJRTn4WLyfrUdlCL6VRFunJfRg+1q5lzUz2Wix
WzTU4dUwLBRY7eC+txsz/NwfOZrmoGnF6XXxT0ZA18B2vZ1gF74e//I6Mj8H
X3RScxbojkJFWXn0y3Ud+GiiZ8ZcLhed1A+IXmkdhcqZlVs/WrahfNfl72t9
c1GcVfr9mC4FnCw6D+6oaEF58drH8m25uNkt5PvOGAroZ3mV+Fg1o4imh1m2
RB6+uy+wNeIvBcY10rrMlzdhxpRovsjxPBwT1otPhjHY/kuYybW3ASels9TZ
A/PQkuvTHuqVMeC3Sk+oya/HZ3ss7+/IzsPo8YWVknFEHxTKecflcx2a3+ji
chjKw0f/UiPi2segg23Zis3JtbjG+1mhJFc+Hko94/JgERX6uDTYrmfVoBu3
yaqPG/LxW2f9uVvyVIh9b+M2S/Q/YncvVdvr5yMfz8/N4npUCN31peP7YBX+
DHRxrXXJx6bDamX156mwf/cBh1aiT7invbah/Wk+bhluEmC5T/TRAYrr47Qr
8HXjTkfNzHz8s801oyeCCult3iZuD8rQwEnfOXogHxuvnBdKyCb6RDbp5371
JSjI/sD5E38BClFOw+1GKgxsulrDIVyMB4dGXYQOFOCU+bX66xQqSNeOhaQc
LcSNO3lCpn0K8PbXsNPvZ6kwk71eTeFxAUJtstfCugK8sEqk9S8vDVQ+0Go1
MA/3u423eyl8RbWR8EBXcRrU6yc+7GrMwWS9hltiL79ilNagaLv83P83ccP/
QgjikzsKIkdkCrFY6cAUy1Ya7C6MyFOUzkD9KxmLsxsL8WZNeuGjXTSwUFX6
Jc37GRfGhr2diivCwRsDzmL7aOBRdM07OyeO2Jdg6UNRxZjwlZL2ZD8N2Ied
dHc4vMbtbVds/niV4PpfwWU7tWkgqwwFL3ZewdA1W+5yj5ZgxjWNtjAtGkza
bGofaLgB03aLHcc6S3C5yT1lWeI5FZH3r1g7hcJoWZ7PS/sSfK3UfsLhAA38
++/N7qiOg5WyJeO694vxX0b5x+/E8yu25f/Z8ycZ1v4QZMfwIox+lqI2Rbyn
yugP6zdcGbA0riEuvq4QOZw4NvDvpoH6Ef6rNG+EoZx2ZlXZQvQN1HypR+xD
Y6VH8+OKHOjSYt7YE/YVTTrduqaIfXNm3cf5LC0PqB3Z/JObvmLfop2yjsQ+
F/hKbV/sXwCSTkwOws0FeG2NW/PcuRzZtHJE7kghBE3wFYffL0BumyW3I4lz
FPeJ7/UULIbHUY5OdQcL0GY1p5Mbce7+PNbdXrUl4Mn9Up9jRQHKfZmudyTi
xPAzj8Xi+2Xg9uHPab+hfMzhC02biyvxRD4Vqf0VoNcqvXw95mNf8oPcViIO
1Wv4ftWxVkGfh9LJqmf5uKSdSarvHhVuJJuJfBysAq+cXnFNt3zUaJTdXkXE
eemzuOM/K6vhpXUarDucj6uUhBu4ibwoDOMKeJJVA2aX1+toKeWjya3Gs2eJ
PAoOrDvjklwLIXetlWO48zHliUusC5F3MrOTjo2f66Dl2Bsb0ZE8dCw8aneP
yFOvmRd/TAvqYbS7YM+K3Dxc3CGo+ovAw+subLPL+xrgRpH1PukneejE840z
lcCB1ZW/zq0QbAK7B8zx2ZZ5aC+/fokLgRvO5jeXHbBuhtUeJ5w51+Zh7qqD
QkcJnJG4Nq3bXtECpVb/Ntp05SJGrdtI+zD370IflBiybAMj85I31/xzcbdE
0Ph7Asd84lwPsazrABGFhA9qm3JR51fxJjMC94ybqy/uWN4Fdzrtt9eV5+Cq
HzvYDAic3MrGvOeGRjcEbVI48+lkDnaLv7DhDRqBf1Pyy9Z+6IEDAv/sWYVz
cLMXN1Ptm2FY4Bw9E2fbB78LNfYbbs7BJAPPnUf2DcGLJQv+hfoMwG61wnKl
klwczhjzrd06ABHVquWhvIMwxJ79cyS5AB2XKTR9vdUPS6CDSzGkFvIU3K48
zovCc0npZrxnqP/j7rv/1sl1h2jN8Kv6R9GF/jfYKf7p3P/7c//H9QHFyRbk
SahnElcIxKiBjKhE1jEA+3F3ZdZBjB1+8sykOB3VuWSrzaf6wdfsm9pitQHs
pg0++Hs0Ax9sbqzjyB+AAMcLpXaH+3Dcg0mp7E4KZtVG43bfIRAvXHDYObEH
1/ffyCh9/xmrDH0l2iqHYUL/XdSEcTcGphl/zS76jM4NZyets0ZA9nTVMXWF
LiJPNDzubk3BgSBbY1vXUTgl3GsqfrQDzZYM35pOT8HReyXGvKwUeHmWP2TT
kzaU9FI5d3ZLKmr6vja4f4kCMxvCznQwtWLstmvfHkWk4lqTjD6BZgr8Ycp6
YhnYjB/dnRO/cKRhDMsl7SeyY/B58PYLQc0m1POe/NBokYaN+7fM3HYcgxdD
WWeX8zbih70hEk6RaRjBO8xt+XEMeH41rXpIq8fwDhvr/qE09BPxqJjtGYPq
/h8Ffp11eH1/BKujRDryPqQ8KeCjAted74tm22rRrnBLVJVxOhp4Duqn7KCC
gM0/Fq3+GqybOeKw6G46xksaloTZUGHJ+kzV7T+rkUn546aWlHTcFxo7sfou
FbgnBa5IcFfjy3yfjNDBdPzUXy0UF0kFDlWXrbmyVXh6hup9ViQDfR2Cdn3+
SoXBs/jGM6gCH3NJQ7heBprJbWk/20OFB/uz1wZ1lCHG3qpX983A1DdW+aL/
qMD5M13EXroUdcdvt7NVZCDXwgtyfctowP9zr1u9czFubMpaIyCciRv2GWmO
y9Dg2Vb5NXwZhRinM90z4JqJT+26Gw+p08B+Q9fhXbMFeKQ+W6e3NxNNYm+c
mNWjQaBl/4z+1nw8P3UmL+rcF/xcn31/hRUNWPmDi3adzMUHzEpbc4Sz8MlU
q7qzEw2ebmStFHTPxn0/2508ZrMwq0fSv+0GDQqzgyZXdGXi0SSe8+Ji2Qhp
vwV5fWkgfA3Onyfi4P6S2WPX/2YjC3/AL89HNBDSUM6osknAtP5dTKVEPWkR
GH7wRRANHiaczA56Eo6X+RbYVt3Pw0MJP2IKn9GgYbW5fsqsOx46wXTot3U+
7lMwOC5MfP5Hr87SLvAGq6/q13x35mPyj45Kg2AayLeWPBDZ/hakLMpfnTLI
w+WVVocjXtCg5aPMEsONCUAtG1vYypuLdio5L3iJ51844H5l9YJUCLt1fv39
qWycueTUqRBIA5NQavHrjEwYOZTqISidjYVU428HiN+lbj7ttMw5G54L6b49
IoQoqpk6QSP2QWhjVXCgRS4MS9ybfrchC0vCY4xciH07bhBRUr8pH0rZGo54
3PiCkVdv1vAR+9yCG741TRXAsV2dMlXfMvHee6u8P8S5+MtMaG5LLYQF1jxX
Oz0ycU+Vsw0Q57jloxyHv2MxpNGOufKuycQt26NMB4hzb0pSk49dWwqX1Z6s
+l6fgbRc6lAnESfXldKut7aXwbrz6zYef5yBirwB0SxEXMlpemQee1oBjmLU
sEyjDLwqFSlxjohDj1b1oBDZKhj6tdXoslgG+jPTKDFE3J6907V6iqsagjM5
PddS05FnkVD5SyLOWd6KJEv9rIazrSsDEjPTsW292ll+Ii8OhkbXmfXXwLij
i8LXe+k44fZn6j6RR+9bwyXWtdcC50wLzf1YOtbF9duEEnn39uEl07LOOlhe
EL5IdV066nZNZkcRefpIj8egh1YPVAdzMKamYftvFvYOIq8tji9f7sHbCIaR
EvFVsWm46GLnchUCB2z82AP8NJvA0unUO2m7NDzC0dR6mMCNtuHbLVWBzXBm
GWXIhy8NpTn9oi0InAmNs89WYG4FvnfDyr/iU9FffZtvZxMFBgQH2eWetMGv
fvNfdzSI+P1wetqWwLEz3XcXmJh2QEXPrV3RRSmYfSdDRYjAvdyNflNL5bsg
OPVG1lGtFOw8qi7eR+Aku7G/JLNhNzzb0+Fn1fAZ4x2FJVZmj8DLdYMLH8f0
wCPu5AvHIj7j9UrzmJq6YdgkKvxYb08fcKg/fTWimoLqT8abO4OGwPQa79Xt
EgPQsdam9ZFrGobzPZD+0TsAD6+aPPvdPAhMuzliE1wzUHRfV4wCdz/Y6mlt
6lVqBpZzXRcXeYchi8yS3dq2Y//j7sH/1sl1TkXpPWsaXNGxZjKP56ESLk0X
Kekj6oE3e65vGd/Vhhaq8VE7QtwxlC+Q+VcyBRJapOKEmgaxXCjy5NLz7/Eu
5WD8iwP9IKu4NT/0bz/yV3yjKjVGY43d4413lAZBWVTBVka5D4UyAhMusUXi
8ympkEP5Q0Dd4CCU9bEHwwafvc8ueY9f0zgmgieGQdhh+aFj5t2YLOb9LiXi
PU77UibsG0eg1uKNFbdaF5ZBsI/Tn/d4eoG41VK/UWhN755edqEDj/feNus4
H4FJXL1HGoUpEPupfvRqQhsqSyy2jxmOwKPVR6/rBlBgg153MdOqVrzd3K3N
fywShb1vyvF9o0C2ZNiat3HNuKs37ZpAdiQG4ptPVXvGgDlcYWjXiSbUT68f
WiQUhX6ZVhp9fmOQYS7tvEi2EbUPn+hqsYnCoSeV9V+Lx4BvVF3lEnsDPj24
IfJBRBRm7bbv2MtEBe27Suz3f9XhZvNk61u9UegWsc6vWpEKxT8X8ql+r8Xj
Sw08zYWj0XvEtsPZjPi8ypHyb39r8JV9mkGjbjR+bxf78seTCllxgmMhS2pQ
4h2KUm5Go75PacIiAg9nuGJ/rJaqxoqKEEeDhGh0fXU/fU0xUQ/YO9t/2FWF
B/PXvSvvicbYOJcVbwapkLe8bPl0fgU6+imtFhH9gBTl8tZvLDRgEr9nWcVV
jtxJ+kt1TD/gpV2SZbKraPCWbdHFm0dLcXFlVOy7lx/wr0JmzH0Von+X6tze
GFGMsv9awx6PfUDjkw0xh3RpQEsOfar0sxALQk4ZbN8fgwI2w9pOxL3z1p7n
t/zur+iTXOVwLSMG2cUmDfkv0EDLLBxO+eSjqOmBxSt0P6KlbqWa5l0a6CSL
euoU5uKU4/P10UtjMfb8uM1S4t5cOnRq28LpbPyXV7qNmT8OlQtCP+yPpEFP
xYq3aduyUJLjb7jVvk+YO7jW+08yDX5/LcnhU0rHP5832p24HI++LRU/ynNo
cKtJaHO1dTIuO8kSlvI8Ef+dMv2sUkoDOBUm92rTB6yt//aE9igFTweu7X9U
TYOxLx594vy+aJes1nv1WQZmTcoFPakk7kGr922v/wSC5YRTYW15Oq4UCCg5
SXxeLjFnjRJvNJjtG+1ymatvk19G1NXRYHjb4ejYniRgDXetXZiTiKZWdzU2
lNFAkoV1nys1DcZklMLF8uIx1zt1mjWXBqNDZkY3VmTBP0eZpCTvT7i5yLbg
N/G7xEKij37/lg2Fs9F9xg5xqD12v2kvsQ8Pc9o1n+fmwqVlz6X3G8Si5wP3
vUzEvr3+edAm73Y+eJ5b0cJ56yMq99Zvmtvn+p6IPRt2foU4adqR4r4Y9Hm5
cDkbcS5LprTrUyYLwVTn5egi+xhcnFP42YU4RzRnsneKKAaK8L71Suwx6Gn8
RngHce5OVfL1L0xLIeHqyOnlCR+QvXRs0V0iTqQGOwqcl5RDduPB8OcnP+D3
ZZIhG4m4kq74M/KyoAJs0s+J5il8QO8NoQ+aiDi8HbJgxYpdVWDibbLo0rdo
NJNviI8g4vZc977nu6Wqge3jBJPMl2hU9TheKEjE+aOHrmr3ltTAlFfw+3Tf
aLTY/7aCiciLjdRvhj/+1kCUi8J+R5NoNO5YsHmcyKMOVq4+ne+1sKQZXKLW
RKN8n0K6LZF3p2c5bnz8VQfne6Xyy2hRyLntx9EcIk+ZRLR0gtkbwFUw7eSf
pCjsG1p9Q5nI64PSGYIaso3A9iPmUIZLFF5IbPaNJXCAKXZlh9uJJpgsSPez
kYlCNs6qwhICN4JyHI62xjXDsQ2ZoYW1kfiN3aU/kcCZB7dTb4usagWOy1ax
l50ikebVzv5nggKL3/ucsklog5MJAx2HF0Qizxb3z+oEji24f+PCQ7cOMOMu
XCR1NwJv8yScGyBwr+j84oqDW7sgRCHe8jpnBHpfvSbjQuDkwNFDDi+PdUOW
jXYH17v3WCvSH+DXNAJFN74ZL43ugURBg98aD97jT2FaovP3YWgWPZE5rNAH
NB/LvfvVI5A7RNRqTckQaG8Nt7P93Q9eLswzk5pRKFjf7GCqMghx7z17fcSG
oGrLoxqZp1FY9SnDmPazD+6uT64+ndYKj163+P6ofYTbRcY1xuopcLe7Y/dR
/dMwtTRHeSPRh/5y7Lv07T+d4f/v6+wS5smKNDf049RNpwUowQBfdUs3cS6/
HGQa+b3bMDvpydXNfC6Q9s1sg+47Cpx/I6oQIzGE+onfNQTGHEDDLrCzYUE/
xBQbFw9S+tGwMEFBx8IAddxvKo0cHITf/pEuTjJ9KJqy/OPieC086Ld49FLz
EAj2qjq3RfWgWOwxrirrTZh/80SW9cww9HpM3jls0Y1+KPfTUZATn+3scTTu
GoEdx1KK7XZ0oYbOKF9iBCf0y6y6FfNoFNYvYpatudGBA4fTV+X2LIcwzjWw
Q4ICyZ8DFEcy2lA3fSb50kYhCJStkBgPooCG4vlr99a1Ik+XxmoNZUHY/IZy
Z9kUBY48vzj9N7UZ4V2WwJ4v/LDsWZrOVt0xKKftDFU91YScgS+viNcshU13
tLXjH4/Bug8+J0M3NmKcqyH/WwEeuLBYQ45SQ/QFT9gCIngbcJu+zDLRgcUg
stLPPpODChV7156+OFuHZbWDyyKj2eGUXrKrjxoVZi/4nen+W4sFJwT7mq8u
gi3L8vVO2lFh64M4dWeWWlQ9JWKQIMcOZzSX+Eg+oMIfqQvCnPw1yDO7m2Vd
KwcomU8VWyZQ4ftvcyHv9dV4pG5hXuHCxaAe4h8UV0uFup06yWVaVdj5Plh4
mQ0H8HYJdlh+o8LmhOo2iboK3D+7qvcIhR1U+ruONnPTwEZTxY1/ZTm6nNDM
z8jih1Wq7jL7ib7v68Kth+zPlGI8fuPTLxYC+5yJj/W7aKBWuOzRmbRiTEv9
dJKSLATXKjNl20xokJtyV22KvQhrPPs6Pt0XB/2cBjstBxpUX1Sv22/yFf+u
dLHQrJaCX5Mfvit70MDDssvYOTwfZweuSjy0l4ctYwadlY9pcK6/z4ZzOBc5
neLS6+WVYUrOXlHkPVEP8JobxazLwS+FCetYG3fAWHdmjOBnGtjFfbp/JSUL
V681D1i1Tguyz6c4VOXTICQ1RrnkXzpKRDRXPLh+BEbe7hUxqaHB1CsLQ/nB
z3gly+Nsr/ZpEEnX8RDppIGzAN/PE+GfUITnwkN+y+vwUElh6iKVBmeFHyue
EXuGYRomUtsVXUEmLl3z/DQNzpDr8I5cR8a6E/kcECWfg4zn0L8XLpHfi4zv
fUG+J6wm3xMZ72lP/i6g/y5k/C4+ch+ghNwHZOzDWXLfgJncN2Tsmye5z9CX
Ob/PyNhn+rmAgNb8uSDjXOjnCH2m8+eIjHPcQZ475C6Jnzt3ZJx7ERknkM43
ORcnyIgTelzBfjKukBFXymQcwrL94nNxiIw4rCXjFp4deDYXt8iI2x9knMNW
H7a5OEdGnNPzAlLJvEBGXqiReQTu+cJzeYSMPGK6OJ93YJ2zfC7vUJWed+Vk
ngJL4MBcniIjT+l5DSxPZOfyGhl5TccBuJhoNIcDyMCBChI3wFHp1RxuIAM3
6DgDv9RxDmeQgTN7SFwCZo15XEIGLiWROAbbV83jGDJwTIbEPTiCaXO4hwzc
207iJEycHJrDSWTgJB1XYfuLDXO4CgxcpeMwsHjO4zAwcPgPidswKyQ4h9ug
S8ftDyTOw9Xn8zgPunScb7sTKU/cC6Cc/dNw+ZgD4kbBrrl7wX3bo1biHgGW
qOOftvC5oNmpbQpz90hpg37VBpob9DOv4ZwJUMKLJ2vn753/affj/2vrF6X+
NZjrn0aXmfJiZf2jIJ/XNV+n5Rz4XE/UdSiiYf+AqOtAX+zP7rm6zuhORA9R
B2Lio4kcog4ES83yI3N1IL1uxGKyboTl9LqxhawzUdd3vs4ELnqdSa9LMVBo
vi6FH/S6tJ+sY/EZWcfC/65jyboXe+Tn615g1L3MZJ2M17jm62TwotfJ9Loa
k8i6Ghh19X2yDsfFZB0OjDqcXrfjc4X5uh0m6XU7vc7HFV/n63xg1Pn0vgCF
vs/3BQQekH3BrPB8H4EhZB8BjD7iDNl3YFnPfN8BjL6jk+xT0JzsU0CO3qfQ
+xpUIPsaYPQ19D4IJb3n+yAwp/dBZ8m+CRNj5vsmYPRNvaXp+0x3VWFDVVrI
4fFoSO27IBZG9FlpHV22qwsq8F6hlXSw7Ae4eleI2kv0ZWvIPg6HyD4OGH0c
ve9D1mvzfR8w+r4ssk9EAZH5PhEYfSIX2VeiJ9lXAge9r6wj+1D0IvtQYPSh
9L4Vj5J9K6jQ+9ZAss/Fq2SfC4w+l94XYwHZFwOjLx4h+2icJvtoYPTR9L4b
qWTfDYy+m96nI71PB0afTu/r0YLs64HR19N5ADxO8gDA4AFGSd4AbEneABi8
wW6SZ4A6kmcABs/gQfISwE/yEsDgJf6QPAZwp8zzGMDgMei8B+iSvAfk0HkP
Ok8CdJ4EGDwJnVcBOq8CDF5Fm+RhwJnkYYDBw9B5G7AgeRtg8DZUkucBOs8D
DJ6nieSFoPHvPC8EDF4onOSRwIzkkYDBIyluu5Csz1UOJofX3VY78gEkz2Ux
bybiSpwy8uJmQQWobi652ir4Ac7dMb9CJeJwMclrQW3ePK8FDF6LzoPBvsp5
HgwYPBidNwMXkjcDBm9G59mAzrMBg2crInk5iCV5OfCi83IHSB4PvEgeDxg8
Hp33g+OH5nk/YPB+dJ4Q9pM8ITB4wgUkrwjjJK8IDF4RSR4S3vXM85DA4CHp
vCV4k7wlMHjLjyTPCVaS8zwnMHhOOi8Ky0heFBi8KJ1HhUr1eR4VztJ5VDrv
CudI3hUYvOsYydOC8NA8TwsMnlaF5HUhJX2e14VndF6XzgPDOMkDA4MHFnRX
ihVqGgSDBXmXl55/D0WGOglzvPHwwQvbxne1wdHJwQ87QtxhOQYzzfHMJ0p2
cK9rcAUlfiYX5odKYKkoOM9L/0+7H/9bJ9e3O38O7VVqxuw3xa0s3mGgeiRb
bm7uY/dF4u7v5kHUFbx8Ms41AyJ/uFbPzYlMyLkSyq2bnysBY660kZxDoSk5
h4Id9DkUfW6Fp8m5FTDmVovIOReyas7PueATfc5Fn4thEDkXA8ZcjD5Hw9vk
HA1y6HO0fnLuhqsG5uduwJi7vSbndLiWnNMBY07XTs718Bff/FwPZOlzPWty
DognyDkgmNDngMfJuSECOTcEdvrcMICcMyL/+fk5IzDmjO/IuSRS8+fnknCQ
PpekzzFxLznHhBr6HFOXnHviAqf5uSeM0+eerOScFI3JOSkw5qTnyLkqHiPn
qsBLn6tGvrbdtGJ9FSooHLjlIp4BlMQLK599pYKPXbTo0acVqMAX+eazUQZc
GAzVn5vbsnwx+9zRVobB8WeijgdmgLIWz7jAPypjLow25FwYGHNhZXKOjBXk
HBkYc+QH5NwZBcm5M2jQ587N5JwaHck5NTDm1BbkXBs7ybk2RNDn2vQ5OA6R
c3BgzMF3kHNzDCbn5sCYm5uSc3YcIufswJizXyTn8kifywNjLk+f42MfOceH
k/Q5Pn3uj7zk3B8E6XP/76ROAOk6AWDoBOi6AjAldQWwl64roOsQwJbUIYAe
XYcgTOoWwJ/ULcAJum5hJalzAGtS5wCsdJ1DCamLAE1SFwEMXQRdRwHnSR0F
MHQUbKTuAuxI3QU8pesuHpM6DdhL6jQgha7ToOs6wJjUdQBD1/Gc1IHAcVIH
AsF0HYgQqRuBzsZ53Qgo0nUjdJ0JcJM6E+Cm60xu+a96FdheBjHJK42N/DKg
fJiyQJqIq78sL5k8gipA0kxT5aVeBtzVcFkyF4eHt2ob715fBYbXdpsYCGdA
/979elFE3PKQOhm4QOpkIJ6uk6HrakCA1NUAQ1eznNThgBepw4EEug6Hm9Tt
gD+p2wGGbqeG1PmAAqnzgaV0nQ83qQsi6vJ5XRDco+uCQkgdETwjdUTA0BEl
k7ojaCJ1R9BA1x1NkToliCN1SsDQKc2SuibYQeqaYB1d1/Sc1EFBCamDAg26
DsqO1E2BANe8bgqG6Lopus4KLpE6Kxik66zouiw4TuqygKHLouu4oKBvXscF
NXQdF133BbWk7gsYuq9sKJVcrDYAK+OsWv4czQC9pW8n53Ri0z+0Y5RZB2Eq
4MEFw+J0+MZCTZnTlRWlbu1XnGwBE12Bk+IKgXBu/895HVq1r+OWm0T/KeVH
/m36HTevW/ufdg/+t06uX1RjMVUKqUV0cG0PzIuC4OyudXO6UBPbS7WhvIMY
VqFoPJxcANs+5Y7O6UgVKVAa6jOAGr8DxZVKcsEx2atgTndK16liEalThc90
neo0qWvFFaSuFZTpulY1UgeLVqQOFnrpOli6bhaPkbpZEKfrZn1JnS1Kkjpb
OEDX2e4ndbmoSOpyYQ9dl8t8zai3p6IFf8l2Lj3SlQshX00cqB8o8M2f2WWv
dTNarBIumVyTB5s2lwqY/aUwdMLoQOqEgaETpuuK8SGpK4bzdF3xbVKHjN9J
HTJw0HXIdN0y0nXLwNAtB5E6Z8wmdc6QTNc503XRaEfqooGhiy4mddQYQeqo
gaGjvk7qrvEBqbuG3XTd9Q5Sp41jpE4bGDrtd2slzIP3V2D5qdc0+ex8EDqq
F14cQYVpt0NeXvfKUOh4geyy4Xy4IC8VnZT9v3XjeJnUjQNDN76a1JmjH6kz
B4bO3JjUpaMHqUsHHrouna5jR7qOHRg6dhdS94503TswdO90nTymkDp5MKXr
5HeSunpsIHX14EfX1SuTOnxUJXX4sIiuw6fr9nEbqduHKLpu/wGp80cNUucP
U3SdfyXpC8AZ0hcAr+i+gHHSR4AiJ+d9BMBP9xHIkL4DeEr6DoDhO1hC+hRA
i/QpgCzdp3CD9DXATtLXAPF0X8MJ0gcB0x/nfRDA8EFokL4JkCF9E3CL7pug
+yyA7rMAhs+C7suALNKXAQxfxhbSxwFypI8DttN9HNOk7wNsSd8HuNF9H2tJ
nwjYkj4R8KD7RPpIXwkcIX0lwPCVfCR9KKBF+lBAgO5DySR9K6BF+laA4VvJ
5Hh+eo12BZyNyCvW+5IPeW4htE4iDj/3n68WZKuC2tyYWLOgfJjYfLX2BxG3
r0kfDdB9NMDw0cSRvhtYT/pugOG76SV9OnCc9OkAw6fTSfp6gO7rAT26r+cE
6QMCM9IHBAwfkADpGwIn0jcEH+i+oZ2kzwjSSZ8RWNN9Rm+7smtNljeBmqSk
Nu/xPFigJa6cQuCG3i/Ncn+rZjhW5jzxXiIPglmjv78ncMaF9D3BCtL3BAzf
UxXpkwJe0icFEnSfVBXpq4J3pK8KztN9VTqkDwtekT4sYPiwWEnfFjDdm/dt
wRG6b2uC9HnBX9LnBQyfF90XBmdIXxgwfGF6/rJMPuUDIGi75cpK2zy4yBlz
Zs5Hdv5t2haaTD8k0a6FbjlUCCXx2zveaw0C9/urVkfLGyGx6F12lOAbEC7W
yJ/zqf1Pu+/+W///Xi80XcLx7fBXPEGRHIQNkZBpz9055xs1O6CzJHdRPybu
uXmJ81cRdK810JrzmfI6m4keWzOILL6SGVIahTCUaXhnzpdK97FiOeljBTu6
jzWM9L3iXdL3Cmx03yvdJ4vHSZ8sMHyy/lYhB471dKJjC/XpnmtFAIZdJrM8
o/DwsdDHjc3t2CO26GHewmLQWB0sq/ViFNhI3y5uJH27wPDt0lLlagM8W5Dd
wGKDfH8xLFA59fmMLQWmQ1Jf8Yg0o4xx1Nq4bSUgsJqXMucL9lokjhtqGrH6
oMPdltsl8ObRmvyHkxSG7xh9Sd8xvKf7juk+ZaT7lIHhU24lfc1IeTnva4bf
dF9zFumDRg2heR80cNF90HTfNBqTvmlg+KYlIv0XLgquRlMZM7WTUaXgPuBd
2zA1BurddzlPfqpCceMkLe7aUjD+oaV3ZQUVKKSPGztIHzesp/u46b5vvE36
viGZ7vum+8RRivSJgwDdJ073laM/6SuHXXRfOd2HjnQfOjB86N6kbx1Pkb51
YPjW6T53fE763IHhc6f74vEs6YsHhi/+5v9i782jqfri+O9EydAkFMkcKWmS
VPJukiIlJSqa0ECTUCkhTUqFBhUqVFKkKBGyKfM8z/e6XNMdoqIo0nN8z+2f
54/fWs/vWc+zfr/166+z1ntZ++xzzj57f/a1zutFf0dPOEf/+44eGoLv6Ovp
7+7JEvq7e1QJvrsvoL/TJ4Lv9PH3O/0Y+rt+8oP+rh9/v+sXcACIJc0BwF8O
QAXNDSBi9f9xA7BKwA0woTkDxJ/mDCBXwBkQcAkwmeYSoFvAJdhJcwzgRnMM
wBBwDGRp7gHcaO4BDgi4BwJOAubQnARwBJwEAVcB9jRXAW8EXAUnmsOA2TSH
AX85DMo0twFfaG4Dzgq4DUU05wGLac4DIgWch36aCwE9mguBRwIuxFyaI4FS
miOBDwKOxHuaOwETmjsBXQF3QsCpgIBTgb+cCiuaawEFmmuBAAHXooTmYCCC
5mCgWMDB8J9RFmoTUoI7j/tZa34XoG4r69NNatxe2zE34crrUoTkX05tKCuA
eQxr0WVqnP+guRxoprkcWCvgcgg4HjCkOR74y/EQcD8whfMf9wP7BdyPhTQn
BOdoTgiyBJyQTporAl+aK4INAq6IgEOCpTSHBDsFHBJnNbmbsmU1mBIVsEGC
mjeulL1zq6HmDbZzn3S3XB3eT/rDW7gkH4fflN0a5pxkfhea4OVTD6mlJ3Pb
WvLA0Sb1hdS8VHXvwvzQSY1Yn7DxxdEzeZg4NXjKG2oei3UbsW9tHQMcz1lH
g4XyIGn5edowd0Wb5rRAaOx/nBbICTgtWjTXBS001wXxAq5LD82BAZfmwOAv
B8aL5sbAl+bGIEnAjeGGnTEWO9GBA6UnOe/Vs5Db+Gj2MGemQMZ7R+2xFpw2
DY+rUyvAqrO3bwxzaWo/2Wvc7CxFemR/8MpRsTgyv+/sMMfmf7X17l/+P867
dsxMmm34knj7vD7KVbuPY/k/XIe5UtYOeQ+kjjQTh48XEg+2ZmL+oYnmwxyq
GzvfnVM82EEOFqVt/TqGer/4Vk3D3KpsmnNFrGnOFRwFnCsBF4tcp7lY6Bdw
sfppjhZRZ/zH0cIGAUcr9KrFPL5zE7FMuX39tUgpNa8VGUjHczHejTvZaD+D
JFwJPBdqXYplx30vDXO6kpw2S3U/aSC26lvfXHtYitaDkUo+j3kwpDlgRJ/m
gGGlgAOGFyHGPW9ryRhR5wy3MWUw+eT/++EqPm5qXpym7FxDVl+9m35ybhke
bmbKLvfh4wTNJSPuNJcMbAGXbCXNMSPZNMcMfzlmp2nuGYmhuWdwE3DPlGlO
GhF6/R8nDWkCTtpXmqtGZtFcNbgJuGqXEia0TTYpI90Fjaf1qf3Qe48xBsWe
nxGf6lOXY1dKGj6ifV97Gdrs6oWnhX7G6o/W67eOLCG+t1auezBUhgcx0omd
7z7DhubCkak0Fw4nBFw4AUeOuNEcOWQKOHJSNHeOJNPcOVwWcOcEnDriQ3Pq
YCjg1MXQXDvyjuba4c8kmmsXSHPwSAzNwcNcAQevnObmkU6amwcZATfPnubs
EWeas4d6AWcvl+byke00lw8nBFw+0Bw/MoHm+OGYgOM3gub+kXs09w+TBNw/
ASeQbKM5gVAWcAJH6vzHFSQCriD+cgWjaQ4huUhzCNEm4BBm0dxCqo75j1sI
awG30JrmHOIczTnELwHnsJfmIkKS5iKiWcBFFHAUsYjmKEJKwFFUormL6KK5
i/go4C4KOI0QcBrxl9N4i+Y6YojmOkJJwHW0oTmQkKA5kDARcCAlaG4k9Glu
JCIE3Eh5mjOJyzRnEk8EnMk8mksJfZpLiekCLuUVmmMJd5pjCU0Bx/ILzb3E
YZp7iWcC7mUHzcnEbZqTCT0BJ1P9+IxexsgSZD8U+3KEGrdXsLJlmE+4w+bB
liq7UoT6aBwwoca5if8T12EOp2fwMw0RkzJ4xs6Yuop6LxwDZS6VUO/FPJrz
CQHnE88FnM8BmgsKDs0FxXUBFzSA5ohCneaIolzAER1Nc0fhRHNH8U3AHT1B
c0qhS3NKkS/glKbQXFP401xTbBNwTcNi9hWZvqlFYpTYV3Uxat5YsUN5mIMq
VqjSUCZbD13TKQFcal7SmOQ7sYWalybI1rxye9yARQ7z9j6k5rHnJefLGNQ8
pvttWvfVfQysYX3L6rCi1tu303nDXNaP+46ukndpwvTOodqhkaUQdu+zGIzj
opPmvkKU5r5irID7WkhzYiHa+x8nFjsEnFhCc2URRXNlMVfAlY1mjPW/uqoD
mUKOn86Np/ZlGVzbYQ7tguTfN7JfNGHWne/iNhGZyJlxes4wtzYolCX7xjUd
U50iqxw1X8Bd7pLEMOf2f7X17l/+P84NL+0ZmGzhRj7Llxd/3OSAPdWJ/3Gn
g1qfHdrXUE0sz01hr7ubDtFQWf9hTvXeOcFm/Jx2cmWUR+VEnQrs1NCOGuZa
z6Y52MSH5mBDXMDBfk1zs8kgzc3GX262gLNNVtKcbXQLONvCNJebRNJcbvQJ
uNxzQ9f8PJreSDwWTbv2iVGJhvYj2pIPufBuWethLNJAzj1j9nROr8LlZRGz
9wrzsIXmhJNImhOOLQJO+LinqdmearXki17Jn2n+VcibMy94mCt+xB410h3V
xMPkeh8/oQpPJnxQbqrmIZbmlpM7NLccf7nlAs45EXDO8Zdz/pTmopPtNBcd
jn+56DRHnXTTHHX85ajX0tx18oPmruMvd13AaSfKNKcd8wWcdof6D5PwtYRI
bxjxasfBaihZRLzoY/NxYBPZIj63mJwecybH26eamucCshf/5kOR5saTbzQ3
HqYCbvxomjNPHtCceTwUcOYdaC49yae59PATcOnDaI49eUpz7DFdwLFvprn3
ZA3Nvcd9AfdewMknSTQnH9YCTv5MmqtPnGiuPgoEXH0Bh58o0Rx+/OXwz6a5
/eQ3ze3HOwG3/wLN+SdzaM4//nL+ZWgvANlOewEwVeAFUKc9AmQW7RHAYYFH
oIz2DpC3tHcAfQLvQDntKSCJtKcAFgJPwRzaa4BQ2msADYHXoID2IOAK7UGA
psCD8IX2JuAM7U3AX29CPu1ZwAras4BzAs9CCO1lwCnay4B5Ai+DJu1xgBrt
ccBfj8Ny2vsAGdr7gAKB92EL7YnAYdoTgQ0CT8Qo2isBMdorgQ6BV8KA9lBA
bOt/HgrECjwUMbS3Ajm0twLHBN4KM9pzgXEf/vNc4JTAc1FJezGwhfZi4L3A
iyHwaCCB9miAK/Bo3KW9G6ikvRsYJ/BuOL7Jcv3ypQSzNbxWFVHj3D57iVQH
Nc7XjXh2Ur+xFKcP3VuiZlGNyc3zpklT70Us7QHBW9oDgp8CD8hc2huCONob
AmGBN0TgGUEo7RmBnMAz4kF7SfCK9pJgg8BL8uStkpxERhV8Vt9UPVtbhUuD
2ZuaqXlgse78orlt1RDbuchjWVIVyvQfKpZQ88ZI2pMCDdqTgh8CT8pO2quC
Wtqrgh6BV+US7WFBAu1hQaPAw/Ldhz95dlojrnZZh5xhVcJAlDtq2NtiHB9b
q5bLhPjU3SEnqXny7Shj60nTuDCjvTC4QHthkCvwwsTTHhlcoD0y8BZ4ZJ7r
WThV2rfi7f4LNdsuVqLFrt9n2DvTkOD9+LJ7K4zwY4w4twKNP0JfD3tqOj4+
9Py4vQEZ1lypN8GJ2Gg/lj3stbmc4uIoExMGi9KzeXrH76N1eX3HsAfnf7X1
7l/+P5dLTg+K9rqaTk74XanbXfsKr9gsMuyxshvhuzrSgU0iRye8szWoxEbD
a0rD3ivmS9+tHj6thKN/6P3e57WITLrAHPZkCbxa5Djt1UK+wKt1ivZwkYHW
/zxc4Ao8XIO0t4t8ob1dyBZ4u1xpzxdpoT1fMBZ4vqJoLxixob1gCBR4wYq+
pFi9CKgl7S8KRLfINOBBgGjwsEfMdmVf1cDyGmKwod78kUEDXnEnWg97x84m
5bCrx1cT+y0v3HNsGrC2pvr37w9c9OpXmT76Xkme9EeE1Z5swJVPM6+GdXNx
x3NlfTy/grit/jEQ5N+A13PPvHo1lYcS2ptGmmlvGiQE3rSNtGeNFNGeNVwV
eNZm0V42kkV72WAo8LIJPG7kKe1xwzSBx+0Z7X0jD2jvG9IF3rczBu+/b/ha
SALuZLOapBuxTep747AnzmziUj0rgwLSGbYpRGdOIyZZBIRbcnhYcj4z7ODl
PGLbMW1vhmkj8o7dkm0b4P311pFa2luHv966/bTnjqymPXcYEnjufGkvHnlP
e/EgIfDihdAePbKK9ujBXODRU2+7cqrfL52M+Gan5TeKgZTuW3+GvXvG8Wl8
dbkPRM3QN/PIAgZut8ztZC/jQ5b2+pHdtNcPIQKvXyPtASR3aQ8g9gk8gIdp
byB5Q3sD8VLgDZShPYPkDO0ZxDKBZ/A27SUkkbSXEOECL+FU2mNIDtIeQzgI
PIbytPcQbdf/8x6iReA9fE57EnGS9iRijMCTKPAqYgPtVUSQwKs4QHsYkUR7
GFEi8DDeob2NEH70n7cR5wTexv1ls0e71yfBNJM34gq1X3TYs2F//XI+NkT+
sdgi/QEawdaT1PQYqJD8RlZT9+0q7ZHE6J3/eSTRJPBIcmnvJPbS3klcEXgn
BZ5KiHj+56nEUYGnMpv2WmIp7bXEX6+l77jF7juKc6BBzmhHOjXi4KZnblOo
cVKOp4VBl/LgqfgiaO/6RvSLSu7IpcZVubBUj+3SAniOba79SI3D2ud7DoAa
h320lxPptJcTAQIvpy/t8QSf9niCJ/B4CtHeT5jQ3k/4Cbyf92lPKKbQnlBY
CDyhS2mvKCppryhUBF5RcbH5Zgnd5Whq8hl1/FkDxP1HqlWv5EGqNcr6G7X+
PUjadk7jZgOynx0+uoN6r38Yyh+y76H2Ia+2/pl8pgEp1tcDl1LzQNma3Fmr
qHqCM2/wZdzuBjgpLg66SM0b+s1hLuMNa4A4uan2Kxogd3tp0bBHVYP2rkKe
9q5ihMC76kl7WrGL9rTCS+BpjaO9rqinva64LfC6HqY9sJhHe2CRLvDAJtLe
WLyivbFgC7yxx2nPLK7SnllUCDyz+WGHvMdNbMOjGx4z13pU4aumicxU/zbE
3FUPQmUTbl7odRuaUg1+uFlW30kO1r7/ZZ96tBTftDPXOYSloHvPTaFh7233
0IMfOy0cIPGHPs6dLfmfJ/d/tXXtX/4/l3vJJL+8csudzN/sFPnj5kGM3rT1
P8/1uKp9h9KcKohTsUXgSrVCKIQ/vTjsxZb9obI0SZlNNMIN//RrNaHWxiB0
2KN99fLtkWpgkZeG8yfPPtAMwx61q593tyGSe9r+gSOD7HgQSbQYzTj38n3c
Pvl2TNbZfNF+QQNRs1mo6SLSgg+6T1YtiG1HK+0BJ/dpDzhkBB5wO9obTn7Q
3nAcEXjDL7q2z20+Uk0eTdv98PGyFowZ2Zx+NacDOTqTmTv1q8jJu8FST0xb
cO2Vo8cH4U7MYmotVlGqJNZThk6ctqLaj/xiM+wxX5ZkbC0ytYIkeWeZF+9p
gVHErWXD3nNH4U2L92iUk/RJZcUWTi0otPxtKO/XCen+Vk//ZWUkc5Ajccu1
BTMPCemPiu2E2Jpm3a+2paTM4Vxi89kW1Cpf8RMv6oT3m7ApYhIlZG3sTjm3
yy3wiBSzfdjZiRe0552wac877AWedyXaC0/20F54iMymvfDfJUa29uvkE4df
h5fLPmvBQtfToUNaHDzrOJA77n4uOTx9+dOv8S0Im/J+b9YSDt5LZKiNFM4h
KVff+waTFvzo29tlto4Dp3XbHS0cs8jQmT+pykUtOCx7OOT1sNf+SNdSucJP
xP6mtvr1hhbM4BiWi+zmYNBs37XL0z+SCqMVVe3cFugn/XSxPMDBqja78Rou
6WTxUoUpqgMtGG897kjCEQ5umfxMn2P3gcyx6p+tLMlGs7dWqa4LB9LJFj3u
ye+J8Zwdt25PY0NUnhfc58aBRcnpO+atCSRyfXFUtw4bh+7Ll6yi5iV+aJyP
LjOO9F2tH5MINk665C6cReVf1OVGuKyMJn0vFsk0bmBDPUZDZu4JDlh+t37U
b4kgJqmjVijvYOOSLmsq05WDVPbDP3JnA8ncIs0v8+zYYPzx2VlB9efcmy95
qg6HSUR3SI7WPjaW2tR+/3Ocg1ZH5/ulfEes3fpO2Z7Kp62RXlRN5UpLww4a
RwdAo/E9eql2HpuJ+e2l2tHpVXzwsT8cpxYUfHaxYWNjtq7bNOq8y1Rjkzb0
vkBLWKKXtzkbL3sUHVZT1+vfaL/kfWocvoZt/H1+BRszL5zarE31f9uvVQuD
cxOQ/Gte/Ku5bMwue7J2E5Xnyg+Ubwx/j7hzQrtVlNj4cMB5xgKqnfUZKg8u
mX3AWJ/DZ7zHspH3c/yIQKqfSx3mh9geTIfbW1u99YMt+Bj8QtSAei7tXyZZ
HVL4iKw95adqeS2Yp+dwWox6jmHzwjb7ffqEBZfLg8waW6DzdPAMaxcH9X3z
tHv2ZKGme2rUe2qcvBhzb+XwOEmq1fzK/5WNhQ/nW49Pp557ae3nQ9S4aprK
GSEdmAvV4wkexm9aMPbu/Rkjl3JQy8gVVdDMB+tdSPpmatwGHZtdu3kmB9vt
PowOJAW42hIbqR7aAq91+q7LJnPgdnRtk7FtESr9/M4FU+/FGQ2Jg3eo9+Lg
pivVgyNLEPzhQk4E9R6FbJqXrcDpxNtberqF20rBCtX8rubZgv11qxV8qfcu
JURp4ZLFZTjkHC7SR72nmrPGy3pQ7+mWJRaPilTK0d56oJJDvdfZLrA/R73X
/dYqop0yFTgaULQ6aS91f57Z/hKy74SOjO4CV7lK3DDdwi+0bkFoW86TedS8
MXVZsqnL/Cqkx07e4mJGXa9H7dRoap6Z8MI23O5gNeK+bLJdsrwFs0Xn+ddl
d2B7yOivdbk1OGQU9Ov0vBb0bNUM2+rRAbP4cdnTt9dhQfK73XGqLcjQrz4l
q9iBu7FOFu2qDVj5cKz3tUktiMzfz1d81o5NWJM0RpcBORP169k9zRj/dMFr
bWpe9ej8Yhs62IQfOQl/9ng1g/thkkmeZxsef7yRrS/VjBeFM54fFGbgz065
i5F17fhoF2S50K0OK92MNT7czcGCoSfu2R/5WCF0SWwoMw5Q2x5kN/EVCsMX
jlFg/Fv3/0/NjS9d+nLxuTf5fV58vDj/HHYEP17nSNUJ/XIXL/n0l5Pq7bJv
TyhXoUDo51D4Sz42enX5ih5hEBWdzZuETrERVanyrTm+Ff7MH1ubEhrJgeq9
pt+kWhH80seOtbMVl8TG/O74Uk8KOS0b46+wUfnF2dntZBucWbsHLLXqyOBb
hUkXNrKxZVpj8bQF7VhmdazUxb+GlM02K9+rR83bPgscyhLb4cJKnmU5p5qs
jq0OL5jFxtmuoaigKR2osz0g93CwklSo/H75azoby0/wRt6174D3NeaIWZ0V
pGHlb0MpVTakUr4FNT7uoOYLC7XdHdR+P71pdwM133IKD6dPre9AyB3m1xW9
ZUTs/YKK61RelKjkqSLWiSl5pxyJRBl52C5yTE2FjTspt5ePm98J9feP+/Jm
lZIra4KjHdXZWFRq0J1v2YmHqkPflj4tJukPRI/M0WJjz2nrjslunagn2s93
/S4k1hIb36ybw4aY6a9mv4BOXAmaEWtqW0DmvUmbH0Fdb7dIa1hQVCd46lZu
XzPyCGvX/C1q1Po42u7c8gcfqDpklRNTVCuXfNneYZi7lg0Nh/dmjSWdCJ55
eWmtfzYx+7jrqvdmNjK+tRvcbupESMfdU5yeTDLPPI2/ahcbKrMPburmU/XS
vb7nVy0+kdMqcQ9GH2JjBhndOLG/E+ccl0HjeQb5XH127Gt3NnyMQ8IUqPl5
+0PHlHscQla+Xp41zZeNgxtiE+aMoeoTyfjaHQ6pZIu6g7T0XTbiuuXLjo7l
QD1Y6Kt5ehLJ2FzQZBDJRo9DlrzoRA5WPBkpceH7W3JUTtJNLoGNJQrfGuZO
4qAjdUeMklAc4X//0PrrIxtp3Snvl0lzIPV03NIdWc9Jreo++QUlbORqti1x
ovLZIbLfl84JJyIDi66X1bJxDkkVM6n81t1417ETA0jWXtlVLUw2vJe7a/RR
7Q892Tfrg4kj2XvF8k81i1p/3V9wn1L5D5Hx3y8LOyExV/VBJZVnKv4Qe0bl
o13WKphvCUCrj3Exi2rnyewTzp+p3JlTf/3rpnAkFlk9KqbOe23VudUy1Hkn
H9Z+8JT/HGby6uy5VD+nX3H3WE3lQTv11l+fHIfkfScMPlPXtSZ3j7cElZ8c
mXawVzIBGztEWn+/ZePZ2+ODfVIcvHw8sVerLgmT5yY3aFD3jfHy9+h3EziQ
TD8vWeqZCuU9KlclqfvcVn5afiR1nz1Gh6xMEkqH1LhPVVrUc3kWWGkaIcqB
r7FK95eEDHz6qpjJop5j7suDHIcRVH14Oa3OZNcn/ByTrLWHeu6pIg+3zO7r
RObM+OsnR2RhV5/a3WpqnBTNYBhU8joh49JgoxuaDeFEiWirLWxUNyecWMzs
BOPLisL5C3NRd/jFU/46NhRs9BYuLe7EaXaMqlxxHq6JbbSNWM5G1y1Fz6gU
apy7PDpufLAAb7lWW3312RDX3PBmTWQn9qlJnLUTK0IF3myOncfGPsdz8vnX
OxHqPKIJccV4eU39nKY21R/9Qz/KnTtxq2rW2tZ5pQi0y8iTmcFGSmQ4m72p
E+NG3c9jTCyDlvmv/PfUPDDd9U6Z9exOqC0XfbztVxkKvz2bsZ7K7d/W1ThS
6/hn9vfA+Z/LkSbpvlxck42wxRnZcyo68KducEvg5wrc4SX/HprJRvTjKfJn
Qzpw56DS3VsjqzDKkeshTPXTqbLEZ8H2DkyYvUKjT78awiu2vFBYQr3vu8b3
bxfvgNaV9NHjImoglSVVXmfKhrnyDyYJa8ekK8WhE4zqYLDzlfJ8NzbuKhk8
mSfejptkrG4QVQ88Hb91tWIDG08Pi2dvU2hD9A/m5DXd9TDb3/44Ua8VQs7v
ivdUtUJkz9Ljlx0aIJtocDPwRDNMDSLqN47tgI2BVnifSAV+Zvtlx4nWolVe
hpU+mY/75S4eaw0ysECs792+gxmoaTVvuHqgG+WWyQtFbh9EhOAos2z0Dd6/
3wH+5f+3XLXoxLhtrUfIi5/n1vsqn8TZlSVRJdQ4yT44v3XE9mKyMdFQ42t4
GfRrmJ8flnzGvGOWQheEGohJxshVaz80g93T4ZvV246IOBetnvdMku47RepC
YQvMjne+fV3bCg3lRRvdhxpI35tJus/8m/Gt7Vhsb0E7RpYfnZPMqyMyV86P
tJJuRtme7eftMjpg5dqRpL2ulhD9XovvRSxEihdGyO7uxIh3PSIbeqrJCI5o
ZVsIC7XNBlKqlZ1I26bb45BZRWTGKm5RdWVB7uySM1PnczA3wn0063klsTqu
W73YkoWcGU3euuc4MDUcus4LrSC/iFvdQUMWNn6WeXohk4OBnLlRFiHlxOOE
WLiVDgtbd/hvVRviwHFKcNu+x2VE/4O9dqgaC9ryXg+r53Ch12fya+WbUuK9
y6915jQWHI8qLxfdwYV1j1MMbpYQxcz7vOXyLFjOdFqd483FVKbXiYjsIrLM
S/a2NZUPGhiAHc7F+kFtP5cRheTj3FPKclQ7TycNNPekceGlW1uQZZBPntV3
xi9UZWFpXvnr47VctPU+Yo1yzyU7a4/LeGqx8Pje2uT4Li5GzU++viw+mzy5
opidNJ8F8S/NNiIjeahcwbxd0JZJGN97M98sY+GJ6vjSMCkezoydoNs74RM5
f0O4Tc+EhcWFp/e+V+ZhS83cFKV5GeQet13shxULpuaf0jy0ebjU5aTz8lIa
eaoXduf2PhYqD+noyOvxsPhT4qnlfsnk6U+j1jA3Fvy72VqJy3gYnW0VUen0
jtg1LlT1vsDC3kOH1/iu4iHk5oWgsRrxZJ3jgK37Teq6ftRvzDTm4cmzkrbz
x6NJXp64dvRDFoQv6PW+MuFhTZ/UlvvrIshA8Yc/S6Oo8zq1pVxez8P9rrJr
KrMCSaPUHDXrWBbSUisW3jLjIWp/adNBo0Nk/1WP47tes7Cmy+5VGJV3tYfI
bVU+hJ3usWEHqXzEncjQYCrPT32oZqMUCPZdk1I/qp1rJ/Q83KhcZ5SJbaZx
BPafDDoXRZ3XV+oUWUOdN8P9TNcst2jMX27ssPQRC2vTcNyS6qemS8hCjlY8
1vGOyUy5xUKM3K4H26jr8us9mzbo/A57c6b7zr1IjTfrIWUx6j4op8arbrmV
DK93x8W2nWBBbFfm3hnUfTvR9XmifUAaHoRWTbDcz8JJUU/f0wt5SBs1mLBb
LwNL4h6tzrRmYWGppXvBLB58n78+kSv7CU81+w5OMmWBWzp6e48SD7lWy42K
eZnQrh2UfEON8zMl520+TOQhTEds+bWkbDzT2vO9cQELzSuElowQ4iFY5uAj
b69cxPtm36iaycLoyEPrL33mok5X85XHqnxs9lSMraDGv1yT/KcJNVyYe2zx
2iZaCMu3UXdHK7Fw3oRTv/UDFzlyPEdOURECKhga0QrU/XT8bfnzEReajHzu
4P0SXPGb4zaOGucDs7Z7eHly8dT7sNjJxFLMrC1g3Vdm4dKoAN5Kay6Mto+2
nBxVBvGM+4eZmixcf6fFctLmwiSfLZwcVo6Uqhnf4qj+xzQORVf95MDgvqX4
1McVyGy6l7/diIW7o9KOfE/j4KwSc+/J15UYWVf10WYn9Z7eSZQceZqDdfmf
ViXkV+EF46XxFy8WDnONAkW0OFjbGy8V+asaL7+xhc++YGHMLovMp7md+FL7
pfHYjlrUaewee5XFAkc89Eb0hk74OfTNj1CoR3lXiOmSec1Yo1q/YsKjDvRd
c/e78LIRGaY777xsb0ZJpVJ7oHk7Rn+faHVEsxEiJd4ZrmtbELDRU4kxqx0T
D81qfGRQDx2rM5c0+xlQUm2zmSrJwdecST9dnIsR+XV24fTxVWhfeeXbYcNh
v/n87Wx+Ctibh6rYkz8gftlQSNL9bjiX6PVKXbVHieAoXDmx7B9n+F/+/zbf
4Pc+R/mYEXnJLPu5p3UL9ix/VPubGldCslsvpJhmkddNJ8/GB+ehzUp9P7Ot
C6H+7BsJj2qJc/s9ieXRTVCsylsyspuq840rpnvdbiJ6X2/vMQxuQWd4lLTw
21ZcbZHxH/+igTTor8mMWdyMOzah+aEaHbA1Ktvgc6uOaD26EexOzc8vFuy/
9lm5k9offL8cKF1LZH0TpRmrWGCVDkpy8zpRFv0hsrKgmuyxH6NiXNcEkZ8v
7jdu4EDjwsnfrXeqyMeLzqprLJpwt8VgiVAqtW/dV/In+EglGTldaUZUFxPh
Nh/1c2W42DbuxcOZWyuIK6fWNvMpEzOyXZ5v2s1F9asdZ7+ZlBPLSAepbceY
CLX5+VOdmt+2bwg0G1pXRkwe7fN6sI6Jovdlgx2VXPjO1WcVmZcS8+VesyN0
mHgoFnrFRpiH3rAj3xclF5OrjPK9u6cxURJWviSXms/Lj3x7ML6+kATu0Mrd
K83Ei/X6d2Q28uAyFB8f/zufeMdZ8zylmJj05ob0r8M8iCw3fTBZNY9YxU7U
KpNlwufL7OIBX2r+v9sodGN1Dpkx44B0sDLVT7l+M+8wHozTJ6TI7M0ipprx
SybMYWIJzr5tfcvDPo1nQ0qnPpHVoeeeeK1g4u7riQlO2TyoROhMs7mQQeK6
1hZOt2LCk3XKZn0VD42Mprx+UUIKZin0ShxlonbvR7vMZh4UwzO/1nCTidR4
y7HavkzkDMwSG+Lx8FM0cI1w7Dti1R/SuCqc6r/xJ9asXh5WBzSwrczjiaNE
kWlvEhMvn08+7f6Lh7Z7FYdvPo4mXS8MR8YWMXH19gpPuT88GJwYXOGxN4JM
P2LtU8tgAlEuUitG8nGWHGQKGwYSQ487z9Q6mRj9ae5FJRE+FngOTU1xOESa
L8SIP+IxUXfxZtERKpcejOj3nnkI9b0ho19T+TtG6jZHKi+OvX3UWTsQA3O0
uoKpdtRKt1kIUfnGWqUJ52wiEN+tX5TFZOLiZLsHwtR5o6QnJh4Ij0abj9aB
78VM3A9QCMgYoq5Lc7zv5k3xsH+9TOR6MhNC02Jfjaau66zQAhGnuHeoihnn
PuYxEwc3p5Y96eFBy2zvr5zuZFjr7B+Qv8rEL8mMF3bUfdu8ONCidRxByoQ3
WrLOTLg4vBCfTN3nkiPnbtv4ZlDrHWvIZhsTM23qjl2p5OFauq5jjscnpJKX
9V9WMXEroVbnehYP1x92+K3Zn4UVb48sSp3HhO8HM0PuGx6sR00YPdkkB8Lr
dTwj1JjQVRn/bc8jHlQVos0NZuRh7f2b8WvlmTAxkvN8dZmHdfPHtFqIUPv9
4t2NF6jxxmk33HDyEA/TPn9PXNJciDjhfgstOSb27eFcNaXqqGnKgQdXfizG
J4vkw5Op9vVmzxYP1+JhTOyNSmPLUsTWTPnuv5CJw0sz7pIRVP1z/u6MJRvL
EKo2evUoCybeS1qveV3GxYDm8fDFm8ohZ1xIXp1mQsP58I6pIVS9UeM+uHxn
BRZ/zZnQGs/Edb2FD0SoOvyulGreZvdKvP/jXaw3oglin4IXnRzHRYCbTbHi
4ypcFY6u0nZqwqKFlQ/D4zg48GPmM8vaasx9dHCU2GATxPeyOiau4CBo3Bbz
PKVaiD467RG0jYUrjabeTUmdEHt+QG7DmzoU7F69Y24OVbd8HfpqItqJ+UR4
fdfNRkTMGjlfi9rvBBs12E192I7V6pKiPY8bcUXJI/3k6WYUHa46kxbVjmLt
2yMrTtZC6m1XJF+8AX2tGcdbTLlYnafc11KUi7F6TxyiE8owqPZ7yT7FLvip
PLfI2vUWO1evcNpc+Bb+y+bPqcvvRruUy4mShNUoEhyP6Ptp/fm37v/L/3/O
O9uvzzI17UjbOjRIHfsMX4VU/Rkeh28UfhYvDUkic1ZJXqkTIlAb6XvT/UE3
Lthf8OvXqiYxr+Iuc843oIKXXO8bS+2LJyndC5/QRDzaR8Qtj26B9QnPGSer
W3ErlJOgOrKBHBvYpXr/UjPO6s9Lc1bsgPcqrlK2bR3ZsvDI541l1L4yZmk/
V7YTq4MUWOXdNcQ5Jvzgz7kspK9PtFRv6sTblD3sA77VJMno3HQZtyZcmvkw
WfEsB1I9/fsVF1aRKVmSAxuo+Vyi496pmD4OvrvWfe8fqCADwaNvKFtS60Xw
dJJE7VPIx0QJzdpyss9tUmvhTwYWhUaNnB7FRZFYddGVT2Xk9Wxu5/a3DChz
Emd/4HIx9HNBWPj7UiKhfeL0FG8GxpG9+06o8XAqvvht2JESUneo+mTzNgYq
3U+nYAsPAR0S3oauRcRS9c2yA2BA+MjpzlOePDzO2925wbuAZAYaJRbpMDB/
nsgHjcc83LZfu2Sifx5ZIrv99QUNBm5web+mfOJh/UdH4ysPcohDTn34jukM
tK07OZ3N5IH499hWRWUR/cnCXitmMuAY8qxo4AcPKw4GzJgW+4kojX7O09Bl
IEakIypHgo8+399CWtEZhCl2z11yJQOXjlpND5zGR9yKhVIuSwnZMfDzdrsF
A5bdvpX3tfkoFW4PGBRNIb3p+gFeDgxYCeunKy7m42awv2TX+3ck7VRH7PNT
DKy3HRNuuooPu+c2a2ZT9UBu+oaVEn4MSB8ZwEZTPtwW5Xl/vUPVA9N3JK8K
YWDE7s1JmzfxYbL1lX+VRQQpcIqdJhfFwKM7GHnako9LhsZD42YGEtGwOK01
rxlQcX/S992KDxUFxzSrRYfIrA/VuT/iGfg+TVTH25oP64th0RvGHMLRAAP7
KW+o/our+J+kcq+9MbVXpgYCL1XHpFLt5N+7b1pHtXP9Tf9+P7MIdLHOjRZ5
zoBN47JeUOe9GhDfHno7GuesVv8ID2XgXMTqEz/N+fBU1Z330zwejaHLbmde
o57L5mP9dSZ8/G6Uj0pOfYcaOaEHUacZ2FzRt//DSj6cZyfvfyKZAu0kN/e0
/Qzs6/ijfVKfj1zpg8xjKwhaoyaI7LFkQP1aqWr9LD4y9GYtUnmVga8XJxa+
X81APTeU9U6BD127wX2x8Z8gGhdwTHkRAx2tA+OLh7+jubM+fXJsFjJdJmy+
OZsBplnSQsZ3HkZLP795/XEO9E51z1LRYuDEus6Rdxg8RNbKaqffyUOlbfrG
ZmqciL0XWxaYwcNs+4oLzMsFgL3XxLoFDMibHV6yLZwHzWXifj0eRXjq4JCz
y4h6LqNKZMw8eJDRWiv/+FQJrqxwKpHYw4Dz5Uq/4E08fBnNX+ZJSlF/wXVa
hi8DEw7vVNBV5sFGUpF5Nb8Mq46qeX5NY8Dav+pEVDsX5o+/uX9jlUNqqlNZ
9Wiq/ny3ajwvgouZS2r3i46pxDOjab3ODkwkvGw0SN7Exavlseo9xlUINcke
f7+VqsNlVWPmfeZgxKPWqU+fVOOT/sktPveawMjSVWY7cbDuSbVTtUQtzhnb
urHMWLDXt57imtWJpg6F4Gu763BryGTd7F4Wlqw9uS/+dweOa7oI2fs3YCE0
XY9mNyP/jqrFlk/tqI0/mS+8qRFPg42eBnSzEKBStahiZgdY2r4fR+yqBips
z037VounsnMPnl9F3Tf2inueMZkomPLoWMOOQkjIvvk+KbsLi2dNrrln+Bxa
8zS+Za58jqNeJxZI8rvREbhNm5pvDVVv0sdJEt1//q37//L/XXPHHtE76v5P
icWNq1Lzkl5iYosks5PbjcwfTu7HwipIcsMVw9ybNbiQZbckV4YPza/FAeqd
jaSRk22xoaYFBU+PbDFyaQPr2c5HS3QaiCeU4lKWt6CJXWy9w6sdfMsydsGt
OrJrrfWFcPFmCOVKX1RgUfXDlN27JT7VkA6farlyYxbiN0pM/VHfiQOjje3W
K1UTjD+1fvOdJnicPbh9xlUOvpyMcO9OqCQfxkcYvGpm4vTU62nXJbiYtHGS
wnXnCtJl/sI5ZSsTNwrNh+SPU/uXs669D1aVk5jiyRVXuQxoDRSXLczmQuNy
kEu9ehmxmr9GrSuIATX2xrAzkjz8XtnryJpQSlZfDO0Za8XArTHMRb+MebDS
u/OBO6aY+MeI6C/UZCB57slJtad5qLxwbNWpXwXkzeh3MqEiDKw0CRx3L5KH
d+L72qW/5ZHLTipeEp8bccv73ao9hTw0PXmt0c7LIQvyehrDmY3QrlG1k/vM
wxw36astrVnE6cl0qY6aRkzk9ovbi/GRM0a2bHL9J7JG/GepF5XvDA9yyFEZ
Xve7eTp5GeS6g9t6tcZGrIi+tyhGj4/YrQoek3YT4mty2j+0tREh6ufYDmv5
OBfTFU7kUohE3M0DMd1U+9J2O5ZS6+nshSXuPh/ekYndy1eoDTZC2iswfpcd
H7e3KUy/bBJPjpjX30gcQ60ja5oahQ9T6/jWkTeW+ESTI+nqE+ZJM/CDG8vY
4MqHd+bsP9cNI0jU5qXHj02j1kfxmB927nzYGia/XDApkGirp4UGqFH1z4M7
B+w8qPO6fLaKFD9EONdYL72pukg945ih4lk+Nv/y1y766oSbe7KP3KbyTtuj
6+SoXPO+v2SCWCA+P294OUS1kyV1IHYt1U6GqNbzeIMIHC08VXJAkQHjoNKo
6dR5N3bM6H3iE40QruzEYBkGXJ4/1v/mwoeD/L6b+9fHY5bYlp8XxBmYbNM5
98ohPi4fu6BfnP4OQ2ecP2weakT2HR3x7L18qHlX+coopSD3c6rR7G+N8HTa
aXF+Kx/anfZD8fsI5s/s1/HooPaXUYEB14z5OPpzP2tvUQaaFY7m2jQ1YlDI
+0nsQj5enmt+MKfpE5qXX/o5qaER09Pm9kUo83FvSd25PG4WkonS0X4q/5hq
bjFuDB+8a7/m133LwYoPO9eC3YjMAucHvjyqzryamCL9Kw8tsj+UdlP9KTy9
+dqlfB5+bnxpWipciMKXYH+hrmuhe6G21RMewkI2HOqeVDz8HUVvOlWvSizU
uyB7iofGYuN4l8mlCFz4s01zNwNFjVdn+K/mobu+PrtBuwyNx37Jz41g4M6R
Qi+VMTy4Wsxycjcrx46jpb6p/QxEKvi73EjnYm/dwtyMsxW4KCEyJuAAE2XF
ZiapjlzIVWjqbcyuxIUnjCGjPia6Pi1sZAlxkV/pIzUf1VDImnwqMq4J9UHi
d46d5uBM4IwNCsK1GJXwcFX/HhZgHBhhltwJ/7wd4cW9dVhQryFzbW0z5LRv
LxG534GmeZ+3y46ux8X42/VaVtT8E+s1aJjZDp1TXZa/FjRgck+8lfQGFm68
DVP4+KUDt2UyL1qGVmBGBrOf41wD15y0wF1U/axb7Cii7JeBJJdHR+6ZZWOE
Zkublm43vp1svGq6+T46Bcc7RQUNg7/+re//8v+zc6NpNxJtqn1Jvfj3ryPy
buGK6+PlzN/dqGrquveiuISQ4mXit7dU4HO7Nt/R5TO4hZFfrZPqSMCUzan1
K1twaeCIlC+3HevXNG6Vimgkt6IXP7tf3ALXWFzedLMNly3ymG+964jnLyHF
4FXNeB6XfkgntQM53xKibY1ryORx4+r+3GWh+veAuOanTqjaVJqKP6giYppv
vp+czMLra4p7Jp7gILD/bViiTiU5PdLxi/uuJmzymnTDawQXx2vWMA4xy4nr
0rwTK9KYeC9i3tFwhAu9p+vqYx+Xke26T2P9VzARdbH82s1cLsS2dCVXnyol
B4xnbmezGLiapnSLJcXDuJ7eMZJviolko+PITVT9sP/HjBNrqf3UzHexb25c
KCTVLZlKZ2wZiF4yZIpLPJx32hTUuTufbCkL85xF7ddqjXvkz77h4btw+cmD
q3LJq+c5q7Ko9XSbd9dY83oeFHaHv908I5t0pi3NUh3BQOVB6w+vB3gQzXS4
ZiaZSZ4+9LM52dMItZ3JQbZT+PgQV/6wlZ9BLJJubFhK1RtJB2pfNM/lY/5V
BRddf0Imv5Vo7ec1QlbYwTfeiI8/L/s8zyxMIRW5uzYf7WrESFezIRWqHjhx
oTVKIf8dWepv+WI/1b5Q/hQfZwc+0NtTmLs+nrTF2mSk/2xE3OtfQiXH+NA3
fRGocSaavLrHi7Gi+jlQVUAcqPV3x33rM3ELIoiNyf71Y0YzMHt2SZidF7U+
+oyYqyUcSMSZ3l+HxBhYbyCnxPfhY7p0rXgD34kU2MwrWSLBwCje0cry83xU
i2oOlnU44UBS2JXNVD7utN31QirPY84wuy8UiHCXbz5u1Hr36/RTrWKqnW8T
Il+aL4xA7uRdXf3UeXeVBG2aTp13dOafxBrPaPDXmORkCTHw6p50rwjVTx39
c/Y7zeMxrSUyL36gEcnuazvXUNel9Ga86ISSd5ggWWfN+t4ID9dj5un2fMj/
allYuTQF8zWS/Gy+NmLHRqVtJlQ90PvFaIrzXQL85o4zpeqrlPyXhm9XU/3p
DrJM/5qBnO8fIUr9/Zm0+MJ3c/jwcO43Wi+VCdXYBp/svkYIe8oUDsryEfG7
tmvfnGz06sofHjeKAYZs5uUJv3hg6llGVZrmwn3z2VgPeQZKPAyO2NTysP/D
zVs8x3x8ktg2rn0xVUe5z1moGMcDkno4MQGFODsjXnv4958//m/dLc7zwPBo
LQnMKMb3zO/XpMMYWCXjFPLAjNr/li31rjtXitrENRuG+AyELdKG1jgq/8ru
mfaqDC8MjZLbzJlYL/X2wLaPXJR9XDrx1udyuI1rcr9TzsSxKXp6S/ZxcUx4
u27wikqcmy2bevtME1zl+0osejkwcp86adWrKhS/lTR/NIMFhULZXeb7OcgK
V/l23LUGk+bF7lz9nAXvYyNHtsR0wvvd5YHf5+sx+vVYlxnXqHV/frrIU8MO
rBPqiplVVQeJZyFH75q1QH+zzfzqunb0LfXeWXO+Dr+i/U46T2cicpPeGk0d
Dibnr34h+rIYUYeubLonWg3XzizNB5Kfof7n+A2S9gHy/eOnCkll4FecxsMq
z27ckA/zc5vqgwuCY6/+o3E2//b1//J/+f+j3NffVUHztA153uWQPMHOCR0G
9QrD38NuP1qx8qRuJuG9aFDf50LNW1c/eum0d+HpiIGYXtNqkv/xt0NeVxPu
X46MvmzPQXq4emDMWAY5M39UrchUNtqE+vl6M9swcvoJ5THRtaQ8fpqWD68Z
jtxt6sUnO+CNG/rWtdXk9B076ewFzQhsY7TrHO/EQKcGp0OnioTMiKnYfY0F
ruvsYxNWcnAklysp/7yCKD5n3nsmzcLOy1/SrBs5mD/nskqzUTk5Y996Yapr
E5aK+xUobOHC+WJqEGOglIx/0LTzcAcT4fdvZJu/5WJLFBk79nIJubp31VS+
OxO9AZ93LBDmgTTv3PhrThHx8Vx2pV6diarXHpmV1D6Lj0XSUdx80nzobJME
m4GMkNS2KR48zHVDmnZcLlnoPVWYvGbAYpT53cEXPPxadmfPac9sYqk8zmaS
HwOrG7+9+FrOg9O6MX/ebsgkpRac6pSjDCSat80T+c5DqMLmmkrFj2REZubK
JzYMeI6+em+0FB/KkdX3f9QQ0i51SV3SnKorTs0ZDJ7Jx84Kbqzf/hQSqB3w
KnQtAwoLrWzmUL18talxZRrnHfnY+Gq+nhHVvgjPRNKcWk9HDHyvt40n4V9a
TmavZuD92tdt+2351D7pnar6lWhieD0yRH8NA8WOLQrH9/Ox4EL/9F69CHJ5
vP0RW6r96iO+fg5H+PCKd6yzGRFIDKQ3HVthwoCvwczvp47zkcaVvH2c7UTi
01fsyKVyfd3Nr65T+3fZOrvNp3qcYHz3Y0IDlf+utH3iS+Xa6zPaA0UDUbwi
d82r4Xb+yIbsoNpJuFk2b4lBBJ4Y9vC2rGPgYoDoUVXqvEsn56ffD4wG7/p1
1xRjBmLmyumPpvo5Nv/wjiy7eCy2zfdopfpfduBBYqENVSfEHkie/vUdXiWP
2v2F+nvfiYpl2Eg9xfsZQkrHUsBTnG8/cj1Vt4STO9qGfLhPdFoz2EwwUeh6
ruQWBlouMnv2avHxyz7yVpP6R/D6RDYu3MNAw9lR5kET+GC/Z1RO2poJGZvr
y0XcGNiUvMPMpIeHZIlxik6Xs/HxlOFv40AGXr77NFBTSq3LHc6JFSm5OBCs
qjQpiVrf32q9OhRF1Zlrh+496ctHcqhiegaPqnPyc7y6qP3+77yGaWLLi3BH
56KI/RwmUtbtnV+znAcZ5Zo8r5ASLL1/Q0jmMhP5x7Z6/v7NRZ6p8q+CMWXo
av/qbdHPxL2ZdlI2L7m4s0H7YMHWcni5XBMfuNIEp8QlHx6ZcCEsdspg4GMF
Jotskc9WY8FrcYrGQBEHh93zah1sqjCnLfbp1GcsJKR/2d+owYGrafsfhdJq
TEtInq9u2YzsiVK+XjadmGonvX+yTR22XZ5+SVujBRPn5h8ul+/AvoLMTUO7
6rE+jZXmc6MZg78PVMoZd8BnovSZd5+rkfvTbf2RpHosEc19w0riwjemvY6l
mY01CucfPH9Rjg0BN/ccl+/CZ0XbiUqFCVgf3O6txnqH55Z+Y20yuqEwpJ+g
OHoHWn/Tx6OGjqb/vD//8n/5/7d5wwNzqUAjUWLTZyAXaDQZxmN2/B7+P9qk
rYHj/ItfEyfnQ3xWShLW/o6cyMvpxpyc9sOd/HKSWtySNcOtDpa//Yy68nko
2RpuGlJWR2TW7W8VusbGpXXOK3sL26DtH+n7vKmWWLi0S+zSZYO5aFUkdrXD
/Lnz6cRX1eTw0YTtt4ub8VJ6tPV3iU7oHlZtCcqoJCOqkrwXqDdj3riNN0R6
OmH5J+P+YuUKwijNP6X8iAVtta25Wg85EFZ52u3zvIyMeDxG74U+C6af93fl
qnAh4n6ibcCslAxlJIy/VNGE4kjnlp4rXOyvzCoLG1dMNjTGqTZbN6FOJeG4
KpOLgTSV/d8fFJBpbi+Nvan59v2CE6vD1Xh48Jj55uWKPGLOr7Gri2GCrSW0
P8qWR12f45ecr9lkd2nF7SfOTAQr9+y7d4OHT11F3W+eZxLP7alh0quZWPpG
O7IjkYcpn89+XrTvI9mrkz5ivwoTn34V5eXW83CqIlDWQS2dlMrkaCwQZUL0
cVDc4n4eoo5nnldITiEOnv2Tv/QwIL8vkMGg1qndH/TOL1NLJLYKg6nV7QwE
Dc1T7FPnw8z24rLJPvFkTZ3ktH4mtd+f8rsjVZcPySdGQxvjoklhe9a3CQ1U
nUBsGK7L+VD8FFkgYhJB7t4Zk/KqjoFDjZnjTq2l9tGfJlhFSwSSs7HfV4RS
uYtRevM0Mz7mfpO79uazE3ljfCzfm8r9AlfX7NrAx1D4Ejv78YewO+io9S0q
33D+ddl2Kp8nf8Ps4tRAlGrMMP9D5VtOcnYKUe3UeYh9q90cAV3nnvf36xmQ
qtDsWUCdd69Lz6I7JBqrW7z8HzYyoPhkcdFvqv5ZYXKt7YxfPG48sN+xuZkB
7c0jzohQ1/XrzeEUdZ1ENHlMD1LmMnB65zP/HjU+XPN3u8tmp8A2SE522vDv
5G+CtAPHU/1xuDP7uVY6JhkbyWlJMsG72Fvw4gcPyj7p6ysPf8TRNcYqSppM
lFUGq/Gpff1ntVJdyzeZuC1hsazIhImzS37HP0zgwUgx7v3139mwurHRJp6q
M7MWKV/O8OPh8TOf7ec35kGDdWncqXdMZMSdVNbazsO474Gfsl8VoFNi95r5
Ik3Yar48TFOJh34Jv5Ml6sUQPz7S2X1/E6TdsW9TLRdTplX0nLYtxX7TDol9
7U0Izs5mtZ3jYp/NPsOpaWX47VbzNtaIhYdX5wTNk+XCNWjB4kNLKhDzzudW
/2sWameb6D6+zgHP0ElygFWJmoNdnc8WNeN0WWq9eFMnVIQtFHWja6ByVoN1
T7oFl340148L7kD1ShWd5ceq8XT7yrEdVmx0He9DO7sdK/V+7ejbXIe6NSf6
ntxjYWvjS9uo5Z14sHF/9pfP5TjBPJFXsqIWimEWGzWo+xxi3hsktDcDM8ps
JSXq8vFcPLtBdbALlSwF/rX2p2AdWnD4YN9TKJU8Kev50o0QvpASNf9A4TN9
PK/3dejf//H/5f/y/z1yIZfWm8dCrxNZycPHr8gEY/2i2/oeg90wtqyV3e+e
R+In++5drliOORZn3jSO6sJTbf/b162rCM9OVe9pFbWPSLE3rd7SCW5q8Ldz
fXVk+fcjQ3F1bORv1tjUfroNMezI/lFLqsnP5RMT7yS34NqVFoUlxztgwlTk
29tWko+p47Zk8JtxUHN7T4B7J9hlkeu+BJcTZ8adBM8NzYhtTnrPX8EBU09z
LsTKiLjVvH2PG1noGrXdV62Sg637n1rqLC4hcvYbRd5dYGGOpeyu+0ZcGG86
2XLtWiG5vblG2BgshL7c2dITxsWsmGXto0XySfa7FcLnx7Dw5mehlBGPC+3w
tIFzN3KI6g7rC0NJTbh96tAUUy0eornFJk4aWWRZZo3kONcmJCq1tVfZ8CCy
LrVSuOAjqTsS+bN3WRNWzYw++v4yDw2yujOnuqWTR+rhNw5JNSF6zEvPpmge
3kV+yNVanEoa5XUfaX5hwnjV2NdqVN1lrJBq9u1sIjF3eZxjVMPE2IEeiUct
VL1heYkVnRpP7u8x8pqUwwSTK5t36jsPr3QvrfTujSbPFQKvJ39g4htD9PNM
YT6WZYxSP+8UQdq7HkaOf8+EgcjgW0tJPiosBnUPqwUSu4y3rUaJTOw74lnn
P5GPCFu2UePoQ2S71mjXAGq9S9rfu2nkJD74r5ZeD1p6CG5fjzhHUnm0pLvc
oBQfE1fucEhZHIhsy/W6oVQ7mn4B5a5UOybmqV2bT0cgV3zss0bqvOdX95ZN
os471K3gJCceg6+4MMeAUP1Mdr0UPZKPb73N49YWxGOET7R1WB4TOgEq9Q96
eXA/HCI31z8R482c9hk3MLHBffXsdc08HGzx4+iapCJKbuhG0neq7tore2tT
Lg/H/2xc2+SRDpGuTFd5uSYkXVdamvCcB4lRGotR+RExD7e7bTdqgoPvmp4l
F3lgJzSsN9TNQkfY1U21Hk2QFN147vE2HoY+1K9Ue5SDtnubgowym7D3q67S
lOk8XKuTMgyUyUfT9U86G8dT6/KvkbGa7Vw8D68S/vWsEG2sXUaxxiycjPmS
8vM+Fy9VZtjZWpegqK1tV7g/Cy9j3+Y4GHCRal7GnKZahgH5iPJQLgvx9jqS
rGwOXs8Wm1yXW44Rsjqrzjs0o1t61dSbWhxYvXRVn36pEjleu9+1T2jB3eTX
R/ds7cSXTW0lvGvVCMgXnd7yvQWFB6KS7HU6cP3slh/vQmvw9kFo0UT7FkR9
ft03YncHLq5NelEfUQ2RqTN2rylpRNWuCIMcqj+PteZJa0nkwLlDdYbbxWrs
mhBa0mT/GR+3u5smWafCWktsGlXA44Crhc8hr2741RuseMn3xSXB8eHsEzZ5
Q//W93/5v/z/pHxpf4H6zhGbicTDrkWHR9jBz+H1t36qzhc2+fgpbfVbklq4
RLPXNx1Oi5XXHQ7vxiF5N9MTUmXkdIWKqv65etyOnG8pU8dDrrXOZ+8D1eTH
QRO3RD4bU06uYGbZt4O9MTbzVUo1qZ9wXPu6UiuIZHlJn0o7LpsVrf/BqyA3
yxTlzxS2IECLXNze0YETioYmu6TLCUfdn6u5qAULTIPLFyV04pjBF8I4VEpE
HCfVHX7VDJcbBQYndnGw84pFhF5REQlOULlsatKMjgGzYkUWBwuPLu+Skyog
lhUBC4YGWLB6kfV0xSoufN92nnHcn0ts5shOb3/PwsrgB6y+IC6UH8/8urQk
i2jseWSddpmFtPfLQifVc6n1bI9GgtUnMsqysnHHbhaELhTnLZvAQ2xk3AOF
z+kk/ojLkwBDal2o67SzMeTB9Mrq3Bs/UslEJeEH7GFOQsKTCXDgIUxkWofS
yCQyKepxX9c4Fi7oL8qYcIGH1tLzUb/HviGeP4LazEaycMfy9OXWYB4Gyzxx
0yyGuGh4D5n+aMJ9j5wZZS94GF+6NL3/TgQZ8ZXc6Olqgu2iaYNa1P5Xr7ol
efbKQGJsyVtZz2tCxxivuK/JPFi93vRM5f9i786jqQzfeOFXSoPKkCGRijRK
pijURaE0Ig1EKCpDmSoNFCqRJCkiU0SJBjMpl3me52nbE3s0JCJC5/mt81vn
37PWOe9a77vetf961vqsve7nfu793Nf9vbY/7HTClRrXdZI4ZAhPyU8N/c6F
ezrn4k+6O8FXiYr4LML9ZOSnnxEu4H6LvM4iBN5ucbdaPUgGXY8/pT3EONOW
CrrsD/Gg92Ikw2+EDNOu6j2/MrnAd5kddc0xFR4dzda6P0mG+MNH6s2Iebq8
aDMq25gBkcq7TofxUWBfns0kI4LIUdVbVY3W5QIlTNbQRZgCG4z8lNR8ufBq
OrzkgcgPqDEedR/ZRAG+vXUCly5wIV67uvn370KIF1WE2AMUqDHI/v5Pkwu/
xD6uMbEuAb6x+AOX7CiwEWc/1y3nwhYzGTMHRhnki+LhsCAK3AtULDrSxgFu
W/tanUeVoLUy6BW7mALKTts+vQjmQERkE3NKpobIW8a5fvxUiLYrXhSpxQGv
I7cbpxbWg23zwndvT1NBIWrl6ZYWNvxuGonqC2yE2+dOdIqXEfl2wcnK/UfY
wNSp3yAq3Azzjatknh6iwemsE08mPrAgtuovx3xTGwQvunVrtwAdFMucmYtc
mfBlojbnx4MWUBOLEi0ZpwOp5LBK9BImuGx4Waq8swOu/a4fTw+lQPCcs356
DQtenvOx1frTCLWJst+FBzrhucqho95ag/DNaOlNLxJCifmPWnfhBlDO9J46
XTUMzOE1toqMT3DVN5JUE/IFdCV0Ri/TRqC5gFlxe95JKP3v1Sq3Z8csr6/n
Oc95/n/gpvaP92pNBaDzgTQfF9kIoGzd40aeGQGxH3dSFpgV4Yk9kclmzvVQ
QL+RvbtiGGbSFU1/WDahd+/FYNxIgV1FHgGlmhxYamLgIirbho1HNr3QSuqH
vqZe0lkBBpjXpXfbc1qQcbs5qN+vH3S/ZBvud2HA6l3pIRDThEE3WRa3DOlQ
3697xW+SCSsfyazvcm7AX9FEXSylgWHFVqxJZ8GNqOdJw6m1yC35eTbOmAaC
wSlJh/ayQePbqiCDmCp0iMyqd6NTwSE86WgUsiH/upqMRko5puzfmfMqmgqp
P4ssLkpxYJkeOUtyXSlKSL89fvkSFaxVQ59cteHAU3rJy+3vinCjytFz55Wo
8DHmUNx4HAccGj9Y/hIqwIo/tbt+8VHB4wC/AKWdA5cGM0NOZufiuzt/0ZlB
AYucoWDdfxwIk/VetMQlA/PsXD2etVGg/YHvi39ruNBx0JLempKK1f0Xkt7X
UoAxFr5GfQcXlEG7iFoQjy6Wrr6rKykwdePczU+7ubBv3K1I2DIEZ0tKo/nL
KRDmrrV3ERDn/lM19pEzTsjHnjHdX0YBPRslyyYdLnhbnMzf/tYJ+Kmhnw8R
fupl4uY6wuP1730XuBMCK1YHq20nxlmxbFCUQ+Sc50VN8Uub4+HSDuuak8R9
cbo57S5xX/tN4lKWDanQGLtibJyYZ2qRww+KAhe0F9a71odkQEvOVm3Xdgp8
XWZ5T5h4rt0jYz10bi4sF1Bw12FTQCF9nVLeDAcyk7QKs44UwE6DrHvWy6gw
/TqmtLiJA86iUp63vhSBYon/x549VEAD65XmkRww+qZkd1a8FDJzjDT2XKPC
X8WjRz9bcGDw/fU3Q+3lsMTr/Rt6AhVeX8pSQ1EOkA7fyWz+VwWOenyl8r+p
8HilrfnmT0SeFOqxW+daC4rH0r12XaGB2Y4BRxFlNigyyMmldQ0QZic+HEnk
1b3Jc3KrE1lgGrwpIIro9/0T1EeEX9Dh8UKLFVxfJjjv2lO0pbcR7m+I8rdK
6IczNmnLSeMM6P1l8rq6qQ1SS0+Sh2Ko4FK9sbrOhgV96QMVB/ObYV203vSX
sm5I/HP909ADLri9TxWwbi8AwVdnrfkS2mCDiLandt8QFL79KyK0LA+6vz9s
lj1TCIsef7Y8/2oEulC+ZAHZHw7+9zrBKflazevrec5znv+/6Fnr/5Q4RKug
oOGPJMfo/SBXnh36n78n1jp4NC8TjEGGwoBt3WQqTD93CT4zMgLPxpdp2moV
476z39wHJJphQ5f0xnTzYTB1nlVQlG/EFqnR8kIyBVR9X7kmTLAhsirGZm17
M7pZ7LegMvtB9tCRgkMmDKAzrHbuj29E0R7xpKpjAzDYZCXAtmFAmdGF3elt
DSjo2W2Ep/thtoKmf+giE2JI65+/sKzBJ2tcNvldp8Nns4robg8WeA6WdSVG
V2Bxv4c433Y69LV+ntUeYUH6qrigRIsyXBXv6dLbTYM+7YBylaNsiOnal/Kg
uxibmyvMLtyggZpIq4xINhtQBRTtsxE9jt7a4aBAgwylTe/oSznQdudP6Z5n
ebh4+q2bxyIaPKhwbGsGDhTml1x+UJ2BenObHiwfo4LaY/eFh6w5MJm6XW7l
aCpu031UHMOmgsAGjZC71zmwW/WxfVJvPKaECIh0E3lGZlLmzx0fDgh+CLsk
4RyCC/6Nvn1MocI9gfjmOX8OaKq94CTZOqGh5r4QUzIVKPUfhxQCOYCMF8Wr
SE6wbemgvRfhW2+zOEKEDylFcW+Fh4DMvA/R8lQq2G0tyA4ixhk4F7NonBUP
v9Md5yX3U0HIeedDhjcH8lzP9Jxd+gmo4iG9HcQ8M8+6HdIk5plj/qQ+62cG
nD29YlPEL8IPznOTI55rnFlWuXwkD0ZzHpVk89OAfeRx7N29xPmee+KH//ZC
2LJrbS5rFw3aJyOOb53HgaLaR7QBgRKIMpYzuf+UBixyh7dsAhtOGntsnMct
hUc5dwUChmnw2n9MxfkAG3ql7B2v5FTAqawn5pKb6eCqeehBzk8WHPvd4pnt
VQd3jJa7SoXRweL730DlXSxI9RTr/5xQD5Xs0/cuf++H9xu7fDXkmHCuwQ7a
GbXwS9bm6NqJfkj+q3N7UoQJn1S2la8baIH5htTz64h1a1X18dgexQJzmYUv
Hqc0QfwtBW/41gPdYNh29DoXynTgkbjED2DP6twdC+4Ay9GMJt/HQ5BsxX5e
EvwN1OI3r7bLLgO5QL9xe4sRMCWH5N1bHwVn5m/w/ToTBbpBz2Zjp0Zg9mf2
RadoFaD893r+3pdW3t/rec5znv//wblhP59yj5ugZuf4kqnjF8Dn7LzrU0R9
y1+2ZFuHcyySX5keTfT8Cpsf7mldxx2B4z6bX0cu/IEy1t/2vt3RBNvStnWE
RA1D5A2XqKbsSpysOKUlLEGGgp6HDi8PcmHnEoN0Ad9GfOnmuS1IoB/IIZpK
lAAmSPxekEJPq8VQobm1Y+UD8DRiXekzIlfItRkeV1hZiVFfKv92MQfAheIV
Wh/AgHaH/qQEi0rMtY6s8dwwACJPfaZXARPUXzwmL1EsQyNRtrmXfD9UPzIO
TD7MAr0rqyZoQ4XYF/mB015Ah4go+631zSyI1bJe3rjhG7q/exr0L5oOEro/
BSnCbIi3ag5aTc/ApMTE/LHndPAXCk9iq7Ch7+u9GrdVn1B7dqui/UM6HPU6
prHrCBv4nNKKRiQTcM6QM3ncgw4GSXOHys+zodLqaLhfQghyokeccq8SvuFQ
b6kjG45a5bw7EeyEPcknnsU60CHvXed4hDMbBCMDhP7KXAPX1h8KOo502PN8
zP8//6dbOK5Ae+/mF1AzvftTtgsdLvgvLb1ozwaV4bB+DakEWJogrqbkSQev
308E+c+xIcjG3uLMz1RgspQUJh/TYbZtZjDmEBsONcd9UGzNANGRgtmTwXTo
7Va0OadGzF/y16rGwG/g6ihjK0acy7Qjy6+aiLMhtOK3v21BEVBPzUsLI9bt
qs1VHKhiwXqHV2+9BSogXmL+hT82/TBy4NDroBkmUFY8DveyKYfgzBgpt4AB
EA2vd1b5x4C+a7uoN7eVweTs/m6N6gGwvCImdK2VAb/1Pqave1MLZkqzXlvW
9kPDiZ+rvrUzQVJDQFlUphmstswKmn2hQHG1jdi1YjZMb8o20X9SBZ7DHcPR
1j2went0wZ9dg1ARHrbQfywLyqznzx9Z3wG77bSMZrOGQL1rbeWVI7lwkLxs
1NGkHLpsnJ9zifM9oZZh9u9CLNS2q35aavMWYthpEVcnR0Ci/oP+whMmIPzf
ayb7lQ3vd3ue85znPP/f+9T96ZPl3cp4s0BUuqJbF5SFbKL+0x+VKfEp1n17
gUKPmGsWqCXAg3ep50h/RiDcv8I6/ksaPoo0+Jv1rQIeqwmcFz1P1OeJQWGz
f3m47uXNOVGLDpBOWqlhEj0Eiz8VezeVl2Cst0BL4GEKOJiM0GxWc8Fk+WeT
zY7VmGFz2sGojg5nrL2+LdVlwfhGhzNbqiow4ufCuIOZA1DxskaKv5ABBj8D
k64FFmKUw/JUl6MMuJdE6rUNZYCZztKLv5tzMbsua13gTQYoB4ofEXzJgLFN
bOPGXxmYLCy6+YsVA9alNQiP/mDA8pBnv9ojP+O8we/8XDkGRGhwKy7wM0GK
NfV+j0wiJrvanq5kDUD1PcmPmoZMMFy5Zf7Z7aFYkqq6TapwAJxgS1D1TSak
m1uJDktcQ/3GQheNrAGYXBgyXuDLhHsGWaXMIDdo2X6dFZ8zANs/Z3y75c2E
Q7eiot8ahMG3S2f3S9UPwJKXR1xX2zNh05nb9UP3E6Fi916+Xj4G7BtK2mW4
kwltpidqxxw/A1+S/PgVPQaYkN0D1ZkMEFjoNO/Ag3Tw9FIrE7vOgD8lGj9T
PjPAUe1mgV9/NpDuL0pdYMaA6x25FVfyGGD9IdPniADCekrsivspAxCRfDzx
3B4mvDuDkqnzq2AYViRey6SD+JlFs6uvsiC8+vJit3114ORp+86/lQKj61Od
zmtwQO3y9w9tB0vhetD2Dt8VJFjYI5Q3uXIQzjHunPnqkgn22nX7IKQLfk5d
n7baMwTFOiIVX5vT4atceL5eVjN49gv+m/dgGERMF/+g1KWBPKi7STYWwN9l
F87f/DoCF01+P97V/gJiRGpcxFJCYXLNBrU1syMwerStuKJbGZSO/c9rU8Om
Tl7/znOe85zn/9/110HHn55f5YjBP/cuXiF6F7LmknPKibq96fpL43D+MFRa
a+zgsDUFchdd/Pf81whMzdRHKu3/gFjdn2jkXQZer4w+H/AdATn3T4s9076g
5gqxg09bWmB6sPvxHYthOPyyXsgl+iv2FhwP3+PVDRudKr5eWTkE3O+hz4cN
M9HsAJnsNNwHy+Uu39ZjcMF0xYUdIzlZeNxt+OKNPVRoY2/aOt7KIc5dUSvu
jQw8XXGydv8TGggfUI/unWRDivTVs7p7UzF76HFjuikdWlhDc19c2BBXWKv+
jBSFJ8s7nwp/osOqzFRtg91saHerdmzx8cDJhkMlNhl06LcPoR3TYINPk0/g
949ukN10tqHkLR0+pbWkSuiz4eypz3uceyLAbmnmpqxjdAg4Yr/OwpcNS8KP
C3q8SAGX1n3zJINo8H713GfzhRx4d++Ju7F7BkSKtze6OVFh9Qqbo6PfOFBi
m/rsXXwWXCilvDq/mAJfW4TdTz/ngv4haQNd8wyoefx8j5EhCc7fSHkVZTYI
e+Ovye5TT4XfNvaZNwq6QbPfu6t04RB8t/pNc9iVCPYL7IuU0zugTF1ddm/6
EPi7nRrZ/OULxM3zN32U0giL/Vd/nGwdhsgZabWITR/BYXExvWQ7wj7FgTUG
uSNQrk6X0oUweOa28qbU5ji4en2ie2ZqBJzHNF1iRB3/1/X9xnVibN45znOe
85znPP+/dMmAIPcV1tfxTlv8sLrNQ9j/XF3jHnG+LC6xkL637hlWhlhvj8hM
Ak/PF7hicgR+q1xY5in7EhPfPc+QFMmDI7oieYs7RuDb+3qHCwvCcH3Vr0Q3
ot/9sHpfVEzYCKSBopQ46zm++/PF/Ht+NTA6H6LK4REYPtZfeVDfD9WHHMd6
FzaAIfOinLHACPD3tBZck7PD1yySR7Z1I4he+telMjL8v+Y/9GbdmzMPGiFe
cb5vLGcYxnFC4OEhOxieTapR2dcIYimi4jg2DGVDX4Ll6H7QYRfVebe9Dpx9
fz2vXjsCu4a1nmU+CoF7VJkVs22VMPJNKFPi4gg4rVBcXF8VBl/tov+KJhdB
kWrDq8gvI/D52bDhp0cvIZBqq7ZPKhPudCWrCAyMwOu2jXmVx56BzfbOs98s
Y2A+6fQ8778jwAlaTFa8cB1o/72W+qgL1fLOa57znOc85znPec5znvOc5zzn
Oc95znOe85znPOc5z3nOc57znOc85znPec5znvOc5zznOc95znOe85znPOc5
z3nOc57znOc85znPec5znvOc5zznOc95znOe85znPOc5z3nOc57znOc85znP
ec5znvOc5zznOc95znOe85znPOc5z3nOc57znOc85znPec5znvOc5zznOc95
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
WQ0tkOb2fCn1YEIvcOOlMicuBk7MvuSt1kYsb1b07GGyIHFCsyBbvwdWrNNp
Ui1tpOf45O87M9kIsmHP+GPXjZUv07OLw9tIhe20udwdbDQfuhYnKOlGLW/V
+oGYZjJfYcWqO6+pPuF62tAFaS5aOyJ+62W2kknrVm/4RL2PW5N8sXxWN76H
bZqpLNdMPvWPfWnwioVq5SrDi7rCnN8De16oNZJxYRZG3qOp+zX3wDZL6jqv
3/Z7VvBwE4l7uUr1YywLNhtHN1w05mIw50+X2JMGUrMz9LN8ABO3W9df5bj2
Yqbdj7MVBXXETWkmK4rVjsTcXplXE3jw7lq3PE29jsQ+OjtvyLEdTrmFo8y2
8MB9c8srwKeG3C/kyk3eSO0fIsnxjOFh8slVwZtJNfFWP117/y0D09Qu7/nd
y0PVtvOLL1hWkeuRntJ8uXa8Ot2l+WIcH7ptUevt06qJWdG9HWtTGFjQKXlC
/yMPe5UtL3qrV5IVd6p7c6MYePDfFY0hQz5C1849t2BKBVHe++jby00MXI5S
3VjoxseSbrHSUdPLSJjK1uikPgYKDB4UvvXkQ7nGd2GWfQk56aLgF3qRgbKI
2VWPE/kQixEr8cssIgfC9G+eWchA96HjzSsYfKTT+deklc6/xnZR/vWFlyEH
JkTkkDo7BYO/6QzcOb7NwOsvH9Pd3VY4aBFycP9yqzFnGMjdXVKH+QLo7pue
5F2dScY8WhzcuJ8B62in4olaAijR+d3kCp3fDQlRfvf50pItCgdiiHb6Gv0R
d6l1HZ7coRkCpNkdlA7RCSHV3PyzMjfa4TlGx1RXToBjhawF+nudiFVMx7kC
6vnl49g8JMwT/+HbOvh0nhO2JuUeaqXWI3X1UU+tL/skP9CqHIKrPybZ3KDe
J8R4cpA89T5OSq2K2/fF4I1t4bg+6nPrJN46C/PNZ9M56Uihc9LRKspJvzL+
5Y5LqwnMVp3qcfZhYG6Vb9h5BQH+xjvKvmzIxLoZ978utWFgg98Rmb2aAlT+
uvtpdFQOCsQMo72p/ZCq8+Ta0z98yAyumal+NQ9DH08zVvxmwKv/dsl06jov
XXzow4pjJXBJWGIUFsCA1sdPzZoJfDxqbsoIzi3CN5e4ICMVBvwGUtU6W/mY
/3ZtdIlMGRZaXHvPGGDAdvPZaNWTfPjWDJcVa1fiI4/j5hjLwAy12X7+6/nY
OdGrDbMqINv733Ox7QwYfh2de9KFjxl/L6sq2FTh/KSCmrEL2sG7fMJw5Bg+
jCITU1YVVkPQ9TVnbj4D/ZVuez5Rc9xQ+McXO99Vw++K/OzXGQx4ZJ7LWcXj
of/SV8X0izVIOZulYGnWjmemU2xGRPKgqhd/flZdHa4kT3xq+LUdb7afeD96
BA+B1nrebbp1mLDlbPxGb+o+zp6woFCfh+Qz7Wm2axux8OHolemzWAjp07n+
clYv2pvT923KacCn030+u5OYyOmIjRhxgJo7Qof3J8xrxs9fE60u1LNwcVd4
65AiF/95vVsjNa4ZP7adk1pazMIurP+xQIuLn275P48WNePP5NWjxlH188Ca
1wfNhnqwOHn6KDmfNjCjbYON97Hx4UPcvX0V3Rh9TP5FeEorbhbYJuyl5pTb
+tus8uq7YXTpq3Xr/haoLJ8i2KTPROXT0gPMB1S/2llnz3ncAqkR1c0CMybU
zQ5XHr3EhX1xVIuNcRsJMnx+4uFINjRkI4OS5/Tgsmkg4++GVpLwQlyvjprL
dKJ2Pdjd04215tn80ultJOxR+8Q7yziYUB6h1bShG+q/RzttHW4hz6NhO1qG
g/07HGw2P+9GmNKU99z6JlI180ef71MWUhNfHtqzm4uHQVYCha8tJK3cXDVV
ioNtzP/WKr3sRvHXqxsywxuI+4RDR6MuMXGuM7Tys3sv3jqxln3waiJftHTG
M2+xUNy1bO+gNxcv3lzf08atJ/Mb7t3SPsxETFju/snUc9BH41CFzdQ6MuXg
0LQI+3a4RpXp2JrycHbZaqf1T+pJ8oiBtar7mLhz7rxPUjo1xy0PO9a3rZa8
r7gZ9GBdOxQ2+26Z78uDw5+LgVF/aojz1FO7upa0Y/mXb21hN6n9U7PfqONr
FfFr5izKvcbA1e3uB6qk+Tjekh/8fksVufL1cPphewaMWepJA7p8VFRtuTb3
2gfy/Ux7UoAuA6uU4293U32dvoZD5cGqMqKfcUFm8XQGVQdKbzg94aNz2d0S
n9Ol5OS9MeFmX9rwR32UTE0udS4ynUojo4rI41y1LWcUGZhY4+m+gcmHrOTc
klm5BWTZhYuTEsczsMKw6wuhzvWzs1cST1blkQNVv8Jb+W24aH5s+CdVZ87Y
/JercTKXKIifr2tqaYPN07S1szQEMOVMnt87MYMc2Bhe2b2XgfmJV5dZ6wlw
9LHHh3kZ6WTvw0t5caYM7D+klp1oLECznESzo3EqOZbk36thxMDt28ci1KwE
uLTh/pB3YAKJG/eBdcqQgeJGX9dHhwWoUMp/+2d9DFnT6ep8zIBal2CxOl0E
0PYevffvzBASnTnQ0b+OgfZ2uz8tHgK43XlH9k53IgbZ/GYeta738uAfaU8B
gqzdRq74fgy86KtbR+ozEKWbsHsatW5jp5joMTkEuoFdYQeodc7EHgah3meo
U3BklX4MbI3dNW3WMyDZU5wcR30uL+TIFYPABBx20PzStpEBWd3U2E3U91Tf
bXr+/fZUlBi4rvq6lYG3qdwHLy0F6EjI3iL9Ph2meel303dQ9Wq8+wdZ6jqM
S4q6+0giA5qlGnlqlgzEXQyue6krQINhQJdLfR40T9ZnG/e3YUFrEqt9NvV7
n4zlPffKRZNr/QiN9jZMfTJVV2KpAIompeujiwowccg92VicAVWz35JXfvNx
/bf/sWdPinDNeujaRmUGxMUXBX6lno9L+12uyjeXQVJst5WEDAOXip+57HzE
h2mwe3GDXynWHs9I5f5ow3K2sgUjm48890cPNW9/gBp/rmoOdX16Te8Vxpzh
wyd05/H+X1W4Zxws3hrGwLWjrQu/SvKx2t8i7oFpFZzunlf4epyBwe9R+rt1
+Fg51u7sjr21eBj94PV2qq6ireza5tM86K4LrP80sRb5qtmCfWvbMeX+QiPO
VR4Mg2K29crVYfDwi0r/k+2oNpq/UIbqW2p3TDmVMbYB/HsTDi0+z0Rh16El
Ybd7YVjVPTRA6nFzwfn4je5MhC5SMZ/6rBfNKn8sJN82YPSUhuhp8UwU35hh
3Wbbi9lp0QvkZjWjLGV0ZkUjC3FyS3+EL+DCp0lrqXZRE9hREorbsliQLArx
qdjKhfbqeNWir824G5eR76jBgWNUx31VbjdYvewLxmNa4Gp64ocBtS4b4DSF
3dGNNIM5Yo8utuKEU5up9m02fgt+H34m6AberNU0kG9BQIaKFEOXieXfVNSK
krn4blvj5XyK6mObUjYcfcOExtKOqmxXLpa4vrXxaWglKVNPMSslOZi/caLc
kGs3JF2vSJRNaSG/qr4bxhpwEM9VTRio7sY0G7+RHldbiYr5f0d3qXOwyEmm
pNOtG9XBe3Zr3G0hu2WVvTc7czDON/G6+H/dcKjemKBl2ER2j/JWCQ1hITug
zdjwChfizT4nDVRbyZ2/zE050hyMCPqeYEH1248+Ho88s6uRhEr2Ltp1n4WV
e4MWCDK5iByRfj1kTj3R2jLh0t3TTLQfPqQtUdKLfTbbVr53riNV0yz1Zlxk
onbq4P4OLjVHPPtvapBvDWF3doy5odeOtU5vBBWPeYhNZF6xiKkmdz6uPFCI
dhiUjk7bWsLDpWnenz/LVZHPna6Xph9m4FvLvF62Ph/cGe1bNSOriYP4F/Uq
6vW/xvLqBqnXj35+a9fJUxXk1wSOz3EXBjKXWsd/OsCHv+nEJ6VLP5BvJzVC
lan11qEXoUZUn/mgtObKsb8lRIMEFfl8a4O32pQuhxI+Nob/9LWSKybLppR7
Rw23wbLu8b43HKrv3ZbqarSwkPRowGbnnzacXMPVNRnm49yRX/19XQXkP/lr
j5Op9aWac5+ZU33miWPbzv8qzyHmASPEvjHa8KigNUdipQCp3MRnVScIeXpm
+HNgTxsmtGxatnOTAGJnx62pX5xBPr27l8z42IbiQfdW1T0CVL+bMOhRnE5S
uo6YB31twz6z5O+LDwmgMqLP7blXGpn5QM/YlDq/t8pPOEx2FkA/8kiKxod0
nA+c+d/w9zbsyBvf5mMvwIw3aslRPmkw+7Lv7aGhNswI+pnkfVyAtdykntpl
GTibLb3yyUAbrt0+tNJ6twDinz3dpbwJcm7cUbjDa4P41QUaxzYKsPTqBjP9
6hzsP/lGfi27DeYP0mwmrRCgt/DHIlO1Qhw4eFdnxWgGVLIDHVKH+JgYma7P
FBTgYribRiC1vn6SvF0mVa+avsR/mbugGEoj83SaRzJgdN5vygCLj+ytTR7P
xpfirtWDe7+p73npjZTL2SI+ztgpHM25WAG7r1llR08z8Kj2ktddKz4EFyab
xup9QOIavXuvTjFw4Prowwvc+WA8Eq+vUKxCqEMu/nNlYEqg3miztXzsSrE5
k51UjQltEcHTTNqRY/X31cw8HjaHLZl951k1qqysdWZS60nzTn8voNbVtocW
el6twcOrT2wWGrdDRvWkyTiqPzRZtPpN1dJ6jLe32vgjlIkL5stnLsjqRU3A
tsOX/Otw1zvcZNNDJjrND/EM23px0zZZn/m+CT8y1caOecfCXpfLvRqmXOzo
m7xz6L9GTLzTOXH6CxZyElombX/Mxegqg4jf7GasShkfH/qRDeUgQ9ZshR68
yRlpFq7Sgsu1hxcfHmBjy2Cfe4ZYD5w2Wug9S2jGtGvRD++lM7Ht8Sdn1zgu
0pavcA6ObYb31PygHRIs1NwKk4r/jwu3HMxpoOpSWvn+O3cSqbr6XiIu8hoX
HvoZt6dGNhP/t9LrHnuzYbiwd/WHqz2QHLjwonSghfBnZHdHjOGAvWiHdGRO
NySSBnPnR7QQ+1SzPy5/2JhsfeFUL7MbU/dxu9OMG4kfs/nIiEgWnl29EBST
xcW+9A/qnm7NZNW+nYqnFDmYorjxl+TMHoTOcPc4crqB6MbdOzKBwcJ+jpqF
ST4XK8IcbnzdWkde2xnVF4QwsfP23svX+b0YUzb8WE+qgaw27+ud2sPC9e9m
d37WcrF7X9WcaI9akrFo+1G9MibumRbo643m4YRnd7rH1FoSccBQMKKNiVL9
WM+YqTx8izhuaZtTRRiR1/jLTrTD8Zp60AwmD7m3cy2OfK4kBuOWLPtxrR1m
FW/bBN94yJ6w3aYhspzMm54wNP4sVZfuP2Jan+Vj7iverEvppaShQc7II5qB
2cS4ckMIH/ue3NCN+F1MTHJV9R+9pubcqn3Hmh7zMZAYb+uukE9yJi2qHzub
gVkv4t4smyyAZuxrh2WTcwkCRu4xXMGA9LkQsb9UP2a/+o1GQC0h0j39Xp+3
MGBaMk7OUE2AD24Zi3cVvyfTDjic86bmI223jb3vqD7BsbK/LJTqu759Gd+x
+ncbdjvtVudR/UxjVNqhLJ8E0syzkVg9mYH05j2nZam+6GygfkOUVgyRzohJ
KJ3FQHaHzu5wbwEs+lXCtUeFkFtGaS3dcxmojFqSvMtHgAVuTn6Xe48Rh1FH
upoUGOAbdz+efE4AS8bDm0P8YzAxaX7VT623rwn7MJ5a96gXc308OgTqHz+5
Wcxj4Kz/m4/a1Pvc+PBj+SbtGJREiiOL6k9MrlYlWlCfOzfx0X6T8wl4E1b7
O0GC6leTPj16fVKA9jcNYwzNUhE9e9939b9tiBXX0rKlftd8PdeRJxgEcz+G
+HONqf6z7MzjqYupOqkV5TOq5j3eJ/MMdlP92LrTOvnB6gJsevpscrVkLo7e
jGfcWMVAjEL7f3FU35XwRWY1Rzkfm0899n9M/V63+D9dL8UFWDP6SJRtbinq
gvOzjj5lILf800PH69RcfNA55eaEErR1665RJtQ8a7VKSyuGj8BX8Z7BCeV4
Pc3e2+UiA+/nhutt8eJD5dSpghvlVWBVlYd896PmhfEXxZSaeZCexenvGl2F
rCfuk4rC21EQf2OK0ycevljf52ZerUVi1qXDA91MGG/hLjryvRc8z86D/kq1
OM3bp5rynYk/A8ofj4yh5lnjmpddtnU4eaXgdW0yE+HOI6LyGL3o15ZSPHG6
AWdaIr94/GQhQvLNxxaqD3kRpxpStaABgenfHTaOZcPCQML3XgYXzkUHPZR8
GlE0Vn6zeDJVl0ZYjNWN5SJuEjeg/GQLDvruqpYOYmNCsCTvl34P5u40vSQX
2Ay/rU9nbppE9SeSbx6+nN8Di99XSnX+a8Ibzspr23uYsI746N/B5kJmdnB8
9SJqni14tih6LAsl81vTS5O41BM9Yp3vyhayJ6g1JnInGz+WN8a+ONcDbZkV
I89UNhHrIz8nFslzwH20JNtxUw9W6y7WPmfdTMbM9KuWntGBAEWjzMO7u9Gl
+37NY+cmMudDnfLrPA6qbN107rd146YaWy/9ZT1p/u38yWiYqsMaX39faeHi
6B7L+60Lm4jmmsbJmu+pvus0sTz2tRt7FlUEnMqoI+tds0/rz2Fja0pTkfUP
LtQKV022C64h5+6+Lxk/noXuzM4NobN48F4/Ps88tY406SSHOsxl4/G9knrv
n1wMvDsQ8OxuNTktMe/t+YUsyOxeNtNLg4fwy0GDetGVZN1Mg9It99rxbtTC
/LM/eNDkik31PFpNlszpunZBlYVwU98Js1fwULZ9Us+31A/kZsfQBU5zO6Ty
JxbMmchHThRHdri3jIzUjBxxeAwTB7/rx+6fzYfxi4OCC2+LyYijVR3rqf2Z
fzbrZ2QsH979FdXZqYUkMykq/vQXBmZ8lXXZ8ZIPnddiWl/u5pO7V3d875Gj
6t4Gt1N78vgYHDeh65hdHom6mHm+TaMd29YuC2gu4+OT8pq2vacyyPvhpIgd
RxhIjtAKdqP6nLOeIeemjHxNrGfELYi6zEDXtnNx2WsFkKk6eL/vRCpRmGGy
dGMkA5t6Zr3vMxRgcKLsq1GxCcR9X3D072QGduvHRIVuFcA1b8nEixtjyEF3
x76C9wyIzWPNu2FCzX3Jml1rxUJI+stMDeMiBiRMv8z6ZEbVw5g8m1DBMdKT
sum7XQkDtUWbqx/soOpewJETGyY5YZ+UVYQntf7UcXTZXWrd3WTB/d+zQpBz
c1FUCvU+1vG7vGqp93l/qbrQ1yQGP9faOaVS1236jj/Lt1Gfa/zf9WcxqQlY
H7lWJyCVgftP5clc6nvWvvmu2+adip+t6dX/RQs/d0e6PvW7tPxPTmFPfI0o
l1WRoYEMXJ+juah9jQCFc9xX3/TLQMy3b37tTgzk3R4lsKH6KLPZU6tUYvLh
sWPVHyvFdly+9eWcSg4fWfnWZ3jH8tAiF3twrHY7zrBurqqg+tWRgX+mD2UW
4kvHnd0Xhxi4a/vduzOFj7EGK/r35RfDfOrGse8KGYh3Mno5knru/PJ58imq
8AMCn23aWN3dDuuU4K+SY6i6ZGK2avdwGYKOi2/1mMpEtsbA6gxpPj77ycQ8
eVUJp/GP5H/GtmPpj1rf8V94mDxtg93FxGqom2RpzlzOQtHa65ctFvIQkqpR
qHiuGmumBvR3rGTBbPHKaDVVHvrso1LcH9XgSfZHNTMpFvyOTRuomsTD3VjL
rKyWOvwanGQeuYyNnldbz13u5KLe2F46sLoOCy+kppcvZyNgAi8zpouqG6Mz
IsRUG9CpK1jDUWJjYGXgT5VHXHjmKryaF9gAdkaElG8XB/ldqxhJej3Y9jpx
7YO2BkjF/5p9n8/BbUGw/HrFHtyvVauxsmrGbss9FhY/2IjftDzJY20PLBuM
LLfrNqHixg67v1RdLWPzzrv0c3E2qXaWFrMJoyUPbni+kYW8qcdYdbe5OO3x
w7dmajOpcJsjubOfg7TdTzJXXOvG+TtLmWNLG4RzHIk/zMGlY0c/IqQHprvl
uuPlm0jY4MbVk15S32fph9LGP92w9K0unf69kXC2v9689w8H+lIfLkqWdyO5
OkDr+M0GUnulcb1KAwdr1ixyZWzsQVLu1E/Pq2tJNsP48vF9bASe8tkx/Icr
9BVbGzdcQ/LWrd212o2NNfe+Sr2e2YsD95K/9D+oIqYqNnUrzVhYWPn0oula
How0ULp6fiVpC7C4M9aDBamM83vyzHjY4nLAcH1CGZkcHjh7sQQTrZ/YHWFy
VN++j2uxp6iCxN3OZZl6sbBlVnmewi4enH9bfx6MLKHqpFLaqT1MfGmyjE5V
5kNpoqTuS+8iYunEKTkbzAS0s9iuK/m4XTMn9+SrQnLWSMtaguqT1XdsX/RB
l49pLw6cN/fIJdeZp1Vlt7Tj7lOT2OOVfMR3GZ6Q3ZhN7ty8OMnjdDsO9kcm
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
lrxCR2K9CrxPVyD2uf+MFngg4SceUybV+l2lQrvLDafHUWzweRZ54IVCAc6n
7bZyvk8Fu29pKqtfskF4cVX/gY+5eIHJTeZ7Q4WD9XZG2XFs6HN7EFY2+B6F
RSZXcAi/YXE9SZPznA21ULTPtCcJj10YcCPVUCEuah9LN5INr80dqkJcI9C/
TI8z1E6F6LSz9VuesUHstaz3LTtnlJMxYFl2UYGHXniwN5wNY9X+i4W9zrD1
0QXOQwLXnhXrRgJ/s7fqpu+LCEhZE3XlXgcVNlgPb8sn8A3/0puOMpJg59nJ
sLe1VNDvjvzxI4IN+zqvhwrxZINO9M3X279RQXPo7ok0os6jXwzd17bnwrVX
XSemXlNB7SOPzknivdRKhnwsvQtAXWSrl10gFdTHLaffxrBhuW7QkVPzP8FN
9nr3wnUqzDaF6Q4/YcO38579xa2/IIovwHWjBRXC1swcJ98n+DZKxcmAUQY/
Kkps8xgE35ZMSf7QZYHvIb2N2+vKYDTpqf0Jwq/6URUvfznJgl9nW66/v1EJ
4YdBjZ1Jgyx1201GJizITdJuydpbC2szDD4cC6JB+lo7pyQVFryhSL8OiG+A
2XPFUq/yBiBu++KKml0M4BWIixiPa4CRXb7xYZ8HoK1sa077bgY0bFg8tbil
AfqP3ErjERuAqDCeaVYxA5Y7il1PnWqBPW9vhWYb04FkamhW84EBG7dT3J5Y
N0OBV5xCQBxxng9CeRnaLOBJVevZUtQKuocpM9IRVDjUcOihVh+hjyIfT/PY
t0GI64y9ixQVSq/6fdq0kgX5iYJV4cdasNhqz61begMQ61fDmlkcgtC8Rf3r
Eg0YoXrt7p9tdChZmD01e58J+0aP+MZdbkLFGopAA6Gnx+9Z5u0ifH67Sf5I
JLkWd6QrjScaDEBo6GWTx98ZsGO5Y7veSAOGRX/ab8sYgEP+MV07p4dgum+K
vnu8Eq/qhCvXrxiEuAe63+6bM2B7SoOz0rEqvEkpmlwqPAiuFz/LXib450Tu
V405p1LM479rVk6mgZ0l86exDQvsbl2O3zhRie1Zb6oteAeB5wVLYpSYdy/l
StmtVsUovO7g49ARGiiPF7zq9mZB8pjgw4LJAhzc5TvnK0uHpyFL7OO9WOAz
t/2IGSUX39A7T18n/H+ouV9TxBUWiOXdyLcQzUYhmUiX6OuE/08+/f7QRRak
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
b0VFIZeMXiM6qvmrR9yMZ4D14MnjzM4WFCs7spj5nIoufiXCe5ayQOH2QYOw
ihYMh5156QQflvqKNXj+/+8zd3oEl91qxj8t6j4vewid+rVOzFycBUsKffnu
VNbjL0FzpsA7Cs6cfCzid5INb5xGlw5q1OHiPqP0U+VEHx64mW1iQvB5h9d6
odgalH84vXGoh4JGV3n/GlqxYbjgxmub4nKc8/UbCm/tx/ob48Kx6hy4GRKe
7i1ehk4GgsJTSyjoH/Q9xAo4sOn88OFF0xKMub3q7X1JCpZ/2Cn4V4cDqX48
IzeeFuOS6jchK7ZT0Gn/u43TRhwQNgxNWb8yF0Wkwl/k9ZAxr+ffMdVRDiju
EZU++iMbveI76mWmyTi1G25Vj3Fg12oaf5RgKpYznDctEe7HlDP+vm8nOLBe
ypiP53UMStStt74v24/F2dkvvk9yQPL6k4TymHt4wH9RkSbXjy/+007dMsWB
L5FKOX8ijaHB8Efud/l+zI/fnvIfgWu+qNspwxcModGZ329s6kf/14PH/v9/
6iavEN2upW8h2FLBiCPej0a8Yit+Efu/fROy2ZovE3wuB20Lnyej76p+2Rv/
ryeNHiV0/TNIZoxfPtdLxgl6oN+n3xzY/CB7hbLtLyj88WXRmTifA+Eij9nG
HHDsddS/+LQMJtrac41o/ciVsFstr8WB2D8SG17G1oLykbFjcQUUpLnXmC2z
Z8MHvfniwz4tQCqL6rF6TPDnjJ81eyMLHlmeleCc6oCnwckyT1g0NJkvs5HX
JXThoTba9HZANMuH4sKhY8AzmYIW3SE40f+7v1+jC1PDPOvtS/rR6yvzufUC
E2o3Xy9w4Dbja3+W9x8hCsrq6nycJeYidTavoXOqA0N4N7p8Iu7r3PS/XV1R
LDizzXsD+U4nKkcwW38bUnFc5WrtohoTZNeOUKVed6DJ5msa8TNUFNrd9F/Z
GAOeX2FKKlq1oezF1LFxHyo+fa5bXVHDhEf3n92u+NaKkqd4am6FUXH5rTan
e/1MOFf05GuHYDMaaCk+7iD489rn0tHR7WzI+/FW+LtpEwqnWFo6ulNQIkCZ
LvofG4K7bi2ob2vE/S4Hrlvcp+Dyl4fvyRL9//VVrbRgay0qF1vPv5PqxyUv
rY8ul+TAkTVmdY7ONXj04Htul2k/Xtx74/PmdRyYVPSYq2FXYfDdEdXGe0Q/
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
eqN8/59k/VfbWqbvZGG6+OU9hZgOPKnzl5RSp0NSJ3jjr3w2GijmYhYjXaiX
n6k+zk+HJp9P4AcTNtZkC82Vm+5Av6tnztnBfmib5gnO8mdfJpTEWs7rAd8f
iqFaCx0Ko9o/t7iwoPqtY6lqcwcYKw0fhpDvt2elvPdrVS6eP0nKFdXuIVa/
sqR4mTKguFzszGq5z9C6z9i926GJMC2/tPv8NRret30VVTPm4vVopJXxjXpi
h8f3GLYoFSa/Y3cZSfJwYwl/ojmnmqjYyu138ybz3aXUtttbefBKvFpoOr+M
8DuQKEEYk+/rtz7fYAsPv583v7o0VURQSyq1VAMpmNN4RvcFhYd2sz8HhNbk
EVlN1o9tcigYajYRfczhoSE0u1ZqWS5WdPld+VZGgd8NT7tkUjdMULC0Z+XD
fdXr0qRUCgK3VNvMcodH5Cu+ZYYVo0ZJ63I/6cPVPYRUSQ8PS7TLv7kJliLO
48RcD2cK+Bq3NR9r5aF2MplpkFeGe9IpjF16FLhI70zlayCfv/jFhTzTatxR
NhVZ8IKKsQfnXZTVyXq7Kmzdz63Bm8Hlb6q9qBCPl0jcocCD5lOaioddHYT/
K9nVcJyKUb0gFYU1POgtyP55WKEJZ1JzI0970+BQJtK0RpcLox9RX6Za6+G5
Z1w3WZyKCK9R5iIxcg40q6NUH2/GlitKRdZONDzZNXejqAYXdyKfUBsFWpAt
c7i+9zQN0YPngr6s56LpsfPx8rw2jMRGn7kdTMeqifyvd6lsMg9dWLXpQjuC
21Wqxt3oMBbUyqqsY8OpUWHf0medCD6k8evFBB2DssPjpaMsvHgn2sP43omD
5WJn08g+2sA3ZdUZwUGO/hxtNnkueETJPR02pOOq848Xs7zsZXVfHlwdasH+
Vcorfi+mYeEnW/oPsq5a7d/d6t7fDbEPLvXmZVR4dBQ/sZ5mg7P64H/mfZ2E
4FGLEXseA4bz1Stnud4RnrEPGXqdhOseL7dAzgBq3KKy1pFzXc2/Vmv3urUS
x6jlR60e0nFneN0ithSZUwxEJt/E1BMnU5UfxX2kgW9ejP8Cay72P+b+cyyk
gog7v2TdsQEqDj++4iRzkAeB8xc9Da1KiXRXQV0nMRqk11L2fDbmYcJNRE3Y
IZOgLvP752QfBYn8zmGz3PO9bxf6nZqbQkTXHDQMnqKQeT339SwnvfUvV524
+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
qCbnuyWhfc8HYD2yaGcB6bf/BxJVJrQ=
    "]],
  Axes->True,
  AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
  AxesLabel->{None, None, None},
  BaseStyle->Specularity[
    GrayLevel[0.5], 30],
  BoxRatios->{1, 1, 0.4},
  BoxStyle->Dashing[{0, Small}],
  Boxed->{Left, Bottom, Back},
  DisplayFunction->Identity,
  FaceGridsStyle->Directive[
    GrayLevel[0.3, 1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0], 
      Opacity[0.33]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"\:0420\:0430\:0441\:043a\:0440\:044b\:0442\:0438\:0435\"", 
    TraditionalForm],
  PlotRange->{{1., 86.}, {1., 85.}, {0, 12.6294}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->FrontEndValueCache[{Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}]& }, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {20., 
       FormBox["20", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {40., 
       FormBox["40", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {60., 
       FormBox["60", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {80., 
       FormBox["80", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {20., 
       FormBox["20", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {40., 
       FormBox["40", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {60., 
       FormBox["60", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {80., 
       FormBox["80", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {5., 
       FormBox[
        TagBox[
         InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {7.5, 
       FormBox[
        TagBox[
         InterpretationBox["\"7.5\"", 7.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {10., 
       FormBox[
        TagBox[
         InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {12.5, 
       FormBox[
        TagBox[
         InterpretationBox["\"12.5\"", 12.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}}}],
  ViewPoint->Top]], "Output",
 CellChangeTimes->{{3.7489371592438383`*^9, 3.748937164091798*^9}, 
   3.748937202892664*^9, 3.748937242313781*^9, {3.748937290085754*^9, 
   3.748937317070548*^9}, 3.748937348127986*^9, {3.7489374660637503`*^9, 
   3.748937561730761*^9}, {3.748937619084373*^9, 3.7489376925002117`*^9}, {
   3.748937802277656*^9, 3.748937845821941*^9}, 3.748937883387858*^9, 
   3.7489379402407084`*^9, 3.7489529435140343`*^9, 3.7489668506464663`*^9, 
   3.748966889909494*^9, 3.748967253739566*^9, 3.748967331559517*^9, 
   3.748968123780838*^9, 3.7489682048982983`*^9, 3.748968779980373*^9, 
   3.748969575509853*^9, 3.7494688344947147`*^9, 3.749642276282977*^9, 
   3.7497900314092035`*^9, 3.749790225639052*^9, 3.7497906535130863`*^9, 
   3.749790758693288*^9, 3.7497909637464366`*^9, 3.7497910798395624`*^9, 
   3.7497921625208087`*^9, 3.749792411868496*^9, 3.7497930073987603`*^9, 
   3.7497935346031113`*^9, 3.749793646629078*^9, 3.749793707009378*^9, 
   3.7497937665735826`*^9, 3.749800389010968*^9, 3.7498005322437344`*^9, 
   3.7498009117466707`*^9, 3.749801245719686*^9, 3.7498016371059237`*^9, 
   3.7498023934825425`*^9, 3.7498043064457254`*^9, 3.749806496127181*^9, 
   3.7498082653437743`*^9, 3.7498096595303016`*^9, 3.749810919440592*^9, 
   3.749811774447549*^9, 3.749813383320182*^9, 3.7498716104750123`*^9, 
   3.7498969387548647`*^9, 3.7498974174388523`*^9, 
   3.74989858823359*^9},ExpressionUUID->"ba810bde-a1dd-4300-b3ab-\
04cc30f23737"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lineBarriers"], "Input",
 CellChangeTimes->{{3.7489379702384863`*^9, 
  3.7489379803920717`*^9}},ExpressionUUID->"ab7a3134-5164-4ac3-b0a4-\
0f30492d64a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "52"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"85", ",", "52"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Text", "[", 
    RowBox[{"\<\"+0.5 \:041c\:041f\:0430\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "53"}], "}"}]}], "]"}], ",", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "34"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"85", ",", "34"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"Text", "[", 
    RowBox[{"\<\"+0.5 \:041c\:041f\:0430\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "35"}], "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7489379680193*^9, 3.7489379807890863`*^9}, 
   3.748952943808311*^9, 3.74896685097198*^9, 3.748967257637772*^9, 
   3.748967332669004*^9, 3.74896812399541*^9, 3.748968205070216*^9, 
   3.748968780488576*^9, 3.7489695758173428`*^9, 3.7494688345047264`*^9, 
   3.7496422764238844`*^9, 3.7497900315092125`*^9, 3.7497902257430754`*^9, 
   3.7497906535640893`*^9, 3.749790758738285*^9, 3.7497909638644705`*^9, 
   3.749791079949603*^9, 3.7497921625828147`*^9, 3.7497924119605308`*^9, 
   3.7497930074987826`*^9, 3.7497935346571236`*^9, 3.749793646700081*^9, 
   3.749793707060376*^9, 3.749793766620606*^9, 3.7498003890649805`*^9, 
   3.7498005323169236`*^9, 3.7498009118286767`*^9, 3.7498012457927027`*^9, 
   3.7498016372319527`*^9, 3.7498023936205597`*^9, 3.74980430666978*^9, 
   3.7498064963275023`*^9, 3.749808265559824*^9, 3.749809659704343*^9, 
   3.7498109196426525`*^9, 3.7498117746415944`*^9, 3.7498133835382233`*^9, 
   3.7498716106140356`*^9, 3.749896938801757*^9, 3.7498974175169816`*^9, 
   3.7498985883000436`*^9},ExpressionUUID->"9443c308-72d6-430d-89c8-\
2ee7d2b4cb54"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"barriersPlots3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot3D", "[", 
      RowBox[{"opening", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
       RowBox[{"Mesh", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"line3DBarriers", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}]}], "}"}]}], 
       ",", 
       RowBox[{"MeshStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Dashed", ",", "White"}], "]"}]}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "line3DBarriers", "]"}], ",", "1"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7489380393713427`*^9, 3.7489380404916*^9}, {
  3.748938078302717*^9, 
  3.748938079004018*^9}},ExpressionUUID->"52543275-5cf3-4a83-959d-\
5f131c34d563"],

Cell[CellGroupData[{

Cell[BoxData["barriersPlots3D"], "Input",ExpressionUUID->"77424fb9-d5cc-4163-9c97-217f87828d40"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOLvTAk6He9eO25p/JvbD6QvHEy0mAakvzy+mw2i//DN
LQHRXXJrroPopd8+PQTRK30eaU4H0idsrXtBdNPHwJDu968dzXT6WB4A6cj3
HzQ1Prx2TPaycALRW1ZsKgfRwdo3WkD0ZduaeSBagv//GhBdExRsogmkeQLq
g0F0QeOHuSDaduO1+yC659e1tyD616KkryB6WvmVPyD69IVFFrpA2ux+lxeI
ZpT4XQmitzDuWgyib7CvuAKi59ebGOsB6aaYMCV9ID3VnNvEAEgfu24kaAik
b+uW7wfRtSZfY4yAtFjs1eMg+p3epwnGQHpjTch/fyDNoREVGwOkVbgNZ4Lo
v5Jd2rFAGgCF7biE
  "],ExpressionUUID->"55f59b8d-2390-457e-8864-3f69f33435c0"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"line3DBarriers", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", " ", 
    RowBox[{"layers", "=", 
     RowBox[{"parameters", "[", "\"\<layers\>\"", "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "layers", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"barrierCoordinate", "=", 
     RowBox[{"middle", "-", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"layers", "[", 
          RowBox[{"ToString", "[", "i", "]"}], "]"}], "[", "\"\<y1\>\"", 
         "]"}], "/", "cellLength"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"showAllBarriers", "||", 
       RowBox[{
        RowBox[{"1", "\[LessEqual]", "barrierCoordinate"}], " ", "&&", " ", 
        RowBox[{"size", "\[GreaterEqual]", "barrierCoordinate"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"line3DBarriers", ",", "barrierCoordinate"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",\

 CellChangeTimes->{{3.748938011420321*^9, 3.748938030604074*^9}, {
  3.748938063607355*^9, 
  3.748938075307157*^9}},ExpressionUUID->"ca9790aa-d4ac-46a2-b2e3-\
b39e442a00e1"],

Cell[CellGroupData[{

Cell[BoxData["line3DBarriers"], "Input",ExpressionUUID->"b8a0ff64-2757-4804-b826-5020d426002c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"52", ",", "34"}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBGLud6JqHe9eO67UZ8jrB9LhOSkW04B01+xv2SB62Zwl
JSB66/v110H0GZEfD0G0StdLzelAelq1fS+Ifrg0KKT7/WtHqZ99LA+AtOXk
j5oaH147rr9q4QSiH4VsLgfRF/bdaAHRr2/UzAPRr1b9XwOi/zwNNtEE0rtf
1weD6BmmH+eC6E251++DaObt19+C6E9+yV9B9A3tq39AdFXOYgtdIP2sqtsL
RG/a/LsSRG9bumsxiJbas+IKiPaUNjXWA9KrLMOV9EHuEOExMQDSH7YYCxoC
6WsXy/eDaI6fX2OMgDQf57XjIFqL5/MEYyD9JTL0vz+QduKKjo0B0krdhjNB
NOOsLu1YIA0AN0G8Fw==
  
  "],ExpressionUUID->"52904723-f2b2-46c2-8722-0b03beebc5b6"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{775, 872},
WindowMargins->{{Automatic, -1791}, {38, Automatic}},
Magnification:>1.3 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 349, 6, 131, "Title", "ExpressionUUID" -> \
"3682df42-8e93-4673-b902-35d17733c95e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[932, 30, 398, 6, 119, "Subtitle", "ExpressionUUID" -> \
"041f7e79-40a6-4d5d-b380-a00f39134427",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1333, 38, 505, 8, 75, "Subsubtitle", "ExpressionUUID" -> \
"41b28c78-ea15-46ab-b8df-8276fd1bf0ee",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1841, 48, 1696, 35, 182, "Input", "ExpressionUUID" -> \
"5571f8d0-2fc5-4f95-bc4a-8988e6b6df64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3540, 85, 439, 7, 43, "Subsubtitle", "ExpressionUUID" -> \
"189c16f5-6a40-4634-b3c5-fe4173665c9d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3982, 94, 2612, 61, 260, "Input", "ExpressionUUID" -> \
"52147c7d-0dec-478c-ad4e-299b35b21bdd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[6597, 157, 494, 8, 43, "Subsubtitle", "ExpressionUUID" -> \
"b4581657-088e-4810-bb99-ab8e676f0708",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[7094, 167, 1389, 29, 138, "Input", "ExpressionUUID" -> \
"b7665848-0f3f-4ef8-b9b7-48870b8db5db",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8486, 198, 447, 7, 43, "Subsubtitle", "ExpressionUUID" -> \
"77748391-58ef-4692-85bf-c3d4ec17fbdb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8936, 207, 5975, 169, 723, "Input", "ExpressionUUID" -> \
"02e0b0f2-2f10-41bb-9023-b31a6a7a162f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[14914, 378, 493, 8, 43, "Subsubtitle", "ExpressionUUID" -> \
"782a6820-0687-410c-958c-7b9f25185627",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[15410, 388, 2196, 60, 517, "Input", "ExpressionUUID" -> \
"ceb1d690-3e9a-454d-b782-51f5dc6358d6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17609, 450, 556, 9, 75, "Subsubtitle", "ExpressionUUID" -> \
"e08127b8-7023-477a-9e50-984a7799d631",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18168, 461, 3721, 91, 908, "Input", "ExpressionUUID" -> \
"fb5db8d5-5e33-4f03-bdea-9b8a047a785d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21892, 554, 583, 9, 75, "Subsubtitle", "ExpressionUUID" -> \
"e22474cc-b76e-4681-88b9-18dd26a3a6f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[22478, 565, 5132, 116, 896, "Input", "ExpressionUUID" -> \
"7034ef44-7b65-470c-baf9-8730dfed44f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27613, 683, 506, 8, 43, "Subsubtitle", "ExpressionUUID" -> \
"0a7544c3-9148-424a-8c8f-276c5880df96",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28122, 693, 2033, 42, 316, "Input", "ExpressionUUID" -> \
"62966cc1-b36f-4681-9de4-51a178ebe406",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[30158, 737, 1479, 36, 251, "Input", "ExpressionUUID" -> \
"b93cc068-dfb9-4c03-b846-db488d037f35",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[31640, 775, 558, 8, 43, "Subsubtitle", "ExpressionUUID" -> \
"0a282b52-028d-4a88-9d92-b554b914a0d7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32201, 785, 1256, 31, 201, "Input", "ExpressionUUID" -> \
"0c7d29cd-de86-4075-b8d9-b2675ccfa70d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[33472, 819, 876, 19, 95, "Print", "ExpressionUUID" -> \
"ba3a312e-25b9-485b-913a-ecba04c202ab"],
Cell[CellGroupData[{
Cell[34373, 842, 357, 6, 43, "Subsubtitle", "ExpressionUUID" -> \
"e4030f03-178c-4bb9-9bc1-1a30ee7dd6c0"],
Cell[CellGroupData[{
Cell[34755, 852, 4083, 74, 441, "Input", "ExpressionUUID" -> \
"ef5fe2d2-c770-43e3-bbc1-801b2792c0e3"],
Cell[38841, 928, 36425, 653, 880, "Output", "ExpressionUUID" -> \
"0f7f6b27-32d1-4b0c-aca3-98dad325de64"]
}, Open  ]],
Cell[75281, 1584, 151, 3, 40, "Input", "ExpressionUUID" -> \
"e467c358-4951-494d-9498-e7f7b472b4f7"],
Cell[75435, 1589, 177, 3, 40, "Input", "ExpressionUUID" -> \
"70308cf0-74c5-4b09-be7f-c253b89272bf"],
Cell[CellGroupData[{
Cell[75637, 1596, 2053, 58, 370, "Input", "ExpressionUUID" -> \
"c9e157ff-5cd2-4aa5-afd2-57bfec35d55b"],
Cell[77693, 1656, 1163, 19, 29, "Message", "ExpressionUUID" -> \
"df194c06-b429-497a-b001-3a4463df1dea"],
Cell[78859, 1677, 1163, 19, 29, "Message", "ExpressionUUID" -> \
"940edc2f-dda5-43de-8251-31a5683e2024"],
Cell[80025, 1698, 2957, 62, 313, "Output", "ExpressionUUID" -> \
"4fbd6891-ae2e-44b2-afeb-bcb3d4e21aa6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83019, 1765, 221, 5, 60, "Input", "ExpressionUUID" -> \
"ea3271c4-ed16-4d2d-91b3-a7f91fe0acdf"],
Cell[83243, 1772, 1543, 34, 121, "Output", "ExpressionUUID" -> \
"e0dc18c9-8688-4f94-9f30-31088b14cd43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84823, 1811, 292, 7, 60, "Input", "ExpressionUUID" -> \
"f65e2b65-5517-439a-887c-0141621d0130"],
Cell[85118, 1820, 1585, 35, 121, "Output", "ExpressionUUID" -> \
"13739721-a6c9-4319-8bc4-7de43216771a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86740, 1860, 203, 4, 60, "Input", "ExpressionUUID" -> \
"73417e23-f45e-4d2a-9b2e-51c7ab2150d3"],
Cell[86946, 1866, 1110, 19, 29, "Message", "ExpressionUUID" -> \
"14274fde-e653-4a2e-8890-49ea3c102634"],
Cell[88059, 1887, 953, 14, 40, "Output", "ExpressionUUID" -> \
"bdc01f97-c709-47db-9673-5ec5c7f24895"]
}, Open  ]],
Cell[89027, 1904, 400, 6, 40, "Input", "ExpressionUUID" -> \
"1d823a5c-ca71-4329-87cc-71462f01a4d3"],
Cell[CellGroupData[{
Cell[89452, 1914, 328, 8, 40, "Input", "ExpressionUUID" -> \
"c10fa637-f9da-414a-bb79-b71484ce19f5"],
Cell[89783, 1924, 1061, 18, 29, "Message", "ExpressionUUID" -> \
"d223ecde-35aa-4719-a1b7-f264e27f7f65"],
Cell[90847, 1944, 1160, 19, 29, "Message", "ExpressionUUID" -> \
"77abd51b-8668-486c-9057-833543c869b7"],
Cell[92010, 1965, 1181, 19, 29, "Message", "ExpressionUUID" -> \
"840ffbf7-64a7-448a-8f37-ce886f079703"],
Cell[93194, 1986, 1246, 21, 29, "Message", "ExpressionUUID" -> \
"d20cbbcf-4cf2-406e-9c9f-ff6dcca77591"],
Cell[94443, 2009, 2993, 45, 157, "Message", "ExpressionUUID" -> \
"1424a610-8e52-4573-8d04-3bcc98cb5ac8"],
Cell[97439, 2056, 7573, 176, 298, "Output", "ExpressionUUID" -> \
"d07fc84d-4558-467b-82e1-b58ab5cd3702"]
}, Open  ]],
Cell[105027, 2235, 846, 29, 91, "Input", "ExpressionUUID" -> \
"a269eac1-fdb9-454d-a773-9b01eea3d0bf"],
Cell[105876, 2266, 838, 21, 229, "Input", "ExpressionUUID" -> \
"e8bed7d2-8b6c-4902-a2f3-e22f70ab2e97"],
Cell[CellGroupData[{
Cell[106739, 2291, 878, 20, 132, "Input", "ExpressionUUID" -> \
"f9703051-6979-4020-8c05-18f2a650a04f"],
Cell[107620, 2313, 1069, 18, 29, "Message", "ExpressionUUID" -> \
"477fd401-1c2d-42da-9917-afa6c2043019"],
Cell[108692, 2333, 1167, 19, 29, "Message", "ExpressionUUID" -> \
"daaeedf7-998f-4023-b90d-776f76e5d5bd"],
Cell[109862, 2354, 1193, 20, 29, "Message", "ExpressionUUID" -> \
"9d9e3b0a-f4db-41b1-a105-86140a6b80c7"],
Cell[111058, 2376, 1255, 21, 29, "Message", "ExpressionUUID" -> \
"7a4b6c8e-b47c-4346-b461-12173bca5be4"],
Cell[112316, 2399, 2093, 32, 110, "Message", "ExpressionUUID" -> \
"8436a190-0b70-4766-95c4-214616b90146"],
Cell[114412, 2433, 1070, 18, 29, "Message", "ExpressionUUID" -> \
"5e868810-f444-4657-928d-ca73e35b9a74"],
Cell[115485, 2453, 1164, 18, 29, "Message", "ExpressionUUID" -> \
"05ce677f-ff0a-48eb-b310-bd0acdd7995b"],
Cell[116652, 2473, 1193, 20, 29, "Message", "ExpressionUUID" -> \
"b1a47281-ff6c-4c50-8f71-ad4c1eb45f9c"],
Cell[117848, 2495, 1255, 21, 29, "Message", "ExpressionUUID" -> \
"0d480ea0-fbef-4126-b0c7-150ad278282b"],
Cell[119106, 2518, 2096, 32, 110, "Message", "ExpressionUUID" -> \
"ec99489f-929b-4cee-a03d-812a30d63e32"],
Cell[121205, 2552, 1070, 18, 29, "Message", "ExpressionUUID" -> \
"6c3be7a3-54b9-4de6-98d2-ebbf35d1b789"],
Cell[122278, 2572, 1167, 19, 29, "Message", "ExpressionUUID" -> \
"a84470bd-1c8a-40a4-b6bc-cb16494f0cac"],
Cell[123448, 2593, 1167, 19, 29, "Message", "ExpressionUUID" -> \
"96787bc8-a673-4475-ae81-b9b927dcbf1d"],
Cell[124618, 2614, 1163, 19, 29, "Message", "ExpressionUUID" -> \
"e4cf351a-5207-4f1b-b26b-58e553e079dd"],
Cell[125784, 2635, 1193, 20, 29, "Message", "ExpressionUUID" -> \
"1723e181-8e0a-441a-8297-f8c37874cc5d"],
Cell[126980, 2657, 1169, 19, 29, "Message", "ExpressionUUID" -> \
"5d291fcf-a3d0-4824-b4ab-43ca460fbdbb"],
Cell[128152, 2678, 1257, 21, 29, "Message", "ExpressionUUID" -> \
"f8531aac-b1b3-4f52-b552-e167dfec77ee"],
Cell[129412, 2701, 1168, 19, 29, "Message", "ExpressionUUID" -> \
"6ef44fe6-b107-43f1-bd55-1c67c1d34091"],
Cell[130583, 2722, 2094, 32, 110, "Message", "ExpressionUUID" -> \
"83d613f1-24c1-499d-894e-6e0c40df7220"],
Cell[132680, 2756, 1165, 19, 29, "Message", "ExpressionUUID" -> \
"89d9c771-90d6-4529-9089-3eb07bd1bb71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133882, 2780, 276, 6, 60, "Input", "ExpressionUUID" -> \
"e7ab9761-4b2d-4065-87fa-7177702c2c17"],
Cell[134161, 2788, 463552, 9732, 424, "Output", "ExpressionUUID" -> \
"36bcaea0-cd5c-4d7d-b61a-7423f2371570"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597750, 12525, 242, 5, 60, "Input", "ExpressionUUID" -> \
"80303a9e-59cc-4161-93a4-8347d432ff85"],
Cell[597995, 12532, 1175, 20, 29, "Message", "ExpressionUUID" -> \
"b23d1e1c-7173-41cc-8d52-37a71a53e1ca"],
Cell[599173, 12554, 1053, 19, 29, "Message", "ExpressionUUID" -> \
"bbb03029-5161-4472-9d7c-1328c4b73463"],
Cell[600229, 12575, 937, 14, 40, "Output", "ExpressionUUID" -> \
"8575625c-dd53-4cc4-afdb-4e11c8772f80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601203, 12594, 182, 4, 40, "Input", "ExpressionUUID" -> \
"5c8cb16e-681b-42a8-a3dd-951107fca8e2"],
Cell[601388, 12600, 960, 15, 40, "Output", "ExpressionUUID" -> \
"afb8b946-f766-4ddc-91ad-5b3cf66ad4f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602385, 12620, 1128, 21, 248, "Input", "ExpressionUUID" -> \
"f987d6a5-b232-4152-9026-93e3616b5fc3"],
Cell[603516, 12643, 554008, 9142, 761, "Output", "ExpressionUUID" -> \
"ba810bde-a1dd-4300-b3ab-04cc30f23737"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1157561, 21790, 168, 3, 40, "Input", "ExpressionUUID" -> \
"ab7a3134-5164-4ac3-b0a4-0f30492d64a1"],
Cell[1157732, 21795, 1871, 40, 66, "Output", "ExpressionUUID" -> \
"9443c308-72d6-430d-89c8-2ee7d2b4cb54"]
}, Open  ]],
Cell[1159618, 21838, 1039, 29, 226, "Input", "ExpressionUUID" -> \
"52543275-5cf3-4a83-959d-5f131c34d563"],
Cell[CellGroupData[{
Cell[1160682, 21871, 96, 0, 40, "Input", "ExpressionUUID" -> \
"77424fb9-d5cc-4163-9c97-217f87828d40"],
Cell[1160781, 21873, 526, 10, 40, "Output", "ExpressionUUID" -> \
"55f59b8d-2390-457e-8864-3f69f33435c0"]
}, Open  ]],
Cell[1161322, 21886, 1457, 37, 426, "Input", "ExpressionUUID" -> \
"ca9790aa-d4ac-46a2-b2e3-b39e442a00e1"],
Cell[CellGroupData[{
Cell[1162804, 21927, 95, 0, 40, "Input", "ExpressionUUID" -> \
"b8a0ff64-2757-4804-b826-5020d426002c"],
Cell[1162902, 21929, 563, 12, 40, "Output", "ExpressionUUID" -> \
"52904723-f2b2-46c2-8722-0b03beebc5b6"]
}, Open  ]]
}, Open  ]]
}
]
*)

